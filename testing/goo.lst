     1                                  ;;; prologue-1.asm
     2                                  ;;; The first part of the standard prologue for compiled programs
     3                                  ;;;
     4                                  ;;; Programmer: Mayer Goldberg, 2023
     5                                  
     6                                  %define T_void 				0
     7                                  %define T_nil 				1
     8                                  %define T_char 				2
     9                                  %define T_string 			3
    10                                  %define T_closure 			4
    11                                  %define T_undefined			5
    12                                  %define T_boolean 			8
    13                                  %define T_boolean_false 		(T_boolean | 1)
    14                                  %define T_boolean_true 			(T_boolean | 2)
    15                                  %define T_number 			16
    16                                  %define T_integer			(T_number | 1)
    17                                  %define T_fraction 			(T_number | 2)
    18                                  %define T_real 				(T_number | 3)
    19                                  %define T_collection 			32
    20                                  %define T_pair 				(T_collection | 1)
    21                                  %define T_vector 			(T_collection | 2)
    22                                  %define T_symbol 			64
    23                                  %define T_interned_symbol		(T_symbol | 1)
    24                                  %define T_uninterned_symbol		(T_symbol | 2)
    25                                  
    26                                  %define SOB_CHAR_VALUE(reg) 		byte [reg + 1]
    27                                  %define SOB_PAIR_CAR(reg)		qword [reg + 1]
    28                                  %define SOB_PAIR_CDR(reg)		qword [reg + 1 + 8]
    29                                  %define SOB_STRING_LENGTH(reg)		qword [reg + 1]
    30                                  %define SOB_VECTOR_LENGTH(reg)		qword [reg + 1]
    31                                  %define SOB_CLOSURE_ENV(reg)		qword [reg + 1]
    32                                  %define SOB_CLOSURE_CODE(reg)		qword [reg + 1 + 8]
    33                                  
    34                                  %define OLD_RBP 			qword [rbp]
    35                                  %define RET_ADDR 			qword [rbp + 8 * 1]
    36                                  %define ENV 				qword [rbp + 8 * 2]
    37                                  %define COUNT 				qword [rbp + 8 * 3]
    38                                  %define PARAM(n) 			qword [rbp + 8 * (4 + n)]
    39                                  %define AND_KILL_FRAME(n)		(8 * (2 + n))
    40                                  
    41                                  %define MAGIC				496351
    42                                  
    43                                  %macro ENTER 0
    44                                  	enter 0, 0
    45                                  	and rsp, ~15
    46                                  %endmacro
    47                                  
    48                                  %macro LEAVE 0
    49                                  	leave
    50                                  %endmacro
    51                                  
    52                                  %macro assert_type 2
    53                                          cmp byte [%1], %2
    54                                          jne L_error_incorrect_type
    55                                  %endmacro
    56                                  
    57                                  %define assert_void(reg)		assert_type reg, T_void
    58                                  %define assert_nil(reg)			assert_type reg, T_nil
    59                                  %define assert_char(reg)		assert_type reg, T_char
    60                                  %define assert_string(reg)		assert_type reg, T_string
    61                                  %define assert_symbol(reg)		assert_type reg, T_symbol
    62                                  %define assert_interned_symbol(reg)	assert_type reg, T_interned_symbol
    63                                  %define assert_uninterned_symbol(reg)	assert_type reg, T_uninterned_symbol
    64                                  %define assert_closure(reg)		assert_type reg, T_closure
    65                                  %define assert_boolean(reg)		assert_type reg, T_boolean
    66                                  %define assert_integer(reg)		assert_type reg, T_integer
    67                                  %define assert_fraction(reg)		assert_type reg, T_fraction
    68                                  %define assert_real(reg)		assert_type reg, T_real
    69                                  %define assert_pair(reg)		assert_type reg, T_pair
    70                                  %define assert_vector(reg)		assert_type reg, T_vector
    71                                  
    72                                  %define sob_void			(L_constants + 0)
    73                                  %define sob_nil				(L_constants + 1)
    74                                  %define sob_boolean_false		(L_constants + 2)
    75                                  %define sob_boolean_true		(L_constants + 3)
    76                                  %define sob_char_nul			(L_constants + 4)
    77                                  
    78                                  %define bytes(n)			(n)
    79                                  %define kbytes(n) 			(bytes(n) << 10)
    80                                  %define mbytes(n) 			(kbytes(n) << 10)
    81                                  %define gbytes(n) 			(mbytes(n) << 10)
    82                                  
    83                                  section .data
    84                                  L_constants:
    85                                  	; L_constants + 0:
    86 00000000 00                      	db T_void
    87                                  	; L_constants + 1:
    88 00000001 01                      	db T_nil
    89                                  	; L_constants + 2:
    90 00000002 09                      	db T_boolean_false
    91                                  	; L_constants + 3:
    92 00000003 0A                      	db T_boolean_true
    93                                  	; L_constants + 4:
    94 00000004 0200                    	db T_char, 0x00	; #\nul
    95                                  	; L_constants + 6:
    96 00000006 03                      	db T_string	; "null?"
    97 00000007 0500000000000000        	dq 5
    98 0000000F 6E756C6C3F              	db 0x6E, 0x75, 0x6C, 0x6C, 0x3F
    99                                  	; L_constants + 20:
   100 00000014 03                      	db T_string	; "pair?"
   101 00000015 0500000000000000        	dq 5
   102 0000001D 706169723F              	db 0x70, 0x61, 0x69, 0x72, 0x3F
   103                                  	; L_constants + 34:
   104 00000022 03                      	db T_string	; "void?"
   105 00000023 0500000000000000        	dq 5
   106 0000002B 766F69643F              	db 0x76, 0x6F, 0x69, 0x64, 0x3F
   107                                  	; L_constants + 48:
   108 00000030 03                      	db T_string	; "char?"
   109 00000031 0500000000000000        	dq 5
   110 00000039 636861723F              	db 0x63, 0x68, 0x61, 0x72, 0x3F
   111                                  	; L_constants + 62:
   112 0000003E 03                      	db T_string	; "string?"
   113 0000003F 0700000000000000        	dq 7
   114 00000047 737472696E673F          	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x3F
   115                                  	; L_constants + 78:
   116 0000004E 03                      	db T_string	; "interned-symbol?"
   117 0000004F 1000000000000000        	dq 16
   118 00000057 696E7465726E6564        	db 0x69, 0x6E, 0x74, 0x65, 0x72, 0x6E, 0x65, 0x64
   119 0000005F 2D73796D626F6C3F        	db 0x2D, 0x73, 0x79, 0x6D, 0x62, 0x6F, 0x6C, 0x3F
   120                                  	; L_constants + 103:
   121 00000067 03                      	db T_string	; "vector?"
   122 00000068 0700000000000000        	dq 7
   123 00000070 766563746F723F          	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x3F
   124                                  	; L_constants + 119:
   125 00000077 03                      	db T_string	; "procedure?"
   126 00000078 0A00000000000000        	dq 10
   127 00000080 70726F6365647572        	db 0x70, 0x72, 0x6F, 0x63, 0x65, 0x64, 0x75, 0x72
   128 00000088 653F                    	db 0x65, 0x3F
   129                                  	; L_constants + 138:
   130 0000008A 03                      	db T_string	; "real?"
   131 0000008B 0500000000000000        	dq 5
   132 00000093 7265616C3F              	db 0x72, 0x65, 0x61, 0x6C, 0x3F
   133                                  	; L_constants + 152:
   134 00000098 03                      	db T_string	; "fraction?"
   135 00000099 0900000000000000        	dq 9
   136 000000A1 6672616374696F6E        	db 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6F, 0x6E
   137 000000A9 3F                      	db 0x3F
   138                                  	; L_constants + 170:
   139 000000AA 03                      	db T_string	; "boolean?"
   140 000000AB 0800000000000000        	dq 8
   141 000000B3 626F6F6C65616E3F        	db 0x62, 0x6F, 0x6F, 0x6C, 0x65, 0x61, 0x6E, 0x3F
   142                                  	; L_constants + 187:
   143 000000BB 03                      	db T_string	; "number?"
   144 000000BC 0700000000000000        	dq 7
   145 000000C4 6E756D6265723F          	db 0x6E, 0x75, 0x6D, 0x62, 0x65, 0x72, 0x3F
   146                                  	; L_constants + 203:
   147 000000CB 03                      	db T_string	; "collection?"
   148 000000CC 0B00000000000000        	dq 11
   149 000000D4 636F6C6C65637469        	db 0x63, 0x6F, 0x6C, 0x6C, 0x65, 0x63, 0x74, 0x69
   150 000000DC 6F6E3F                  	db 0x6F, 0x6E, 0x3F
   151                                  	; L_constants + 223:
   152 000000DF 03                      	db T_string	; "cons"
   153 000000E0 0400000000000000        	dq 4
   154 000000E8 636F6E73                	db 0x63, 0x6F, 0x6E, 0x73
   155                                  	; L_constants + 236:
   156 000000EC 03                      	db T_string	; "display-sexpr"
   157 000000ED 0D00000000000000        	dq 13
   158 000000F5 646973706C61792D        	db 0x64, 0x69, 0x73, 0x70, 0x6C, 0x61, 0x79, 0x2D
   159 000000FD 7365787072              	db 0x73, 0x65, 0x78, 0x70, 0x72
   160                                  	; L_constants + 258:
   161 00000102 03                      	db T_string	; "write-char"
   162 00000103 0A00000000000000        	dq 10
   163 0000010B 77726974652D6368        	db 0x77, 0x72, 0x69, 0x74, 0x65, 0x2D, 0x63, 0x68
   164 00000113 6172                    	db 0x61, 0x72
   165                                  	; L_constants + 277:
   166 00000115 03                      	db T_string	; "car"
   167 00000116 0300000000000000        	dq 3
   168 0000011E 636172                  	db 0x63, 0x61, 0x72
   169                                  	; L_constants + 289:
   170 00000121 03                      	db T_string	; "cdr"
   171 00000122 0300000000000000        	dq 3
   172 0000012A 636472                  	db 0x63, 0x64, 0x72
   173                                  	; L_constants + 301:
   174 0000012D 03                      	db T_string	; "string-length"
   175 0000012E 0D00000000000000        	dq 13
   176 00000136 737472696E672D6C        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x6C
   177 0000013E 656E677468              	db 0x65, 0x6E, 0x67, 0x74, 0x68
   178                                  	; L_constants + 323:
   179 00000143 03                      	db T_string	; "vector-length"
   180 00000144 0D00000000000000        	dq 13
   181 0000014C 766563746F722D6C        	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x2D, 0x6C
   182 00000154 656E677468              	db 0x65, 0x6E, 0x67, 0x74, 0x68
   183                                  	; L_constants + 345:
   184 00000159 03                      	db T_string	; "real->integer"
   185 0000015A 0D00000000000000        	dq 13
   186 00000162 7265616C2D3E696E        	db 0x72, 0x65, 0x61, 0x6C, 0x2D, 0x3E, 0x69, 0x6E
   187 0000016A 7465676572              	db 0x74, 0x65, 0x67, 0x65, 0x72
   188                                  	; L_constants + 367:
   189 0000016F 03                      	db T_string	; "exit"
   190 00000170 0400000000000000        	dq 4
   191 00000178 65786974                	db 0x65, 0x78, 0x69, 0x74
   192                                  	; L_constants + 380:
   193 0000017C 03                      	db T_string	; "integer->real"
   194 0000017D 0D00000000000000        	dq 13
   195 00000185 696E74656765722D        	db 0x69, 0x6E, 0x74, 0x65, 0x67, 0x65, 0x72, 0x2D
   196 0000018D 3E7265616C              	db 0x3E, 0x72, 0x65, 0x61, 0x6C
   197                                  	; L_constants + 402:
   198 00000192 03                      	db T_string	; "fraction->real"
   199 00000193 0E00000000000000        	dq 14
   200 0000019B 6672616374696F6E        	db 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6F, 0x6E
   201 000001A3 2D3E7265616C            	db 0x2D, 0x3E, 0x72, 0x65, 0x61, 0x6C
   202                                  	; L_constants + 425:
   203 000001A9 03                      	db T_string	; "char->integer"
   204 000001AA 0D00000000000000        	dq 13
   205 000001B2 636861722D3E696E        	db 0x63, 0x68, 0x61, 0x72, 0x2D, 0x3E, 0x69, 0x6E
   206 000001BA 7465676572              	db 0x74, 0x65, 0x67, 0x65, 0x72
   207                                  	; L_constants + 447:
   208 000001BF 03                      	db T_string	; "integer->char"
   209 000001C0 0D00000000000000        	dq 13
   210 000001C8 696E74656765722D        	db 0x69, 0x6E, 0x74, 0x65, 0x67, 0x65, 0x72, 0x2D
   211 000001D0 3E63686172              	db 0x3E, 0x63, 0x68, 0x61, 0x72
   212                                  	; L_constants + 469:
   213 000001D5 03                      	db T_string	; "trng"
   214 000001D6 0400000000000000        	dq 4
   215 000001DE 74726E67                	db 0x74, 0x72, 0x6E, 0x67
   216                                  	; L_constants + 482:
   217 000001E2 03                      	db T_string	; "zero?"
   218 000001E3 0500000000000000        	dq 5
   219 000001EB 7A65726F3F              	db 0x7A, 0x65, 0x72, 0x6F, 0x3F
   220                                  	; L_constants + 496:
   221 000001F0 03                      	db T_string	; "integer?"
   222 000001F1 0800000000000000        	dq 8
   223 000001F9 696E74656765723F        	db 0x69, 0x6E, 0x74, 0x65, 0x67, 0x65, 0x72, 0x3F
   224                                  	; L_constants + 513:
   225 00000201 03                      	db T_string	; "__bin-apply"
   226 00000202 0B00000000000000        	dq 11
   227 0000020A 5F5F62696E2D6170        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x61, 0x70
   228 00000212 706C79                  	db 0x70, 0x6C, 0x79
   229                                  	; L_constants + 533:
   230 00000215 03                      	db T_string	; "__bin-add-rr"
   231 00000216 0C00000000000000        	dq 12
   232 0000021E 5F5F62696E2D6164        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x61, 0x64
   233 00000226 642D7272                	db 0x64, 0x2D, 0x72, 0x72
   234                                  	; L_constants + 554:
   235 0000022A 03                      	db T_string	; "__bin-sub-rr"
   236 0000022B 0C00000000000000        	dq 12
   237 00000233 5F5F62696E2D7375        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x73, 0x75
   238 0000023B 622D7272                	db 0x62, 0x2D, 0x72, 0x72
   239                                  	; L_constants + 575:
   240 0000023F 03                      	db T_string	; "__bin-mul-rr"
   241 00000240 0C00000000000000        	dq 12
   242 00000248 5F5F62696E2D6D75        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x6D, 0x75
   243 00000250 6C2D7272                	db 0x6C, 0x2D, 0x72, 0x72
   244                                  	; L_constants + 596:
   245 00000254 03                      	db T_string	; "__bin-div-rr"
   246 00000255 0C00000000000000        	dq 12
   247 0000025D 5F5F62696E2D6469        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x64, 0x69
   248 00000265 762D7272                	db 0x76, 0x2D, 0x72, 0x72
   249                                  	; L_constants + 617:
   250 00000269 03                      	db T_string	; "__bin-add-qq"
   251 0000026A 0C00000000000000        	dq 12
   252 00000272 5F5F62696E2D6164        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x61, 0x64
   253 0000027A 642D7171                	db 0x64, 0x2D, 0x71, 0x71
   254                                  	; L_constants + 638:
   255 0000027E 03                      	db T_string	; "__bin-sub-qq"
   256 0000027F 0C00000000000000        	dq 12
   257 00000287 5F5F62696E2D7375        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x73, 0x75
   258 0000028F 622D7171                	db 0x62, 0x2D, 0x71, 0x71
   259                                  	; L_constants + 659:
   260 00000293 03                      	db T_string	; "__bin-mul-qq"
   261 00000294 0C00000000000000        	dq 12
   262 0000029C 5F5F62696E2D6D75        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x6D, 0x75
   263 000002A4 6C2D7171                	db 0x6C, 0x2D, 0x71, 0x71
   264                                  	; L_constants + 680:
   265 000002A8 03                      	db T_string	; "__bin-div-qq"
   266 000002A9 0C00000000000000        	dq 12
   267 000002B1 5F5F62696E2D6469        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x64, 0x69
   268 000002B9 762D7171                	db 0x76, 0x2D, 0x71, 0x71
   269                                  	; L_constants + 701:
   270 000002BD 03                      	db T_string	; "__bin-add-zz"
   271 000002BE 0C00000000000000        	dq 12
   272 000002C6 5F5F62696E2D6164        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x61, 0x64
   273 000002CE 642D7A7A                	db 0x64, 0x2D, 0x7A, 0x7A
   274                                  	; L_constants + 722:
   275 000002D2 03                      	db T_string	; "__bin-sub-zz"
   276 000002D3 0C00000000000000        	dq 12
   277 000002DB 5F5F62696E2D7375        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x73, 0x75
   278 000002E3 622D7A7A                	db 0x62, 0x2D, 0x7A, 0x7A
   279                                  	; L_constants + 743:
   280 000002E7 03                      	db T_string	; "__bin-mul-zz"
   281 000002E8 0C00000000000000        	dq 12
   282 000002F0 5F5F62696E2D6D75        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x6D, 0x75
   283 000002F8 6C2D7A7A                	db 0x6C, 0x2D, 0x7A, 0x7A
   284                                  	; L_constants + 764:
   285 000002FC 03                      	db T_string	; "__bin-div-zz"
   286 000002FD 0C00000000000000        	dq 12
   287 00000305 5F5F62696E2D6469        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x64, 0x69
   288 0000030D 762D7A7A                	db 0x76, 0x2D, 0x7A, 0x7A
   289                                  	; L_constants + 785:
   290 00000311 03                      	db T_string	; "error"
   291 00000312 0500000000000000        	dq 5
   292 0000031A 6572726F72              	db 0x65, 0x72, 0x72, 0x6F, 0x72
   293                                  	; L_constants + 799:
   294 0000031F 03                      	db T_string	; "__bin-less-than-rr"
   295 00000320 1200000000000000        	dq 18
   296 00000328 5F5F62696E2D6C65        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x6C, 0x65
   297 00000330 73732D7468616E2D        	db 0x73, 0x73, 0x2D, 0x74, 0x68, 0x61, 0x6E, 0x2D
   298 00000338 7272                    	db 0x72, 0x72
   299                                  	; L_constants + 826:
   300 0000033A 03                      	db T_string	; "__bin-less-than-qq"
   301 0000033B 1200000000000000        	dq 18
   302 00000343 5F5F62696E2D6C65        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x6C, 0x65
   303 0000034B 73732D7468616E2D        	db 0x73, 0x73, 0x2D, 0x74, 0x68, 0x61, 0x6E, 0x2D
   304 00000353 7171                    	db 0x71, 0x71
   305                                  	; L_constants + 853:
   306 00000355 03                      	db T_string	; "__bin-less-than-zz"
   307 00000356 1200000000000000        	dq 18
   308 0000035E 5F5F62696E2D6C65        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x6C, 0x65
   309 00000366 73732D7468616E2D        	db 0x73, 0x73, 0x2D, 0x74, 0x68, 0x61, 0x6E, 0x2D
   310 0000036E 7A7A                    	db 0x7A, 0x7A
   311                                  	; L_constants + 880:
   312 00000370 03                      	db T_string	; "__bin-equal-rr"
   313 00000371 0E00000000000000        	dq 14
   314 00000379 5F5F62696E2D6571        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x65, 0x71
   315 00000381 75616C2D7272            	db 0x75, 0x61, 0x6C, 0x2D, 0x72, 0x72
   316                                  	; L_constants + 903:
   317 00000387 03                      	db T_string	; "__bin-equal-qq"
   318 00000388 0E00000000000000        	dq 14
   319 00000390 5F5F62696E2D6571        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x65, 0x71
   320 00000398 75616C2D7171            	db 0x75, 0x61, 0x6C, 0x2D, 0x71, 0x71
   321                                  	; L_constants + 926:
   322 0000039E 03                      	db T_string	; "__bin-equal-zz"
   323 0000039F 0E00000000000000        	dq 14
   324 000003A7 5F5F62696E2D6571        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x65, 0x71
   325 000003AF 75616C2D7A7A            	db 0x75, 0x61, 0x6C, 0x2D, 0x7A, 0x7A
   326                                  	; L_constants + 949:
   327 000003B5 03                      	db T_string	; "quotient"
   328 000003B6 0800000000000000        	dq 8
   329 000003BE 71756F7469656E74        	db 0x71, 0x75, 0x6F, 0x74, 0x69, 0x65, 0x6E, 0x74
   330                                  	; L_constants + 966:
   331 000003C6 03                      	db T_string	; "remainder"
   332 000003C7 0900000000000000        	dq 9
   333 000003CF 72656D61696E6465        	db 0x72, 0x65, 0x6D, 0x61, 0x69, 0x6E, 0x64, 0x65
   334 000003D7 72                      	db 0x72
   335                                  	; L_constants + 984:
   336 000003D8 03                      	db T_string	; "set-car!"
   337 000003D9 0800000000000000        	dq 8
   338 000003E1 7365742D63617221        	db 0x73, 0x65, 0x74, 0x2D, 0x63, 0x61, 0x72, 0x21
   339                                  	; L_constants + 1001:
   340 000003E9 03                      	db T_string	; "set-cdr!"
   341 000003EA 0800000000000000        	dq 8
   342 000003F2 7365742D63647221        	db 0x73, 0x65, 0x74, 0x2D, 0x63, 0x64, 0x72, 0x21
   343                                  	; L_constants + 1018:
   344 000003FA 03                      	db T_string	; "string-ref"
   345 000003FB 0A00000000000000        	dq 10
   346 00000403 737472696E672D72        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x72
   347 0000040B 6566                    	db 0x65, 0x66
   348                                  	; L_constants + 1037:
   349 0000040D 03                      	db T_string	; "vector-ref"
   350 0000040E 0A00000000000000        	dq 10
   351 00000416 766563746F722D72        	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x2D, 0x72
   352 0000041E 6566                    	db 0x65, 0x66
   353                                  	; L_constants + 1056:
   354 00000420 03                      	db T_string	; "vector-set!"
   355 00000421 0B00000000000000        	dq 11
   356 00000429 766563746F722D73        	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x2D, 0x73
   357 00000431 657421                  	db 0x65, 0x74, 0x21
   358                                  	; L_constants + 1076:
   359 00000434 03                      	db T_string	; "string-set!"
   360 00000435 0B00000000000000        	dq 11
   361 0000043D 737472696E672D73        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x73
   362 00000445 657421                  	db 0x65, 0x74, 0x21
   363                                  	; L_constants + 1096:
   364 00000448 03                      	db T_string	; "make-vector"
   365 00000449 0B00000000000000        	dq 11
   366 00000451 6D616B652D766563        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x76, 0x65, 0x63
   367 00000459 746F72                  	db 0x74, 0x6F, 0x72
   368                                  	; L_constants + 1116:
   369 0000045C 03                      	db T_string	; "make-string"
   370 0000045D 0B00000000000000        	dq 11
   371 00000465 6D616B652D737472        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x73, 0x74, 0x72
   372 0000046D 696E67                  	db 0x69, 0x6E, 0x67
   373                                  	; L_constants + 1136:
   374 00000470 03                      	db T_string	; "numerator"
   375 00000471 0900000000000000        	dq 9
   376 00000479 6E756D657261746F        	db 0x6E, 0x75, 0x6D, 0x65, 0x72, 0x61, 0x74, 0x6F
   377 00000481 72                      	db 0x72
   378                                  	; L_constants + 1154:
   379 00000482 03                      	db T_string	; "denominator"
   380 00000483 0B00000000000000        	dq 11
   381 0000048B 64656E6F6D696E61        	db 0x64, 0x65, 0x6E, 0x6F, 0x6D, 0x69, 0x6E, 0x61
   382 00000493 746F72                  	db 0x74, 0x6F, 0x72
   383                                  	; L_constants + 1174:
   384 00000496 03                      	db T_string	; "eq?"
   385 00000497 0300000000000000        	dq 3
   386 0000049F 65713F                  	db 0x65, 0x71, 0x3F
   387                                  	; L_constants + 1186:
   388 000004A2 03                      	db T_string	; "__integer-to-fracti...
   389 000004A3 1500000000000000        	dq 21
   390 000004AB 5F5F696E74656765        	db 0x5F, 0x5F, 0x69, 0x6E, 0x74, 0x65, 0x67, 0x65
   391 000004B3 722D746F2D667261        	db 0x72, 0x2D, 0x74, 0x6F, 0x2D, 0x66, 0x72, 0x61
   392 000004BB 6374696F6E              	db 0x63, 0x74, 0x69, 0x6F, 0x6E
   393                                  	; L_constants + 1216:
   394 000004C0 03                      	db T_string	; "logand"
   395 000004C1 0600000000000000        	dq 6
   396 000004C9 6C6F67616E64            	db 0x6C, 0x6F, 0x67, 0x61, 0x6E, 0x64
   397                                  	; L_constants + 1231:
   398 000004CF 03                      	db T_string	; "logor"
   399 000004D0 0500000000000000        	dq 5
   400 000004D8 6C6F676F72              	db 0x6C, 0x6F, 0x67, 0x6F, 0x72
   401                                  	; L_constants + 1245:
   402 000004DD 03                      	db T_string	; "logxor"
   403 000004DE 0600000000000000        	dq 6
   404 000004E6 6C6F67786F72            	db 0x6C, 0x6F, 0x67, 0x78, 0x6F, 0x72
   405                                  	; L_constants + 1260:
   406 000004EC 03                      	db T_string	; "lognot"
   407 000004ED 0600000000000000        	dq 6
   408 000004F5 6C6F676E6F74            	db 0x6C, 0x6F, 0x67, 0x6E, 0x6F, 0x74
   409                                  	; L_constants + 1275:
   410 000004FB 03                      	db T_string	; "ash"
   411 000004FC 0300000000000000        	dq 3
   412 00000504 617368                  	db 0x61, 0x73, 0x68
   413                                  	; L_constants + 1287:
   414 00000507 03                      	db T_string	; "symbol?"
   415 00000508 0700000000000000        	dq 7
   416 00000510 73796D626F6C3F          	db 0x73, 0x79, 0x6D, 0x62, 0x6F, 0x6C, 0x3F
   417                                  	; L_constants + 1303:
   418 00000517 03                      	db T_string	; "uninterned-symbol?"
   419 00000518 1200000000000000        	dq 18
   420 00000520 756E696E7465726E        	db 0x75, 0x6E, 0x69, 0x6E, 0x74, 0x65, 0x72, 0x6E
   421 00000528 65642D73796D626F        	db 0x65, 0x64, 0x2D, 0x73, 0x79, 0x6D, 0x62, 0x6F
   422 00000530 6C3F                    	db 0x6C, 0x3F
   423                                  	; L_constants + 1330:
   424 00000532 03                      	db T_string	; "gensym?"
   425 00000533 0700000000000000        	dq 7
   426 0000053B 67656E73796D3F          	db 0x67, 0x65, 0x6E, 0x73, 0x79, 0x6D, 0x3F
   427                                  	; L_constants + 1346:
   428 00000542 03                      	db T_string	; "gensym"
   429 00000543 0600000000000000        	dq 6
   430 0000054B 67656E73796D            	db 0x67, 0x65, 0x6E, 0x73, 0x79, 0x6D
   431                                  	; L_constants + 1361:
   432 00000551 03                      	db T_string	; "frame"
   433 00000552 0500000000000000        	dq 5
   434 0000055A 6672616D65              	db 0x66, 0x72, 0x61, 0x6D, 0x65
   435                                  	; L_constants + 1375:
   436 0000055F 03                      	db T_string	; "break"
   437 00000560 0500000000000000        	dq 5
   438 00000568 627265616B              	db 0x62, 0x72, 0x65, 0x61, 0x6B
   439                                  	; L_constants + 1389:
   440 0000056D 03                      	db T_string	; "boolean-false?"
   441 0000056E 0E00000000000000        	dq 14
   442 00000576 626F6F6C65616E2D        	db 0x62, 0x6F, 0x6F, 0x6C, 0x65, 0x61, 0x6E, 0x2D
   443 0000057E 66616C73653F            	db 0x66, 0x61, 0x6C, 0x73, 0x65, 0x3F
   444                                  	; L_constants + 1412:
   445 00000584 03                      	db T_string	; "boolean-true?"
   446 00000585 0D00000000000000        	dq 13
   447 0000058D 626F6F6C65616E2D        	db 0x62, 0x6F, 0x6F, 0x6C, 0x65, 0x61, 0x6E, 0x2D
   448 00000595 747275653F              	db 0x74, 0x72, 0x75, 0x65, 0x3F
   449                                  	; L_constants + 1434:
   450 0000059A 03                      	db T_string	; "primitive?"
   451 0000059B 0A00000000000000        	dq 10
   452 000005A3 7072696D69746976        	db 0x70, 0x72, 0x69, 0x6D, 0x69, 0x74, 0x69, 0x76
   453 000005AB 653F                    	db 0x65, 0x3F
   454                                  	; L_constants + 1453:
   455 000005AD 03                      	db T_string	; "length"
   456 000005AE 0600000000000000        	dq 6
   457 000005B6 6C656E677468            	db 0x6C, 0x65, 0x6E, 0x67, 0x74, 0x68
   458                                  	; L_constants + 1468:
   459 000005BC 03                      	db T_string	; "make-list"
   460 000005BD 0900000000000000        	dq 9
   461 000005C5 6D616B652D6C6973        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x6C, 0x69, 0x73
   462 000005CD 74                      	db 0x74
   463                                  	; L_constants + 1486:
   464 000005CE 03                      	db T_string	; "return"
   465 000005CF 0600000000000000        	dq 6
   466 000005D7 72657475726E            	db 0x72, 0x65, 0x74, 0x75, 0x72, 0x6E
   467                                  	; L_constants + 1501:
   468 000005DD 03                      	db T_string	; "caar"
   469 000005DE 0400000000000000        	dq 4
   470 000005E6 63616172                	db 0x63, 0x61, 0x61, 0x72
   471                                  	; L_constants + 1514:
   472 000005EA 41                      	db T_interned_symbol	; caar
   473 000005EB [DD05000000000000]      	dq L_constants + 1501
   474                                  	; L_constants + 1523:
   475 000005F3 41                      	db T_interned_symbol	; car
   476 000005F4 [1501000000000000]      	dq L_constants + 277
   477                                  	; L_constants + 1532:
   478 000005FC 03                      	db T_string	; "cadr"
   479 000005FD 0400000000000000        	dq 4
   480 00000605 63616472                	db 0x63, 0x61, 0x64, 0x72
   481                                  	; L_constants + 1545:
   482 00000609 41                      	db T_interned_symbol	; cadr
   483 0000060A [FC05000000000000]      	dq L_constants + 1532
   484                                  	; L_constants + 1554:
   485 00000612 41                      	db T_interned_symbol	; cdr
   486 00000613 [2101000000000000]      	dq L_constants + 289
   487                                  	; L_constants + 1563:
   488 0000061B 03                      	db T_string	; "cdar"
   489 0000061C 0400000000000000        	dq 4
   490 00000624 63646172                	db 0x63, 0x64, 0x61, 0x72
   491                                  	; L_constants + 1576:
   492 00000628 41                      	db T_interned_symbol	; cdar
   493 00000629 [1B06000000000000]      	dq L_constants + 1563
   494                                  	; L_constants + 1585:
   495 00000631 03                      	db T_string	; "cddr"
   496 00000632 0400000000000000        	dq 4
   497 0000063A 63646472                	db 0x63, 0x64, 0x64, 0x72
   498                                  	; L_constants + 1598:
   499 0000063E 41                      	db T_interned_symbol	; cddr
   500 0000063F [3106000000000000]      	dq L_constants + 1585
   501                                  	; L_constants + 1607:
   502 00000647 03                      	db T_string	; "caaar"
   503 00000648 0500000000000000        	dq 5
   504 00000650 6361616172              	db 0x63, 0x61, 0x61, 0x61, 0x72
   505                                  	; L_constants + 1621:
   506 00000655 41                      	db T_interned_symbol	; caaar
   507 00000656 [4706000000000000]      	dq L_constants + 1607
   508                                  	; L_constants + 1630:
   509 0000065E 03                      	db T_string	; "caadr"
   510 0000065F 0500000000000000        	dq 5
   511 00000667 6361616472              	db 0x63, 0x61, 0x61, 0x64, 0x72
   512                                  	; L_constants + 1644:
   513 0000066C 41                      	db T_interned_symbol	; caadr
   514 0000066D [5E06000000000000]      	dq L_constants + 1630
   515                                  	; L_constants + 1653:
   516 00000675 03                      	db T_string	; "cadar"
   517 00000676 0500000000000000        	dq 5
   518 0000067E 6361646172              	db 0x63, 0x61, 0x64, 0x61, 0x72
   519                                  	; L_constants + 1667:
   520 00000683 41                      	db T_interned_symbol	; cadar
   521 00000684 [7506000000000000]      	dq L_constants + 1653
   522                                  	; L_constants + 1676:
   523 0000068C 03                      	db T_string	; "caddr"
   524 0000068D 0500000000000000        	dq 5
   525 00000695 6361646472              	db 0x63, 0x61, 0x64, 0x64, 0x72
   526                                  	; L_constants + 1690:
   527 0000069A 41                      	db T_interned_symbol	; caddr
   528 0000069B [8C06000000000000]      	dq L_constants + 1676
   529                                  	; L_constants + 1699:
   530 000006A3 03                      	db T_string	; "cdaar"
   531 000006A4 0500000000000000        	dq 5
   532 000006AC 6364616172              	db 0x63, 0x64, 0x61, 0x61, 0x72
   533                                  	; L_constants + 1713:
   534 000006B1 41                      	db T_interned_symbol	; cdaar
   535 000006B2 [A306000000000000]      	dq L_constants + 1699
   536                                  	; L_constants + 1722:
   537 000006BA 03                      	db T_string	; "cdadr"
   538 000006BB 0500000000000000        	dq 5
   539 000006C3 6364616472              	db 0x63, 0x64, 0x61, 0x64, 0x72
   540                                  	; L_constants + 1736:
   541 000006C8 41                      	db T_interned_symbol	; cdadr
   542 000006C9 [BA06000000000000]      	dq L_constants + 1722
   543                                  	; L_constants + 1745:
   544 000006D1 03                      	db T_string	; "cddar"
   545 000006D2 0500000000000000        	dq 5
   546 000006DA 6364646172              	db 0x63, 0x64, 0x64, 0x61, 0x72
   547                                  	; L_constants + 1759:
   548 000006DF 41                      	db T_interned_symbol	; cddar
   549 000006E0 [D106000000000000]      	dq L_constants + 1745
   550                                  	; L_constants + 1768:
   551 000006E8 03                      	db T_string	; "cdddr"
   552 000006E9 0500000000000000        	dq 5
   553 000006F1 6364646472              	db 0x63, 0x64, 0x64, 0x64, 0x72
   554                                  	; L_constants + 1782:
   555 000006F6 41                      	db T_interned_symbol	; cdddr
   556 000006F7 [E806000000000000]      	dq L_constants + 1768
   557                                  	; L_constants + 1791:
   558 000006FF 03                      	db T_string	; "caaaar"
   559 00000700 0600000000000000        	dq 6
   560 00000708 636161616172            	db 0x63, 0x61, 0x61, 0x61, 0x61, 0x72
   561                                  	; L_constants + 1806:
   562 0000070E 41                      	db T_interned_symbol	; caaaar
   563 0000070F [FF06000000000000]      	dq L_constants + 1791
   564                                  	; L_constants + 1815:
   565 00000717 03                      	db T_string	; "caaadr"
   566 00000718 0600000000000000        	dq 6
   567 00000720 636161616472            	db 0x63, 0x61, 0x61, 0x61, 0x64, 0x72
   568                                  	; L_constants + 1830:
   569 00000726 41                      	db T_interned_symbol	; caaadr
   570 00000727 [1707000000000000]      	dq L_constants + 1815
   571                                  	; L_constants + 1839:
   572 0000072F 03                      	db T_string	; "caadar"
   573 00000730 0600000000000000        	dq 6
   574 00000738 636161646172            	db 0x63, 0x61, 0x61, 0x64, 0x61, 0x72
   575                                  	; L_constants + 1854:
   576 0000073E 41                      	db T_interned_symbol	; caadar
   577 0000073F [2F07000000000000]      	dq L_constants + 1839
   578                                  	; L_constants + 1863:
   579 00000747 03                      	db T_string	; "caaddr"
   580 00000748 0600000000000000        	dq 6
   581 00000750 636161646472            	db 0x63, 0x61, 0x61, 0x64, 0x64, 0x72
   582                                  	; L_constants + 1878:
   583 00000756 41                      	db T_interned_symbol	; caaddr
   584 00000757 [4707000000000000]      	dq L_constants + 1863
   585                                  	; L_constants + 1887:
   586 0000075F 03                      	db T_string	; "cadaar"
   587 00000760 0600000000000000        	dq 6
   588 00000768 636164616172            	db 0x63, 0x61, 0x64, 0x61, 0x61, 0x72
   589                                  	; L_constants + 1902:
   590 0000076E 41                      	db T_interned_symbol	; cadaar
   591 0000076F [5F07000000000000]      	dq L_constants + 1887
   592                                  	; L_constants + 1911:
   593 00000777 03                      	db T_string	; "cadadr"
   594 00000778 0600000000000000        	dq 6
   595 00000780 636164616472            	db 0x63, 0x61, 0x64, 0x61, 0x64, 0x72
   596                                  	; L_constants + 1926:
   597 00000786 41                      	db T_interned_symbol	; cadadr
   598 00000787 [7707000000000000]      	dq L_constants + 1911
   599                                  	; L_constants + 1935:
   600 0000078F 03                      	db T_string	; "caddar"
   601 00000790 0600000000000000        	dq 6
   602 00000798 636164646172            	db 0x63, 0x61, 0x64, 0x64, 0x61, 0x72
   603                                  	; L_constants + 1950:
   604 0000079E 41                      	db T_interned_symbol	; caddar
   605 0000079F [8F07000000000000]      	dq L_constants + 1935
   606                                  	; L_constants + 1959:
   607 000007A7 03                      	db T_string	; "cadddr"
   608 000007A8 0600000000000000        	dq 6
   609 000007B0 636164646472            	db 0x63, 0x61, 0x64, 0x64, 0x64, 0x72
   610                                  	; L_constants + 1974:
   611 000007B6 41                      	db T_interned_symbol	; cadddr
   612 000007B7 [A707000000000000]      	dq L_constants + 1959
   613                                  	; L_constants + 1983:
   614 000007BF 03                      	db T_string	; "cdaaar"
   615 000007C0 0600000000000000        	dq 6
   616 000007C8 636461616172            	db 0x63, 0x64, 0x61, 0x61, 0x61, 0x72
   617                                  	; L_constants + 1998:
   618 000007CE 41                      	db T_interned_symbol	; cdaaar
   619 000007CF [BF07000000000000]      	dq L_constants + 1983
   620                                  	; L_constants + 2007:
   621 000007D7 03                      	db T_string	; "cdaadr"
   622 000007D8 0600000000000000        	dq 6
   623 000007E0 636461616472            	db 0x63, 0x64, 0x61, 0x61, 0x64, 0x72
   624                                  	; L_constants + 2022:
   625 000007E6 41                      	db T_interned_symbol	; cdaadr
   626 000007E7 [D707000000000000]      	dq L_constants + 2007
   627                                  	; L_constants + 2031:
   628 000007EF 03                      	db T_string	; "cdadar"
   629 000007F0 0600000000000000        	dq 6
   630 000007F8 636461646172            	db 0x63, 0x64, 0x61, 0x64, 0x61, 0x72
   631                                  	; L_constants + 2046:
   632 000007FE 41                      	db T_interned_symbol	; cdadar
   633 000007FF [EF07000000000000]      	dq L_constants + 2031
   634                                  	; L_constants + 2055:
   635 00000807 03                      	db T_string	; "cdaddr"
   636 00000808 0600000000000000        	dq 6
   637 00000810 636461646472            	db 0x63, 0x64, 0x61, 0x64, 0x64, 0x72
   638                                  	; L_constants + 2070:
   639 00000816 41                      	db T_interned_symbol	; cdaddr
   640 00000817 [0708000000000000]      	dq L_constants + 2055
   641                                  	; L_constants + 2079:
   642 0000081F 03                      	db T_string	; "cddaar"
   643 00000820 0600000000000000        	dq 6
   644 00000828 636464616172            	db 0x63, 0x64, 0x64, 0x61, 0x61, 0x72
   645                                  	; L_constants + 2094:
   646 0000082E 41                      	db T_interned_symbol	; cddaar
   647 0000082F [1F08000000000000]      	dq L_constants + 2079
   648                                  	; L_constants + 2103:
   649 00000837 03                      	db T_string	; "cddadr"
   650 00000838 0600000000000000        	dq 6
   651 00000840 636464616472            	db 0x63, 0x64, 0x64, 0x61, 0x64, 0x72
   652                                  	; L_constants + 2118:
   653 00000846 41                      	db T_interned_symbol	; cddadr
   654 00000847 [3708000000000000]      	dq L_constants + 2103
   655                                  	; L_constants + 2127:
   656 0000084F 03                      	db T_string	; "cdddar"
   657 00000850 0600000000000000        	dq 6
   658 00000858 636464646172            	db 0x63, 0x64, 0x64, 0x64, 0x61, 0x72
   659                                  	; L_constants + 2142:
   660 0000085E 41                      	db T_interned_symbol	; cdddar
   661 0000085F [4F08000000000000]      	dq L_constants + 2127
   662                                  	; L_constants + 2151:
   663 00000867 03                      	db T_string	; "cddddr"
   664 00000868 0600000000000000        	dq 6
   665 00000870 636464646472            	db 0x63, 0x64, 0x64, 0x64, 0x64, 0x72
   666                                  	; L_constants + 2166:
   667 00000876 41                      	db T_interned_symbol	; cddddr
   668 00000877 [6708000000000000]      	dq L_constants + 2151
   669                                  	; L_constants + 2175:
   670 0000087F 03                      	db T_string	; "list?"
   671 00000880 0500000000000000        	dq 5
   672 00000888 6C6973743F              	db 0x6C, 0x69, 0x73, 0x74, 0x3F
   673                                  	; L_constants + 2189:
   674 0000088D 41                      	db T_interned_symbol	; list?
   675 0000088E [7F08000000000000]      	dq L_constants + 2175
   676                                  	; L_constants + 2198:
   677 00000896 41                      	db T_interned_symbol	; null?
   678 00000897 [0600000000000000]      	dq L_constants + 6
   679                                  	; L_constants + 2207:
   680 0000089F 41                      	db T_interned_symbol	; pair?
   681 000008A0 [1400000000000000]      	dq L_constants + 20
   682                                  	; L_constants + 2216:
   683 000008A8 03                      	db T_string	; "list"
   684 000008A9 0400000000000000        	dq 4
   685 000008B1 6C697374                	db 0x6C, 0x69, 0x73, 0x74
   686                                  	; L_constants + 2229:
   687 000008B5 03                      	db T_string	; "not"
   688 000008B6 0300000000000000        	dq 3
   689 000008BE 6E6F74                  	db 0x6E, 0x6F, 0x74
   690                                  	; L_constants + 2241:
   691 000008C1 41                      	db T_interned_symbol	; not
   692 000008C2 [B508000000000000]      	dq L_constants + 2229
   693                                  	; L_constants + 2250:
   694 000008CA 03                      	db T_string	; "rational?"
   695 000008CB 0900000000000000        	dq 9
   696 000008D3 726174696F6E616C        	db 0x72, 0x61, 0x74, 0x69, 0x6F, 0x6E, 0x61, 0x6C
   697 000008DB 3F                      	db 0x3F
   698                                  	; L_constants + 2268:
   699 000008DC 41                      	db T_interned_symbol	; rational?
   700 000008DD [CA08000000000000]      	dq L_constants + 2250
   701                                  	; L_constants + 2277:
   702 000008E5 41                      	db T_interned_symbol	; integer?
   703 000008E6 [F001000000000000]      	dq L_constants + 496
   704                                  	; L_constants + 2286:
   705 000008EE 41                      	db T_interned_symbol	; fraction?
   706 000008EF [9800000000000000]      	dq L_constants + 152
   707                                  	; L_constants + 2295:
   708 000008F7 03                      	db T_string	; "list*"
   709 000008F8 0500000000000000        	dq 5
   710 00000900 6C6973742A              	db 0x6C, 0x69, 0x73, 0x74, 0x2A
   711                                  	; L_constants + 2309:
   712 00000905 41                      	db T_interned_symbol	; list*
   713 00000906 [F708000000000000]      	dq L_constants + 2295
   714                                  	; L_constants + 2318:
   715 0000090E 03                      	db T_string	; "whatever"
   716 0000090F 0800000000000000        	dq 8
   717 00000917 7768617465766572        	db 0x77, 0x68, 0x61, 0x74, 0x65, 0x76, 0x65, 0x72
   718                                  	; L_constants + 2335:
   719 0000091F 41                      	db T_interned_symbol	; whatever
   720 00000920 [0E09000000000000]      	dq L_constants + 2318
   721                                  	; L_constants + 2344:
   722 00000928 03                      	db T_string	; "apply"
   723 00000929 0500000000000000        	dq 5
   724 00000931 6170706C79              	db 0x61, 0x70, 0x70, 0x6C, 0x79
   725                                  	; L_constants + 2358:
   726 00000936 41                      	db T_interned_symbol	; apply
   727 00000937 [2809000000000000]      	dq L_constants + 2344
   728                                  	; L_constants + 2367:
   729 0000093F 41                      	db T_interned_symbol	; __bin-apply
   730 00000940 [0102000000000000]      	dq L_constants + 513
   731                                  	; L_constants + 2376:
   732 00000948 03                      	db T_string	; "ormap"
   733 00000949 0500000000000000        	dq 5
   734 00000951 6F726D6170              	db 0x6F, 0x72, 0x6D, 0x61, 0x70
   735                                  	; L_constants + 2390:
   736 00000956 41                      	db T_interned_symbol	; ormap
   737 00000957 [4809000000000000]      	dq L_constants + 2376
   738                                  	; L_constants + 2399:
   739 0000095F 03                      	db T_string	; "map"
   740 00000960 0300000000000000        	dq 3
   741 00000968 6D6170                  	db 0x6D, 0x61, 0x70
   742                                  	; L_constants + 2411:
   743 0000096B 41                      	db T_interned_symbol	; map
   744 0000096C [5F09000000000000]      	dq L_constants + 2399
   745                                  	; L_constants + 2420:
   746 00000974 03                      	db T_string	; "andmap"
   747 00000975 0600000000000000        	dq 6
   748 0000097D 616E646D6170            	db 0x61, 0x6E, 0x64, 0x6D, 0x61, 0x70
   749                                  	; L_constants + 2435:
   750 00000983 41                      	db T_interned_symbol	; andmap
   751 00000984 [7409000000000000]      	dq L_constants + 2420
   752                                  	; L_constants + 2444:
   753 0000098C 03                      	db T_string	; "reverse"
   754 0000098D 0700000000000000        	dq 7
   755 00000995 72657665727365          	db 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65
   756                                  	; L_constants + 2460:
   757 0000099C 41                      	db T_interned_symbol	; reverse
   758 0000099D [8C09000000000000]      	dq L_constants + 2444
   759                                  	; L_constants + 2469:
   760 000009A5 03                      	db T_string	; "fold-left"
   761 000009A6 0900000000000000        	dq 9
   762 000009AE 666F6C642D6C6566        	db 0x66, 0x6F, 0x6C, 0x64, 0x2D, 0x6C, 0x65, 0x66
   763 000009B6 74                      	db 0x74
   764                                  	; L_constants + 2487:
   765 000009B7 41                      	db T_interned_symbol	; fold-left
   766 000009B8 [A509000000000000]      	dq L_constants + 2469
   767                                  	; L_constants + 2496:
   768 000009C0 03                      	db T_string	; "append"
   769 000009C1 0600000000000000        	dq 6
   770 000009C9 617070656E64            	db 0x61, 0x70, 0x70, 0x65, 0x6E, 0x64
   771                                  	; L_constants + 2511:
   772 000009CF 41                      	db T_interned_symbol	; append
   773 000009D0 [C009000000000000]      	dq L_constants + 2496
   774                                  	; L_constants + 2520:
   775 000009D8 03                      	db T_string	; "fold-right"
   776 000009D9 0A00000000000000        	dq 10
   777 000009E1 666F6C642D726967        	db 0x66, 0x6F, 0x6C, 0x64, 0x2D, 0x72, 0x69, 0x67
   778 000009E9 6874                    	db 0x68, 0x74
   779                                  	; L_constants + 2539:
   780 000009EB 41                      	db T_interned_symbol	; fold-right
   781 000009EC [D809000000000000]      	dq L_constants + 2520
   782                                  	; L_constants + 2548:
   783 000009F4 03                      	db T_string	; "+"
   784 000009F5 0100000000000000        	dq 1
   785 000009FD 2B                      	db 0x2B
   786                                  	; L_constants + 2558:
   787 000009FE 11                      	db T_integer	; 0
   788 000009FF 0000000000000000        	dq 0
   789                                  	; L_constants + 2567:
   790 00000A07 41                      	db T_interned_symbol	; __bin-add-zz
   791 00000A08 [BD02000000000000]      	dq L_constants + 701
   792                                  	; L_constants + 2576:
   793 00000A10 41                      	db T_interned_symbol	; __bin-add-qq
   794 00000A11 [6902000000000000]      	dq L_constants + 617
   795                                  	; L_constants + 2585:
   796 00000A19 41                      	db T_interned_symbol	; __integer-to-fractio...
   797 00000A1A [A204000000000000]      	dq L_constants + 1186
   798                                  	; L_constants + 2594:
   799 00000A22 41                      	db T_interned_symbol	; real?
   800 00000A23 [8A00000000000000]      	dq L_constants + 138
   801                                  	; L_constants + 2603:
   802 00000A2B 41                      	db T_interned_symbol	; __bin-add-rr
   803 00000A2C [1502000000000000]      	dq L_constants + 533
   804                                  	; L_constants + 2612:
   805 00000A34 41                      	db T_interned_symbol	; integer->real
   806 00000A35 [7C01000000000000]      	dq L_constants + 380
   807                                  	; L_constants + 2621:
   808 00000A3D 03                      	db T_string	; "__bin_integer_to_fr...
   809 00000A3E 1900000000000000        	dq 25
   810 00000A46 5F5F62696E5F696E        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x5F, 0x69, 0x6E
   811 00000A4E 74656765725F746F        	db 0x74, 0x65, 0x67, 0x65, 0x72, 0x5F, 0x74, 0x6F
   812 00000A56 5F6672616374696F        	db 0x5F, 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6F
   813 00000A5E 6E                      	db 0x6E
   814                                  	; L_constants + 2655:
   815 00000A5F 41                      	db T_interned_symbol	; __bin_integer_to_fra...
   816 00000A60 [3D0A000000000000]      	dq L_constants + 2621
   817                                  	; L_constants + 2664:
   818 00000A68 41                      	db T_interned_symbol	; fraction->real
   819 00000A69 [9201000000000000]      	dq L_constants + 402
   820                                  	; L_constants + 2673:
   821 00000A71 41                      	db T_interned_symbol	; error
   822 00000A72 [1103000000000000]      	dq L_constants + 785
   823                                  	; L_constants + 2682:
   824 00000A7A 41                      	db T_interned_symbol	; +
   825 00000A7B [F409000000000000]      	dq L_constants + 2548
   826                                  	; L_constants + 2691:
   827 00000A83 03                      	db T_string	; "all arguments need ...
   828 00000A84 2000000000000000        	dq 32
   829 00000A8C 616C6C2061726775        	db 0x61, 0x6C, 0x6C, 0x20, 0x61, 0x72, 0x67, 0x75
   830 00000A94 6D656E7473206E65        	db 0x6D, 0x65, 0x6E, 0x74, 0x73, 0x20, 0x6E, 0x65
   831 00000A9C 656420746F206265        	db 0x65, 0x64, 0x20, 0x74, 0x6F, 0x20, 0x62, 0x65
   832 00000AA4 206E756D62657273        	db 0x20, 0x6E, 0x75, 0x6D, 0x62, 0x65, 0x72, 0x73
   833                                  	; L_constants + 2732:
   834 00000AAC 03                      	db T_string	; "-"
   835 00000AAD 0100000000000000        	dq 1
   836 00000AB5 2D                      	db 0x2D
   837                                  	; L_constants + 2742:
   838 00000AB6 41                      	db T_interned_symbol	; __bin-sub-zz
   839 00000AB7 [D202000000000000]      	dq L_constants + 722
   840                                  	; L_constants + 2751:
   841 00000ABF 41                      	db T_interned_symbol	; __bin-sub-qq
   842 00000AC0 [7E02000000000000]      	dq L_constants + 638
   843                                  	; L_constants + 2760:
   844 00000AC8 03                      	db T_string	; "real"
   845 00000AC9 0400000000000000        	dq 4
   846 00000AD1 7265616C                	db 0x72, 0x65, 0x61, 0x6C
   847                                  	; L_constants + 2773:
   848 00000AD5 41                      	db T_interned_symbol	; real
   849 00000AD6 [C80A000000000000]      	dq L_constants + 2760
   850                                  	; L_constants + 2782:
   851 00000ADE 41                      	db T_interned_symbol	; __bin-sub-rr
   852 00000ADF [2A02000000000000]      	dq L_constants + 554
   853                                  	; L_constants + 2791:
   854 00000AE7 41                      	db T_interned_symbol	; -
   855 00000AE8 [AC0A000000000000]      	dq L_constants + 2732
   856                                  	; L_constants + 2800:
   857 00000AF0 03                      	db T_string	; "*"
   858 00000AF1 0100000000000000        	dq 1
   859 00000AF9 2A                      	db 0x2A
   860                                  	; L_constants + 2810:
   861 00000AFA 11                      	db T_integer	; 1
   862 00000AFB 0100000000000000        	dq 1
   863                                  	; L_constants + 2819:
   864 00000B03 41                      	db T_interned_symbol	; __bin-mul-zz
   865 00000B04 [E702000000000000]      	dq L_constants + 743
   866                                  	; L_constants + 2828:
   867 00000B0C 41                      	db T_interned_symbol	; __bin-mul-qq
   868 00000B0D [9302000000000000]      	dq L_constants + 659
   869                                  	; L_constants + 2837:
   870 00000B15 41                      	db T_interned_symbol	; __bin-mul-rr
   871 00000B16 [3F02000000000000]      	dq L_constants + 575
   872                                  	; L_constants + 2846:
   873 00000B1E 41                      	db T_interned_symbol	; *
   874 00000B1F [F00A000000000000]      	dq L_constants + 2800
   875                                  	; L_constants + 2855:
   876 00000B27 03                      	db T_string	; "/"
   877 00000B28 0100000000000000        	dq 1
   878 00000B30 2F                      	db 0x2F
   879                                  	; L_constants + 2865:
   880 00000B31 41                      	db T_interned_symbol	; __bin-div-zz
   881 00000B32 [FC02000000000000]      	dq L_constants + 764
   882                                  	; L_constants + 2874:
   883 00000B3A 41                      	db T_interned_symbol	; __bin-div-qq
   884 00000B3B [A802000000000000]      	dq L_constants + 680
   885                                  	; L_constants + 2883:
   886 00000B43 41                      	db T_interned_symbol	; __bin-div-rr
   887 00000B44 [5402000000000000]      	dq L_constants + 596
   888                                  	; L_constants + 2892:
   889 00000B4C 41                      	db T_interned_symbol	; /
   890 00000B4D [270B000000000000]      	dq L_constants + 2855
   891                                  	; L_constants + 2901:
   892 00000B55 03                      	db T_string	; "fact"
   893 00000B56 0400000000000000        	dq 4
   894 00000B5E 66616374                	db 0x66, 0x61, 0x63, 0x74
   895                                  	; L_constants + 2914:
   896 00000B62 41                      	db T_interned_symbol	; fact
   897 00000B63 [550B000000000000]      	dq L_constants + 2901
   898                                  	; L_constants + 2923:
   899 00000B6B 41                      	db T_interned_symbol	; zero?
   900 00000B6C [E201000000000000]      	dq L_constants + 482
   901                                  	; L_constants + 2932:
   902 00000B74 03                      	db T_string	; "<"
   903 00000B75 0100000000000000        	dq 1
   904 00000B7D 3C                      	db 0x3C
   905                                  	; L_constants + 2942:
   906 00000B7E 41                      	db T_interned_symbol	; <
   907 00000B7F [740B000000000000]      	dq L_constants + 2932
   908                                  	; L_constants + 2951:
   909 00000B87 03                      	db T_string	; "<="
   910 00000B88 0200000000000000        	dq 2
   911 00000B90 3C3D                    	db 0x3C, 0x3D
   912                                  	; L_constants + 2962:
   913 00000B92 41                      	db T_interned_symbol	; <=
   914 00000B93 [870B000000000000]      	dq L_constants + 2951
   915                                  	; L_constants + 2971:
   916 00000B9B 03                      	db T_string	; ">"
   917 00000B9C 0100000000000000        	dq 1
   918 00000BA4 3E                      	db 0x3E
   919                                  	; L_constants + 2981:
   920 00000BA5 41                      	db T_interned_symbol	; >
   921 00000BA6 [9B0B000000000000]      	dq L_constants + 2971
   922                                  	; L_constants + 2990:
   923 00000BAE 03                      	db T_string	; ">="
   924 00000BAF 0200000000000000        	dq 2
   925 00000BB7 3E3D                    	db 0x3E, 0x3D
   926                                  	; L_constants + 3001:
   927 00000BB9 41                      	db T_interned_symbol	; >=
   928 00000BBA [AE0B000000000000]      	dq L_constants + 2990
   929                                  	; L_constants + 3010:
   930 00000BC2 03                      	db T_string	; "="
   931 00000BC3 0100000000000000        	dq 1
   932 00000BCB 3D                      	db 0x3D
   933                                  	; L_constants + 3020:
   934 00000BCC 41                      	db T_interned_symbol	; =
   935 00000BCD [C20B000000000000]      	dq L_constants + 3010
   936                                  	; L_constants + 3029:
   937 00000BD5 41                      	db T_interned_symbol	; __bin-equal-zz
   938 00000BD6 [9E03000000000000]      	dq L_constants + 926
   939                                  	; L_constants + 3038:
   940 00000BDE 41                      	db T_interned_symbol	; __bin-equal-qq
   941 00000BDF [8703000000000000]      	dq L_constants + 903
   942                                  	; L_constants + 3047:
   943 00000BE7 41                      	db T_interned_symbol	; __bin-equal-rr
   944 00000BE8 [7003000000000000]      	dq L_constants + 880
   945                                  	; L_constants + 3056:
   946 00000BF0 41                      	db T_interned_symbol	; __bin-less-than-zz
   947 00000BF1 [5503000000000000]      	dq L_constants + 853
   948                                  	; L_constants + 3065:
   949 00000BF9 41                      	db T_interned_symbol	; __bin-less-than-qq
   950 00000BFA [3A03000000000000]      	dq L_constants + 826
   951                                  	; L_constants + 3074:
   952 00000C02 41                      	db T_interned_symbol	; __bin-less-than-rr
   953 00000C03 [1F03000000000000]      	dq L_constants + 799
   954                                  	; L_constants + 3083:
   955 00000C0B 03                      	db T_string	; "generic-comparator"
   956 00000C0C 1200000000000000        	dq 18
   957 00000C14 67656E657269632D        	db 0x67, 0x65, 0x6E, 0x65, 0x72, 0x69, 0x63, 0x2D
   958 00000C1C 636F6D7061726174        	db 0x63, 0x6F, 0x6D, 0x70, 0x61, 0x72, 0x61, 0x74
   959 00000C24 6F72                    	db 0x6F, 0x72
   960                                  	; L_constants + 3110:
   961 00000C26 41                      	db T_interned_symbol	; generic-comparator
   962 00000C27 [0B0C000000000000]      	dq L_constants + 3083
   963                                  	; L_constants + 3119:
   964 00000C2F 03                      	db T_string	; "all the arguments m...
   965 00000C30 2100000000000000        	dq 33
   966 00000C38 616C6C2074686520        	db 0x61, 0x6C, 0x6C, 0x20, 0x74, 0x68, 0x65, 0x20
   967 00000C40 617267756D656E74        	db 0x61, 0x72, 0x67, 0x75, 0x6D, 0x65, 0x6E, 0x74
   968 00000C48 73206D7573742062        	db 0x73, 0x20, 0x6D, 0x75, 0x73, 0x74, 0x20, 0x62
   969 00000C50 65206E756D626572        	db 0x65, 0x20, 0x6E, 0x75, 0x6D, 0x62, 0x65, 0x72
   970 00000C58 73                      	db 0x73
   971                                  	; L_constants + 3161:
   972 00000C59 03                      	db T_string	; "char<?"
   973 00000C5A 0600000000000000        	dq 6
   974 00000C62 636861723C3F            	db 0x63, 0x68, 0x61, 0x72, 0x3C, 0x3F
   975                                  	; L_constants + 3176:
   976 00000C68 41                      	db T_interned_symbol	; char<?
   977 00000C69 [590C000000000000]      	dq L_constants + 3161
   978                                  	; L_constants + 3185:
   979 00000C71 03                      	db T_string	; "char<=?"
   980 00000C72 0700000000000000        	dq 7
   981 00000C7A 636861723C3D3F          	db 0x63, 0x68, 0x61, 0x72, 0x3C, 0x3D, 0x3F
   982                                  	; L_constants + 3201:
   983 00000C81 41                      	db T_interned_symbol	; char<=?
   984 00000C82 [710C000000000000]      	dq L_constants + 3185
   985                                  	; L_constants + 3210:
   986 00000C8A 03                      	db T_string	; "char=?"
   987 00000C8B 0600000000000000        	dq 6
   988 00000C93 636861723D3F            	db 0x63, 0x68, 0x61, 0x72, 0x3D, 0x3F
   989                                  	; L_constants + 3225:
   990 00000C99 41                      	db T_interned_symbol	; char=?
   991 00000C9A [8A0C000000000000]      	dq L_constants + 3210
   992                                  	; L_constants + 3234:
   993 00000CA2 03                      	db T_string	; "char>?"
   994 00000CA3 0600000000000000        	dq 6
   995 00000CAB 636861723E3F            	db 0x63, 0x68, 0x61, 0x72, 0x3E, 0x3F
   996                                  	; L_constants + 3249:
   997 00000CB1 41                      	db T_interned_symbol	; char>?
   998 00000CB2 [A20C000000000000]      	dq L_constants + 3234
   999                                  	; L_constants + 3258:
  1000 00000CBA 03                      	db T_string	; "char>=?"
  1001 00000CBB 0700000000000000        	dq 7
  1002 00000CC3 636861723E3D3F          	db 0x63, 0x68, 0x61, 0x72, 0x3E, 0x3D, 0x3F
  1003                                  	; L_constants + 3274:
  1004 00000CCA 41                      	db T_interned_symbol	; char>=?
  1005 00000CCB [BA0C000000000000]      	dq L_constants + 3258
  1006                                  	; L_constants + 3283:
  1007 00000CD3 41                      	db T_interned_symbol	; char->integer
  1008 00000CD4 [A901000000000000]      	dq L_constants + 425
  1009                                  	; L_constants + 3292:
  1010 00000CDC 03                      	db T_string	; "char-downcase"
  1011 00000CDD 0D00000000000000        	dq 13
  1012 00000CE5 636861722D646F77        	db 0x63, 0x68, 0x61, 0x72, 0x2D, 0x64, 0x6F, 0x77
  1013 00000CED 6E63617365              	db 0x6E, 0x63, 0x61, 0x73, 0x65
  1014                                  	; L_constants + 3314:
  1015 00000CF2 41                      	db T_interned_symbol	; char-downcase
  1016 00000CF3 [DC0C000000000000]      	dq L_constants + 3292
  1017                                  	; L_constants + 3323:
  1018 00000CFB 03                      	db T_string	; "char-upcase"
  1019 00000CFC 0B00000000000000        	dq 11
  1020 00000D04 636861722D757063        	db 0x63, 0x68, 0x61, 0x72, 0x2D, 0x75, 0x70, 0x63
  1021 00000D0C 617365                  	db 0x61, 0x73, 0x65
  1022                                  	; L_constants + 3343:
  1023 00000D0F 41                      	db T_interned_symbol	; char-upcase
  1024 00000D10 [FB0C000000000000]      	dq L_constants + 3323
  1025                                  	; L_constants + 3352:
  1026 00000D18 0241                    	db T_char, 0x41	; #\A
  1027                                  	; L_constants + 3354:
  1028 00000D1A 025A                    	db T_char, 0x5A	; #\Z
  1029                                  	; L_constants + 3356:
  1030 00000D1C 41                      	db T_interned_symbol	; integer->char
  1031 00000D1D [BF01000000000000]      	dq L_constants + 447
  1032                                  	; L_constants + 3365:
  1033 00000D25 0261                    	db T_char, 0x61	; #\a
  1034                                  	; L_constants + 3367:
  1035 00000D27 027A                    	db T_char, 0x7A	; #\z
  1036                                  	; L_constants + 3369:
  1037 00000D29 03                      	db T_string	; "char-ci<?"
  1038 00000D2A 0900000000000000        	dq 9
  1039 00000D32 636861722D63693C        	db 0x63, 0x68, 0x61, 0x72, 0x2D, 0x63, 0x69, 0x3C
  1040 00000D3A 3F                      	db 0x3F
  1041                                  	; L_constants + 3387:
  1042 00000D3B 41                      	db T_interned_symbol	; char-ci<?
  1043 00000D3C [290D000000000000]      	dq L_constants + 3369
  1044                                  	; L_constants + 3396:
  1045 00000D44 03                      	db T_string	; "char-ci<=?"
  1046 00000D45 0A00000000000000        	dq 10
  1047 00000D4D 636861722D63693C        	db 0x63, 0x68, 0x61, 0x72, 0x2D, 0x63, 0x69, 0x3C
  1048 00000D55 3D3F                    	db 0x3D, 0x3F
  1049                                  	; L_constants + 3415:
  1050 00000D57 41                      	db T_interned_symbol	; char-ci<=?
  1051 00000D58 [440D000000000000]      	dq L_constants + 3396
  1052                                  	; L_constants + 3424:
  1053 00000D60 03                      	db T_string	; "char-ci=?"
  1054 00000D61 0900000000000000        	dq 9
  1055 00000D69 636861722D63693D        	db 0x63, 0x68, 0x61, 0x72, 0x2D, 0x63, 0x69, 0x3D
  1056 00000D71 3F                      	db 0x3F
  1057                                  	; L_constants + 3442:
  1058 00000D72 41                      	db T_interned_symbol	; char-ci=?
  1059 00000D73 [600D000000000000]      	dq L_constants + 3424
  1060                                  	; L_constants + 3451:
  1061 00000D7B 03                      	db T_string	; "char-ci>?"
  1062 00000D7C 0900000000000000        	dq 9
  1063 00000D84 636861722D63693E        	db 0x63, 0x68, 0x61, 0x72, 0x2D, 0x63, 0x69, 0x3E
  1064 00000D8C 3F                      	db 0x3F
  1065                                  	; L_constants + 3469:
  1066 00000D8D 41                      	db T_interned_symbol	; char-ci>?
  1067 00000D8E [7B0D000000000000]      	dq L_constants + 3451
  1068                                  	; L_constants + 3478:
  1069 00000D96 03                      	db T_string	; "char-ci>=?"
  1070 00000D97 0A00000000000000        	dq 10
  1071 00000D9F 636861722D63693E        	db 0x63, 0x68, 0x61, 0x72, 0x2D, 0x63, 0x69, 0x3E
  1072 00000DA7 3D3F                    	db 0x3D, 0x3F
  1073                                  	; L_constants + 3497:
  1074 00000DA9 41                      	db T_interned_symbol	; char-ci>=?
  1075 00000DAA [960D000000000000]      	dq L_constants + 3478
  1076                                  	; L_constants + 3506:
  1077 00000DB2 03                      	db T_string	; "string-downcase"
  1078 00000DB3 0F00000000000000        	dq 15
  1079 00000DBB 737472696E672D64        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x64
  1080 00000DC3 6F776E63617365          	db 0x6F, 0x77, 0x6E, 0x63, 0x61, 0x73, 0x65
  1081                                  	; L_constants + 3530:
  1082 00000DCA 41                      	db T_interned_symbol	; string-downcase
  1083 00000DCB [B20D000000000000]      	dq L_constants + 3506
  1084                                  	; L_constants + 3539:
  1085 00000DD3 03                      	db T_string	; "string-upcase"
  1086 00000DD4 0D00000000000000        	dq 13
  1087 00000DDC 737472696E672D75        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x75
  1088 00000DE4 7063617365              	db 0x70, 0x63, 0x61, 0x73, 0x65
  1089                                  	; L_constants + 3561:
  1090 00000DE9 41                      	db T_interned_symbol	; string-upcase
  1091 00000DEA [D30D000000000000]      	dq L_constants + 3539
  1092                                  	; L_constants + 3570:
  1093 00000DF2 03                      	db T_string	; "list->string"
  1094 00000DF3 0C00000000000000        	dq 12
  1095 00000DFB 6C6973742D3E7374        	db 0x6C, 0x69, 0x73, 0x74, 0x2D, 0x3E, 0x73, 0x74
  1096 00000E03 72696E67                	db 0x72, 0x69, 0x6E, 0x67
  1097                                  	; L_constants + 3591:
  1098 00000E07 41                      	db T_interned_symbol	; list->string
  1099 00000E08 [F20D000000000000]      	dq L_constants + 3570
  1100                                  	; L_constants + 3600:
  1101 00000E10 03                      	db T_string	; "string->list"
  1102 00000E11 0C00000000000000        	dq 12
  1103 00000E19 737472696E672D3E        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x3E
  1104 00000E21 6C697374                	db 0x6C, 0x69, 0x73, 0x74
  1105                                  	; L_constants + 3621:
  1106 00000E25 41                      	db T_interned_symbol	; string->list
  1107 00000E26 [100E000000000000]      	dq L_constants + 3600
  1108                                  	; L_constants + 3630:
  1109 00000E2E 03                      	db T_string	; "string<?"
  1110 00000E2F 0800000000000000        	dq 8
  1111 00000E37 737472696E673C3F        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x3C, 0x3F
  1112                                  	; L_constants + 3647:
  1113 00000E3F 41                      	db T_interned_symbol	; string<?
  1114 00000E40 [2E0E000000000000]      	dq L_constants + 3630
  1115                                  	; L_constants + 3656:
  1116 00000E48 03                      	db T_string	; "string<=?"
  1117 00000E49 0900000000000000        	dq 9
  1118 00000E51 737472696E673C3D        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x3C, 0x3D
  1119 00000E59 3F                      	db 0x3F
  1120                                  	; L_constants + 3674:
  1121 00000E5A 41                      	db T_interned_symbol	; string<=?
  1122 00000E5B [480E000000000000]      	dq L_constants + 3656
  1123                                  	; L_constants + 3683:
  1124 00000E63 03                      	db T_string	; "string=?"
  1125 00000E64 0800000000000000        	dq 8
  1126 00000E6C 737472696E673D3F        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x3D, 0x3F
  1127                                  	; L_constants + 3700:
  1128 00000E74 41                      	db T_interned_symbol	; string=?
  1129 00000E75 [630E000000000000]      	dq L_constants + 3683
  1130                                  	; L_constants + 3709:
  1131 00000E7D 03                      	db T_string	; "string>=?"
  1132 00000E7E 0900000000000000        	dq 9
  1133 00000E86 737472696E673E3D        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x3E, 0x3D
  1134 00000E8E 3F                      	db 0x3F
  1135                                  	; L_constants + 3727:
  1136 00000E8F 41                      	db T_interned_symbol	; string>=?
  1137 00000E90 [7D0E000000000000]      	dq L_constants + 3709
  1138                                  	; L_constants + 3736:
  1139 00000E98 03                      	db T_string	; "string>?"
  1140 00000E99 0800000000000000        	dq 8
  1141 00000EA1 737472696E673E3F        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x3E, 0x3F
  1142                                  	; L_constants + 3753:
  1143 00000EA9 41                      	db T_interned_symbol	; string>?
  1144 00000EAA [980E000000000000]      	dq L_constants + 3736
  1145                                  	; L_constants + 3762:
  1146 00000EB2 03                      	db T_string	; "string-ci<?"
  1147 00000EB3 0B00000000000000        	dq 11
  1148 00000EBB 737472696E672D63        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x63
  1149 00000EC3 693C3F                  	db 0x69, 0x3C, 0x3F
  1150                                  	; L_constants + 3782:
  1151 00000EC6 41                      	db T_interned_symbol	; string-ci<?
  1152 00000EC7 [B20E000000000000]      	dq L_constants + 3762
  1153                                  	; L_constants + 3791:
  1154 00000ECF 03                      	db T_string	; "string-ci<=?"
  1155 00000ED0 0C00000000000000        	dq 12
  1156 00000ED8 737472696E672D63        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x63
  1157 00000EE0 693C3D3F                	db 0x69, 0x3C, 0x3D, 0x3F
  1158                                  	; L_constants + 3812:
  1159 00000EE4 41                      	db T_interned_symbol	; string-ci<=?
  1160 00000EE5 [CF0E000000000000]      	dq L_constants + 3791
  1161                                  	; L_constants + 3821:
  1162 00000EED 03                      	db T_string	; "string-ci=?"
  1163 00000EEE 0B00000000000000        	dq 11
  1164 00000EF6 737472696E672D63        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x63
  1165 00000EFE 693D3F                  	db 0x69, 0x3D, 0x3F
  1166                                  	; L_constants + 3841:
  1167 00000F01 41                      	db T_interned_symbol	; string-ci=?
  1168 00000F02 [ED0E000000000000]      	dq L_constants + 3821
  1169                                  	; L_constants + 3850:
  1170 00000F0A 03                      	db T_string	; "string-ci>=?"
  1171 00000F0B 0C00000000000000        	dq 12
  1172 00000F13 737472696E672D63        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x63
  1173 00000F1B 693E3D3F                	db 0x69, 0x3E, 0x3D, 0x3F
  1174                                  	; L_constants + 3871:
  1175 00000F1F 41                      	db T_interned_symbol	; string-ci>=?
  1176 00000F20 [0A0F000000000000]      	dq L_constants + 3850
  1177                                  	; L_constants + 3880:
  1178 00000F28 03                      	db T_string	; "string-ci>?"
  1179 00000F29 0B00000000000000        	dq 11
  1180 00000F31 737472696E672D63        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x63
  1181 00000F39 693E3F                  	db 0x69, 0x3E, 0x3F
  1182                                  	; L_constants + 3900:
  1183 00000F3C 41                      	db T_interned_symbol	; string-ci>?
  1184 00000F3D [280F000000000000]      	dq L_constants + 3880
  1185                                  	; L_constants + 3909:
  1186 00000F45 41                      	db T_interned_symbol	; string-ref
  1187 00000F46 [FA03000000000000]      	dq L_constants + 1018
  1188                                  	; L_constants + 3918:
  1189 00000F4E 41                      	db T_interned_symbol	; string-length
  1190 00000F4F [2D01000000000000]      	dq L_constants + 301
  1191                                  	; L_constants + 3927:
  1192 00000F57 41                      	db T_interned_symbol	; make-vector
  1193 00000F58 [4804000000000000]      	dq L_constants + 1096
  1194                                  	; L_constants + 3936:
  1195 00000F60 03                      	db T_string	; "Usage: (make-vector...
  1196 00000F61 2B00000000000000        	dq 43
  1197 00000F69 55736167653A2028        	db 0x55, 0x73, 0x61, 0x67, 0x65, 0x3A, 0x20, 0x28
  1198 00000F71 6D616B652D766563        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x76, 0x65, 0x63
  1199 00000F79 746F722073697A65        	db 0x74, 0x6F, 0x72, 0x20, 0x73, 0x69, 0x7A, 0x65
  1200 00000F81 203F6F7074696F6E        	db 0x20, 0x3F, 0x6F, 0x70, 0x74, 0x69, 0x6F, 0x6E
  1201 00000F89 616C2D6465666175        	db 0x61, 0x6C, 0x2D, 0x64, 0x65, 0x66, 0x61, 0x75
  1202 00000F91 6C7429                  	db 0x6C, 0x74, 0x29
  1203                                  	; L_constants + 3988:
  1204 00000F94 41                      	db T_interned_symbol	; make-string
  1205 00000F95 [5C04000000000000]      	dq L_constants + 1116
  1206                                  	; L_constants + 3997:
  1207 00000F9D 03                      	db T_string	; "Usage: (make-string...
  1208 00000F9E 2B00000000000000        	dq 43
  1209 00000FA6 55736167653A2028        	db 0x55, 0x73, 0x61, 0x67, 0x65, 0x3A, 0x20, 0x28
  1210 00000FAE 6D616B652D737472        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x73, 0x74, 0x72
  1211 00000FB6 696E672073697A65        	db 0x69, 0x6E, 0x67, 0x20, 0x73, 0x69, 0x7A, 0x65
  1212 00000FBE 203F6F7074696F6E        	db 0x20, 0x3F, 0x6F, 0x70, 0x74, 0x69, 0x6F, 0x6E
  1213 00000FC6 616C2D6465666175        	db 0x61, 0x6C, 0x2D, 0x64, 0x65, 0x66, 0x61, 0x75
  1214 00000FCE 6C7429                  	db 0x6C, 0x74, 0x29
  1215                                  	; L_constants + 4049:
  1216 00000FD1 03                      	db T_string	; "list->vector"
  1217 00000FD2 0C00000000000000        	dq 12
  1218 00000FDA 6C6973742D3E7665        	db 0x6C, 0x69, 0x73, 0x74, 0x2D, 0x3E, 0x76, 0x65
  1219 00000FE2 63746F72                	db 0x63, 0x74, 0x6F, 0x72
  1220                                  	; L_constants + 4070:
  1221 00000FE6 41                      	db T_interned_symbol	; list->vector
  1222 00000FE7 [D10F000000000000]      	dq L_constants + 4049
  1223                                  	; L_constants + 4079:
  1224 00000FEF 41                      	db T_interned_symbol	; vector-set!
  1225 00000FF0 [2004000000000000]      	dq L_constants + 1056
  1226                                  	; L_constants + 4088:
  1227 00000FF8 41                      	db T_interned_symbol	; string-set!
  1228 00000FF9 [3404000000000000]      	dq L_constants + 1076
  1229                                  	; L_constants + 4097:
  1230 00001001 03                      	db T_string	; "vector"
  1231 00001002 0600000000000000        	dq 6
  1232 0000100A 766563746F72            	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72
  1233                                  	; L_constants + 4112:
  1234 00001010 41                      	db T_interned_symbol	; vector
  1235 00001011 [0110000000000000]      	dq L_constants + 4097
  1236                                  	; L_constants + 4121:
  1237 00001019 03                      	db T_string	; "vector->list"
  1238 0000101A 0C00000000000000        	dq 12
  1239 00001022 766563746F722D3E        	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x2D, 0x3E
  1240 0000102A 6C697374                	db 0x6C, 0x69, 0x73, 0x74
  1241                                  	; L_constants + 4142:
  1242 0000102E 41                      	db T_interned_symbol	; vector->list
  1243 0000102F [1910000000000000]      	dq L_constants + 4121
  1244                                  	; L_constants + 4151:
  1245 00001037 41                      	db T_interned_symbol	; vector-ref
  1246 00001038 [0D04000000000000]      	dq L_constants + 1037
  1247                                  	; L_constants + 4160:
  1248 00001040 41                      	db T_interned_symbol	; vector-length
  1249 00001041 [4301000000000000]      	dq L_constants + 323
  1250                                  	; L_constants + 4169:
  1251 00001049 03                      	db T_string	; "random"
  1252 0000104A 0600000000000000        	dq 6
  1253 00001052 72616E646F6D            	db 0x72, 0x61, 0x6E, 0x64, 0x6F, 0x6D
  1254                                  	; L_constants + 4184:
  1255 00001058 41                      	db T_interned_symbol	; random
  1256 00001059 [4910000000000000]      	dq L_constants + 4169
  1257                                  	; L_constants + 4193:
  1258 00001061 41                      	db T_interned_symbol	; remainder
  1259 00001062 [C603000000000000]      	dq L_constants + 966
  1260                                  	; L_constants + 4202:
  1261 0000106A 41                      	db T_interned_symbol	; trng
  1262 0000106B [D501000000000000]      	dq L_constants + 469
  1263                                  	; L_constants + 4211:
  1264 00001073 03                      	db T_string	; "positive?"
  1265 00001074 0900000000000000        	dq 9
  1266 0000107C 706F736974697665        	db 0x70, 0x6F, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65
  1267 00001084 3F                      	db 0x3F
  1268                                  	; L_constants + 4229:
  1269 00001085 41                      	db T_interned_symbol	; positive?
  1270 00001086 [7310000000000000]      	dq L_constants + 4211
  1271                                  	; L_constants + 4238:
  1272 0000108E 03                      	db T_string	; "negative?"
  1273 0000108F 0900000000000000        	dq 9
  1274 00001097 6E65676174697665        	db 0x6E, 0x65, 0x67, 0x61, 0x74, 0x69, 0x76, 0x65
  1275 0000109F 3F                      	db 0x3F
  1276                                  	; L_constants + 4256:
  1277 000010A0 41                      	db T_interned_symbol	; negative?
  1278 000010A1 [8E10000000000000]      	dq L_constants + 4238
  1279                                  	; L_constants + 4265:
  1280 000010A9 03                      	db T_string	; "even?"
  1281 000010AA 0500000000000000        	dq 5
  1282 000010B2 6576656E3F              	db 0x65, 0x76, 0x65, 0x6E, 0x3F
  1283                                  	; L_constants + 4279:
  1284 000010B7 41                      	db T_interned_symbol	; even?
  1285 000010B8 [A910000000000000]      	dq L_constants + 4265
  1286                                  	; L_constants + 4288:
  1287 000010C0 11                      	db T_integer	; 2
  1288 000010C1 0200000000000000        	dq 2
  1289                                  	; L_constants + 4297:
  1290 000010C9 03                      	db T_string	; "odd?"
  1291 000010CA 0400000000000000        	dq 4
  1292 000010D2 6F64643F                	db 0x6F, 0x64, 0x64, 0x3F
  1293                                  	; L_constants + 4310:
  1294 000010D6 41                      	db T_interned_symbol	; odd?
  1295 000010D7 [C910000000000000]      	dq L_constants + 4297
  1296                                  	; L_constants + 4319:
  1297 000010DF 03                      	db T_string	; "abs"
  1298 000010E0 0300000000000000        	dq 3
  1299 000010E8 616273                  	db 0x61, 0x62, 0x73
  1300                                  	; L_constants + 4331:
  1301 000010EB 41                      	db T_interned_symbol	; abs
  1302 000010EC [DF10000000000000]      	dq L_constants + 4319
  1303                                  	; L_constants + 4340:
  1304 000010F4 03                      	db T_string	; "equal?"
  1305 000010F5 0600000000000000        	dq 6
  1306 000010FD 657175616C3F            	db 0x65, 0x71, 0x75, 0x61, 0x6C, 0x3F
  1307                                  	; L_constants + 4355:
  1308 00001103 41                      	db T_interned_symbol	; equal?
  1309 00001104 [F410000000000000]      	dq L_constants + 4340
  1310                                  	; L_constants + 4364:
  1311 0000110C 41                      	db T_interned_symbol	; vector?
  1312 0000110D [6700000000000000]      	dq L_constants + 103
  1313                                  	; L_constants + 4373:
  1314 00001115 41                      	db T_interned_symbol	; string?
  1315 00001116 [3E00000000000000]      	dq L_constants + 62
  1316                                  	; L_constants + 4382:
  1317 0000111E 41                      	db T_interned_symbol	; number?
  1318 0000111F [BB00000000000000]      	dq L_constants + 187
  1319                                  	; L_constants + 4391:
  1320 00001127 41                      	db T_interned_symbol	; char?
  1321 00001128 [3000000000000000]      	dq L_constants + 48
  1322                                  	; L_constants + 4400:
  1323 00001130 41                      	db T_interned_symbol	; eq?
  1324 00001131 [9604000000000000]      	dq L_constants + 1174
  1325                                  	; L_constants + 4409:
  1326 00001139 03                      	db T_string	; "assoc"
  1327 0000113A 0500000000000000        	dq 5
  1328 00001142 6173736F63              	db 0x61, 0x73, 0x73, 0x6F, 0x63
  1329                                  	; L_constants + 4423:
  1330 00001147 41                      	db T_interned_symbol	; assoc
  1331 00001148 [3911000000000000]      	dq L_constants + 4409
  1332                                  	; L_constants + 4432:
  1333 00001150 03                      	db T_string	; "string-append"
  1334 00001151 0D00000000000000        	dq 13
  1335 00001159 737472696E672D61        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x61
  1336 00001161 7070656E64              	db 0x70, 0x70, 0x65, 0x6E, 0x64
  1337                                  	; L_constants + 4454:
  1338 00001166 41                      	db T_interned_symbol	; string-append
  1339 00001167 [5011000000000000]      	dq L_constants + 4432
  1340                                  	; L_constants + 4463:
  1341 0000116F 03                      	db T_string	; "vector-append"
  1342 00001170 0D00000000000000        	dq 13
  1343 00001178 766563746F722D61        	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x2D, 0x61
  1344 00001180 7070656E64              	db 0x70, 0x70, 0x65, 0x6E, 0x64
  1345                                  	; L_constants + 4485:
  1346 00001185 41                      	db T_interned_symbol	; vector-append
  1347 00001186 [6F11000000000000]      	dq L_constants + 4463
  1348                                  	; L_constants + 4494:
  1349 0000118E 03                      	db T_string	; "string-reverse"
  1350 0000118F 0E00000000000000        	dq 14
  1351 00001197 737472696E672D72        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x72
  1352 0000119F 657665727365            	db 0x65, 0x76, 0x65, 0x72, 0x73, 0x65
  1353                                  	; L_constants + 4517:
  1354 000011A5 41                      	db T_interned_symbol	; string-reverse
  1355 000011A6 [8E11000000000000]      	dq L_constants + 4494
  1356                                  	; L_constants + 4526:
  1357 000011AE 03                      	db T_string	; "vector-reverse"
  1358 000011AF 0E00000000000000        	dq 14
  1359 000011B7 766563746F722D72        	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x2D, 0x72
  1360 000011BF 657665727365            	db 0x65, 0x76, 0x65, 0x72, 0x73, 0x65
  1361                                  	; L_constants + 4549:
  1362 000011C5 41                      	db T_interned_symbol	; vector-reverse
  1363 000011C6 [AE11000000000000]      	dq L_constants + 4526
  1364                                  	; L_constants + 4558:
  1365 000011CE 03                      	db T_string	; "string-reverse!"
  1366 000011CF 0F00000000000000        	dq 15
  1367 000011D7 737472696E672D72        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x72
  1368 000011DF 65766572736521          	db 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x21
  1369                                  	; L_constants + 4582:
  1370 000011E6 41                      	db T_interned_symbol	; string-reverse!
  1371 000011E7 [CE11000000000000]      	dq L_constants + 4558
  1372                                  	; L_constants + 4591:
  1373 000011EF 03                      	db T_string	; "vector-reverse!"
  1374 000011F0 0F00000000000000        	dq 15
  1375 000011F8 766563746F722D72        	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x2D, 0x72
  1376 00001200 65766572736521          	db 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x21
  1377                                  	; L_constants + 4615:
  1378 00001207 41                      	db T_interned_symbol	; vector-reverse!
  1379 00001208 [EF11000000000000]      	dq L_constants + 4591
  1380                                  	; L_constants + 4624:
  1381 00001210 03                      	db T_string	; "make-list-thunk"
  1382 00001211 0F00000000000000        	dq 15
  1383 00001219 6D616B652D6C6973        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x6C, 0x69, 0x73
  1384 00001221 742D7468756E6B          	db 0x74, 0x2D, 0x74, 0x68, 0x75, 0x6E, 0x6B
  1385                                  	; L_constants + 4648:
  1386 00001228 41                      	db T_interned_symbol	; make-list-thunk
  1387 00001229 [1012000000000000]      	dq L_constants + 4624
  1388                                  	; L_constants + 4657:
  1389 00001231 03                      	db T_string	; "make-string-thunk"
  1390 00001232 1100000000000000        	dq 17
  1391 0000123A 6D616B652D737472        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x73, 0x74, 0x72
  1392 00001242 696E672D7468756E        	db 0x69, 0x6E, 0x67, 0x2D, 0x74, 0x68, 0x75, 0x6E
  1393 0000124A 6B                      	db 0x6B
  1394                                  	; L_constants + 4683:
  1395 0000124B 41                      	db T_interned_symbol	; make-string-thunk
  1396 0000124C [3112000000000000]      	dq L_constants + 4657
  1397                                  	; L_constants + 4692:
  1398 00001254 03                      	db T_string	; "make-vector-thunk"
  1399 00001255 1100000000000000        	dq 17
  1400 0000125D 6D616B652D766563        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x76, 0x65, 0x63
  1401 00001265 746F722D7468756E        	db 0x74, 0x6F, 0x72, 0x2D, 0x74, 0x68, 0x75, 0x6E
  1402 0000126D 6B                      	db 0x6B
  1403                                  	; L_constants + 4718:
  1404 0000126E 41                      	db T_interned_symbol	; make-vector-thunk
  1405 0000126F [5412000000000000]      	dq L_constants + 4692
  1406                                  	; L_constants + 4727:
  1407 00001277 03                      	db T_string	; "logarithm"
  1408 00001278 0900000000000000        	dq 9
  1409 00001280 6C6F676172697468        	db 0x6C, 0x6F, 0x67, 0x61, 0x72, 0x69, 0x74, 0x68
  1410 00001288 6D                      	db 0x6D
  1411                                  	; L_constants + 4745:
  1412 00001289 41                      	db T_interned_symbol	; logarithm
  1413 0000128A [7712000000000000]      	dq L_constants + 4727
  1414                                  	; L_constants + 4754:
  1415 00001292 13                      	db T_real	; 1.000000
  1416 00001293 000000000000F03F        	dq 1.000000
  1417                                  	; L_constants + 4763:
  1418 0000129B 03                      	db T_string	; "newline"
  1419 0000129C 0700000000000000        	dq 7
  1420 000012A4 6E65776C696E65          	db 0x6E, 0x65, 0x77, 0x6C, 0x69, 0x6E, 0x65
  1421                                  	; L_constants + 4779:
  1422 000012AB 41                      	db T_interned_symbol	; newline
  1423 000012AC [9B12000000000000]      	dq L_constants + 4763
  1424                                  	; L_constants + 4788:
  1425 000012B4 41                      	db T_interned_symbol	; write-char
  1426 000012B5 [0201000000000000]      	dq L_constants + 258
  1427                                  	; L_constants + 4797:
  1428 000012BD 020A                    	db T_char, 0x0A	; #\newline
  1429                                  	; L_constants + 4799:
  1430 000012BF 03                      	db T_string	; "void"
  1431 000012C0 0400000000000000        	dq 4
  1432 000012C8 766F6964                	db 0x76, 0x6F, 0x69, 0x64
  1433                                  	; L_constants + 4812:
  1434 000012CC 41                      	db T_interned_symbol	; void
  1435 000012CD [BF12000000000000]      	dq L_constants + 4799
  1436                                  	; L_constants + 4821:
  1437 000012D5 11                      	db T_integer	; 4
  1438 000012D6 0400000000000000        	dq 4
  1439                                  free_var_0:	; location of *
  1440 000012DE [E612000000000000]      	dq .undefined_object
  1441                                  .undefined_object:
  1442 000012E6 05                      	db T_undefined
  1443 000012E7 [F00A000000000000]      	dq L_constants + 2800
  1444                                  
  1445                                  free_var_1:	; location of +
  1446 000012EF [F712000000000000]      	dq .undefined_object
  1447                                  .undefined_object:
  1448 000012F7 05                      	db T_undefined
  1449 000012F8 [F409000000000000]      	dq L_constants + 2548
  1450                                  
  1451                                  free_var_2:	; location of -
  1452 00001300 [0813000000000000]      	dq .undefined_object
  1453                                  .undefined_object:
  1454 00001308 05                      	db T_undefined
  1455 00001309 [AC0A000000000000]      	dq L_constants + 2732
  1456                                  
  1457                                  free_var_3:	; location of /
  1458 00001311 [1913000000000000]      	dq .undefined_object
  1459                                  .undefined_object:
  1460 00001319 05                      	db T_undefined
  1461 0000131A [270B000000000000]      	dq L_constants + 2855
  1462                                  
  1463                                  free_var_4:	; location of <
  1464 00001322 [2A13000000000000]      	dq .undefined_object
  1465                                  .undefined_object:
  1466 0000132A 05                      	db T_undefined
  1467 0000132B [740B000000000000]      	dq L_constants + 2932
  1468                                  
  1469                                  free_var_5:	; location of <=
  1470 00001333 [3B13000000000000]      	dq .undefined_object
  1471                                  .undefined_object:
  1472 0000133B 05                      	db T_undefined
  1473 0000133C [870B000000000000]      	dq L_constants + 2951
  1474                                  
  1475                                  free_var_6:	; location of =
  1476 00001344 [4C13000000000000]      	dq .undefined_object
  1477                                  .undefined_object:
  1478 0000134C 05                      	db T_undefined
  1479 0000134D [C20B000000000000]      	dq L_constants + 3010
  1480                                  
  1481                                  free_var_7:	; location of >
  1482 00001355 [5D13000000000000]      	dq .undefined_object
  1483                                  .undefined_object:
  1484 0000135D 05                      	db T_undefined
  1485 0000135E [9B0B000000000000]      	dq L_constants + 2971
  1486                                  
  1487                                  free_var_8:	; location of >=
  1488 00001366 [6E13000000000000]      	dq .undefined_object
  1489                                  .undefined_object:
  1490 0000136E 05                      	db T_undefined
  1491 0000136F [AE0B000000000000]      	dq L_constants + 2990
  1492                                  
  1493                                  free_var_9:	; location of __bin-add-qq
  1494 00001377 [7F13000000000000]      	dq .undefined_object
  1495                                  .undefined_object:
  1496 0000137F 05                      	db T_undefined
  1497 00001380 [6902000000000000]      	dq L_constants + 617
  1498                                  
  1499                                  free_var_10:	; location of __bin-add-rr
  1500 00001388 [9013000000000000]      	dq .undefined_object
  1501                                  .undefined_object:
  1502 00001390 05                      	db T_undefined
  1503 00001391 [1502000000000000]      	dq L_constants + 533
  1504                                  
  1505                                  free_var_11:	; location of __bin-add-zz
  1506 00001399 [A113000000000000]      	dq .undefined_object
  1507                                  .undefined_object:
  1508 000013A1 05                      	db T_undefined
  1509 000013A2 [BD02000000000000]      	dq L_constants + 701
  1510                                  
  1511                                  free_var_12:	; location of __bin-apply
  1512 000013AA [B213000000000000]      	dq .undefined_object
  1513                                  .undefined_object:
  1514 000013B2 05                      	db T_undefined
  1515 000013B3 [0102000000000000]      	dq L_constants + 513
  1516                                  
  1517                                  free_var_13:	; location of __bin-div-qq
  1518 000013BB [C313000000000000]      	dq .undefined_object
  1519                                  .undefined_object:
  1520 000013C3 05                      	db T_undefined
  1521 000013C4 [A802000000000000]      	dq L_constants + 680
  1522                                  
  1523                                  free_var_14:	; location of __bin-div-rr
  1524 000013CC [D413000000000000]      	dq .undefined_object
  1525                                  .undefined_object:
  1526 000013D4 05                      	db T_undefined
  1527 000013D5 [5402000000000000]      	dq L_constants + 596
  1528                                  
  1529                                  free_var_15:	; location of __bin-div-zz
  1530 000013DD [E513000000000000]      	dq .undefined_object
  1531                                  .undefined_object:
  1532 000013E5 05                      	db T_undefined
  1533 000013E6 [FC02000000000000]      	dq L_constants + 764
  1534                                  
  1535                                  free_var_16:	; location of __bin-equal-qq
  1536 000013EE [F613000000000000]      	dq .undefined_object
  1537                                  .undefined_object:
  1538 000013F6 05                      	db T_undefined
  1539 000013F7 [8703000000000000]      	dq L_constants + 903
  1540                                  
  1541                                  free_var_17:	; location of __bin-equal-rr
  1542 000013FF [0714000000000000]      	dq .undefined_object
  1543                                  .undefined_object:
  1544 00001407 05                      	db T_undefined
  1545 00001408 [7003000000000000]      	dq L_constants + 880
  1546                                  
  1547                                  free_var_18:	; location of __bin-equal-zz
  1548 00001410 [1814000000000000]      	dq .undefined_object
  1549                                  .undefined_object:
  1550 00001418 05                      	db T_undefined
  1551 00001419 [9E03000000000000]      	dq L_constants + 926
  1552                                  
  1553                                  free_var_19:	; location of __bin-less-than-qq
  1554 00001421 [2914000000000000]      	dq .undefined_object
  1555                                  .undefined_object:
  1556 00001429 05                      	db T_undefined
  1557 0000142A [3A03000000000000]      	dq L_constants + 826
  1558                                  
  1559                                  free_var_20:	; location of __bin-less-than-rr
  1560 00001432 [3A14000000000000]      	dq .undefined_object
  1561                                  .undefined_object:
  1562 0000143A 05                      	db T_undefined
  1563 0000143B [1F03000000000000]      	dq L_constants + 799
  1564                                  
  1565                                  free_var_21:	; location of __bin-less-than-zz
  1566 00001443 [4B14000000000000]      	dq .undefined_object
  1567                                  .undefined_object:
  1568 0000144B 05                      	db T_undefined
  1569 0000144C [5503000000000000]      	dq L_constants + 853
  1570                                  
  1571                                  free_var_22:	; location of __bin-mul-qq
  1572 00001454 [5C14000000000000]      	dq .undefined_object
  1573                                  .undefined_object:
  1574 0000145C 05                      	db T_undefined
  1575 0000145D [9302000000000000]      	dq L_constants + 659
  1576                                  
  1577                                  free_var_23:	; location of __bin-mul-rr
  1578 00001465 [6D14000000000000]      	dq .undefined_object
  1579                                  .undefined_object:
  1580 0000146D 05                      	db T_undefined
  1581 0000146E [3F02000000000000]      	dq L_constants + 575
  1582                                  
  1583                                  free_var_24:	; location of __bin-mul-zz
  1584 00001476 [7E14000000000000]      	dq .undefined_object
  1585                                  .undefined_object:
  1586 0000147E 05                      	db T_undefined
  1587 0000147F [E702000000000000]      	dq L_constants + 743
  1588                                  
  1589                                  free_var_25:	; location of __bin-sub-qq
  1590 00001487 [8F14000000000000]      	dq .undefined_object
  1591                                  .undefined_object:
  1592 0000148F 05                      	db T_undefined
  1593 00001490 [7E02000000000000]      	dq L_constants + 638
  1594                                  
  1595                                  free_var_26:	; location of __bin-sub-rr
  1596 00001498 [A014000000000000]      	dq .undefined_object
  1597                                  .undefined_object:
  1598 000014A0 05                      	db T_undefined
  1599 000014A1 [2A02000000000000]      	dq L_constants + 554
  1600                                  
  1601                                  free_var_27:	; location of __bin-sub-zz
  1602 000014A9 [B114000000000000]      	dq .undefined_object
  1603                                  .undefined_object:
  1604 000014B1 05                      	db T_undefined
  1605 000014B2 [D202000000000000]      	dq L_constants + 722
  1606                                  
  1607                                  free_var_28:	; location of __bin_integer_to_fraction
  1608 000014BA [C214000000000000]      	dq .undefined_object
  1609                                  .undefined_object:
  1610 000014C2 05                      	db T_undefined
  1611 000014C3 [3D0A000000000000]      	dq L_constants + 2621
  1612                                  
  1613                                  free_var_29:	; location of __integer-to-fraction
  1614 000014CB [D314000000000000]      	dq .undefined_object
  1615                                  .undefined_object:
  1616 000014D3 05                      	db T_undefined
  1617 000014D4 [A204000000000000]      	dq L_constants + 1186
  1618                                  
  1619                                  free_var_30:	; location of abs
  1620 000014DC [E414000000000000]      	dq .undefined_object
  1621                                  .undefined_object:
  1622 000014E4 05                      	db T_undefined
  1623 000014E5 [DF10000000000000]      	dq L_constants + 4319
  1624                                  
  1625                                  free_var_31:	; location of andmap
  1626 000014ED [F514000000000000]      	dq .undefined_object
  1627                                  .undefined_object:
  1628 000014F5 05                      	db T_undefined
  1629 000014F6 [7409000000000000]      	dq L_constants + 2420
  1630                                  
  1631                                  free_var_32:	; location of append
  1632 000014FE [0615000000000000]      	dq .undefined_object
  1633                                  .undefined_object:
  1634 00001506 05                      	db T_undefined
  1635 00001507 [C009000000000000]      	dq L_constants + 2496
  1636                                  
  1637                                  free_var_33:	; location of apply
  1638 0000150F [1715000000000000]      	dq .undefined_object
  1639                                  .undefined_object:
  1640 00001517 05                      	db T_undefined
  1641 00001518 [2809000000000000]      	dq L_constants + 2344
  1642                                  
  1643                                  free_var_34:	; location of ash
  1644 00001520 [2815000000000000]      	dq .undefined_object
  1645                                  .undefined_object:
  1646 00001528 05                      	db T_undefined
  1647 00001529 [FB04000000000000]      	dq L_constants + 1275
  1648                                  
  1649                                  free_var_35:	; location of assoc
  1650 00001531 [3915000000000000]      	dq .undefined_object
  1651                                  .undefined_object:
  1652 00001539 05                      	db T_undefined
  1653 0000153A [3911000000000000]      	dq L_constants + 4409
  1654                                  
  1655                                  free_var_36:	; location of boolean-false?
  1656 00001542 [4A15000000000000]      	dq .undefined_object
  1657                                  .undefined_object:
  1658 0000154A 05                      	db T_undefined
  1659 0000154B [6D05000000000000]      	dq L_constants + 1389
  1660                                  
  1661                                  free_var_37:	; location of boolean-true?
  1662 00001553 [5B15000000000000]      	dq .undefined_object
  1663                                  .undefined_object:
  1664 0000155B 05                      	db T_undefined
  1665 0000155C [8405000000000000]      	dq L_constants + 1412
  1666                                  
  1667                                  free_var_38:	; location of boolean?
  1668 00001564 [6C15000000000000]      	dq .undefined_object
  1669                                  .undefined_object:
  1670 0000156C 05                      	db T_undefined
  1671 0000156D [AA00000000000000]      	dq L_constants + 170
  1672                                  
  1673                                  free_var_39:	; location of break
  1674 00001575 [7D15000000000000]      	dq .undefined_object
  1675                                  .undefined_object:
  1676 0000157D 05                      	db T_undefined
  1677 0000157E [5F05000000000000]      	dq L_constants + 1375
  1678                                  
  1679                                  free_var_40:	; location of caaaar
  1680 00001586 [8E15000000000000]      	dq .undefined_object
  1681                                  .undefined_object:
  1682 0000158E 05                      	db T_undefined
  1683 0000158F [FF06000000000000]      	dq L_constants + 1791
  1684                                  
  1685                                  free_var_41:	; location of caaadr
  1686 00001597 [9F15000000000000]      	dq .undefined_object
  1687                                  .undefined_object:
  1688 0000159F 05                      	db T_undefined
  1689 000015A0 [1707000000000000]      	dq L_constants + 1815
  1690                                  
  1691                                  free_var_42:	; location of caaar
  1692 000015A8 [B015000000000000]      	dq .undefined_object
  1693                                  .undefined_object:
  1694 000015B0 05                      	db T_undefined
  1695 000015B1 [4706000000000000]      	dq L_constants + 1607
  1696                                  
  1697                                  free_var_43:	; location of caadar
  1698 000015B9 [C115000000000000]      	dq .undefined_object
  1699                                  .undefined_object:
  1700 000015C1 05                      	db T_undefined
  1701 000015C2 [2F07000000000000]      	dq L_constants + 1839
  1702                                  
  1703                                  free_var_44:	; location of caaddr
  1704 000015CA [D215000000000000]      	dq .undefined_object
  1705                                  .undefined_object:
  1706 000015D2 05                      	db T_undefined
  1707 000015D3 [4707000000000000]      	dq L_constants + 1863
  1708                                  
  1709                                  free_var_45:	; location of caadr
  1710 000015DB [E315000000000000]      	dq .undefined_object
  1711                                  .undefined_object:
  1712 000015E3 05                      	db T_undefined
  1713 000015E4 [5E06000000000000]      	dq L_constants + 1630
  1714                                  
  1715                                  free_var_46:	; location of caar
  1716 000015EC [F415000000000000]      	dq .undefined_object
  1717                                  .undefined_object:
  1718 000015F4 05                      	db T_undefined
  1719 000015F5 [DD05000000000000]      	dq L_constants + 1501
  1720                                  
  1721                                  free_var_47:	; location of cadaar
  1722 000015FD [0516000000000000]      	dq .undefined_object
  1723                                  .undefined_object:
  1724 00001605 05                      	db T_undefined
  1725 00001606 [5F07000000000000]      	dq L_constants + 1887
  1726                                  
  1727                                  free_var_48:	; location of cadadr
  1728 0000160E [1616000000000000]      	dq .undefined_object
  1729                                  .undefined_object:
  1730 00001616 05                      	db T_undefined
  1731 00001617 [7707000000000000]      	dq L_constants + 1911
  1732                                  
  1733                                  free_var_49:	; location of cadar
  1734 0000161F [2716000000000000]      	dq .undefined_object
  1735                                  .undefined_object:
  1736 00001627 05                      	db T_undefined
  1737 00001628 [7506000000000000]      	dq L_constants + 1653
  1738                                  
  1739                                  free_var_50:	; location of caddar
  1740 00001630 [3816000000000000]      	dq .undefined_object
  1741                                  .undefined_object:
  1742 00001638 05                      	db T_undefined
  1743 00001639 [8F07000000000000]      	dq L_constants + 1935
  1744                                  
  1745                                  free_var_51:	; location of cadddr
  1746 00001641 [4916000000000000]      	dq .undefined_object
  1747                                  .undefined_object:
  1748 00001649 05                      	db T_undefined
  1749 0000164A [A707000000000000]      	dq L_constants + 1959
  1750                                  
  1751                                  free_var_52:	; location of caddr
  1752 00001652 [5A16000000000000]      	dq .undefined_object
  1753                                  .undefined_object:
  1754 0000165A 05                      	db T_undefined
  1755 0000165B [8C06000000000000]      	dq L_constants + 1676
  1756                                  
  1757                                  free_var_53:	; location of cadr
  1758 00001663 [6B16000000000000]      	dq .undefined_object
  1759                                  .undefined_object:
  1760 0000166B 05                      	db T_undefined
  1761 0000166C [FC05000000000000]      	dq L_constants + 1532
  1762                                  
  1763                                  free_var_54:	; location of car
  1764 00001674 [7C16000000000000]      	dq .undefined_object
  1765                                  .undefined_object:
  1766 0000167C 05                      	db T_undefined
  1767 0000167D [1501000000000000]      	dq L_constants + 277
  1768                                  
  1769                                  free_var_55:	; location of cdaaar
  1770 00001685 [8D16000000000000]      	dq .undefined_object
  1771                                  .undefined_object:
  1772 0000168D 05                      	db T_undefined
  1773 0000168E [BF07000000000000]      	dq L_constants + 1983
  1774                                  
  1775                                  free_var_56:	; location of cdaadr
  1776 00001696 [9E16000000000000]      	dq .undefined_object
  1777                                  .undefined_object:
  1778 0000169E 05                      	db T_undefined
  1779 0000169F [D707000000000000]      	dq L_constants + 2007
  1780                                  
  1781                                  free_var_57:	; location of cdaar
  1782 000016A7 [AF16000000000000]      	dq .undefined_object
  1783                                  .undefined_object:
  1784 000016AF 05                      	db T_undefined
  1785 000016B0 [A306000000000000]      	dq L_constants + 1699
  1786                                  
  1787                                  free_var_58:	; location of cdadar
  1788 000016B8 [C016000000000000]      	dq .undefined_object
  1789                                  .undefined_object:
  1790 000016C0 05                      	db T_undefined
  1791 000016C1 [EF07000000000000]      	dq L_constants + 2031
  1792                                  
  1793                                  free_var_59:	; location of cdaddr
  1794 000016C9 [D116000000000000]      	dq .undefined_object
  1795                                  .undefined_object:
  1796 000016D1 05                      	db T_undefined
  1797 000016D2 [0708000000000000]      	dq L_constants + 2055
  1798                                  
  1799                                  free_var_60:	; location of cdadr
  1800 000016DA [E216000000000000]      	dq .undefined_object
  1801                                  .undefined_object:
  1802 000016E2 05                      	db T_undefined
  1803 000016E3 [BA06000000000000]      	dq L_constants + 1722
  1804                                  
  1805                                  free_var_61:	; location of cdar
  1806 000016EB [F316000000000000]      	dq .undefined_object
  1807                                  .undefined_object:
  1808 000016F3 05                      	db T_undefined
  1809 000016F4 [1B06000000000000]      	dq L_constants + 1563
  1810                                  
  1811                                  free_var_62:	; location of cddaar
  1812 000016FC [0417000000000000]      	dq .undefined_object
  1813                                  .undefined_object:
  1814 00001704 05                      	db T_undefined
  1815 00001705 [1F08000000000000]      	dq L_constants + 2079
  1816                                  
  1817                                  free_var_63:	; location of cddadr
  1818 0000170D [1517000000000000]      	dq .undefined_object
  1819                                  .undefined_object:
  1820 00001715 05                      	db T_undefined
  1821 00001716 [3708000000000000]      	dq L_constants + 2103
  1822                                  
  1823                                  free_var_64:	; location of cddar
  1824 0000171E [2617000000000000]      	dq .undefined_object
  1825                                  .undefined_object:
  1826 00001726 05                      	db T_undefined
  1827 00001727 [D106000000000000]      	dq L_constants + 1745
  1828                                  
  1829                                  free_var_65:	; location of cdddar
  1830 0000172F [3717000000000000]      	dq .undefined_object
  1831                                  .undefined_object:
  1832 00001737 05                      	db T_undefined
  1833 00001738 [4F08000000000000]      	dq L_constants + 2127
  1834                                  
  1835                                  free_var_66:	; location of cddddr
  1836 00001740 [4817000000000000]      	dq .undefined_object
  1837                                  .undefined_object:
  1838 00001748 05                      	db T_undefined
  1839 00001749 [6708000000000000]      	dq L_constants + 2151
  1840                                  
  1841                                  free_var_67:	; location of cdddr
  1842 00001751 [5917000000000000]      	dq .undefined_object
  1843                                  .undefined_object:
  1844 00001759 05                      	db T_undefined
  1845 0000175A [E806000000000000]      	dq L_constants + 1768
  1846                                  
  1847                                  free_var_68:	; location of cddr
  1848 00001762 [6A17000000000000]      	dq .undefined_object
  1849                                  .undefined_object:
  1850 0000176A 05                      	db T_undefined
  1851 0000176B [3106000000000000]      	dq L_constants + 1585
  1852                                  
  1853                                  free_var_69:	; location of cdr
  1854 00001773 [7B17000000000000]      	dq .undefined_object
  1855                                  .undefined_object:
  1856 0000177B 05                      	db T_undefined
  1857 0000177C [2101000000000000]      	dq L_constants + 289
  1858                                  
  1859                                  free_var_70:	; location of char->integer
  1860 00001784 [8C17000000000000]      	dq .undefined_object
  1861                                  .undefined_object:
  1862 0000178C 05                      	db T_undefined
  1863 0000178D [A901000000000000]      	dq L_constants + 425
  1864                                  
  1865                                  free_var_71:	; location of char-ci<=?
  1866 00001795 [9D17000000000000]      	dq .undefined_object
  1867                                  .undefined_object:
  1868 0000179D 05                      	db T_undefined
  1869 0000179E [440D000000000000]      	dq L_constants + 3396
  1870                                  
  1871                                  free_var_72:	; location of char-ci<?
  1872 000017A6 [AE17000000000000]      	dq .undefined_object
  1873                                  .undefined_object:
  1874 000017AE 05                      	db T_undefined
  1875 000017AF [290D000000000000]      	dq L_constants + 3369
  1876                                  
  1877                                  free_var_73:	; location of char-ci=?
  1878 000017B7 [BF17000000000000]      	dq .undefined_object
  1879                                  .undefined_object:
  1880 000017BF 05                      	db T_undefined
  1881 000017C0 [600D000000000000]      	dq L_constants + 3424
  1882                                  
  1883                                  free_var_74:	; location of char-ci>=?
  1884 000017C8 [D017000000000000]      	dq .undefined_object
  1885                                  .undefined_object:
  1886 000017D0 05                      	db T_undefined
  1887 000017D1 [960D000000000000]      	dq L_constants + 3478
  1888                                  
  1889                                  free_var_75:	; location of char-ci>?
  1890 000017D9 [E117000000000000]      	dq .undefined_object
  1891                                  .undefined_object:
  1892 000017E1 05                      	db T_undefined
  1893 000017E2 [7B0D000000000000]      	dq L_constants + 3451
  1894                                  
  1895                                  free_var_76:	; location of char-downcase
  1896 000017EA [F217000000000000]      	dq .undefined_object
  1897                                  .undefined_object:
  1898 000017F2 05                      	db T_undefined
  1899 000017F3 [DC0C000000000000]      	dq L_constants + 3292
  1900                                  
  1901                                  free_var_77:	; location of char-upcase
  1902 000017FB [0318000000000000]      	dq .undefined_object
  1903                                  .undefined_object:
  1904 00001803 05                      	db T_undefined
  1905 00001804 [FB0C000000000000]      	dq L_constants + 3323
  1906                                  
  1907                                  free_var_78:	; location of char<=?
  1908 0000180C [1418000000000000]      	dq .undefined_object
  1909                                  .undefined_object:
  1910 00001814 05                      	db T_undefined
  1911 00001815 [710C000000000000]      	dq L_constants + 3185
  1912                                  
  1913                                  free_var_79:	; location of char<?
  1914 0000181D [2518000000000000]      	dq .undefined_object
  1915                                  .undefined_object:
  1916 00001825 05                      	db T_undefined
  1917 00001826 [590C000000000000]      	dq L_constants + 3161
  1918                                  
  1919                                  free_var_80:	; location of char=?
  1920 0000182E [3618000000000000]      	dq .undefined_object
  1921                                  .undefined_object:
  1922 00001836 05                      	db T_undefined
  1923 00001837 [8A0C000000000000]      	dq L_constants + 3210
  1924                                  
  1925                                  free_var_81:	; location of char>=?
  1926 0000183F [4718000000000000]      	dq .undefined_object
  1927                                  .undefined_object:
  1928 00001847 05                      	db T_undefined
  1929 00001848 [BA0C000000000000]      	dq L_constants + 3258
  1930                                  
  1931                                  free_var_82:	; location of char>?
  1932 00001850 [5818000000000000]      	dq .undefined_object
  1933                                  .undefined_object:
  1934 00001858 05                      	db T_undefined
  1935 00001859 [A20C000000000000]      	dq L_constants + 3234
  1936                                  
  1937                                  free_var_83:	; location of char?
  1938 00001861 [6918000000000000]      	dq .undefined_object
  1939                                  .undefined_object:
  1940 00001869 05                      	db T_undefined
  1941 0000186A [3000000000000000]      	dq L_constants + 48
  1942                                  
  1943                                  free_var_84:	; location of collection?
  1944 00001872 [7A18000000000000]      	dq .undefined_object
  1945                                  .undefined_object:
  1946 0000187A 05                      	db T_undefined
  1947 0000187B [CB00000000000000]      	dq L_constants + 203
  1948                                  
  1949                                  free_var_85:	; location of cons
  1950 00001883 [8B18000000000000]      	dq .undefined_object
  1951                                  .undefined_object:
  1952 0000188B 05                      	db T_undefined
  1953 0000188C [DF00000000000000]      	dq L_constants + 223
  1954                                  
  1955                                  free_var_86:	; location of denominator
  1956 00001894 [9C18000000000000]      	dq .undefined_object
  1957                                  .undefined_object:
  1958 0000189C 05                      	db T_undefined
  1959 0000189D [8204000000000000]      	dq L_constants + 1154
  1960                                  
  1961                                  free_var_87:	; location of display-sexpr
  1962 000018A5 [AD18000000000000]      	dq .undefined_object
  1963                                  .undefined_object:
  1964 000018AD 05                      	db T_undefined
  1965 000018AE [EC00000000000000]      	dq L_constants + 236
  1966                                  
  1967                                  free_var_88:	; location of eq?
  1968 000018B6 [BE18000000000000]      	dq .undefined_object
  1969                                  .undefined_object:
  1970 000018BE 05                      	db T_undefined
  1971 000018BF [9604000000000000]      	dq L_constants + 1174
  1972                                  
  1973                                  free_var_89:	; location of equal?
  1974 000018C7 [CF18000000000000]      	dq .undefined_object
  1975                                  .undefined_object:
  1976 000018CF 05                      	db T_undefined
  1977 000018D0 [F410000000000000]      	dq L_constants + 4340
  1978                                  
  1979                                  free_var_90:	; location of error
  1980 000018D8 [E018000000000000]      	dq .undefined_object
  1981                                  .undefined_object:
  1982 000018E0 05                      	db T_undefined
  1983 000018E1 [1103000000000000]      	dq L_constants + 785
  1984                                  
  1985                                  free_var_91:	; location of even?
  1986 000018E9 [F118000000000000]      	dq .undefined_object
  1987                                  .undefined_object:
  1988 000018F1 05                      	db T_undefined
  1989 000018F2 [A910000000000000]      	dq L_constants + 4265
  1990                                  
  1991                                  free_var_92:	; location of exit
  1992 000018FA [0219000000000000]      	dq .undefined_object
  1993                                  .undefined_object:
  1994 00001902 05                      	db T_undefined
  1995 00001903 [6F01000000000000]      	dq L_constants + 367
  1996                                  
  1997                                  free_var_93:	; location of fact
  1998 0000190B [1319000000000000]      	dq .undefined_object
  1999                                  .undefined_object:
  2000 00001913 05                      	db T_undefined
  2001 00001914 [550B000000000000]      	dq L_constants + 2901
  2002                                  
  2003                                  free_var_94:	; location of fold-left
  2004 0000191C [2419000000000000]      	dq .undefined_object
  2005                                  .undefined_object:
  2006 00001924 05                      	db T_undefined
  2007 00001925 [A509000000000000]      	dq L_constants + 2469
  2008                                  
  2009                                  free_var_95:	; location of fold-right
  2010 0000192D [3519000000000000]      	dq .undefined_object
  2011                                  .undefined_object:
  2012 00001935 05                      	db T_undefined
  2013 00001936 [D809000000000000]      	dq L_constants + 2520
  2014                                  
  2015                                  free_var_96:	; location of fraction->real
  2016 0000193E [4619000000000000]      	dq .undefined_object
  2017                                  .undefined_object:
  2018 00001946 05                      	db T_undefined
  2019 00001947 [9201000000000000]      	dq L_constants + 402
  2020                                  
  2021                                  free_var_97:	; location of fraction?
  2022 0000194F [5719000000000000]      	dq .undefined_object
  2023                                  .undefined_object:
  2024 00001957 05                      	db T_undefined
  2025 00001958 [9800000000000000]      	dq L_constants + 152
  2026                                  
  2027                                  free_var_98:	; location of frame
  2028 00001960 [6819000000000000]      	dq .undefined_object
  2029                                  .undefined_object:
  2030 00001968 05                      	db T_undefined
  2031 00001969 [5105000000000000]      	dq L_constants + 1361
  2032                                  
  2033                                  free_var_99:	; location of gensym
  2034 00001971 [7919000000000000]      	dq .undefined_object
  2035                                  .undefined_object:
  2036 00001979 05                      	db T_undefined
  2037 0000197A [4205000000000000]      	dq L_constants + 1346
  2038                                  
  2039                                  free_var_100:	; location of gensym?
  2040 00001982 [8A19000000000000]      	dq .undefined_object
  2041                                  .undefined_object:
  2042 0000198A 05                      	db T_undefined
  2043 0000198B [3205000000000000]      	dq L_constants + 1330
  2044                                  
  2045                                  free_var_101:	; location of integer->char
  2046 00001993 [9B19000000000000]      	dq .undefined_object
  2047                                  .undefined_object:
  2048 0000199B 05                      	db T_undefined
  2049 0000199C [BF01000000000000]      	dq L_constants + 447
  2050                                  
  2051                                  free_var_102:	; location of integer->real
  2052 000019A4 [AC19000000000000]      	dq .undefined_object
  2053                                  .undefined_object:
  2054 000019AC 05                      	db T_undefined
  2055 000019AD [7C01000000000000]      	dq L_constants + 380
  2056                                  
  2057                                  free_var_103:	; location of integer?
  2058 000019B5 [BD19000000000000]      	dq .undefined_object
  2059                                  .undefined_object:
  2060 000019BD 05                      	db T_undefined
  2061 000019BE [F001000000000000]      	dq L_constants + 496
  2062                                  
  2063                                  free_var_104:	; location of interned-symbol?
  2064 000019C6 [CE19000000000000]      	dq .undefined_object
  2065                                  .undefined_object:
  2066 000019CE 05                      	db T_undefined
  2067 000019CF [4E00000000000000]      	dq L_constants + 78
  2068                                  
  2069                                  free_var_105:	; location of length
  2070 000019D7 [DF19000000000000]      	dq .undefined_object
  2071                                  .undefined_object:
  2072 000019DF 05                      	db T_undefined
  2073 000019E0 [AD05000000000000]      	dq L_constants + 1453
  2074                                  
  2075                                  free_var_106:	; location of list
  2076 000019E8 [F019000000000000]      	dq .undefined_object
  2077                                  .undefined_object:
  2078 000019F0 05                      	db T_undefined
  2079 000019F1 [A808000000000000]      	dq L_constants + 2216
  2080                                  
  2081                                  free_var_107:	; location of list*
  2082 000019F9 [011A000000000000]      	dq .undefined_object
  2083                                  .undefined_object:
  2084 00001A01 05                      	db T_undefined
  2085 00001A02 [F708000000000000]      	dq L_constants + 2295
  2086                                  
  2087                                  free_var_108:	; location of list->string
  2088 00001A0A [121A000000000000]      	dq .undefined_object
  2089                                  .undefined_object:
  2090 00001A12 05                      	db T_undefined
  2091 00001A13 [F20D000000000000]      	dq L_constants + 3570
  2092                                  
  2093                                  free_var_109:	; location of list->vector
  2094 00001A1B [231A000000000000]      	dq .undefined_object
  2095                                  .undefined_object:
  2096 00001A23 05                      	db T_undefined
  2097 00001A24 [D10F000000000000]      	dq L_constants + 4049
  2098                                  
  2099                                  free_var_110:	; location of list?
  2100 00001A2C [341A000000000000]      	dq .undefined_object
  2101                                  .undefined_object:
  2102 00001A34 05                      	db T_undefined
  2103 00001A35 [7F08000000000000]      	dq L_constants + 2175
  2104                                  
  2105                                  free_var_111:	; location of logand
  2106 00001A3D [451A000000000000]      	dq .undefined_object
  2107                                  .undefined_object:
  2108 00001A45 05                      	db T_undefined
  2109 00001A46 [C004000000000000]      	dq L_constants + 1216
  2110                                  
  2111                                  free_var_112:	; location of logarithm
  2112 00001A4E [561A000000000000]      	dq .undefined_object
  2113                                  .undefined_object:
  2114 00001A56 05                      	db T_undefined
  2115 00001A57 [7712000000000000]      	dq L_constants + 4727
  2116                                  
  2117                                  free_var_113:	; location of lognot
  2118 00001A5F [671A000000000000]      	dq .undefined_object
  2119                                  .undefined_object:
  2120 00001A67 05                      	db T_undefined
  2121 00001A68 [EC04000000000000]      	dq L_constants + 1260
  2122                                  
  2123                                  free_var_114:	; location of logor
  2124 00001A70 [781A000000000000]      	dq .undefined_object
  2125                                  .undefined_object:
  2126 00001A78 05                      	db T_undefined
  2127 00001A79 [CF04000000000000]      	dq L_constants + 1231
  2128                                  
  2129                                  free_var_115:	; location of logxor
  2130 00001A81 [891A000000000000]      	dq .undefined_object
  2131                                  .undefined_object:
  2132 00001A89 05                      	db T_undefined
  2133 00001A8A [DD04000000000000]      	dq L_constants + 1245
  2134                                  
  2135                                  free_var_116:	; location of make-list
  2136 00001A92 [9A1A000000000000]      	dq .undefined_object
  2137                                  .undefined_object:
  2138 00001A9A 05                      	db T_undefined
  2139 00001A9B [BC05000000000000]      	dq L_constants + 1468
  2140                                  
  2141                                  free_var_117:	; location of make-list-thunk
  2142 00001AA3 [AB1A000000000000]      	dq .undefined_object
  2143                                  .undefined_object:
  2144 00001AAB 05                      	db T_undefined
  2145 00001AAC [1012000000000000]      	dq L_constants + 4624
  2146                                  
  2147                                  free_var_118:	; location of make-string
  2148 00001AB4 [BC1A000000000000]      	dq .undefined_object
  2149                                  .undefined_object:
  2150 00001ABC 05                      	db T_undefined
  2151 00001ABD [5C04000000000000]      	dq L_constants + 1116
  2152                                  
  2153                                  free_var_119:	; location of make-string-thunk
  2154 00001AC5 [CD1A000000000000]      	dq .undefined_object
  2155                                  .undefined_object:
  2156 00001ACD 05                      	db T_undefined
  2157 00001ACE [3112000000000000]      	dq L_constants + 4657
  2158                                  
  2159                                  free_var_120:	; location of make-vector
  2160 00001AD6 [DE1A000000000000]      	dq .undefined_object
  2161                                  .undefined_object:
  2162 00001ADE 05                      	db T_undefined
  2163 00001ADF [4804000000000000]      	dq L_constants + 1096
  2164                                  
  2165                                  free_var_121:	; location of make-vector-thunk
  2166 00001AE7 [EF1A000000000000]      	dq .undefined_object
  2167                                  .undefined_object:
  2168 00001AEF 05                      	db T_undefined
  2169 00001AF0 [5412000000000000]      	dq L_constants + 4692
  2170                                  
  2171                                  free_var_122:	; location of map
  2172 00001AF8 [001B000000000000]      	dq .undefined_object
  2173                                  .undefined_object:
  2174 00001B00 05                      	db T_undefined
  2175 00001B01 [5F09000000000000]      	dq L_constants + 2399
  2176                                  
  2177                                  free_var_123:	; location of negative?
  2178 00001B09 [111B000000000000]      	dq .undefined_object
  2179                                  .undefined_object:
  2180 00001B11 05                      	db T_undefined
  2181 00001B12 [8E10000000000000]      	dq L_constants + 4238
  2182                                  
  2183                                  free_var_124:	; location of newline
  2184 00001B1A [221B000000000000]      	dq .undefined_object
  2185                                  .undefined_object:
  2186 00001B22 05                      	db T_undefined
  2187 00001B23 [9B12000000000000]      	dq L_constants + 4763
  2188                                  
  2189                                  free_var_125:	; location of not
  2190 00001B2B [331B000000000000]      	dq .undefined_object
  2191                                  .undefined_object:
  2192 00001B33 05                      	db T_undefined
  2193 00001B34 [B508000000000000]      	dq L_constants + 2229
  2194                                  
  2195                                  free_var_126:	; location of null?
  2196 00001B3C [441B000000000000]      	dq .undefined_object
  2197                                  .undefined_object:
  2198 00001B44 05                      	db T_undefined
  2199 00001B45 [0600000000000000]      	dq L_constants + 6
  2200                                  
  2201                                  free_var_127:	; location of number?
  2202 00001B4D [551B000000000000]      	dq .undefined_object
  2203                                  .undefined_object:
  2204 00001B55 05                      	db T_undefined
  2205 00001B56 [BB00000000000000]      	dq L_constants + 187
  2206                                  
  2207                                  free_var_128:	; location of numerator
  2208 00001B5E [661B000000000000]      	dq .undefined_object
  2209                                  .undefined_object:
  2210 00001B66 05                      	db T_undefined
  2211 00001B67 [7004000000000000]      	dq L_constants + 1136
  2212                                  
  2213                                  free_var_129:	; location of odd?
  2214 00001B6F [771B000000000000]      	dq .undefined_object
  2215                                  .undefined_object:
  2216 00001B77 05                      	db T_undefined
  2217 00001B78 [C910000000000000]      	dq L_constants + 4297
  2218                                  
  2219                                  free_var_130:	; location of ormap
  2220 00001B80 [881B000000000000]      	dq .undefined_object
  2221                                  .undefined_object:
  2222 00001B88 05                      	db T_undefined
  2223 00001B89 [4809000000000000]      	dq L_constants + 2376
  2224                                  
  2225                                  free_var_131:	; location of pair?
  2226 00001B91 [991B000000000000]      	dq .undefined_object
  2227                                  .undefined_object:
  2228 00001B99 05                      	db T_undefined
  2229 00001B9A [1400000000000000]      	dq L_constants + 20
  2230                                  
  2231                                  free_var_132:	; location of positive?
  2232 00001BA2 [AA1B000000000000]      	dq .undefined_object
  2233                                  .undefined_object:
  2234 00001BAA 05                      	db T_undefined
  2235 00001BAB [7310000000000000]      	dq L_constants + 4211
  2236                                  
  2237                                  free_var_133:	; location of primitive?
  2238 00001BB3 [BB1B000000000000]      	dq .undefined_object
  2239                                  .undefined_object:
  2240 00001BBB 05                      	db T_undefined
  2241 00001BBC [9A05000000000000]      	dq L_constants + 1434
  2242                                  
  2243                                  free_var_134:	; location of procedure?
  2244 00001BC4 [CC1B000000000000]      	dq .undefined_object
  2245                                  .undefined_object:
  2246 00001BCC 05                      	db T_undefined
  2247 00001BCD [7700000000000000]      	dq L_constants + 119
  2248                                  
  2249                                  free_var_135:	; location of quotient
  2250 00001BD5 [DD1B000000000000]      	dq .undefined_object
  2251                                  .undefined_object:
  2252 00001BDD 05                      	db T_undefined
  2253 00001BDE [B503000000000000]      	dq L_constants + 949
  2254                                  
  2255                                  free_var_136:	; location of random
  2256 00001BE6 [EE1B000000000000]      	dq .undefined_object
  2257                                  .undefined_object:
  2258 00001BEE 05                      	db T_undefined
  2259 00001BEF [4910000000000000]      	dq L_constants + 4169
  2260                                  
  2261                                  free_var_137:	; location of rational?
  2262 00001BF7 [FF1B000000000000]      	dq .undefined_object
  2263                                  .undefined_object:
  2264 00001BFF 05                      	db T_undefined
  2265 00001C00 [CA08000000000000]      	dq L_constants + 2250
  2266                                  
  2267                                  free_var_138:	; location of real
  2268 00001C08 [101C000000000000]      	dq .undefined_object
  2269                                  .undefined_object:
  2270 00001C10 05                      	db T_undefined
  2271 00001C11 [C80A000000000000]      	dq L_constants + 2760
  2272                                  
  2273                                  free_var_139:	; location of real->integer
  2274 00001C19 [211C000000000000]      	dq .undefined_object
  2275                                  .undefined_object:
  2276 00001C21 05                      	db T_undefined
  2277 00001C22 [5901000000000000]      	dq L_constants + 345
  2278                                  
  2279                                  free_var_140:	; location of real?
  2280 00001C2A [321C000000000000]      	dq .undefined_object
  2281                                  .undefined_object:
  2282 00001C32 05                      	db T_undefined
  2283 00001C33 [8A00000000000000]      	dq L_constants + 138
  2284                                  
  2285                                  free_var_141:	; location of remainder
  2286 00001C3B [431C000000000000]      	dq .undefined_object
  2287                                  .undefined_object:
  2288 00001C43 05                      	db T_undefined
  2289 00001C44 [C603000000000000]      	dq L_constants + 966
  2290                                  
  2291                                  free_var_142:	; location of return
  2292 00001C4C [541C000000000000]      	dq .undefined_object
  2293                                  .undefined_object:
  2294 00001C54 05                      	db T_undefined
  2295 00001C55 [CE05000000000000]      	dq L_constants + 1486
  2296                                  
  2297                                  free_var_143:	; location of reverse
  2298 00001C5D [651C000000000000]      	dq .undefined_object
  2299                                  .undefined_object:
  2300 00001C65 05                      	db T_undefined
  2301 00001C66 [8C09000000000000]      	dq L_constants + 2444
  2302                                  
  2303                                  free_var_144:	; location of set-car!
  2304 00001C6E [761C000000000000]      	dq .undefined_object
  2305                                  .undefined_object:
  2306 00001C76 05                      	db T_undefined
  2307 00001C77 [D803000000000000]      	dq L_constants + 984
  2308                                  
  2309                                  free_var_145:	; location of set-cdr!
  2310 00001C7F [871C000000000000]      	dq .undefined_object
  2311                                  .undefined_object:
  2312 00001C87 05                      	db T_undefined
  2313 00001C88 [E903000000000000]      	dq L_constants + 1001
  2314                                  
  2315                                  free_var_146:	; location of string->list
  2316 00001C90 [981C000000000000]      	dq .undefined_object
  2317                                  .undefined_object:
  2318 00001C98 05                      	db T_undefined
  2319 00001C99 [100E000000000000]      	dq L_constants + 3600
  2320                                  
  2321                                  free_var_147:	; location of string-append
  2322 00001CA1 [A91C000000000000]      	dq .undefined_object
  2323                                  .undefined_object:
  2324 00001CA9 05                      	db T_undefined
  2325 00001CAA [5011000000000000]      	dq L_constants + 4432
  2326                                  
  2327                                  free_var_148:	; location of string-ci<=?
  2328 00001CB2 [BA1C000000000000]      	dq .undefined_object
  2329                                  .undefined_object:
  2330 00001CBA 05                      	db T_undefined
  2331 00001CBB [CF0E000000000000]      	dq L_constants + 3791
  2332                                  
  2333                                  free_var_149:	; location of string-ci<?
  2334 00001CC3 [CB1C000000000000]      	dq .undefined_object
  2335                                  .undefined_object:
  2336 00001CCB 05                      	db T_undefined
  2337 00001CCC [B20E000000000000]      	dq L_constants + 3762
  2338                                  
  2339                                  free_var_150:	; location of string-ci=?
  2340 00001CD4 [DC1C000000000000]      	dq .undefined_object
  2341                                  .undefined_object:
  2342 00001CDC 05                      	db T_undefined
  2343 00001CDD [ED0E000000000000]      	dq L_constants + 3821
  2344                                  
  2345                                  free_var_151:	; location of string-ci>=?
  2346 00001CE5 [ED1C000000000000]      	dq .undefined_object
  2347                                  .undefined_object:
  2348 00001CED 05                      	db T_undefined
  2349 00001CEE [0A0F000000000000]      	dq L_constants + 3850
  2350                                  
  2351                                  free_var_152:	; location of string-ci>?
  2352 00001CF6 [FE1C000000000000]      	dq .undefined_object
  2353                                  .undefined_object:
  2354 00001CFE 05                      	db T_undefined
  2355 00001CFF [280F000000000000]      	dq L_constants + 3880
  2356                                  
  2357                                  free_var_153:	; location of string-downcase
  2358 00001D07 [0F1D000000000000]      	dq .undefined_object
  2359                                  .undefined_object:
  2360 00001D0F 05                      	db T_undefined
  2361 00001D10 [B20D000000000000]      	dq L_constants + 3506
  2362                                  
  2363                                  free_var_154:	; location of string-length
  2364 00001D18 [201D000000000000]      	dq .undefined_object
  2365                                  .undefined_object:
  2366 00001D20 05                      	db T_undefined
  2367 00001D21 [2D01000000000000]      	dq L_constants + 301
  2368                                  
  2369                                  free_var_155:	; location of string-ref
  2370 00001D29 [311D000000000000]      	dq .undefined_object
  2371                                  .undefined_object:
  2372 00001D31 05                      	db T_undefined
  2373 00001D32 [FA03000000000000]      	dq L_constants + 1018
  2374                                  
  2375                                  free_var_156:	; location of string-reverse
  2376 00001D3A [421D000000000000]      	dq .undefined_object
  2377                                  .undefined_object:
  2378 00001D42 05                      	db T_undefined
  2379 00001D43 [8E11000000000000]      	dq L_constants + 4494
  2380                                  
  2381                                  free_var_157:	; location of string-reverse!
  2382 00001D4B [531D000000000000]      	dq .undefined_object
  2383                                  .undefined_object:
  2384 00001D53 05                      	db T_undefined
  2385 00001D54 [CE11000000000000]      	dq L_constants + 4558
  2386                                  
  2387                                  free_var_158:	; location of string-set!
  2388 00001D5C [641D000000000000]      	dq .undefined_object
  2389                                  .undefined_object:
  2390 00001D64 05                      	db T_undefined
  2391 00001D65 [3404000000000000]      	dq L_constants + 1076
  2392                                  
  2393                                  free_var_159:	; location of string-upcase
  2394 00001D6D [751D000000000000]      	dq .undefined_object
  2395                                  .undefined_object:
  2396 00001D75 05                      	db T_undefined
  2397 00001D76 [D30D000000000000]      	dq L_constants + 3539
  2398                                  
  2399                                  free_var_160:	; location of string<=?
  2400 00001D7E [861D000000000000]      	dq .undefined_object
  2401                                  .undefined_object:
  2402 00001D86 05                      	db T_undefined
  2403 00001D87 [480E000000000000]      	dq L_constants + 3656
  2404                                  
  2405                                  free_var_161:	; location of string<?
  2406 00001D8F [971D000000000000]      	dq .undefined_object
  2407                                  .undefined_object:
  2408 00001D97 05                      	db T_undefined
  2409 00001D98 [2E0E000000000000]      	dq L_constants + 3630
  2410                                  
  2411                                  free_var_162:	; location of string=?
  2412 00001DA0 [A81D000000000000]      	dq .undefined_object
  2413                                  .undefined_object:
  2414 00001DA8 05                      	db T_undefined
  2415 00001DA9 [630E000000000000]      	dq L_constants + 3683
  2416                                  
  2417                                  free_var_163:	; location of string>=?
  2418 00001DB1 [B91D000000000000]      	dq .undefined_object
  2419                                  .undefined_object:
  2420 00001DB9 05                      	db T_undefined
  2421 00001DBA [7D0E000000000000]      	dq L_constants + 3709
  2422                                  
  2423                                  free_var_164:	; location of string>?
  2424 00001DC2 [CA1D000000000000]      	dq .undefined_object
  2425                                  .undefined_object:
  2426 00001DCA 05                      	db T_undefined
  2427 00001DCB [980E000000000000]      	dq L_constants + 3736
  2428                                  
  2429                                  free_var_165:	; location of string?
  2430 00001DD3 [DB1D000000000000]      	dq .undefined_object
  2431                                  .undefined_object:
  2432 00001DDB 05                      	db T_undefined
  2433 00001DDC [3E00000000000000]      	dq L_constants + 62
  2434                                  
  2435                                  free_var_166:	; location of symbol?
  2436 00001DE4 [EC1D000000000000]      	dq .undefined_object
  2437                                  .undefined_object:
  2438 00001DEC 05                      	db T_undefined
  2439 00001DED [0705000000000000]      	dq L_constants + 1287
  2440                                  
  2441                                  free_var_167:	; location of trng
  2442 00001DF5 [FD1D000000000000]      	dq .undefined_object
  2443                                  .undefined_object:
  2444 00001DFD 05                      	db T_undefined
  2445 00001DFE [D501000000000000]      	dq L_constants + 469
  2446                                  
  2447                                  free_var_168:	; location of uninterned-symbol?
  2448 00001E06 [0E1E000000000000]      	dq .undefined_object
  2449                                  .undefined_object:
  2450 00001E0E 05                      	db T_undefined
  2451 00001E0F [1705000000000000]      	dq L_constants + 1303
  2452                                  
  2453                                  free_var_169:	; location of vector
  2454 00001E17 [1F1E000000000000]      	dq .undefined_object
  2455                                  .undefined_object:
  2456 00001E1F 05                      	db T_undefined
  2457 00001E20 [0110000000000000]      	dq L_constants + 4097
  2458                                  
  2459                                  free_var_170:	; location of vector->list
  2460 00001E28 [301E000000000000]      	dq .undefined_object
  2461                                  .undefined_object:
  2462 00001E30 05                      	db T_undefined
  2463 00001E31 [1910000000000000]      	dq L_constants + 4121
  2464                                  
  2465                                  free_var_171:	; location of vector-append
  2466 00001E39 [411E000000000000]      	dq .undefined_object
  2467                                  .undefined_object:
  2468 00001E41 05                      	db T_undefined
  2469 00001E42 [6F11000000000000]      	dq L_constants + 4463
  2470                                  
  2471                                  free_var_172:	; location of vector-length
  2472 00001E4A [521E000000000000]      	dq .undefined_object
  2473                                  .undefined_object:
  2474 00001E52 05                      	db T_undefined
  2475 00001E53 [4301000000000000]      	dq L_constants + 323
  2476                                  
  2477                                  free_var_173:	; location of vector-ref
  2478 00001E5B [631E000000000000]      	dq .undefined_object
  2479                                  .undefined_object:
  2480 00001E63 05                      	db T_undefined
  2481 00001E64 [0D04000000000000]      	dq L_constants + 1037
  2482                                  
  2483                                  free_var_174:	; location of vector-reverse
  2484 00001E6C [741E000000000000]      	dq .undefined_object
  2485                                  .undefined_object:
  2486 00001E74 05                      	db T_undefined
  2487 00001E75 [AE11000000000000]      	dq L_constants + 4526
  2488                                  
  2489                                  free_var_175:	; location of vector-reverse!
  2490 00001E7D [851E000000000000]      	dq .undefined_object
  2491                                  .undefined_object:
  2492 00001E85 05                      	db T_undefined
  2493 00001E86 [EF11000000000000]      	dq L_constants + 4591
  2494                                  
  2495                                  free_var_176:	; location of vector-set!
  2496 00001E8E [961E000000000000]      	dq .undefined_object
  2497                                  .undefined_object:
  2498 00001E96 05                      	db T_undefined
  2499 00001E97 [2004000000000000]      	dq L_constants + 1056
  2500                                  
  2501                                  free_var_177:	; location of vector?
  2502 00001E9F [A71E000000000000]      	dq .undefined_object
  2503                                  .undefined_object:
  2504 00001EA7 05                      	db T_undefined
  2505 00001EA8 [6700000000000000]      	dq L_constants + 103
  2506                                  
  2507                                  free_var_178:	; location of void
  2508 00001EB0 [B81E000000000000]      	dq .undefined_object
  2509                                  .undefined_object:
  2510 00001EB8 05                      	db T_undefined
  2511 00001EB9 [BF12000000000000]      	dq L_constants + 4799
  2512                                  
  2513                                  free_var_179:	; location of void?
  2514 00001EC1 [C91E000000000000]      	dq .undefined_object
  2515                                  .undefined_object:
  2516 00001EC9 05                      	db T_undefined
  2517 00001ECA [2200000000000000]      	dq L_constants + 34
  2518                                  
  2519                                  free_var_180:	; location of write-char
  2520 00001ED2 [DA1E000000000000]      	dq .undefined_object
  2521                                  .undefined_object:
  2522 00001EDA 05                      	db T_undefined
  2523 00001EDB [0201000000000000]      	dq L_constants + 258
  2524                                  
  2525                                  free_var_181:	; location of zero?
  2526 00001EE3 [EB1E000000000000]      	dq .undefined_object
  2527                                  .undefined_object:
  2528 00001EEB 05                      	db T_undefined
  2529 00001EEC [E201000000000000]      	dq L_constants + 482
  2530                                  
  2531                                  
  2532                                  extern printf, fprintf, stdout, stderr, fwrite, exit, putchar, getchar
  2533                                  global main
  2534                                  section .text
  2535                                  main:
  2536 00000000 C8000000                        enter 0, 0	; building closure for null?
  2537 00000004 48BF-                   	mov rdi, free_var_126
  2537 00000006 [3C1B000000000000] 
  2538 0000000E 48BE-                   	mov rsi, L_code_ptr_is_null
  2538 00000010 [155C010000000000] 
  2539 00000018 E8F9590100              	call bind_primitive
  2540                                  
  2541                                  	; building closure for pair?
  2542 0000001D 48BF-                   	mov rdi, free_var_131
  2542 0000001F [911B000000000000] 
  2543 00000027 48BE-                   	mov rsi, L_code_ptr_is_pair
  2543 00000029 [475C010000000000] 
  2544 00000031 E8E0590100              	call bind_primitive
  2545                                  
  2546                                  	; building closure for void?
  2547 00000036 48BF-                   	mov rdi, free_var_179
  2547 00000038 [C11E000000000000] 
  2548 00000040 48BE-                   	mov rsi, L_code_ptr_is_void
  2548 00000042 [795C010000000000] 
  2549 0000004A E8C7590100              	call bind_primitive
  2550                                  
  2551                                  	; building closure for char?
  2552 0000004F 48BF-                   	mov rdi, free_var_83
  2552 00000051 [6118000000000000] 
  2553 00000059 48BE-                   	mov rsi, L_code_ptr_is_char
  2553 0000005B [AB5C010000000000] 
  2554 00000063 E8AE590100              	call bind_primitive
  2555                                  
  2556                                  	; building closure for string?
  2557 00000068 48BF-                   	mov rdi, free_var_165
  2557 0000006A [D31D000000000000] 
  2558 00000072 48BE-                   	mov rsi, L_code_ptr_is_string
  2558 00000074 [DD5C010000000000] 
  2559 0000007C E895590100              	call bind_primitive
  2560                                  
  2561                                  	; building closure for interned-symbol?
  2562 00000081 48BF-                   	mov rdi, free_var_104
  2562 00000083 [C619000000000000] 
  2563 0000008B 48BE-                   	mov rsi, L_code_ptr_is_symbol
  2563 0000008D [0F5D010000000000] 
  2564 00000095 E87C590100              	call bind_primitive
  2565                                  
  2566                                  	; building closure for vector?
  2567 0000009A 48BF-                   	mov rdi, free_var_177
  2567 0000009C [9F1E000000000000] 
  2568 000000A4 48BE-                   	mov rsi, L_code_ptr_is_vector
  2568 000000A6 [DB5D010000000000] 
  2569 000000AE E863590100              	call bind_primitive
  2570                                  
  2571                                  	; building closure for procedure?
  2572 000000B3 48BF-                   	mov rdi, free_var_134
  2572 000000B5 [C41B000000000000] 
  2573 000000BD 48BE-                   	mov rsi, L_code_ptr_is_closure
  2573 000000BF [0D5E010000000000] 
  2574 000000C7 E84A590100              	call bind_primitive
  2575                                  
  2576                                  	; building closure for real?
  2577 000000CC 48BF-                   	mov rdi, free_var_140
  2577 000000CE [2A1C000000000000] 
  2578 000000D6 48BE-                   	mov rsi, L_code_ptr_is_real
  2578 000000D8 [3F5E010000000000] 
  2579 000000E0 E831590100              	call bind_primitive
  2580                                  
  2581                                  	; building closure for fraction?
  2582 000000E5 48BF-                   	mov rdi, free_var_97
  2582 000000E7 [4F19000000000000] 
  2583 000000EF 48BE-                   	mov rsi, L_code_ptr_is_fraction
  2583 000000F1 [715E010000000000] 
  2584 000000F9 E818590100              	call bind_primitive
  2585                                  
  2586                                  	; building closure for boolean?
  2587 000000FE 48BF-                   	mov rdi, free_var_38
  2587 00000100 [6415000000000000] 
  2588 00000108 48BE-                   	mov rsi, L_code_ptr_is_boolean
  2588 0000010A [A35E010000000000] 
  2589 00000112 E8FF580100              	call bind_primitive
  2590                                  
  2591                                  	; building closure for number?
  2592 00000117 48BF-                   	mov rdi, free_var_127
  2592 00000119 [4D1B000000000000] 
  2593 00000121 48BE-                   	mov rsi, L_code_ptr_is_number
  2593 00000123 [3F5F010000000000] 
  2594 0000012B E8E6580100              	call bind_primitive
  2595                                  
  2596                                  	; building closure for collection?
  2597 00000130 48BF-                   	mov rdi, free_var_84
  2597 00000132 [7218000000000000] 
  2598 0000013A 48BE-                   	mov rsi, L_code_ptr_is_collection
  2598 0000013C [735F010000000000] 
  2599 00000144 E8CD580100              	call bind_primitive
  2600                                  
  2601                                  	; building closure for cons
  2602 00000149 48BF-                   	mov rdi, free_var_85
  2602 0000014B [8318000000000000] 
  2603 00000153 48BE-                   	mov rsi, L_code_ptr_cons
  2603 00000155 [A75F010000000000] 
  2604 0000015D E8B4580100              	call bind_primitive
  2605                                  
  2606                                  	; building closure for display-sexpr
  2607 00000162 48BF-                   	mov rdi, free_var_87
  2607 00000164 [A518000000000000] 
  2608 0000016C 48BE-                   	mov rsi, L_code_ptr_display_sexpr
  2608 0000016E [D75F010000000000] 
  2609 00000176 E89B580100              	call bind_primitive
  2610                                  
  2611                                  	; building closure for write-char
  2612 0000017B 48BF-                   	mov rdi, free_var_180
  2612 0000017D [D21E000000000000] 
  2613 00000185 48BE-                   	mov rsi, L_code_ptr_write_char
  2613 00000187 [FD5F010000000000] 
  2614 0000018F E882580100              	call bind_primitive
  2615                                  
  2616                                  	; building closure for car
  2617 00000194 48BF-                   	mov rdi, free_var_54
  2617 00000196 [7416000000000000] 
  2618 0000019E 48BE-                   	mov rsi, L_code_ptr_car
  2618 000001A0 [5060010000000000] 
  2619 000001A8 E869580100              	call bind_primitive
  2620                                  
  2621                                  	; building closure for cdr
  2622 000001AD 48BF-                   	mov rdi, free_var_69
  2622 000001AF [7317000000000000] 
  2623 000001B7 48BE-                   	mov rsi, L_code_ptr_cdr
  2623 000001B9 [7460010000000000] 
  2624 000001C1 E850580100              	call bind_primitive
  2625                                  
  2626                                  	; building closure for string-length
  2627 000001C6 48BF-                   	mov rdi, free_var_154
  2627 000001C8 [181D000000000000] 
  2628 000001D0 48BE-                   	mov rsi, L_code_ptr_string_length
  2628 000001D2 [9860010000000000] 
  2629 000001DA E837580100              	call bind_primitive
  2630                                  
  2631                                  	; building closure for vector-length
  2632 000001DF 48BF-                   	mov rdi, free_var_172
  2632 000001E1 [4A1E000000000000] 
  2633 000001E9 48BE-                   	mov rsi, L_code_ptr_vector_length
  2633 000001EB [C160010000000000] 
  2634 000001F3 E81E580100              	call bind_primitive
  2635                                  
  2636                                  	; building closure for real->integer
  2637 000001F8 48BF-                   	mov rdi, free_var_139
  2637 000001FA [191C000000000000] 
  2638 00000202 48BE-                   	mov rsi, L_code_ptr_real_to_integer
  2638 00000204 [EA60010000000000] 
  2639 0000020C E805580100              	call bind_primitive
  2640                                  
  2641                                  	; building closure for exit
  2642 00000211 48BF-                   	mov rdi, free_var_92
  2642 00000213 [FA18000000000000] 
  2643 0000021B 48BE-                   	mov rsi, L_code_ptr_exit
  2643 0000021D [1961010000000000] 
  2644 00000225 E8EC570100              	call bind_primitive
  2645                                  
  2646                                  	; building closure for integer->real
  2647 0000022A 48BF-                   	mov rdi, free_var_102
  2647 0000022C [A419000000000000] 
  2648 00000234 48BE-                   	mov rsi, L_code_ptr_integer_to_real
  2648 00000236 [3261010000000000] 
  2649 0000023E E8D3570100              	call bind_primitive
  2650                                  
  2651                                  	; building closure for fraction->real
  2652 00000243 48BF-                   	mov rdi, free_var_96
  2652 00000245 [3E19000000000000] 
  2653 0000024D 48BE-                   	mov rsi, L_code_ptr_fraction_to_real
  2653 0000024F [6061010000000000] 
  2654 00000257 E8BA570100              	call bind_primitive
  2655                                  
  2656                                  	; building closure for char->integer
  2657 0000025C 48BF-                   	mov rdi, free_var_70
  2657 0000025E [8417000000000000] 
  2658 00000266 48BE-                   	mov rsi, L_code_ptr_char_to_integer
  2658 00000268 [9B61010000000000] 
  2659 00000270 E8A1570100              	call bind_primitive
  2660                                  
  2661                                  	; building closure for integer->char
  2662 00000275 48BF-                   	mov rdi, free_var_101
  2662 00000277 [9319000000000000] 
  2663 0000027F 48BE-                   	mov rsi, L_code_ptr_integer_to_char
  2663 00000281 [0A62010000000000] 
  2664 00000289 E888570100              	call bind_primitive
  2665                                  
  2666                                  	; building closure for trng
  2667 0000028E 48BF-                   	mov rdi, free_var_167
  2667 00000290 [F51D000000000000] 
  2668 00000298 48BE-                   	mov rsi, L_code_ptr_trng
  2668 0000029A [5562010000000000] 
  2669 000002A2 E86F570100              	call bind_primitive
  2670                                  
  2671                                  	; building closure for zero?
  2672 000002A7 48BF-                   	mov rdi, free_var_181
  2672 000002A9 [E31E000000000000] 
  2673 000002B1 48BE-                   	mov rsi, L_code_ptr_is_zero
  2673 000002B3 [7462010000000000] 
  2674 000002BB E856570100              	call bind_primitive
  2675                                  
  2676                                  	; building closure for integer?
  2677 000002C0 48BF-                   	mov rdi, free_var_103
  2677 000002C2 [B519000000000000] 
  2678 000002CA 48BE-                   	mov rsi, L_code_ptr_is_integer
  2678 000002CC [D962010000000000] 
  2679 000002D4 E83D570100              	call bind_primitive
  2680                                  
  2681                                  	; building closure for __bin-apply
  2682 000002D9 48BF-                   	mov rdi, free_var_12
  2682 000002DB [AA13000000000000] 
  2683 000002E3 48BE-                   	mov rsi, L_code_ptr_bin_apply
  2683 000002E5 [865B010000000000] 
  2684 000002ED E824570100              	call bind_primitive
  2685                                  
  2686                                  	; building closure for __bin-add-rr
  2687 000002F2 48BF-                   	mov rdi, free_var_10
  2687 000002F4 [8813000000000000] 
  2688 000002FC 48BE-                   	mov rsi, L_code_ptr_raw_bin_add_rr
  2688 000002FE [0B63010000000000] 
  2689 00000306 E80B570100              	call bind_primitive
  2690                                  
  2691                                  	; building closure for __bin-sub-rr
  2692 0000030B 48BF-                   	mov rdi, free_var_26
  2692 0000030D [9814000000000000] 
  2693 00000315 48BE-                   	mov rsi, L_code_ptr_raw_bin_sub_rr
  2693 00000317 [4B63010000000000] 
  2694 0000031F E8F2560100              	call bind_primitive
  2695                                  
  2696                                  	; building closure for __bin-mul-rr
  2697 00000324 48BF-                   	mov rdi, free_var_23
  2697 00000326 [6514000000000000] 
  2698 0000032E 48BE-                   	mov rsi, L_code_ptr_raw_bin_mul_rr
  2698 00000330 [8B63010000000000] 
  2699 00000338 E8D9560100              	call bind_primitive
  2700                                  
  2701                                  	; building closure for __bin-div-rr
  2702 0000033D 48BF-                   	mov rdi, free_var_14
  2702 0000033F [CC13000000000000] 
  2703 00000347 48BE-                   	mov rsi, L_code_ptr_raw_bin_div_rr
  2703 00000349 [CB63010000000000] 
  2704 00000351 E8C0560100              	call bind_primitive
  2705                                  
  2706                                  	; building closure for __bin-add-qq
  2707 00000356 48BF-                   	mov rdi, free_var_9
  2707 00000358 [7713000000000000] 
  2708 00000360 48BE-                   	mov rsi, L_code_ptr_raw_bin_add_qq
  2708 00000362 [5564010000000000] 
  2709 0000036A E8A7560100              	call bind_primitive
  2710                                  
  2711                                  	; building closure for __bin-sub-qq
  2712 0000036F 48BF-                   	mov rdi, free_var_25
  2712 00000371 [8714000000000000] 
  2713 00000379 48BE-                   	mov rsi, L_code_ptr_raw_bin_sub_qq
  2713 0000037B [F564010000000000] 
  2714 00000383 E88E560100              	call bind_primitive
  2715                                  
  2716                                  	; building closure for __bin-mul-qq
  2717 00000388 48BF-                   	mov rdi, free_var_22
  2717 0000038A [5414000000000000] 
  2718 00000392 48BE-                   	mov rsi, L_code_ptr_raw_bin_mul_qq
  2718 00000394 [9A65010000000000] 
  2719 0000039C E875560100              	call bind_primitive
  2720                                  
  2721                                  	; building closure for __bin-div-qq
  2722 000003A1 48BF-                   	mov rdi, free_var_13
  2722 000003A3 [BB13000000000000] 
  2723 000003AB 48BE-                   	mov rsi, L_code_ptr_raw_bin_div_qq
  2723 000003AD [3466010000000000] 
  2724 000003B5 E85C560100              	call bind_primitive
  2725                                  
  2726                                  	; building closure for __bin-add-zz
  2727 000003BA 48BF-                   	mov rdi, free_var_11
  2727 000003BC [9913000000000000] 
  2728 000003C4 48BE-                   	mov rsi, L_code_ptr_raw_bin_add_zz
  2728 000003C6 [1964010000000000] 
  2729 000003CE E843560100              	call bind_primitive
  2730                                  
  2731                                  	; building closure for __bin-sub-zz
  2732 000003D3 48BF-                   	mov rdi, free_var_27
  2732 000003D5 [A914000000000000] 
  2733 000003DD 48BE-                   	mov rsi, L_code_ptr_raw_bin_sub_zz
  2733 000003DF [B964010000000000] 
  2734 000003E7 E82A560100              	call bind_primitive
  2735                                  
  2736                                  	; building closure for __bin-mul-zz
  2737 000003EC 48BF-                   	mov rdi, free_var_24
  2737 000003EE [7614000000000000] 
  2738 000003F6 48BE-                   	mov rsi, L_code_ptr_raw_bin_mul_zz
  2738 000003F8 [5965010000000000] 
  2739 00000400 E811560100              	call bind_primitive
  2740                                  
  2741                                  	; building closure for __bin-div-zz
  2742 00000405 48BF-                   	mov rdi, free_var_15
  2742 00000407 [DD13000000000000] 
  2743 0000040F 48BE-                   	mov rsi, L_code_ptr_raw_bin_div_zz
  2743 00000411 [EE65010000000000] 
  2744 00000419 E8F8550100              	call bind_primitive
  2745                                  
  2746                                  	; building closure for error
  2747 0000041E 48BF-                   	mov rdi, free_var_90
  2747 00000420 [D818000000000000] 
  2748 00000428 48BE-                   	mov rsi, L_code_ptr_error
  2748 0000042A [1E67010000000000] 
  2749 00000432 E8DF550100              	call bind_primitive
  2750                                  
  2751                                  	; building closure for __bin-less-than-rr
  2752 00000437 48BF-                   	mov rdi, free_var_20
  2752 00000439 [3214000000000000] 
  2753 00000441 48BE-                   	mov rsi, L_code_ptr_raw_less_than_rr
  2753 00000443 [DA67010000000000] 
  2754 0000044B E8C6550100              	call bind_primitive
  2755                                  
  2756                                  	; building closure for __bin-less-than-qq
  2757 00000450 48BF-                   	mov rdi, free_var_19
  2757 00000452 [2114000000000000] 
  2758 0000045A 48BE-                   	mov rsi, L_code_ptr_raw_less_than_qq
  2758 0000045C [7C68010000000000] 
  2759 00000464 E8AD550100              	call bind_primitive
  2760                                  
  2761                                  	; building closure for __bin-less-than-zz
  2762 00000469 48BF-                   	mov rdi, free_var_21
  2762 0000046B [4314000000000000] 
  2763 00000473 48BE-                   	mov rsi, L_code_ptr_raw_less_than_zz
  2763 00000475 [2D68010000000000] 
  2764 0000047D E894550100              	call bind_primitive
  2765                                  
  2766                                  	; building closure for __bin-equal-rr
  2767 00000482 48BF-                   	mov rdi, free_var_17
  2767 00000484 [FF13000000000000] 
  2768 0000048C 48BE-                   	mov rsi, L_code_ptr_raw_equal_rr
  2768 0000048E [DB68010000000000] 
  2769 00000496 E87B550100              	call bind_primitive
  2770                                  
  2771                                  	; building closure for __bin-equal-qq
  2772 0000049B 48BF-                   	mov rdi, free_var_16
  2772 0000049D [EE13000000000000] 
  2773 000004A5 48BE-                   	mov rsi, L_code_ptr_raw_equal_qq
  2773 000004A7 [7D69010000000000] 
  2774 000004AF E862550100              	call bind_primitive
  2775                                  
  2776                                  	; building closure for __bin-equal-zz
  2777 000004B4 48BF-                   	mov rdi, free_var_18
  2777 000004B6 [1014000000000000] 
  2778 000004BE 48BE-                   	mov rsi, L_code_ptr_raw_equal_zz
  2778 000004C0 [2E69010000000000] 
  2779 000004C8 E849550100              	call bind_primitive
  2780                                  
  2781                                  	; building closure for quotient
  2782 000004CD 48BF-                   	mov rdi, free_var_135
  2782 000004CF [D51B000000000000] 
  2783 000004D7 48BE-                   	mov rsi, L_code_ptr_quotient
  2783 000004D9 [DC69010000000000] 
  2784 000004E1 E830550100              	call bind_primitive
  2785                                  
  2786                                  	; building closure for remainder
  2787 000004E6 48BF-                   	mov rdi, free_var_141
  2787 000004E8 [3B1C000000000000] 
  2788 000004F0 48BE-                   	mov rsi, L_code_ptr_remainder
  2788 000004F2 [286A010000000000] 
  2789 000004FA E817550100              	call bind_primitive
  2790                                  
  2791                                  	; building closure for set-car!
  2792 000004FF 48BF-                   	mov rdi, free_var_144
  2792 00000501 [6E1C000000000000] 
  2793 00000509 48BE-                   	mov rsi, L_code_ptr_set_car
  2793 0000050B [746A010000000000] 
  2794 00000513 E8FE540100              	call bind_primitive
  2795                                  
  2796                                  	; building closure for set-cdr!
  2797 00000518 48BF-                   	mov rdi, free_var_145
  2797 0000051A [7F1C000000000000] 
  2798 00000522 48BE-                   	mov rsi, L_code_ptr_set_cdr
  2798 00000524 [A66A010000000000] 
  2799 0000052C E8E5540100              	call bind_primitive
  2800                                  
  2801                                  	; building closure for string-ref
  2802 00000531 48BF-                   	mov rdi, free_var_155
  2802 00000533 [291D000000000000] 
  2803 0000053B 48BE-                   	mov rsi, L_code_ptr_string_ref
  2803 0000053D [D86A010000000000] 
  2804 00000545 E8CC540100              	call bind_primitive
  2805                                  
  2806                                  	; building closure for vector-ref
  2807 0000054A 48BF-                   	mov rdi, free_var_173
  2807 0000054C [5B1E000000000000] 
  2808 00000554 48BE-                   	mov rsi, L_code_ptr_vector_ref
  2808 00000556 [346B010000000000] 
  2809 0000055E E8B3540100              	call bind_primitive
  2810                                  
  2811                                  	; building closure for vector-set!
  2812 00000563 48BF-                   	mov rdi, free_var_176
  2812 00000565 [8E1E000000000000] 
  2813 0000056D 48BE-                   	mov rsi, L_code_ptr_vector_set
  2813 0000056F [816B010000000000] 
  2814 00000577 E89A540100              	call bind_primitive
  2815                                  
  2816                                  	; building closure for string-set!
  2817 0000057C 48BF-                   	mov rdi, free_var_158
  2817 0000057E [5C1D000000000000] 
  2818 00000586 48BE-                   	mov rsi, L_code_ptr_string_set
  2818 00000588 [DC6B010000000000] 
  2819 00000590 E881540100              	call bind_primitive
  2820                                  
  2821                                  	; building closure for make-vector
  2822 00000595 48BF-                   	mov rdi, free_var_120
  2822 00000597 [D61A000000000000] 
  2823 0000059F 48BE-                   	mov rsi, L_code_ptr_make_vector
  2823 000005A1 [426C010000000000] 
  2824 000005A9 E868540100              	call bind_primitive
  2825                                  
  2826                                  	; building closure for make-string
  2827 000005AE 48BF-                   	mov rdi, free_var_118
  2827 000005B0 [B41A000000000000] 
  2828 000005B8 48BE-                   	mov rsi, L_code_ptr_make_string
  2828 000005BA [9D6C010000000000] 
  2829 000005C2 E84F540100              	call bind_primitive
  2830                                  
  2831                                  	; building closure for numerator
  2832 000005C7 48BF-                   	mov rdi, free_var_128
  2832 000005C9 [5E1B000000000000] 
  2833 000005D1 48BE-                   	mov rsi, L_code_ptr_numerator
  2833 000005D3 [006D010000000000] 
  2834 000005DB E836540100              	call bind_primitive
  2835                                  
  2836                                  	; building closure for denominator
  2837 000005E0 48BF-                   	mov rdi, free_var_86
  2837 000005E2 [9418000000000000] 
  2838 000005EA 48BE-                   	mov rsi, L_code_ptr_denominator
  2838 000005EC [296D010000000000] 
  2839 000005F4 E81D540100              	call bind_primitive
  2840                                  
  2841                                  	; building closure for eq?
  2842 000005F9 48BF-                   	mov rdi, free_var_88
  2842 000005FB [B618000000000000] 
  2843 00000603 48BE-                   	mov rsi, L_code_ptr_is_eq
  2843 00000605 [526D010000000000] 
  2844 0000060D E804540100              	call bind_primitive
  2845                                  
  2846                                  	; building closure for __integer-to-fraction
  2847 00000612 48BF-                   	mov rdi, free_var_29
  2847 00000614 [CB14000000000000] 
  2848 0000061C 48BE-                   	mov rsi, L_code_ptr_integer_to_fraction
  2848 0000061E [CC61010000000000] 
  2849 00000626 E8EB530100              	call bind_primitive
  2850                                  
  2851                                  	; building closure for logand
  2852 0000062B 48BF-                   	mov rdi, free_var_111
  2852 0000062D [3D1A000000000000] 
  2853 00000635 48BE-                   	mov rsi, L_code_ptr_logand
  2853 00000637 [A55A010000000000] 
  2854 0000063F E8D2530100              	call bind_primitive
  2855                                  
  2856                                  	; building closure for logor
  2857 00000644 48BF-                   	mov rdi, free_var_114
  2857 00000646 [701A000000000000] 
  2858 0000064E 48BE-                   	mov rsi, L_code_ptr_logor
  2858 00000650 [E15A010000000000] 
  2859 00000658 E8B9530100              	call bind_primitive
  2860                                  
  2861                                  	; building closure for logxor
  2862 0000065D 48BF-                   	mov rdi, free_var_115
  2862 0000065F [811A000000000000] 
  2863 00000667 48BE-                   	mov rsi, L_code_ptr_logxor
  2863 00000669 [1D5B010000000000] 
  2864 00000671 E8A0530100              	call bind_primitive
  2865                                  
  2866                                  	; building closure for lognot
  2867 00000676 48BF-                   	mov rdi, free_var_113
  2867 00000678 [5F1A000000000000] 
  2868 00000680 48BE-                   	mov rsi, L_code_ptr_lognot
  2868 00000682 [595B010000000000] 
  2869 0000068A E887530100              	call bind_primitive
  2870                                  
  2871                                  	; building closure for ash
  2872 0000068F 48BF-                   	mov rdi, free_var_34
  2872 00000691 [2015000000000000] 
  2873 00000699 48BE-                   	mov rsi, L_code_ptr_ash
  2873 0000069B [445A010000000000] 
  2874 000006A3 E86E530100              	call bind_primitive
  2875                                  
  2876                                  	; building closure for symbol?
  2877 000006A8 48BF-                   	mov rdi, free_var_166
  2877 000006AA [E41D000000000000] 
  2878 000006B2 48BE-                   	mov rsi, L_code_ptr_is_symbol
  2878 000006B4 [0F5D010000000000] 
  2879 000006BC E855530100              	call bind_primitive
  2880                                  
  2881                                  	; building closure for uninterned-symbol?
  2882 000006C1 48BF-                   	mov rdi, free_var_168
  2882 000006C3 [061E000000000000] 
  2883 000006CB 48BE-                   	mov rsi, L_code_ptr_is_uninterned_symbol
  2883 000006CD [425D010000000000] 
  2884 000006D5 E83C530100              	call bind_primitive
  2885                                  
  2886                                  	; building closure for gensym?
  2887 000006DA 48BF-                   	mov rdi, free_var_100
  2887 000006DC [8219000000000000] 
  2888 000006E4 48BE-                   	mov rsi, L_code_ptr_is_uninterned_symbol
  2888 000006E6 [425D010000000000] 
  2889 000006EE E823530100              	call bind_primitive
  2890                                  
  2891                                  	; building closure for interned-symbol?
  2892 000006F3 48BF-                   	mov rdi, free_var_104
  2892 000006F5 [C619000000000000] 
  2893 000006FD 48BE-                   	mov rsi, L_code_ptr_is_interned_symbol
  2893 000006FF [755D010000000000] 
  2894 00000707 E80A530100              	call bind_primitive
  2895                                  
  2896                                  	; building closure for gensym
  2897 0000070C 48BF-                   	mov rdi, free_var_99
  2897 0000070E [7119000000000000] 
  2898 00000716 48BE-                   	mov rsi, L_code_ptr_gensym
  2898 00000718 [A75D010000000000] 
  2899 00000720 E8F1520100              	call bind_primitive
  2900                                  
  2901                                  	; building closure for frame
  2902 00000725 48BF-                   	mov rdi, free_var_98
  2902 00000727 [6019000000000000] 
  2903 0000072F 48BE-                   	mov rsi, L_code_ptr_frame
  2903 00000731 [5453010000000000] 
  2904 00000739 E8D8520100              	call bind_primitive
  2905                                  
  2906                                  	; building closure for break
  2907 0000073E 48BF-                   	mov rdi, free_var_39
  2907 00000740 [7515000000000000] 
  2908 00000748 48BE-                   	mov rsi, L_code_ptr_break
  2908 0000074A [3A53010000000000] 
  2909 00000752 E8BF520100              	call bind_primitive
  2910                                  
  2911                                  	; building closure for boolean-false?
  2912 00000757 48BF-                   	mov rdi, free_var_36
  2912 00000759 [4215000000000000] 
  2913 00000761 48BE-                   	mov rsi, L_code_ptr_is_boolean_false
  2913 00000763 [D75E010000000000] 
  2914 0000076B E8A6520100              	call bind_primitive
  2915                                  
  2916                                  	; building closure for boolean-true?
  2917 00000770 48BF-                   	mov rdi, free_var_37
  2917 00000772 [5315000000000000] 
  2918 0000077A 48BE-                   	mov rsi, L_code_ptr_is_boolean_true
  2918 0000077C [0B5F010000000000] 
  2919 00000784 E88D520100              	call bind_primitive
  2920                                  
  2921                                  	; building closure for primitive?
  2922 00000789 48BF-                   	mov rdi, free_var_133
  2922 0000078B [B31B000000000000] 
  2923 00000793 48BE-                   	mov rsi, L_code_ptr_is_primitive
  2923 00000795 [C552010000000000] 
  2924 0000079D E874520100              	call bind_primitive
  2925                                  
  2926                                  	; building closure for length
  2927 000007A2 48BF-                   	mov rdi, free_var_105
  2927 000007A4 [D719000000000000] 
  2928 000007AC 48BE-                   	mov rsi, L_code_ptr_length
  2928 000007AE [0253010000000000] 
  2929 000007B6 E85B520100              	call bind_primitive
  2930                                  
  2931                                  	; building closure for make-list
  2932 000007BB 48BF-                   	mov rdi, free_var_116
  2932 000007BD [921A000000000000] 
  2933 000007C5 48BE-                   	mov rsi, L_code_ptr_make_list
  2933 000007C7 [4452010000000000] 
  2934 000007CF E842520100              	call bind_primitive
  2935                                  
  2936                                  	; building closure for return
  2937 000007D4 48BF-                   	mov rdi, free_var_142
  2937 000007D6 [4C1C000000000000] 
  2938 000007DE 48BE-                   	mov rsi, L_code_ptr_return
  2938 000007E0 [F751010000000000] 
  2939 000007E8 E829520100              	call bind_primitive
  2940                                  
  2941 000007ED BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2942 000007F2 E8EF490100              	call malloc
  2943 000007F7 50                      	push rax
  2944 000007F8 BF00000000              	mov rdi, 8 * 0	; new rib
  2945 000007FD E8E4490100              	call malloc
  2946 00000802 50                      	push rax
  2947 00000803 BF08000000              	mov rdi, 8 * 1	; extended env
  2948 00000808 E8D9490100              	call malloc
  2949 0000080D 488B7D10                	mov rdi, ENV
  2950 00000811 BE00000000              	mov rsi, 0
  2951 00000816 BA01000000              	mov rdx, 1
  2952                                  .L_lambda_simple_env_loop_03a4:	; ext_env[i + 1] <-- env[i]
  2953 0000081B 4883FE00                	cmp rsi, 0
  2954 0000081F 7410                    	je .L_lambda_simple_env_end_03a4
  2955 00000821 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2956 00000825 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2957 00000829 48FFC6                  	inc rsi
  2958 0000082C 48FFC2                  	inc rdx
  2959 0000082F EBEA                    	jmp .L_lambda_simple_env_loop_03a4
  2960                                  .L_lambda_simple_env_end_03a4:
  2961 00000831 5B                      	pop rbx
  2962 00000832 BE00000000              	mov rsi, 0
  2963                                  .L_lambda_simple_params_loop_03a4:	; copy params
  2964 00000837 4883FE00                	cmp rsi, 0
  2965 0000083B 740E                    	je .L_lambda_simple_params_end_03a4
  2966 0000083D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2967 00000842 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2968 00000846 48FFC6                  	inc rsi
  2969 00000849 EBEC                    	jmp .L_lambda_simple_params_loop_03a4
  2970                                  .L_lambda_simple_params_end_03a4:
  2971 0000084B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
  2972 0000084E 4889C3                  	mov rbx, rax
  2973 00000851 58                      	pop rax
  2974 00000852 C60004                  	mov byte [rax], T_closure
  2975 00000855 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2976 00000859 48C74009[66080000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03a4
  2977 00000861 E99B000000              	jmp .L_lambda_simple_end_03a4
  2978                                  .L_lambda_simple_code_03a4:	; lambda-simple body
  2979 00000866 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2980 0000086C 740B                    	je .L_lambda_simple_arity_check_ok_03a4
  2981 0000086E FF742410                	push qword [rsp + 8 * 2]
  2982 00000872 6A01                    	push 1
  2983 00000874 E926490100              	jmp L_error_incorrect_arity_simple
  2984                                  .L_lambda_simple_arity_check_ok_03a4:
  2985 00000879 C8000000                	enter 0, 0
  2986                                  	; preparing a tail-call
  2987                                  	; preparing a non-tail-call
  2988 0000087D 488B4520                	mov rax, PARAM(0)	; param x
  2989 00000881 50                      	push rax
  2990 00000882 6A01                    	push 1	; arg count
  2991 00000884 488B0425[74160000]      	mov rax, qword [free_var_54]	; free var car
  2992 0000088C 803805                  	cmp byte [rax], T_undefined
  2993 0000088F 0F8424480100            	je L_error_fvar_undefined
  2994 00000895 803804                  	cmp byte [rax], T_closure
  2995 00000898 0F859F480100            	jne L_error_non_closure
  2996 0000089E FF7001                  	push SOB_CLOSURE_ENV(rax)
  2997 000008A1 FF5009                  	call SOB_CLOSURE_CODE(rax)
  2998 000008A4 50                      	push rax
  2999 000008A5 6A01                    	push 1	; arg count
  3000 000008A7 488B0425[74160000]      	mov rax, qword [free_var_54]	; free var car
  3001 000008AF 803805                  	cmp byte [rax], T_undefined
  3002 000008B2 0F8401480100            	je L_error_fvar_undefined
  3003 000008B8 803804                  	cmp byte [rax], T_closure
  3004 000008BB 0F857C480100            	jne L_error_non_closure
  3005 000008C1 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3006                                  
  3007                                  	; recycling the current frame
  3008 000008C4 FF7508                  	push qword [rbp + 8 * 1]	; old return address
  3009 000008C7 FF7500                  	push qword [rbp]	; old frame-pointer
  3010 000008CA B905000000              	mov rcx, 5
  3011 000008CF 488B5D18                	mov rbx, COUNT
  3012 000008D3 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
  3013 000008D8 488D55F8                	lea rdx, [rbp - 8]
  3014                                  .L_tc_recycle_frame_loop_04bc:
  3015 000008DC 4883F900                	cmp rcx, 0
  3016 000008E0 7413                    	je .L_tc_recycle_frame_done_04bc
  3017 000008E2 488B32                  	mov rsi, qword [rdx]
  3018 000008E5 488933                  	mov qword [rbx], rsi
  3019 000008E8 48FFC9                  	dec rcx
  3020 000008EB 4883EB08                	sub rbx, 8
  3021 000008EF 4883EA08                	sub rdx, 8
  3022 000008F3 EBE7                    	jmp .L_tc_recycle_frame_loop_04bc
  3023                                  .L_tc_recycle_frame_done_04bc:
  3024 000008F5 488D6308                	lea rsp, [rbx + 8]
  3025 000008F9 5D                      	pop rbp
  3026 000008FA FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3027 000008FD C9                      	leave
  3028 000008FE C21800                  	ret AND_KILL_FRAME(1)
  3029                                  .L_lambda_simple_end_03a4:	; new closure is in rax
  3030 00000901 48890425[EC150000]      	mov qword [free_var_46], rax
  3031 00000909 48B8-                   	mov rax, sob_void
  3031 0000090B [0000000000000000] 
  3032                                  
  3033 00000913 4889C7                  	mov rdi, rax
  3034 00000916 E8204B0100              	call print_sexpr_if_not_void
  3035                                  
  3036 0000091B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3037 00000920 E8C1480100              	call malloc
  3038 00000925 50                      	push rax
  3039 00000926 BF00000000              	mov rdi, 8 * 0	; new rib
  3040 0000092B E8B6480100              	call malloc
  3041 00000930 50                      	push rax
  3042 00000931 BF08000000              	mov rdi, 8 * 1	; extended env
  3043 00000936 E8AB480100              	call malloc
  3044 0000093B 488B7D10                	mov rdi, ENV
  3045 0000093F BE00000000              	mov rsi, 0
  3046 00000944 BA01000000              	mov rdx, 1
  3047                                  .L_lambda_simple_env_loop_03a5:	; ext_env[i + 1] <-- env[i]
  3048 00000949 4883FE00                	cmp rsi, 0
  3049 0000094D 7410                    	je .L_lambda_simple_env_end_03a5
  3050 0000094F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3051 00000953 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3052 00000957 48FFC6                  	inc rsi
  3053 0000095A 48FFC2                  	inc rdx
  3054 0000095D EBEA                    	jmp .L_lambda_simple_env_loop_03a5
  3055                                  .L_lambda_simple_env_end_03a5:
  3056 0000095F 5B                      	pop rbx
  3057 00000960 BE00000000              	mov rsi, 0
  3058                                  .L_lambda_simple_params_loop_03a5:	; copy params
  3059 00000965 4883FE00                	cmp rsi, 0
  3060 00000969 740E                    	je .L_lambda_simple_params_end_03a5
  3061 0000096B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3062 00000970 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3063 00000974 48FFC6                  	inc rsi
  3064 00000977 EBEC                    	jmp .L_lambda_simple_params_loop_03a5
  3065                                  .L_lambda_simple_params_end_03a5:
  3066 00000979 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
  3067 0000097C 4889C3                  	mov rbx, rax
  3068 0000097F 58                      	pop rax
  3069 00000980 C60004                  	mov byte [rax], T_closure
  3070 00000983 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3071 00000987 48C74009[94090000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03a5
  3072 0000098F E99B000000              	jmp .L_lambda_simple_end_03a5
  3073                                  .L_lambda_simple_code_03a5:	; lambda-simple body
  3074 00000994 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3075 0000099A 740B                    	je .L_lambda_simple_arity_check_ok_03a5
  3076 0000099C FF742410                	push qword [rsp + 8 * 2]
  3077 000009A0 6A01                    	push 1
  3078 000009A2 E9F8470100              	jmp L_error_incorrect_arity_simple
  3079                                  .L_lambda_simple_arity_check_ok_03a5:
  3080 000009A7 C8000000                	enter 0, 0
  3081                                  	; preparing a tail-call
  3082                                  	; preparing a non-tail-call
  3083 000009AB 488B4520                	mov rax, PARAM(0)	; param x
  3084 000009AF 50                      	push rax
  3085 000009B0 6A01                    	push 1	; arg count
  3086 000009B2 488B0425[73170000]      	mov rax, qword [free_var_69]	; free var cdr
  3087 000009BA 803805                  	cmp byte [rax], T_undefined
  3088 000009BD 0F84F6460100            	je L_error_fvar_undefined
  3089 000009C3 803804                  	cmp byte [rax], T_closure
  3090 000009C6 0F8571470100            	jne L_error_non_closure
  3091 000009CC FF7001                  	push SOB_CLOSURE_ENV(rax)
  3092 000009CF FF5009                  	call SOB_CLOSURE_CODE(rax)
  3093 000009D2 50                      	push rax
  3094 000009D3 6A01                    	push 1	; arg count
  3095 000009D5 488B0425[74160000]      	mov rax, qword [free_var_54]	; free var car
  3096 000009DD 803805                  	cmp byte [rax], T_undefined
  3097 000009E0 0F84D3460100            	je L_error_fvar_undefined
  3098 000009E6 803804                  	cmp byte [rax], T_closure
  3099 000009E9 0F854E470100            	jne L_error_non_closure
  3100 000009EF FF7001                  	push SOB_CLOSURE_ENV(rax)
  3101                                  
  3102                                  	; recycling the current frame
  3103 000009F2 FF7508                  	push qword [rbp + 8 * 1]	; old return address
  3104 000009F5 FF7500                  	push qword [rbp]	; old frame-pointer
  3105 000009F8 B905000000              	mov rcx, 5
  3106 000009FD 488B5D18                	mov rbx, COUNT
  3107 00000A01 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
  3108 00000A06 488D55F8                	lea rdx, [rbp - 8]
  3109                                  .L_tc_recycle_frame_loop_04bd:
  3110 00000A0A 4883F900                	cmp rcx, 0
  3111 00000A0E 7413                    	je .L_tc_recycle_frame_done_04bd
  3112 00000A10 488B32                  	mov rsi, qword [rdx]
  3113 00000A13 488933                  	mov qword [rbx], rsi
  3114 00000A16 48FFC9                  	dec rcx
  3115 00000A19 4883EB08                	sub rbx, 8
  3116 00000A1D 4883EA08                	sub rdx, 8
  3117 00000A21 EBE7                    	jmp .L_tc_recycle_frame_loop_04bd
  3118                                  .L_tc_recycle_frame_done_04bd:
  3119 00000A23 488D6308                	lea rsp, [rbx + 8]
  3120 00000A27 5D                      	pop rbp
  3121 00000A28 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3122 00000A2B C9                      	leave
  3123 00000A2C C21800                  	ret AND_KILL_FRAME(1)
  3124                                  .L_lambda_simple_end_03a5:	; new closure is in rax
  3125 00000A2F 48890425[63160000]      	mov qword [free_var_53], rax
  3126 00000A37 48B8-                   	mov rax, sob_void
  3126 00000A39 [0000000000000000] 
  3127                                  
  3128 00000A41 4889C7                  	mov rdi, rax
  3129 00000A44 E8F2490100              	call print_sexpr_if_not_void
  3130                                  
  3131 00000A49 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3132 00000A4E E893470100              	call malloc
  3133 00000A53 50                      	push rax
  3134 00000A54 BF00000000              	mov rdi, 8 * 0	; new rib
  3135 00000A59 E888470100              	call malloc
  3136 00000A5E 50                      	push rax
  3137 00000A5F BF08000000              	mov rdi, 8 * 1	; extended env
  3138 00000A64 E87D470100              	call malloc
  3139 00000A69 488B7D10                	mov rdi, ENV
  3140 00000A6D BE00000000              	mov rsi, 0
  3141 00000A72 BA01000000              	mov rdx, 1
  3142                                  .L_lambda_simple_env_loop_03a6:	; ext_env[i + 1] <-- env[i]
  3143 00000A77 4883FE00                	cmp rsi, 0
  3144 00000A7B 7410                    	je .L_lambda_simple_env_end_03a6
  3145 00000A7D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3146 00000A81 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3147 00000A85 48FFC6                  	inc rsi
  3148 00000A88 48FFC2                  	inc rdx
  3149 00000A8B EBEA                    	jmp .L_lambda_simple_env_loop_03a6
  3150                                  .L_lambda_simple_env_end_03a6:
  3151 00000A8D 5B                      	pop rbx
  3152 00000A8E BE00000000              	mov rsi, 0
  3153                                  .L_lambda_simple_params_loop_03a6:	; copy params
  3154 00000A93 4883FE00                	cmp rsi, 0
  3155 00000A97 740E                    	je .L_lambda_simple_params_end_03a6
  3156 00000A99 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3157 00000A9E 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3158 00000AA2 48FFC6                  	inc rsi
  3159 00000AA5 EBEC                    	jmp .L_lambda_simple_params_loop_03a6
  3160                                  .L_lambda_simple_params_end_03a6:
  3161 00000AA7 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
  3162 00000AAA 4889C3                  	mov rbx, rax
  3163 00000AAD 58                      	pop rax
  3164 00000AAE C60004                  	mov byte [rax], T_closure
  3165 00000AB1 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3166 00000AB5 48C74009[C20A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03a6
  3167 00000ABD E99B000000              	jmp .L_lambda_simple_end_03a6
  3168                                  .L_lambda_simple_code_03a6:	; lambda-simple body
  3169 00000AC2 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3170 00000AC8 740B                    	je .L_lambda_simple_arity_check_ok_03a6
  3171 00000ACA FF742410                	push qword [rsp + 8 * 2]
  3172 00000ACE 6A01                    	push 1
  3173 00000AD0 E9CA460100              	jmp L_error_incorrect_arity_simple
  3174                                  .L_lambda_simple_arity_check_ok_03a6:
  3175 00000AD5 C8000000                	enter 0, 0
  3176                                  	; preparing a tail-call
  3177                                  	; preparing a non-tail-call
  3178 00000AD9 488B4520                	mov rax, PARAM(0)	; param x
  3179 00000ADD 50                      	push rax
  3180 00000ADE 6A01                    	push 1	; arg count
  3181 00000AE0 488B0425[74160000]      	mov rax, qword [free_var_54]	; free var car
  3182 00000AE8 803805                  	cmp byte [rax], T_undefined
  3183 00000AEB 0F84C8450100            	je L_error_fvar_undefined
  3184 00000AF1 803804                  	cmp byte [rax], T_closure
  3185 00000AF4 0F8543460100            	jne L_error_non_closure
  3186 00000AFA FF7001                  	push SOB_CLOSURE_ENV(rax)
  3187 00000AFD FF5009                  	call SOB_CLOSURE_CODE(rax)
  3188 00000B00 50                      	push rax
  3189 00000B01 6A01                    	push 1	; arg count
  3190 00000B03 488B0425[73170000]      	mov rax, qword [free_var_69]	; free var cdr
  3191 00000B0B 803805                  	cmp byte [rax], T_undefined
  3192 00000B0E 0F84A5450100            	je L_error_fvar_undefined
  3193 00000B14 803804                  	cmp byte [rax], T_closure
  3194 00000B17 0F8520460100            	jne L_error_non_closure
  3195 00000B1D FF7001                  	push SOB_CLOSURE_ENV(rax)
  3196                                  
  3197                                  	; recycling the current frame
  3198 00000B20 FF7508                  	push qword [rbp + 8 * 1]	; old return address
  3199 00000B23 FF7500                  	push qword [rbp]	; old frame-pointer
  3200 00000B26 B905000000              	mov rcx, 5
  3201 00000B2B 488B5D18                	mov rbx, COUNT
  3202 00000B2F 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
  3203 00000B34 488D55F8                	lea rdx, [rbp - 8]
  3204                                  .L_tc_recycle_frame_loop_04be:
  3205 00000B38 4883F900                	cmp rcx, 0
  3206 00000B3C 7413                    	je .L_tc_recycle_frame_done_04be
  3207 00000B3E 488B32                  	mov rsi, qword [rdx]
  3208 00000B41 488933                  	mov qword [rbx], rsi
  3209 00000B44 48FFC9                  	dec rcx
  3210 00000B47 4883EB08                	sub rbx, 8
  3211 00000B4B 4883EA08                	sub rdx, 8
  3212 00000B4F EBE7                    	jmp .L_tc_recycle_frame_loop_04be
  3213                                  .L_tc_recycle_frame_done_04be:
  3214 00000B51 488D6308                	lea rsp, [rbx + 8]
  3215 00000B55 5D                      	pop rbp
  3216 00000B56 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3217 00000B59 C9                      	leave
  3218 00000B5A C21800                  	ret AND_KILL_FRAME(1)
  3219                                  .L_lambda_simple_end_03a6:	; new closure is in rax
  3220 00000B5D 48890425[EB160000]      	mov qword [free_var_61], rax
  3221 00000B65 48B8-                   	mov rax, sob_void
  3221 00000B67 [0000000000000000] 
  3222                                  
  3223 00000B6F 4889C7                  	mov rdi, rax
  3224 00000B72 E8C4480100              	call print_sexpr_if_not_void
  3225                                  
  3226 00000B77 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3227 00000B7C E865460100              	call malloc
  3228 00000B81 50                      	push rax
  3229 00000B82 BF00000000              	mov rdi, 8 * 0	; new rib
  3230 00000B87 E85A460100              	call malloc
  3231 00000B8C 50                      	push rax
  3232 00000B8D BF08000000              	mov rdi, 8 * 1	; extended env
  3233 00000B92 E84F460100              	call malloc
  3234 00000B97 488B7D10                	mov rdi, ENV
  3235 00000B9B BE00000000              	mov rsi, 0
  3236 00000BA0 BA01000000              	mov rdx, 1
  3237                                  .L_lambda_simple_env_loop_03a7:	; ext_env[i + 1] <-- env[i]
  3238 00000BA5 4883FE00                	cmp rsi, 0
  3239 00000BA9 7410                    	je .L_lambda_simple_env_end_03a7
  3240 00000BAB 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3241 00000BAF 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3242 00000BB3 48FFC6                  	inc rsi
  3243 00000BB6 48FFC2                  	inc rdx
  3244 00000BB9 EBEA                    	jmp .L_lambda_simple_env_loop_03a7
  3245                                  .L_lambda_simple_env_end_03a7:
  3246 00000BBB 5B                      	pop rbx
  3247 00000BBC BE00000000              	mov rsi, 0
  3248                                  .L_lambda_simple_params_loop_03a7:	; copy params
  3249 00000BC1 4883FE00                	cmp rsi, 0
  3250 00000BC5 740E                    	je .L_lambda_simple_params_end_03a7
  3251 00000BC7 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3252 00000BCC 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3253 00000BD0 48FFC6                  	inc rsi
  3254 00000BD3 EBEC                    	jmp .L_lambda_simple_params_loop_03a7
  3255                                  .L_lambda_simple_params_end_03a7:
  3256 00000BD5 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
  3257 00000BD8 4889C3                  	mov rbx, rax
  3258 00000BDB 58                      	pop rax
  3259 00000BDC C60004                  	mov byte [rax], T_closure
  3260 00000BDF 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3261 00000BE3 48C74009[F00B0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03a7
  3262 00000BEB E99B000000              	jmp .L_lambda_simple_end_03a7
  3263                                  .L_lambda_simple_code_03a7:	; lambda-simple body
  3264 00000BF0 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3265 00000BF6 740B                    	je .L_lambda_simple_arity_check_ok_03a7
  3266 00000BF8 FF742410                	push qword [rsp + 8 * 2]
  3267 00000BFC 6A01                    	push 1
  3268 00000BFE E99C450100              	jmp L_error_incorrect_arity_simple
  3269                                  .L_lambda_simple_arity_check_ok_03a7:
  3270 00000C03 C8000000                	enter 0, 0
  3271                                  	; preparing a tail-call
  3272                                  	; preparing a non-tail-call
  3273 00000C07 488B4520                	mov rax, PARAM(0)	; param x
  3274 00000C0B 50                      	push rax
  3275 00000C0C 6A01                    	push 1	; arg count
  3276 00000C0E 488B0425[73170000]      	mov rax, qword [free_var_69]	; free var cdr
  3277 00000C16 803805                  	cmp byte [rax], T_undefined
  3278 00000C19 0F849A440100            	je L_error_fvar_undefined
  3279 00000C1F 803804                  	cmp byte [rax], T_closure
  3280 00000C22 0F8515450100            	jne L_error_non_closure
  3281 00000C28 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3282 00000C2B FF5009                  	call SOB_CLOSURE_CODE(rax)
  3283 00000C2E 50                      	push rax
  3284 00000C2F 6A01                    	push 1	; arg count
  3285 00000C31 488B0425[73170000]      	mov rax, qword [free_var_69]	; free var cdr
  3286 00000C39 803805                  	cmp byte [rax], T_undefined
  3287 00000C3C 0F8477440100            	je L_error_fvar_undefined
  3288 00000C42 803804                  	cmp byte [rax], T_closure
  3289 00000C45 0F85F2440100            	jne L_error_non_closure
  3290 00000C4B FF7001                  	push SOB_CLOSURE_ENV(rax)
  3291                                  
  3292                                  	; recycling the current frame
  3293 00000C4E FF7508                  	push qword [rbp + 8 * 1]	; old return address
  3294 00000C51 FF7500                  	push qword [rbp]	; old frame-pointer
  3295 00000C54 B905000000              	mov rcx, 5
  3296 00000C59 488B5D18                	mov rbx, COUNT
  3297 00000C5D 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
  3298 00000C62 488D55F8                	lea rdx, [rbp - 8]
  3299                                  .L_tc_recycle_frame_loop_04bf:
  3300 00000C66 4883F900                	cmp rcx, 0
  3301 00000C6A 7413                    	je .L_tc_recycle_frame_done_04bf
  3302 00000C6C 488B32                  	mov rsi, qword [rdx]
  3303 00000C6F 488933                  	mov qword [rbx], rsi
  3304 00000C72 48FFC9                  	dec rcx
  3305 00000C75 4883EB08                	sub rbx, 8
  3306 00000C79 4883EA08                	sub rdx, 8
  3307 00000C7D EBE7                    	jmp .L_tc_recycle_frame_loop_04bf
  3308                                  .L_tc_recycle_frame_done_04bf:
  3309 00000C7F 488D6308                	lea rsp, [rbx + 8]
  3310 00000C83 5D                      	pop rbp
  3311 00000C84 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3312 00000C87 C9                      	leave
  3313 00000C88 C21800                  	ret AND_KILL_FRAME(1)
  3314                                  .L_lambda_simple_end_03a7:	; new closure is in rax
  3315 00000C8B 48890425[62170000]      	mov qword [free_var_68], rax
  3316 00000C93 48B8-                   	mov rax, sob_void
  3316 00000C95 [0000000000000000] 
  3317                                  
  3318 00000C9D 4889C7                  	mov rdi, rax
  3319 00000CA0 E896470100              	call print_sexpr_if_not_void
  3320                                  
  3321 00000CA5 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3322 00000CAA E837450100              	call malloc
  3323 00000CAF 50                      	push rax
  3324 00000CB0 BF00000000              	mov rdi, 8 * 0	; new rib
  3325 00000CB5 E82C450100              	call malloc
  3326 00000CBA 50                      	push rax
  3327 00000CBB BF08000000              	mov rdi, 8 * 1	; extended env
  3328 00000CC0 E821450100              	call malloc
  3329 00000CC5 488B7D10                	mov rdi, ENV
  3330 00000CC9 BE00000000              	mov rsi, 0
  3331 00000CCE BA01000000              	mov rdx, 1
  3332                                  .L_lambda_simple_env_loop_03a8:	; ext_env[i + 1] <-- env[i]
  3333 00000CD3 4883FE00                	cmp rsi, 0
  3334 00000CD7 7410                    	je .L_lambda_simple_env_end_03a8
  3335 00000CD9 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3336 00000CDD 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3337 00000CE1 48FFC6                  	inc rsi
  3338 00000CE4 48FFC2                  	inc rdx
  3339 00000CE7 EBEA                    	jmp .L_lambda_simple_env_loop_03a8
  3340                                  .L_lambda_simple_env_end_03a8:
  3341 00000CE9 5B                      	pop rbx
  3342 00000CEA BE00000000              	mov rsi, 0
  3343                                  .L_lambda_simple_params_loop_03a8:	; copy params
  3344 00000CEF 4883FE00                	cmp rsi, 0
  3345 00000CF3 740E                    	je .L_lambda_simple_params_end_03a8
  3346 00000CF5 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3347 00000CFA 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3348 00000CFE 48FFC6                  	inc rsi
  3349 00000D01 EBEC                    	jmp .L_lambda_simple_params_loop_03a8
  3350                                  .L_lambda_simple_params_end_03a8:
  3351 00000D03 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
  3352 00000D06 4889C3                  	mov rbx, rax
  3353 00000D09 58                      	pop rax
  3354 00000D0A C60004                  	mov byte [rax], T_closure
  3355 00000D0D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3356 00000D11 48C74009[1E0D0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03a8
  3357 00000D19 E99B000000              	jmp .L_lambda_simple_end_03a8
  3358                                  .L_lambda_simple_code_03a8:	; lambda-simple body
  3359 00000D1E 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3360 00000D24 740B                    	je .L_lambda_simple_arity_check_ok_03a8
  3361 00000D26 FF742410                	push qword [rsp + 8 * 2]
  3362 00000D2A 6A01                    	push 1
  3363 00000D2C E96E440100              	jmp L_error_incorrect_arity_simple
  3364                                  .L_lambda_simple_arity_check_ok_03a8:
  3365 00000D31 C8000000                	enter 0, 0
  3366                                  	; preparing a tail-call
  3367                                  	; preparing a non-tail-call
  3368 00000D35 488B4520                	mov rax, PARAM(0)	; param x
  3369 00000D39 50                      	push rax
  3370 00000D3A 6A01                    	push 1	; arg count
  3371 00000D3C 488B0425[EC150000]      	mov rax, qword [free_var_46]	; free var caar
  3372 00000D44 803805                  	cmp byte [rax], T_undefined
  3373 00000D47 0F846C430100            	je L_error_fvar_undefined
  3374 00000D4D 803804                  	cmp byte [rax], T_closure
  3375 00000D50 0F85E7430100            	jne L_error_non_closure
  3376 00000D56 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3377 00000D59 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3378 00000D5C 50                      	push rax
  3379 00000D5D 6A01                    	push 1	; arg count
  3380 00000D5F 488B0425[74160000]      	mov rax, qword [free_var_54]	; free var car
  3381 00000D67 803805                  	cmp byte [rax], T_undefined
  3382 00000D6A 0F8449430100            	je L_error_fvar_undefined
  3383 00000D70 803804                  	cmp byte [rax], T_closure
  3384 00000D73 0F85C4430100            	jne L_error_non_closure
  3385 00000D79 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3386                                  
  3387                                  	; recycling the current frame
  3388 00000D7C FF7508                  	push qword [rbp + 8 * 1]	; old return address
  3389 00000D7F FF7500                  	push qword [rbp]	; old frame-pointer
  3390 00000D82 B905000000              	mov rcx, 5
  3391 00000D87 488B5D18                	mov rbx, COUNT
  3392 00000D8B 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
  3393 00000D90 488D55F8                	lea rdx, [rbp - 8]
  3394                                  .L_tc_recycle_frame_loop_04c0:
  3395 00000D94 4883F900                	cmp rcx, 0
  3396 00000D98 7413                    	je .L_tc_recycle_frame_done_04c0
  3397 00000D9A 488B32                  	mov rsi, qword [rdx]
  3398 00000D9D 488933                  	mov qword [rbx], rsi
  3399 00000DA0 48FFC9                  	dec rcx
  3400 00000DA3 4883EB08                	sub rbx, 8
  3401 00000DA7 4883EA08                	sub rdx, 8
  3402 00000DAB EBE7                    	jmp .L_tc_recycle_frame_loop_04c0
  3403                                  .L_tc_recycle_frame_done_04c0:
  3404 00000DAD 488D6308                	lea rsp, [rbx + 8]
  3405 00000DB1 5D                      	pop rbp
  3406 00000DB2 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3407 00000DB5 C9                      	leave
  3408 00000DB6 C21800                  	ret AND_KILL_FRAME(1)
  3409                                  .L_lambda_simple_end_03a8:	; new closure is in rax
  3410 00000DB9 48890425[A8150000]      	mov qword [free_var_42], rax
  3411 00000DC1 48B8-                   	mov rax, sob_void
  3411 00000DC3 [0000000000000000] 
  3412                                  
  3413 00000DCB 4889C7                  	mov rdi, rax
  3414 00000DCE E868460100              	call print_sexpr_if_not_void
  3415                                  
  3416 00000DD3 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3417 00000DD8 E809440100              	call malloc
  3418 00000DDD 50                      	push rax
  3419 00000DDE BF00000000              	mov rdi, 8 * 0	; new rib
  3420 00000DE3 E8FE430100              	call malloc
  3421 00000DE8 50                      	push rax
  3422 00000DE9 BF08000000              	mov rdi, 8 * 1	; extended env
  3423 00000DEE E8F3430100              	call malloc
  3424 00000DF3 488B7D10                	mov rdi, ENV
  3425 00000DF7 BE00000000              	mov rsi, 0
  3426 00000DFC BA01000000              	mov rdx, 1
  3427                                  .L_lambda_simple_env_loop_03a9:	; ext_env[i + 1] <-- env[i]
  3428 00000E01 4883FE00                	cmp rsi, 0
  3429 00000E05 7410                    	je .L_lambda_simple_env_end_03a9
  3430 00000E07 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3431 00000E0B 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3432 00000E0F 48FFC6                  	inc rsi
  3433 00000E12 48FFC2                  	inc rdx
  3434 00000E15 EBEA                    	jmp .L_lambda_simple_env_loop_03a9
  3435                                  .L_lambda_simple_env_end_03a9:
  3436 00000E17 5B                      	pop rbx
  3437 00000E18 BE00000000              	mov rsi, 0
  3438                                  .L_lambda_simple_params_loop_03a9:	; copy params
  3439 00000E1D 4883FE00                	cmp rsi, 0
  3440 00000E21 740E                    	je .L_lambda_simple_params_end_03a9
  3441 00000E23 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3442 00000E28 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3443 00000E2C 48FFC6                  	inc rsi
  3444 00000E2F EBEC                    	jmp .L_lambda_simple_params_loop_03a9
  3445                                  .L_lambda_simple_params_end_03a9:
  3446 00000E31 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
  3447 00000E34 4889C3                  	mov rbx, rax
  3448 00000E37 58                      	pop rax
  3449 00000E38 C60004                  	mov byte [rax], T_closure
  3450 00000E3B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3451 00000E3F 48C74009[4C0E0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03a9
  3452 00000E47 E99B000000              	jmp .L_lambda_simple_end_03a9
  3453                                  .L_lambda_simple_code_03a9:	; lambda-simple body
  3454 00000E4C 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3455 00000E52 740B                    	je .L_lambda_simple_arity_check_ok_03a9
  3456 00000E54 FF742410                	push qword [rsp + 8 * 2]
  3457 00000E58 6A01                    	push 1
  3458 00000E5A E940430100              	jmp L_error_incorrect_arity_simple
  3459                                  .L_lambda_simple_arity_check_ok_03a9:
  3460 00000E5F C8000000                	enter 0, 0
  3461                                  	; preparing a tail-call
  3462                                  	; preparing a non-tail-call
  3463 00000E63 488B4520                	mov rax, PARAM(0)	; param x
  3464 00000E67 50                      	push rax
  3465 00000E68 6A01                    	push 1	; arg count
  3466 00000E6A 488B0425[63160000]      	mov rax, qword [free_var_53]	; free var cadr
  3467 00000E72 803805                  	cmp byte [rax], T_undefined
  3468 00000E75 0F843E420100            	je L_error_fvar_undefined
  3469 00000E7B 803804                  	cmp byte [rax], T_closure
  3470 00000E7E 0F85B9420100            	jne L_error_non_closure
  3471 00000E84 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3472 00000E87 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3473 00000E8A 50                      	push rax
  3474 00000E8B 6A01                    	push 1	; arg count
  3475 00000E8D 488B0425[74160000]      	mov rax, qword [free_var_54]	; free var car
  3476 00000E95 803805                  	cmp byte [rax], T_undefined
  3477 00000E98 0F841B420100            	je L_error_fvar_undefined
  3478 00000E9E 803804                  	cmp byte [rax], T_closure
  3479 00000EA1 0F8596420100            	jne L_error_non_closure
  3480 00000EA7 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3481                                  
  3482                                  	; recycling the current frame
  3483 00000EAA FF7508                  	push qword [rbp + 8 * 1]	; old return address
  3484 00000EAD FF7500                  	push qword [rbp]	; old frame-pointer
  3485 00000EB0 B905000000              	mov rcx, 5
  3486 00000EB5 488B5D18                	mov rbx, COUNT
  3487 00000EB9 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
  3488 00000EBE 488D55F8                	lea rdx, [rbp - 8]
  3489                                  .L_tc_recycle_frame_loop_04c1:
  3490 00000EC2 4883F900                	cmp rcx, 0
  3491 00000EC6 7413                    	je .L_tc_recycle_frame_done_04c1
  3492 00000EC8 488B32                  	mov rsi, qword [rdx]
  3493 00000ECB 488933                  	mov qword [rbx], rsi
  3494 00000ECE 48FFC9                  	dec rcx
  3495 00000ED1 4883EB08                	sub rbx, 8
  3496 00000ED5 4883EA08                	sub rdx, 8
  3497 00000ED9 EBE7                    	jmp .L_tc_recycle_frame_loop_04c1
  3498                                  .L_tc_recycle_frame_done_04c1:
  3499 00000EDB 488D6308                	lea rsp, [rbx + 8]
  3500 00000EDF 5D                      	pop rbp
  3501 00000EE0 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3502 00000EE3 C9                      	leave
  3503 00000EE4 C21800                  	ret AND_KILL_FRAME(1)
  3504                                  .L_lambda_simple_end_03a9:	; new closure is in rax
  3505 00000EE7 48890425[DB150000]      	mov qword [free_var_45], rax
  3506 00000EEF 48B8-                   	mov rax, sob_void
  3506 00000EF1 [0000000000000000] 
  3507                                  
  3508 00000EF9 4889C7                  	mov rdi, rax
  3509 00000EFC E83A450100              	call print_sexpr_if_not_void
  3510                                  
  3511 00000F01 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3512 00000F06 E8DB420100              	call malloc
  3513 00000F0B 50                      	push rax
  3514 00000F0C BF00000000              	mov rdi, 8 * 0	; new rib
  3515 00000F11 E8D0420100              	call malloc
  3516 00000F16 50                      	push rax
  3517 00000F17 BF08000000              	mov rdi, 8 * 1	; extended env
  3518 00000F1C E8C5420100              	call malloc
  3519 00000F21 488B7D10                	mov rdi, ENV
  3520 00000F25 BE00000000              	mov rsi, 0
  3521 00000F2A BA01000000              	mov rdx, 1
  3522                                  .L_lambda_simple_env_loop_03aa:	; ext_env[i + 1] <-- env[i]
  3523 00000F2F 4883FE00                	cmp rsi, 0
  3524 00000F33 7410                    	je .L_lambda_simple_env_end_03aa
  3525 00000F35 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3526 00000F39 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3527 00000F3D 48FFC6                  	inc rsi
  3528 00000F40 48FFC2                  	inc rdx
  3529 00000F43 EBEA                    	jmp .L_lambda_simple_env_loop_03aa
  3530                                  .L_lambda_simple_env_end_03aa:
  3531 00000F45 5B                      	pop rbx
  3532 00000F46 BE00000000              	mov rsi, 0
  3533                                  .L_lambda_simple_params_loop_03aa:	; copy params
  3534 00000F4B 4883FE00                	cmp rsi, 0
  3535 00000F4F 740E                    	je .L_lambda_simple_params_end_03aa
  3536 00000F51 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3537 00000F56 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3538 00000F5A 48FFC6                  	inc rsi
  3539 00000F5D EBEC                    	jmp .L_lambda_simple_params_loop_03aa
  3540                                  .L_lambda_simple_params_end_03aa:
  3541 00000F5F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
  3542 00000F62 4889C3                  	mov rbx, rax
  3543 00000F65 58                      	pop rax
  3544 00000F66 C60004                  	mov byte [rax], T_closure
  3545 00000F69 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3546 00000F6D 48C74009[7A0F0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03aa
  3547 00000F75 E99B000000              	jmp .L_lambda_simple_end_03aa
  3548                                  .L_lambda_simple_code_03aa:	; lambda-simple body
  3549 00000F7A 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3550 00000F80 740B                    	je .L_lambda_simple_arity_check_ok_03aa
  3551 00000F82 FF742410                	push qword [rsp + 8 * 2]
  3552 00000F86 6A01                    	push 1
  3553 00000F88 E912420100              	jmp L_error_incorrect_arity_simple
  3554                                  .L_lambda_simple_arity_check_ok_03aa:
  3555 00000F8D C8000000                	enter 0, 0
  3556                                  	; preparing a tail-call
  3557                                  	; preparing a non-tail-call
  3558 00000F91 488B4520                	mov rax, PARAM(0)	; param x
  3559 00000F95 50                      	push rax
  3560 00000F96 6A01                    	push 1	; arg count
  3561 00000F98 488B0425[EB160000]      	mov rax, qword [free_var_61]	; free var cdar
  3562 00000FA0 803805                  	cmp byte [rax], T_undefined
  3563 00000FA3 0F8410410100            	je L_error_fvar_undefined
  3564 00000FA9 803804                  	cmp byte [rax], T_closure
  3565 00000FAC 0F858B410100            	jne L_error_non_closure
  3566 00000FB2 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3567 00000FB5 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3568 00000FB8 50                      	push rax
  3569 00000FB9 6A01                    	push 1	; arg count
  3570 00000FBB 488B0425[74160000]      	mov rax, qword [free_var_54]	; free var car
  3571 00000FC3 803805                  	cmp byte [rax], T_undefined
  3572 00000FC6 0F84ED400100            	je L_error_fvar_undefined
  3573 00000FCC 803804                  	cmp byte [rax], T_closure
  3574 00000FCF 0F8568410100            	jne L_error_non_closure
  3575 00000FD5 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3576                                  
  3577                                  	; recycling the current frame
  3578 00000FD8 FF7508                  	push qword [rbp + 8 * 1]	; old return address
  3579 00000FDB FF7500                  	push qword [rbp]	; old frame-pointer
  3580 00000FDE B905000000              	mov rcx, 5
  3581 00000FE3 488B5D18                	mov rbx, COUNT
  3582 00000FE7 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
  3583 00000FEC 488D55F8                	lea rdx, [rbp - 8]
  3584                                  .L_tc_recycle_frame_loop_04c2:
  3585 00000FF0 4883F900                	cmp rcx, 0
  3586 00000FF4 7413                    	je .L_tc_recycle_frame_done_04c2
  3587 00000FF6 488B32                  	mov rsi, qword [rdx]
  3588 00000FF9 488933                  	mov qword [rbx], rsi
  3589 00000FFC 48FFC9                  	dec rcx
  3590 00000FFF 4883EB08                	sub rbx, 8
  3591 00001003 4883EA08                	sub rdx, 8
  3592 00001007 EBE7                    	jmp .L_tc_recycle_frame_loop_04c2
  3593                                  .L_tc_recycle_frame_done_04c2:
  3594 00001009 488D6308                	lea rsp, [rbx + 8]
  3595 0000100D 5D                      	pop rbp
  3596 0000100E FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3597 00001011 C9                      	leave
  3598 00001012 C21800                  	ret AND_KILL_FRAME(1)
  3599                                  .L_lambda_simple_end_03aa:	; new closure is in rax
  3600 00001015 48890425[1F160000]      	mov qword [free_var_49], rax
  3601 0000101D 48B8-                   	mov rax, sob_void
  3601 0000101F [0000000000000000] 
  3602                                  
  3603 00001027 4889C7                  	mov rdi, rax
  3604 0000102A E80C440100              	call print_sexpr_if_not_void
  3605                                  
  3606 0000102F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3607 00001034 E8AD410100              	call malloc
  3608 00001039 50                      	push rax
  3609 0000103A BF00000000              	mov rdi, 8 * 0	; new rib
  3610 0000103F E8A2410100              	call malloc
  3611 00001044 50                      	push rax
  3612 00001045 BF08000000              	mov rdi, 8 * 1	; extended env
  3613 0000104A E897410100              	call malloc
  3614 0000104F 488B7D10                	mov rdi, ENV
  3615 00001053 BE00000000              	mov rsi, 0
  3616 00001058 BA01000000              	mov rdx, 1
  3617                                  .L_lambda_simple_env_loop_03ab:	; ext_env[i + 1] <-- env[i]
  3618 0000105D 4883FE00                	cmp rsi, 0
  3619 00001061 7410                    	je .L_lambda_simple_env_end_03ab
  3620 00001063 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3621 00001067 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3622 0000106B 48FFC6                  	inc rsi
  3623 0000106E 48FFC2                  	inc rdx
  3624 00001071 EBEA                    	jmp .L_lambda_simple_env_loop_03ab
  3625                                  .L_lambda_simple_env_end_03ab:
  3626 00001073 5B                      	pop rbx
  3627 00001074 BE00000000              	mov rsi, 0
  3628                                  .L_lambda_simple_params_loop_03ab:	; copy params
  3629 00001079 4883FE00                	cmp rsi, 0
  3630 0000107D 740E                    	je .L_lambda_simple_params_end_03ab
  3631 0000107F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3632 00001084 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3633 00001088 48FFC6                  	inc rsi
  3634 0000108B EBEC                    	jmp .L_lambda_simple_params_loop_03ab
  3635                                  .L_lambda_simple_params_end_03ab:
  3636 0000108D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
  3637 00001090 4889C3                  	mov rbx, rax
  3638 00001093 58                      	pop rax
  3639 00001094 C60004                  	mov byte [rax], T_closure
  3640 00001097 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3641 0000109B 48C74009[A8100000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03ab
  3642 000010A3 E99B000000              	jmp .L_lambda_simple_end_03ab
  3643                                  .L_lambda_simple_code_03ab:	; lambda-simple body
  3644 000010A8 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3645 000010AE 740B                    	je .L_lambda_simple_arity_check_ok_03ab
  3646 000010B0 FF742410                	push qword [rsp + 8 * 2]
  3647 000010B4 6A01                    	push 1
  3648 000010B6 E9E4400100              	jmp L_error_incorrect_arity_simple
  3649                                  .L_lambda_simple_arity_check_ok_03ab:
  3650 000010BB C8000000                	enter 0, 0
  3651                                  	; preparing a tail-call
  3652                                  	; preparing a non-tail-call
  3653 000010BF 488B4520                	mov rax, PARAM(0)	; param x
  3654 000010C3 50                      	push rax
  3655 000010C4 6A01                    	push 1	; arg count
  3656 000010C6 488B0425[62170000]      	mov rax, qword [free_var_68]	; free var cddr
  3657 000010CE 803805                  	cmp byte [rax], T_undefined
  3658 000010D1 0F84E23F0100            	je L_error_fvar_undefined
  3659 000010D7 803804                  	cmp byte [rax], T_closure
  3660 000010DA 0F855D400100            	jne L_error_non_closure
  3661 000010E0 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3662 000010E3 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3663 000010E6 50                      	push rax
  3664 000010E7 6A01                    	push 1	; arg count
  3665 000010E9 488B0425[74160000]      	mov rax, qword [free_var_54]	; free var car
  3666 000010F1 803805                  	cmp byte [rax], T_undefined
  3667 000010F4 0F84BF3F0100            	je L_error_fvar_undefined
  3668 000010FA 803804                  	cmp byte [rax], T_closure
  3669 000010FD 0F853A400100            	jne L_error_non_closure
  3670 00001103 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3671                                  
  3672                                  	; recycling the current frame
  3673 00001106 FF7508                  	push qword [rbp + 8 * 1]	; old return address
  3674 00001109 FF7500                  	push qword [rbp]	; old frame-pointer
  3675 0000110C B905000000              	mov rcx, 5
  3676 00001111 488B5D18                	mov rbx, COUNT
  3677 00001115 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
  3678 0000111A 488D55F8                	lea rdx, [rbp - 8]
  3679                                  .L_tc_recycle_frame_loop_04c3:
  3680 0000111E 4883F900                	cmp rcx, 0
  3681 00001122 7413                    	je .L_tc_recycle_frame_done_04c3
  3682 00001124 488B32                  	mov rsi, qword [rdx]
  3683 00001127 488933                  	mov qword [rbx], rsi
  3684 0000112A 48FFC9                  	dec rcx
  3685 0000112D 4883EB08                	sub rbx, 8
  3686 00001131 4883EA08                	sub rdx, 8
  3687 00001135 EBE7                    	jmp .L_tc_recycle_frame_loop_04c3
  3688                                  .L_tc_recycle_frame_done_04c3:
  3689 00001137 488D6308                	lea rsp, [rbx + 8]
  3690 0000113B 5D                      	pop rbp
  3691 0000113C FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3692 0000113F C9                      	leave
  3693 00001140 C21800                  	ret AND_KILL_FRAME(1)
  3694                                  .L_lambda_simple_end_03ab:	; new closure is in rax
  3695 00001143 48890425[52160000]      	mov qword [free_var_52], rax
  3696 0000114B 48B8-                   	mov rax, sob_void
  3696 0000114D [0000000000000000] 
  3697                                  
  3698 00001155 4889C7                  	mov rdi, rax
  3699 00001158 E8DE420100              	call print_sexpr_if_not_void
  3700                                  
  3701 0000115D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3702 00001162 E87F400100              	call malloc
  3703 00001167 50                      	push rax
  3704 00001168 BF00000000              	mov rdi, 8 * 0	; new rib
  3705 0000116D E874400100              	call malloc
  3706 00001172 50                      	push rax
  3707 00001173 BF08000000              	mov rdi, 8 * 1	; extended env
  3708 00001178 E869400100              	call malloc
  3709 0000117D 488B7D10                	mov rdi, ENV
  3710 00001181 BE00000000              	mov rsi, 0
  3711 00001186 BA01000000              	mov rdx, 1
  3712                                  .L_lambda_simple_env_loop_03ac:	; ext_env[i + 1] <-- env[i]
  3713 0000118B 4883FE00                	cmp rsi, 0
  3714 0000118F 7410                    	je .L_lambda_simple_env_end_03ac
  3715 00001191 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3716 00001195 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3717 00001199 48FFC6                  	inc rsi
  3718 0000119C 48FFC2                  	inc rdx
  3719 0000119F EBEA                    	jmp .L_lambda_simple_env_loop_03ac
  3720                                  .L_lambda_simple_env_end_03ac:
  3721 000011A1 5B                      	pop rbx
  3722 000011A2 BE00000000              	mov rsi, 0
  3723                                  .L_lambda_simple_params_loop_03ac:	; copy params
  3724 000011A7 4883FE00                	cmp rsi, 0
  3725 000011AB 740E                    	je .L_lambda_simple_params_end_03ac
  3726 000011AD 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3727 000011B2 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3728 000011B6 48FFC6                  	inc rsi
  3729 000011B9 EBEC                    	jmp .L_lambda_simple_params_loop_03ac
  3730                                  .L_lambda_simple_params_end_03ac:
  3731 000011BB 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
  3732 000011BE 4889C3                  	mov rbx, rax
  3733 000011C1 58                      	pop rax
  3734 000011C2 C60004                  	mov byte [rax], T_closure
  3735 000011C5 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3736 000011C9 48C74009[D6110000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03ac
  3737 000011D1 E99B000000              	jmp .L_lambda_simple_end_03ac
  3738                                  .L_lambda_simple_code_03ac:	; lambda-simple body
  3739 000011D6 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3740 000011DC 740B                    	je .L_lambda_simple_arity_check_ok_03ac
  3741 000011DE FF742410                	push qword [rsp + 8 * 2]
  3742 000011E2 6A01                    	push 1
  3743 000011E4 E9B63F0100              	jmp L_error_incorrect_arity_simple
  3744                                  .L_lambda_simple_arity_check_ok_03ac:
  3745 000011E9 C8000000                	enter 0, 0
  3746                                  	; preparing a tail-call
  3747                                  	; preparing a non-tail-call
  3748 000011ED 488B4520                	mov rax, PARAM(0)	; param x
  3749 000011F1 50                      	push rax
  3750 000011F2 6A01                    	push 1	; arg count
  3751 000011F4 488B0425[EC150000]      	mov rax, qword [free_var_46]	; free var caar
  3752 000011FC 803805                  	cmp byte [rax], T_undefined
  3753 000011FF 0F84B43E0100            	je L_error_fvar_undefined
  3754 00001205 803804                  	cmp byte [rax], T_closure
  3755 00001208 0F852F3F0100            	jne L_error_non_closure
  3756 0000120E FF7001                  	push SOB_CLOSURE_ENV(rax)
  3757 00001211 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3758 00001214 50                      	push rax
  3759 00001215 6A01                    	push 1	; arg count
  3760 00001217 488B0425[73170000]      	mov rax, qword [free_var_69]	; free var cdr
  3761 0000121F 803805                  	cmp byte [rax], T_undefined
  3762 00001222 0F84913E0100            	je L_error_fvar_undefined
  3763 00001228 803804                  	cmp byte [rax], T_closure
  3764 0000122B 0F850C3F0100            	jne L_error_non_closure
  3765 00001231 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3766                                  
  3767                                  	; recycling the current frame
  3768 00001234 FF7508                  	push qword [rbp + 8 * 1]	; old return address
  3769 00001237 FF7500                  	push qword [rbp]	; old frame-pointer
  3770 0000123A B905000000              	mov rcx, 5
  3771 0000123F 488B5D18                	mov rbx, COUNT
  3772 00001243 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
  3773 00001248 488D55F8                	lea rdx, [rbp - 8]
  3774                                  .L_tc_recycle_frame_loop_04c4:
  3775 0000124C 4883F900                	cmp rcx, 0
  3776 00001250 7413                    	je .L_tc_recycle_frame_done_04c4
  3777 00001252 488B32                  	mov rsi, qword [rdx]
  3778 00001255 488933                  	mov qword [rbx], rsi
  3779 00001258 48FFC9                  	dec rcx
  3780 0000125B 4883EB08                	sub rbx, 8
  3781 0000125F 4883EA08                	sub rdx, 8
  3782 00001263 EBE7                    	jmp .L_tc_recycle_frame_loop_04c4
  3783                                  .L_tc_recycle_frame_done_04c4:
  3784 00001265 488D6308                	lea rsp, [rbx + 8]
  3785 00001269 5D                      	pop rbp
  3786 0000126A FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3787 0000126D C9                      	leave
  3788 0000126E C21800                  	ret AND_KILL_FRAME(1)
  3789                                  .L_lambda_simple_end_03ac:	; new closure is in rax
  3790 00001271 48890425[A7160000]      	mov qword [free_var_57], rax
  3791 00001279 48B8-                   	mov rax, sob_void
  3791 0000127B [0000000000000000] 
  3792                                  
  3793 00001283 4889C7                  	mov rdi, rax
  3794 00001286 E8B0410100              	call print_sexpr_if_not_void
  3795                                  
  3796 0000128B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3797 00001290 E8513F0100              	call malloc
  3798 00001295 50                      	push rax
  3799 00001296 BF00000000              	mov rdi, 8 * 0	; new rib
  3800 0000129B E8463F0100              	call malloc
  3801 000012A0 50                      	push rax
  3802 000012A1 BF08000000              	mov rdi, 8 * 1	; extended env
  3803 000012A6 E83B3F0100              	call malloc
  3804 000012AB 488B7D10                	mov rdi, ENV
  3805 000012AF BE00000000              	mov rsi, 0
  3806 000012B4 BA01000000              	mov rdx, 1
  3807                                  .L_lambda_simple_env_loop_03ad:	; ext_env[i + 1] <-- env[i]
  3808 000012B9 4883FE00                	cmp rsi, 0
  3809 000012BD 7410                    	je .L_lambda_simple_env_end_03ad
  3810 000012BF 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3811 000012C3 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3812 000012C7 48FFC6                  	inc rsi
  3813 000012CA 48FFC2                  	inc rdx
  3814 000012CD EBEA                    	jmp .L_lambda_simple_env_loop_03ad
  3815                                  .L_lambda_simple_env_end_03ad:
  3816 000012CF 5B                      	pop rbx
  3817 000012D0 BE00000000              	mov rsi, 0
  3818                                  .L_lambda_simple_params_loop_03ad:	; copy params
  3819 000012D5 4883FE00                	cmp rsi, 0
  3820 000012D9 740E                    	je .L_lambda_simple_params_end_03ad
  3821 000012DB 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3822 000012E0 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3823 000012E4 48FFC6                  	inc rsi
  3824 000012E7 EBEC                    	jmp .L_lambda_simple_params_loop_03ad
  3825                                  .L_lambda_simple_params_end_03ad:
  3826 000012E9 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
  3827 000012EC 4889C3                  	mov rbx, rax
  3828 000012EF 58                      	pop rax
  3829 000012F0 C60004                  	mov byte [rax], T_closure
  3830 000012F3 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3831 000012F7 48C74009[04130000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03ad
  3832 000012FF E99B000000              	jmp .L_lambda_simple_end_03ad
  3833                                  .L_lambda_simple_code_03ad:	; lambda-simple body
  3834 00001304 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3835 0000130A 740B                    	je .L_lambda_simple_arity_check_ok_03ad
  3836 0000130C FF742410                	push qword [rsp + 8 * 2]
  3837 00001310 6A01                    	push 1
  3838 00001312 E9883E0100              	jmp L_error_incorrect_arity_simple
  3839                                  .L_lambda_simple_arity_check_ok_03ad:
  3840 00001317 C8000000                	enter 0, 0
  3841                                  	; preparing a tail-call
  3842                                  	; preparing a non-tail-call
  3843 0000131B 488B4520                	mov rax, PARAM(0)	; param x
  3844 0000131F 50                      	push rax
  3845 00001320 6A01                    	push 1	; arg count
  3846 00001322 488B0425[63160000]      	mov rax, qword [free_var_53]	; free var cadr
  3847 0000132A 803805                  	cmp byte [rax], T_undefined
  3848 0000132D 0F84863D0100            	je L_error_fvar_undefined
  3849 00001333 803804                  	cmp byte [rax], T_closure
  3850 00001336 0F85013E0100            	jne L_error_non_closure
  3851 0000133C FF7001                  	push SOB_CLOSURE_ENV(rax)
  3852 0000133F FF5009                  	call SOB_CLOSURE_CODE(rax)
  3853 00001342 50                      	push rax
  3854 00001343 6A01                    	push 1	; arg count
  3855 00001345 488B0425[73170000]      	mov rax, qword [free_var_69]	; free var cdr
  3856 0000134D 803805                  	cmp byte [rax], T_undefined
  3857 00001350 0F84633D0100            	je L_error_fvar_undefined
  3858 00001356 803804                  	cmp byte [rax], T_closure
  3859 00001359 0F85DE3D0100            	jne L_error_non_closure
  3860 0000135F FF7001                  	push SOB_CLOSURE_ENV(rax)
  3861                                  
  3862                                  	; recycling the current frame
  3863 00001362 FF7508                  	push qword [rbp + 8 * 1]	; old return address
  3864 00001365 FF7500                  	push qword [rbp]	; old frame-pointer
  3865 00001368 B905000000              	mov rcx, 5
  3866 0000136D 488B5D18                	mov rbx, COUNT
  3867 00001371 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
  3868 00001376 488D55F8                	lea rdx, [rbp - 8]
  3869                                  .L_tc_recycle_frame_loop_04c5:
  3870 0000137A 4883F900                	cmp rcx, 0
  3871 0000137E 7413                    	je .L_tc_recycle_frame_done_04c5
  3872 00001380 488B32                  	mov rsi, qword [rdx]
  3873 00001383 488933                  	mov qword [rbx], rsi
  3874 00001386 48FFC9                  	dec rcx
  3875 00001389 4883EB08                	sub rbx, 8
  3876 0000138D 4883EA08                	sub rdx, 8
  3877 00001391 EBE7                    	jmp .L_tc_recycle_frame_loop_04c5
  3878                                  .L_tc_recycle_frame_done_04c5:
  3879 00001393 488D6308                	lea rsp, [rbx + 8]
  3880 00001397 5D                      	pop rbp
  3881 00001398 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3882 0000139B C9                      	leave
  3883 0000139C C21800                  	ret AND_KILL_FRAME(1)
  3884                                  .L_lambda_simple_end_03ad:	; new closure is in rax
  3885 0000139F 48890425[DA160000]      	mov qword [free_var_60], rax
  3886 000013A7 48B8-                   	mov rax, sob_void
  3886 000013A9 [0000000000000000] 
  3887                                  
  3888 000013B1 4889C7                  	mov rdi, rax
  3889 000013B4 E882400100              	call print_sexpr_if_not_void
  3890                                  
  3891 000013B9 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3892 000013BE E8233E0100              	call malloc
  3893 000013C3 50                      	push rax
  3894 000013C4 BF00000000              	mov rdi, 8 * 0	; new rib
  3895 000013C9 E8183E0100              	call malloc
  3896 000013CE 50                      	push rax
  3897 000013CF BF08000000              	mov rdi, 8 * 1	; extended env
  3898 000013D4 E80D3E0100              	call malloc
  3899 000013D9 488B7D10                	mov rdi, ENV
  3900 000013DD BE00000000              	mov rsi, 0
  3901 000013E2 BA01000000              	mov rdx, 1
  3902                                  .L_lambda_simple_env_loop_03ae:	; ext_env[i + 1] <-- env[i]
  3903 000013E7 4883FE00                	cmp rsi, 0
  3904 000013EB 7410                    	je .L_lambda_simple_env_end_03ae
  3905 000013ED 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3906 000013F1 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3907 000013F5 48FFC6                  	inc rsi
  3908 000013F8 48FFC2                  	inc rdx
  3909 000013FB EBEA                    	jmp .L_lambda_simple_env_loop_03ae
  3910                                  .L_lambda_simple_env_end_03ae:
  3911 000013FD 5B                      	pop rbx
  3912 000013FE BE00000000              	mov rsi, 0
  3913                                  .L_lambda_simple_params_loop_03ae:	; copy params
  3914 00001403 4883FE00                	cmp rsi, 0
  3915 00001407 740E                    	je .L_lambda_simple_params_end_03ae
  3916 00001409 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3917 0000140E 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3918 00001412 48FFC6                  	inc rsi
  3919 00001415 EBEC                    	jmp .L_lambda_simple_params_loop_03ae
  3920                                  .L_lambda_simple_params_end_03ae:
  3921 00001417 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
  3922 0000141A 4889C3                  	mov rbx, rax
  3923 0000141D 58                      	pop rax
  3924 0000141E C60004                  	mov byte [rax], T_closure
  3925 00001421 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3926 00001425 48C74009[32140000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03ae
  3927 0000142D E99B000000              	jmp .L_lambda_simple_end_03ae
  3928                                  .L_lambda_simple_code_03ae:	; lambda-simple body
  3929 00001432 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3930 00001438 740B                    	je .L_lambda_simple_arity_check_ok_03ae
  3931 0000143A FF742410                	push qword [rsp + 8 * 2]
  3932 0000143E 6A01                    	push 1
  3933 00001440 E95A3D0100              	jmp L_error_incorrect_arity_simple
  3934                                  .L_lambda_simple_arity_check_ok_03ae:
  3935 00001445 C8000000                	enter 0, 0
  3936                                  	; preparing a tail-call
  3937                                  	; preparing a non-tail-call
  3938 00001449 488B4520                	mov rax, PARAM(0)	; param x
  3939 0000144D 50                      	push rax
  3940 0000144E 6A01                    	push 1	; arg count
  3941 00001450 488B0425[EB160000]      	mov rax, qword [free_var_61]	; free var cdar
  3942 00001458 803805                  	cmp byte [rax], T_undefined
  3943 0000145B 0F84583C0100            	je L_error_fvar_undefined
  3944 00001461 803804                  	cmp byte [rax], T_closure
  3945 00001464 0F85D33C0100            	jne L_error_non_closure
  3946 0000146A FF7001                  	push SOB_CLOSURE_ENV(rax)
  3947 0000146D FF5009                  	call SOB_CLOSURE_CODE(rax)
  3948 00001470 50                      	push rax
  3949 00001471 6A01                    	push 1	; arg count
  3950 00001473 488B0425[73170000]      	mov rax, qword [free_var_69]	; free var cdr
  3951 0000147B 803805                  	cmp byte [rax], T_undefined
  3952 0000147E 0F84353C0100            	je L_error_fvar_undefined
  3953 00001484 803804                  	cmp byte [rax], T_closure
  3954 00001487 0F85B03C0100            	jne L_error_non_closure
  3955 0000148D FF7001                  	push SOB_CLOSURE_ENV(rax)
  3956                                  
  3957                                  	; recycling the current frame
  3958 00001490 FF7508                  	push qword [rbp + 8 * 1]	; old return address
  3959 00001493 FF7500                  	push qword [rbp]	; old frame-pointer
  3960 00001496 B905000000              	mov rcx, 5
  3961 0000149B 488B5D18                	mov rbx, COUNT
  3962 0000149F 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
  3963 000014A4 488D55F8                	lea rdx, [rbp - 8]
  3964                                  .L_tc_recycle_frame_loop_04c6:
  3965 000014A8 4883F900                	cmp rcx, 0
  3966 000014AC 7413                    	je .L_tc_recycle_frame_done_04c6
  3967 000014AE 488B32                  	mov rsi, qword [rdx]
  3968 000014B1 488933                  	mov qword [rbx], rsi
  3969 000014B4 48FFC9                  	dec rcx
  3970 000014B7 4883EB08                	sub rbx, 8
  3971 000014BB 4883EA08                	sub rdx, 8
  3972 000014BF EBE7                    	jmp .L_tc_recycle_frame_loop_04c6
  3973                                  .L_tc_recycle_frame_done_04c6:
  3974 000014C1 488D6308                	lea rsp, [rbx + 8]
  3975 000014C5 5D                      	pop rbp
  3976 000014C6 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3977 000014C9 C9                      	leave
  3978 000014CA C21800                  	ret AND_KILL_FRAME(1)
  3979                                  .L_lambda_simple_end_03ae:	; new closure is in rax
  3980 000014CD 48890425[1E170000]      	mov qword [free_var_64], rax
  3981 000014D5 48B8-                   	mov rax, sob_void
  3981 000014D7 [0000000000000000] 
  3982                                  
  3983 000014DF 4889C7                  	mov rdi, rax
  3984 000014E2 E8543F0100              	call print_sexpr_if_not_void
  3985                                  
  3986 000014E7 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3987 000014EC E8F53C0100              	call malloc
  3988 000014F1 50                      	push rax
  3989 000014F2 BF00000000              	mov rdi, 8 * 0	; new rib
  3990 000014F7 E8EA3C0100              	call malloc
  3991 000014FC 50                      	push rax
  3992 000014FD BF08000000              	mov rdi, 8 * 1	; extended env
  3993 00001502 E8DF3C0100              	call malloc
  3994 00001507 488B7D10                	mov rdi, ENV
  3995 0000150B BE00000000              	mov rsi, 0
  3996 00001510 BA01000000              	mov rdx, 1
  3997                                  .L_lambda_simple_env_loop_03af:	; ext_env[i + 1] <-- env[i]
  3998 00001515 4883FE00                	cmp rsi, 0
  3999 00001519 7410                    	je .L_lambda_simple_env_end_03af
  4000 0000151B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4001 0000151F 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4002 00001523 48FFC6                  	inc rsi
  4003 00001526 48FFC2                  	inc rdx
  4004 00001529 EBEA                    	jmp .L_lambda_simple_env_loop_03af
  4005                                  .L_lambda_simple_env_end_03af:
  4006 0000152B 5B                      	pop rbx
  4007 0000152C BE00000000              	mov rsi, 0
  4008                                  .L_lambda_simple_params_loop_03af:	; copy params
  4009 00001531 4883FE00                	cmp rsi, 0
  4010 00001535 740E                    	je .L_lambda_simple_params_end_03af
  4011 00001537 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4012 0000153C 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4013 00001540 48FFC6                  	inc rsi
  4014 00001543 EBEC                    	jmp .L_lambda_simple_params_loop_03af
  4015                                  .L_lambda_simple_params_end_03af:
  4016 00001545 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
  4017 00001548 4889C3                  	mov rbx, rax
  4018 0000154B 58                      	pop rax
  4019 0000154C C60004                  	mov byte [rax], T_closure
  4020 0000154F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4021 00001553 48C74009[60150000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03af
  4022 0000155B E99B000000              	jmp .L_lambda_simple_end_03af
  4023                                  .L_lambda_simple_code_03af:	; lambda-simple body
  4024 00001560 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4025 00001566 740B                    	je .L_lambda_simple_arity_check_ok_03af
  4026 00001568 FF742410                	push qword [rsp + 8 * 2]
  4027 0000156C 6A01                    	push 1
  4028 0000156E E92C3C0100              	jmp L_error_incorrect_arity_simple
  4029                                  .L_lambda_simple_arity_check_ok_03af:
  4030 00001573 C8000000                	enter 0, 0
  4031                                  	; preparing a tail-call
  4032                                  	; preparing a non-tail-call
  4033 00001577 488B4520                	mov rax, PARAM(0)	; param x
  4034 0000157B 50                      	push rax
  4035 0000157C 6A01                    	push 1	; arg count
  4036 0000157E 488B0425[62170000]      	mov rax, qword [free_var_68]	; free var cddr
  4037 00001586 803805                  	cmp byte [rax], T_undefined
  4038 00001589 0F842A3B0100            	je L_error_fvar_undefined
  4039 0000158F 803804                  	cmp byte [rax], T_closure
  4040 00001592 0F85A53B0100            	jne L_error_non_closure
  4041 00001598 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4042 0000159B FF5009                  	call SOB_CLOSURE_CODE(rax)
  4043 0000159E 50                      	push rax
  4044 0000159F 6A01                    	push 1	; arg count
  4045 000015A1 488B0425[73170000]      	mov rax, qword [free_var_69]	; free var cdr
  4046 000015A9 803805                  	cmp byte [rax], T_undefined
  4047 000015AC 0F84073B0100            	je L_error_fvar_undefined
  4048 000015B2 803804                  	cmp byte [rax], T_closure
  4049 000015B5 0F85823B0100            	jne L_error_non_closure
  4050 000015BB FF7001                  	push SOB_CLOSURE_ENV(rax)
  4051                                  
  4052                                  	; recycling the current frame
  4053 000015BE FF7508                  	push qword [rbp + 8 * 1]	; old return address
  4054 000015C1 FF7500                  	push qword [rbp]	; old frame-pointer
  4055 000015C4 B905000000              	mov rcx, 5
  4056 000015C9 488B5D18                	mov rbx, COUNT
  4057 000015CD 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
  4058 000015D2 488D55F8                	lea rdx, [rbp - 8]
  4059                                  .L_tc_recycle_frame_loop_04c7:
  4060 000015D6 4883F900                	cmp rcx, 0
  4061 000015DA 7413                    	je .L_tc_recycle_frame_done_04c7
  4062 000015DC 488B32                  	mov rsi, qword [rdx]
  4063 000015DF 488933                  	mov qword [rbx], rsi
  4064 000015E2 48FFC9                  	dec rcx
  4065 000015E5 4883EB08                	sub rbx, 8
  4066 000015E9 4883EA08                	sub rdx, 8
  4067 000015ED EBE7                    	jmp .L_tc_recycle_frame_loop_04c7
  4068                                  .L_tc_recycle_frame_done_04c7:
  4069 000015EF 488D6308                	lea rsp, [rbx + 8]
  4070 000015F3 5D                      	pop rbp
  4071 000015F4 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4072 000015F7 C9                      	leave
  4073 000015F8 C21800                  	ret AND_KILL_FRAME(1)
  4074                                  .L_lambda_simple_end_03af:	; new closure is in rax
  4075 000015FB 48890425[51170000]      	mov qword [free_var_67], rax
  4076 00001603 48B8-                   	mov rax, sob_void
  4076 00001605 [0000000000000000] 
  4077                                  
  4078 0000160D 4889C7                  	mov rdi, rax
  4079 00001610 E8263E0100              	call print_sexpr_if_not_void
  4080                                  
  4081 00001615 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4082 0000161A E8C73B0100              	call malloc
  4083 0000161F 50                      	push rax
  4084 00001620 BF00000000              	mov rdi, 8 * 0	; new rib
  4085 00001625 E8BC3B0100              	call malloc
  4086 0000162A 50                      	push rax
  4087 0000162B BF08000000              	mov rdi, 8 * 1	; extended env
  4088 00001630 E8B13B0100              	call malloc
  4089 00001635 488B7D10                	mov rdi, ENV
  4090 00001639 BE00000000              	mov rsi, 0
  4091 0000163E BA01000000              	mov rdx, 1
  4092                                  .L_lambda_simple_env_loop_03b0:	; ext_env[i + 1] <-- env[i]
  4093 00001643 4883FE00                	cmp rsi, 0
  4094 00001647 7410                    	je .L_lambda_simple_env_end_03b0
  4095 00001649 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4096 0000164D 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4097 00001651 48FFC6                  	inc rsi
  4098 00001654 48FFC2                  	inc rdx
  4099 00001657 EBEA                    	jmp .L_lambda_simple_env_loop_03b0
  4100                                  .L_lambda_simple_env_end_03b0:
  4101 00001659 5B                      	pop rbx
  4102 0000165A BE00000000              	mov rsi, 0
  4103                                  .L_lambda_simple_params_loop_03b0:	; copy params
  4104 0000165F 4883FE00                	cmp rsi, 0
  4105 00001663 740E                    	je .L_lambda_simple_params_end_03b0
  4106 00001665 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4107 0000166A 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4108 0000166E 48FFC6                  	inc rsi
  4109 00001671 EBEC                    	jmp .L_lambda_simple_params_loop_03b0
  4110                                  .L_lambda_simple_params_end_03b0:
  4111 00001673 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
  4112 00001676 4889C3                  	mov rbx, rax
  4113 00001679 58                      	pop rax
  4114 0000167A C60004                  	mov byte [rax], T_closure
  4115 0000167D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4116 00001681 48C74009[8E160000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03b0
  4117 00001689 E99B000000              	jmp .L_lambda_simple_end_03b0
  4118                                  .L_lambda_simple_code_03b0:	; lambda-simple body
  4119 0000168E 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4120 00001694 740B                    	je .L_lambda_simple_arity_check_ok_03b0
  4121 00001696 FF742410                	push qword [rsp + 8 * 2]
  4122 0000169A 6A01                    	push 1
  4123 0000169C E9FE3A0100              	jmp L_error_incorrect_arity_simple
  4124                                  .L_lambda_simple_arity_check_ok_03b0:
  4125 000016A1 C8000000                	enter 0, 0
  4126                                  	; preparing a tail-call
  4127                                  	; preparing a non-tail-call
  4128 000016A5 488B4520                	mov rax, PARAM(0)	; param x
  4129 000016A9 50                      	push rax
  4130 000016AA 6A01                    	push 1	; arg count
  4131 000016AC 488B0425[EC150000]      	mov rax, qword [free_var_46]	; free var caar
  4132 000016B4 803805                  	cmp byte [rax], T_undefined
  4133 000016B7 0F84FC390100            	je L_error_fvar_undefined
  4134 000016BD 803804                  	cmp byte [rax], T_closure
  4135 000016C0 0F85773A0100            	jne L_error_non_closure
  4136 000016C6 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4137 000016C9 FF5009                  	call SOB_CLOSURE_CODE(rax)
  4138 000016CC 50                      	push rax
  4139 000016CD 6A01                    	push 1	; arg count
  4140 000016CF 488B0425[EC150000]      	mov rax, qword [free_var_46]	; free var caar
  4141 000016D7 803805                  	cmp byte [rax], T_undefined
  4142 000016DA 0F84D9390100            	je L_error_fvar_undefined
  4143 000016E0 803804                  	cmp byte [rax], T_closure
  4144 000016E3 0F85543A0100            	jne L_error_non_closure
  4145 000016E9 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4146                                  
  4147                                  	; recycling the current frame
  4148 000016EC FF7508                  	push qword [rbp + 8 * 1]	; old return address
  4149 000016EF FF7500                  	push qword [rbp]	; old frame-pointer
  4150 000016F2 B905000000              	mov rcx, 5
  4151 000016F7 488B5D18                	mov rbx, COUNT
  4152 000016FB 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
  4153 00001700 488D55F8                	lea rdx, [rbp - 8]
  4154                                  .L_tc_recycle_frame_loop_04c8:
  4155 00001704 4883F900                	cmp rcx, 0
  4156 00001708 7413                    	je .L_tc_recycle_frame_done_04c8
  4157 0000170A 488B32                  	mov rsi, qword [rdx]
  4158 0000170D 488933                  	mov qword [rbx], rsi
  4159 00001710 48FFC9                  	dec rcx
  4160 00001713 4883EB08                	sub rbx, 8
  4161 00001717 4883EA08                	sub rdx, 8
  4162 0000171B EBE7                    	jmp .L_tc_recycle_frame_loop_04c8
  4163                                  .L_tc_recycle_frame_done_04c8:
  4164 0000171D 488D6308                	lea rsp, [rbx + 8]
  4165 00001721 5D                      	pop rbp
  4166 00001722 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4167 00001725 C9                      	leave
  4168 00001726 C21800                  	ret AND_KILL_FRAME(1)
  4169                                  .L_lambda_simple_end_03b0:	; new closure is in rax
  4170 00001729 48890425[86150000]      	mov qword [free_var_40], rax
  4171 00001731 48B8-                   	mov rax, sob_void
  4171 00001733 [0000000000000000] 
  4172                                  
  4173 0000173B 4889C7                  	mov rdi, rax
  4174 0000173E E8F83C0100              	call print_sexpr_if_not_void
  4175                                  
  4176 00001743 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4177 00001748 E8993A0100              	call malloc
  4178 0000174D 50                      	push rax
  4179 0000174E BF00000000              	mov rdi, 8 * 0	; new rib
  4180 00001753 E88E3A0100              	call malloc
  4181 00001758 50                      	push rax
  4182 00001759 BF08000000              	mov rdi, 8 * 1	; extended env
  4183 0000175E E8833A0100              	call malloc
  4184 00001763 488B7D10                	mov rdi, ENV
  4185 00001767 BE00000000              	mov rsi, 0
  4186 0000176C BA01000000              	mov rdx, 1
  4187                                  .L_lambda_simple_env_loop_03b1:	; ext_env[i + 1] <-- env[i]
  4188 00001771 4883FE00                	cmp rsi, 0
  4189 00001775 7410                    	je .L_lambda_simple_env_end_03b1
  4190 00001777 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4191 0000177B 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4192 0000177F 48FFC6                  	inc rsi
  4193 00001782 48FFC2                  	inc rdx
  4194 00001785 EBEA                    	jmp .L_lambda_simple_env_loop_03b1
  4195                                  .L_lambda_simple_env_end_03b1:
  4196 00001787 5B                      	pop rbx
  4197 00001788 BE00000000              	mov rsi, 0
  4198                                  .L_lambda_simple_params_loop_03b1:	; copy params
  4199 0000178D 4883FE00                	cmp rsi, 0
  4200 00001791 740E                    	je .L_lambda_simple_params_end_03b1
  4201 00001793 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4202 00001798 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4203 0000179C 48FFC6                  	inc rsi
  4204 0000179F EBEC                    	jmp .L_lambda_simple_params_loop_03b1
  4205                                  .L_lambda_simple_params_end_03b1:
  4206 000017A1 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
  4207 000017A4 4889C3                  	mov rbx, rax
  4208 000017A7 58                      	pop rax
  4209 000017A8 C60004                  	mov byte [rax], T_closure
  4210 000017AB 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4211 000017AF 48C74009[BC170000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03b1
  4212 000017B7 E99B000000              	jmp .L_lambda_simple_end_03b1
  4213                                  .L_lambda_simple_code_03b1:	; lambda-simple body
  4214 000017BC 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4215 000017C2 740B                    	je .L_lambda_simple_arity_check_ok_03b1
  4216 000017C4 FF742410                	push qword [rsp + 8 * 2]
  4217 000017C8 6A01                    	push 1
  4218 000017CA E9D0390100              	jmp L_error_incorrect_arity_simple
  4219                                  .L_lambda_simple_arity_check_ok_03b1:
  4220 000017CF C8000000                	enter 0, 0
  4221                                  	; preparing a tail-call
  4222                                  	; preparing a non-tail-call
  4223 000017D3 488B4520                	mov rax, PARAM(0)	; param x
  4224 000017D7 50                      	push rax
  4225 000017D8 6A01                    	push 1	; arg count
  4226 000017DA 488B0425[63160000]      	mov rax, qword [free_var_53]	; free var cadr
  4227 000017E2 803805                  	cmp byte [rax], T_undefined
  4228 000017E5 0F84CE380100            	je L_error_fvar_undefined
  4229 000017EB 803804                  	cmp byte [rax], T_closure
  4230 000017EE 0F8549390100            	jne L_error_non_closure
  4231 000017F4 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4232 000017F7 FF5009                  	call SOB_CLOSURE_CODE(rax)
  4233 000017FA 50                      	push rax
  4234 000017FB 6A01                    	push 1	; arg count
  4235 000017FD 488B0425[EC150000]      	mov rax, qword [free_var_46]	; free var caar
  4236 00001805 803805                  	cmp byte [rax], T_undefined
  4237 00001808 0F84AB380100            	je L_error_fvar_undefined
  4238 0000180E 803804                  	cmp byte [rax], T_closure
  4239 00001811 0F8526390100            	jne L_error_non_closure
  4240 00001817 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4241                                  
  4242                                  	; recycling the current frame
  4243 0000181A FF7508                  	push qword [rbp + 8 * 1]	; old return address
  4244 0000181D FF7500                  	push qword [rbp]	; old frame-pointer
  4245 00001820 B905000000              	mov rcx, 5
  4246 00001825 488B5D18                	mov rbx, COUNT
  4247 00001829 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
  4248 0000182E 488D55F8                	lea rdx, [rbp - 8]
  4249                                  .L_tc_recycle_frame_loop_04c9:
  4250 00001832 4883F900                	cmp rcx, 0
  4251 00001836 7413                    	je .L_tc_recycle_frame_done_04c9
  4252 00001838 488B32                  	mov rsi, qword [rdx]
  4253 0000183B 488933                  	mov qword [rbx], rsi
  4254 0000183E 48FFC9                  	dec rcx
  4255 00001841 4883EB08                	sub rbx, 8
  4256 00001845 4883EA08                	sub rdx, 8
  4257 00001849 EBE7                    	jmp .L_tc_recycle_frame_loop_04c9
  4258                                  .L_tc_recycle_frame_done_04c9:
  4259 0000184B 488D6308                	lea rsp, [rbx + 8]
  4260 0000184F 5D                      	pop rbp
  4261 00001850 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4262 00001853 C9                      	leave
  4263 00001854 C21800                  	ret AND_KILL_FRAME(1)
  4264                                  .L_lambda_simple_end_03b1:	; new closure is in rax
  4265 00001857 48890425[97150000]      	mov qword [free_var_41], rax
  4266 0000185F 48B8-                   	mov rax, sob_void
  4266 00001861 [0000000000000000] 
  4267                                  
  4268 00001869 4889C7                  	mov rdi, rax
  4269 0000186C E8CA3B0100              	call print_sexpr_if_not_void
  4270                                  
  4271 00001871 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4272 00001876 E86B390100              	call malloc
  4273 0000187B 50                      	push rax
  4274 0000187C BF00000000              	mov rdi, 8 * 0	; new rib
  4275 00001881 E860390100              	call malloc
  4276 00001886 50                      	push rax
  4277 00001887 BF08000000              	mov rdi, 8 * 1	; extended env
  4278 0000188C E855390100              	call malloc
  4279 00001891 488B7D10                	mov rdi, ENV
  4280 00001895 BE00000000              	mov rsi, 0
  4281 0000189A BA01000000              	mov rdx, 1
  4282                                  .L_lambda_simple_env_loop_03b2:	; ext_env[i + 1] <-- env[i]
  4283 0000189F 4883FE00                	cmp rsi, 0
  4284 000018A3 7410                    	je .L_lambda_simple_env_end_03b2
  4285 000018A5 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4286 000018A9 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4287 000018AD 48FFC6                  	inc rsi
  4288 000018B0 48FFC2                  	inc rdx
  4289 000018B3 EBEA                    	jmp .L_lambda_simple_env_loop_03b2
  4290                                  .L_lambda_simple_env_end_03b2:
  4291 000018B5 5B                      	pop rbx
  4292 000018B6 BE00000000              	mov rsi, 0
  4293                                  .L_lambda_simple_params_loop_03b2:	; copy params
  4294 000018BB 4883FE00                	cmp rsi, 0
  4295 000018BF 740E                    	je .L_lambda_simple_params_end_03b2
  4296 000018C1 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4297 000018C6 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4298 000018CA 48FFC6                  	inc rsi
  4299 000018CD EBEC                    	jmp .L_lambda_simple_params_loop_03b2
  4300                                  .L_lambda_simple_params_end_03b2:
  4301 000018CF 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
  4302 000018D2 4889C3                  	mov rbx, rax
  4303 000018D5 58                      	pop rax
  4304 000018D6 C60004                  	mov byte [rax], T_closure
  4305 000018D9 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4306 000018DD 48C74009[EA180000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03b2
  4307 000018E5 E99B000000              	jmp .L_lambda_simple_end_03b2
  4308                                  .L_lambda_simple_code_03b2:	; lambda-simple body
  4309 000018EA 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4310 000018F0 740B                    	je .L_lambda_simple_arity_check_ok_03b2
  4311 000018F2 FF742410                	push qword [rsp + 8 * 2]
  4312 000018F6 6A01                    	push 1
  4313 000018F8 E9A2380100              	jmp L_error_incorrect_arity_simple
  4314                                  .L_lambda_simple_arity_check_ok_03b2:
  4315 000018FD C8000000                	enter 0, 0
  4316                                  	; preparing a tail-call
  4317                                  	; preparing a non-tail-call
  4318 00001901 488B4520                	mov rax, PARAM(0)	; param x
  4319 00001905 50                      	push rax
  4320 00001906 6A01                    	push 1	; arg count
  4321 00001908 488B0425[EB160000]      	mov rax, qword [free_var_61]	; free var cdar
  4322 00001910 803805                  	cmp byte [rax], T_undefined
  4323 00001913 0F84A0370100            	je L_error_fvar_undefined
  4324 00001919 803804                  	cmp byte [rax], T_closure
  4325 0000191C 0F851B380100            	jne L_error_non_closure
  4326 00001922 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4327 00001925 FF5009                  	call SOB_CLOSURE_CODE(rax)
  4328 00001928 50                      	push rax
  4329 00001929 6A01                    	push 1	; arg count
  4330 0000192B 488B0425[EC150000]      	mov rax, qword [free_var_46]	; free var caar
  4331 00001933 803805                  	cmp byte [rax], T_undefined
  4332 00001936 0F847D370100            	je L_error_fvar_undefined
  4333 0000193C 803804                  	cmp byte [rax], T_closure
  4334 0000193F 0F85F8370100            	jne L_error_non_closure
  4335 00001945 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4336                                  
  4337                                  	; recycling the current frame
  4338 00001948 FF7508                  	push qword [rbp + 8 * 1]	; old return address
  4339 0000194B FF7500                  	push qword [rbp]	; old frame-pointer
  4340 0000194E B905000000              	mov rcx, 5
  4341 00001953 488B5D18                	mov rbx, COUNT
  4342 00001957 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
  4343 0000195C 488D55F8                	lea rdx, [rbp - 8]
  4344                                  .L_tc_recycle_frame_loop_04ca:
  4345 00001960 4883F900                	cmp rcx, 0
  4346 00001964 7413                    	je .L_tc_recycle_frame_done_04ca
  4347 00001966 488B32                  	mov rsi, qword [rdx]
  4348 00001969 488933                  	mov qword [rbx], rsi
  4349 0000196C 48FFC9                  	dec rcx
  4350 0000196F 4883EB08                	sub rbx, 8
  4351 00001973 4883EA08                	sub rdx, 8
  4352 00001977 EBE7                    	jmp .L_tc_recycle_frame_loop_04ca
  4353                                  .L_tc_recycle_frame_done_04ca:
  4354 00001979 488D6308                	lea rsp, [rbx + 8]
  4355 0000197D 5D                      	pop rbp
  4356 0000197E FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4357 00001981 C9                      	leave
  4358 00001982 C21800                  	ret AND_KILL_FRAME(1)
  4359                                  .L_lambda_simple_end_03b2:	; new closure is in rax
  4360 00001985 48890425[B9150000]      	mov qword [free_var_43], rax
  4361 0000198D 48B8-                   	mov rax, sob_void
  4361 0000198F [0000000000000000] 
  4362                                  
  4363 00001997 4889C7                  	mov rdi, rax
  4364 0000199A E89C3A0100              	call print_sexpr_if_not_void
  4365                                  
  4366 0000199F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4367 000019A4 E83D380100              	call malloc
  4368 000019A9 50                      	push rax
  4369 000019AA BF00000000              	mov rdi, 8 * 0	; new rib
  4370 000019AF E832380100              	call malloc
  4371 000019B4 50                      	push rax
  4372 000019B5 BF08000000              	mov rdi, 8 * 1	; extended env
  4373 000019BA E827380100              	call malloc
  4374 000019BF 488B7D10                	mov rdi, ENV
  4375 000019C3 BE00000000              	mov rsi, 0
  4376 000019C8 BA01000000              	mov rdx, 1
  4377                                  .L_lambda_simple_env_loop_03b3:	; ext_env[i + 1] <-- env[i]
  4378 000019CD 4883FE00                	cmp rsi, 0
  4379 000019D1 7410                    	je .L_lambda_simple_env_end_03b3
  4380 000019D3 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4381 000019D7 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4382 000019DB 48FFC6                  	inc rsi
  4383 000019DE 48FFC2                  	inc rdx
  4384 000019E1 EBEA                    	jmp .L_lambda_simple_env_loop_03b3
  4385                                  .L_lambda_simple_env_end_03b3:
  4386 000019E3 5B                      	pop rbx
  4387 000019E4 BE00000000              	mov rsi, 0
  4388                                  .L_lambda_simple_params_loop_03b3:	; copy params
  4389 000019E9 4883FE00                	cmp rsi, 0
  4390 000019ED 740E                    	je .L_lambda_simple_params_end_03b3
  4391 000019EF 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4392 000019F4 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4393 000019F8 48FFC6                  	inc rsi
  4394 000019FB EBEC                    	jmp .L_lambda_simple_params_loop_03b3
  4395                                  .L_lambda_simple_params_end_03b3:
  4396 000019FD 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
  4397 00001A00 4889C3                  	mov rbx, rax
  4398 00001A03 58                      	pop rax
  4399 00001A04 C60004                  	mov byte [rax], T_closure
  4400 00001A07 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4401 00001A0B 48C74009[181A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03b3
  4402 00001A13 E99B000000              	jmp .L_lambda_simple_end_03b3
  4403                                  .L_lambda_simple_code_03b3:	; lambda-simple body
  4404 00001A18 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4405 00001A1E 740B                    	je .L_lambda_simple_arity_check_ok_03b3
  4406 00001A20 FF742410                	push qword [rsp + 8 * 2]
  4407 00001A24 6A01                    	push 1
  4408 00001A26 E974370100              	jmp L_error_incorrect_arity_simple
  4409                                  .L_lambda_simple_arity_check_ok_03b3:
  4410 00001A2B C8000000                	enter 0, 0
  4411                                  	; preparing a tail-call
  4412                                  	; preparing a non-tail-call
  4413 00001A2F 488B4520                	mov rax, PARAM(0)	; param x
  4414 00001A33 50                      	push rax
  4415 00001A34 6A01                    	push 1	; arg count
  4416 00001A36 488B0425[62170000]      	mov rax, qword [free_var_68]	; free var cddr
  4417 00001A3E 803805                  	cmp byte [rax], T_undefined
  4418 00001A41 0F8472360100            	je L_error_fvar_undefined
  4419 00001A47 803804                  	cmp byte [rax], T_closure
  4420 00001A4A 0F85ED360100            	jne L_error_non_closure
  4421 00001A50 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4422 00001A53 FF5009                  	call SOB_CLOSURE_CODE(rax)
  4423 00001A56 50                      	push rax
  4424 00001A57 6A01                    	push 1	; arg count
  4425 00001A59 488B0425[EC150000]      	mov rax, qword [free_var_46]	; free var caar
  4426 00001A61 803805                  	cmp byte [rax], T_undefined
  4427 00001A64 0F844F360100            	je L_error_fvar_undefined
  4428 00001A6A 803804                  	cmp byte [rax], T_closure
  4429 00001A6D 0F85CA360100            	jne L_error_non_closure
  4430 00001A73 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4431                                  
  4432                                  	; recycling the current frame
  4433 00001A76 FF7508                  	push qword [rbp + 8 * 1]	; old return address
  4434 00001A79 FF7500                  	push qword [rbp]	; old frame-pointer
  4435 00001A7C B905000000              	mov rcx, 5
  4436 00001A81 488B5D18                	mov rbx, COUNT
  4437 00001A85 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
  4438 00001A8A 488D55F8                	lea rdx, [rbp - 8]
  4439                                  .L_tc_recycle_frame_loop_04cb:
  4440 00001A8E 4883F900                	cmp rcx, 0
  4441 00001A92 7413                    	je .L_tc_recycle_frame_done_04cb
  4442 00001A94 488B32                  	mov rsi, qword [rdx]
  4443 00001A97 488933                  	mov qword [rbx], rsi
  4444 00001A9A 48FFC9                  	dec rcx
  4445 00001A9D 4883EB08                	sub rbx, 8
  4446 00001AA1 4883EA08                	sub rdx, 8
  4447 00001AA5 EBE7                    	jmp .L_tc_recycle_frame_loop_04cb
  4448                                  .L_tc_recycle_frame_done_04cb:
  4449 00001AA7 488D6308                	lea rsp, [rbx + 8]
  4450 00001AAB 5D                      	pop rbp
  4451 00001AAC FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4452 00001AAF C9                      	leave
  4453 00001AB0 C21800                  	ret AND_KILL_FRAME(1)
  4454                                  .L_lambda_simple_end_03b3:	; new closure is in rax
  4455 00001AB3 48890425[CA150000]      	mov qword [free_var_44], rax
  4456 00001ABB 48B8-                   	mov rax, sob_void
  4456 00001ABD [0000000000000000] 
  4457                                  
  4458 00001AC5 4889C7                  	mov rdi, rax
  4459 00001AC8 E86E390100              	call print_sexpr_if_not_void
  4460                                  
  4461 00001ACD BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4462 00001AD2 E80F370100              	call malloc
  4463 00001AD7 50                      	push rax
  4464 00001AD8 BF00000000              	mov rdi, 8 * 0	; new rib
  4465 00001ADD E804370100              	call malloc
  4466 00001AE2 50                      	push rax
  4467 00001AE3 BF08000000              	mov rdi, 8 * 1	; extended env
  4468 00001AE8 E8F9360100              	call malloc
  4469 00001AED 488B7D10                	mov rdi, ENV
  4470 00001AF1 BE00000000              	mov rsi, 0
  4471 00001AF6 BA01000000              	mov rdx, 1
  4472                                  .L_lambda_simple_env_loop_03b4:	; ext_env[i + 1] <-- env[i]
  4473 00001AFB 4883FE00                	cmp rsi, 0
  4474 00001AFF 7410                    	je .L_lambda_simple_env_end_03b4
  4475 00001B01 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4476 00001B05 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4477 00001B09 48FFC6                  	inc rsi
  4478 00001B0C 48FFC2                  	inc rdx
  4479 00001B0F EBEA                    	jmp .L_lambda_simple_env_loop_03b4
  4480                                  .L_lambda_simple_env_end_03b4:
  4481 00001B11 5B                      	pop rbx
  4482 00001B12 BE00000000              	mov rsi, 0
  4483                                  .L_lambda_simple_params_loop_03b4:	; copy params
  4484 00001B17 4883FE00                	cmp rsi, 0
  4485 00001B1B 740E                    	je .L_lambda_simple_params_end_03b4
  4486 00001B1D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4487 00001B22 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4488 00001B26 48FFC6                  	inc rsi
  4489 00001B29 EBEC                    	jmp .L_lambda_simple_params_loop_03b4
  4490                                  .L_lambda_simple_params_end_03b4:
  4491 00001B2B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
  4492 00001B2E 4889C3                  	mov rbx, rax
  4493 00001B31 58                      	pop rax
  4494 00001B32 C60004                  	mov byte [rax], T_closure
  4495 00001B35 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4496 00001B39 48C74009[461B0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03b4
  4497 00001B41 E99B000000              	jmp .L_lambda_simple_end_03b4
  4498                                  .L_lambda_simple_code_03b4:	; lambda-simple body
  4499 00001B46 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4500 00001B4C 740B                    	je .L_lambda_simple_arity_check_ok_03b4
  4501 00001B4E FF742410                	push qword [rsp + 8 * 2]
  4502 00001B52 6A01                    	push 1
  4503 00001B54 E946360100              	jmp L_error_incorrect_arity_simple
  4504                                  .L_lambda_simple_arity_check_ok_03b4:
  4505 00001B59 C8000000                	enter 0, 0
  4506                                  	; preparing a tail-call
  4507                                  	; preparing a non-tail-call
  4508 00001B5D 488B4520                	mov rax, PARAM(0)	; param x
  4509 00001B61 50                      	push rax
  4510 00001B62 6A01                    	push 1	; arg count
  4511 00001B64 488B0425[EC150000]      	mov rax, qword [free_var_46]	; free var caar
  4512 00001B6C 803805                  	cmp byte [rax], T_undefined
  4513 00001B6F 0F8444350100            	je L_error_fvar_undefined
  4514 00001B75 803804                  	cmp byte [rax], T_closure
  4515 00001B78 0F85BF350100            	jne L_error_non_closure
  4516 00001B7E FF7001                  	push SOB_CLOSURE_ENV(rax)
  4517 00001B81 FF5009                  	call SOB_CLOSURE_CODE(rax)
  4518 00001B84 50                      	push rax
  4519 00001B85 6A01                    	push 1	; arg count
  4520 00001B87 488B0425[63160000]      	mov rax, qword [free_var_53]	; free var cadr
  4521 00001B8F 803805                  	cmp byte [rax], T_undefined
  4522 00001B92 0F8421350100            	je L_error_fvar_undefined
  4523 00001B98 803804                  	cmp byte [rax], T_closure
  4524 00001B9B 0F859C350100            	jne L_error_non_closure
  4525 00001BA1 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4526                                  
  4527                                  	; recycling the current frame
  4528 00001BA4 FF7508                  	push qword [rbp + 8 * 1]	; old return address
  4529 00001BA7 FF7500                  	push qword [rbp]	; old frame-pointer
  4530 00001BAA B905000000              	mov rcx, 5
  4531 00001BAF 488B5D18                	mov rbx, COUNT
  4532 00001BB3 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
  4533 00001BB8 488D55F8                	lea rdx, [rbp - 8]
  4534                                  .L_tc_recycle_frame_loop_04cc:
  4535 00001BBC 4883F900                	cmp rcx, 0
  4536 00001BC0 7413                    	je .L_tc_recycle_frame_done_04cc
  4537 00001BC2 488B32                  	mov rsi, qword [rdx]
  4538 00001BC5 488933                  	mov qword [rbx], rsi
  4539 00001BC8 48FFC9                  	dec rcx
  4540 00001BCB 4883EB08                	sub rbx, 8
  4541 00001BCF 4883EA08                	sub rdx, 8
  4542 00001BD3 EBE7                    	jmp .L_tc_recycle_frame_loop_04cc
  4543                                  .L_tc_recycle_frame_done_04cc:
  4544 00001BD5 488D6308                	lea rsp, [rbx + 8]
  4545 00001BD9 5D                      	pop rbp
  4546 00001BDA FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4547 00001BDD C9                      	leave
  4548 00001BDE C21800                  	ret AND_KILL_FRAME(1)
  4549                                  .L_lambda_simple_end_03b4:	; new closure is in rax
  4550 00001BE1 48890425[FD150000]      	mov qword [free_var_47], rax
  4551 00001BE9 48B8-                   	mov rax, sob_void
  4551 00001BEB [0000000000000000] 
  4552                                  
  4553 00001BF3 4889C7                  	mov rdi, rax
  4554 00001BF6 E840380100              	call print_sexpr_if_not_void
  4555                                  
  4556 00001BFB BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4557 00001C00 E8E1350100              	call malloc
  4558 00001C05 50                      	push rax
  4559 00001C06 BF00000000              	mov rdi, 8 * 0	; new rib
  4560 00001C0B E8D6350100              	call malloc
  4561 00001C10 50                      	push rax
  4562 00001C11 BF08000000              	mov rdi, 8 * 1	; extended env
  4563 00001C16 E8CB350100              	call malloc
  4564 00001C1B 488B7D10                	mov rdi, ENV
  4565 00001C1F BE00000000              	mov rsi, 0
  4566 00001C24 BA01000000              	mov rdx, 1
  4567                                  .L_lambda_simple_env_loop_03b5:	; ext_env[i + 1] <-- env[i]
  4568 00001C29 4883FE00                	cmp rsi, 0
  4569 00001C2D 7410                    	je .L_lambda_simple_env_end_03b5
  4570 00001C2F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4571 00001C33 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4572 00001C37 48FFC6                  	inc rsi
  4573 00001C3A 48FFC2                  	inc rdx
  4574 00001C3D EBEA                    	jmp .L_lambda_simple_env_loop_03b5
  4575                                  .L_lambda_simple_env_end_03b5:
  4576 00001C3F 5B                      	pop rbx
  4577 00001C40 BE00000000              	mov rsi, 0
  4578                                  .L_lambda_simple_params_loop_03b5:	; copy params
  4579 00001C45 4883FE00                	cmp rsi, 0
  4580 00001C49 740E                    	je .L_lambda_simple_params_end_03b5
  4581 00001C4B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4582 00001C50 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4583 00001C54 48FFC6                  	inc rsi
  4584 00001C57 EBEC                    	jmp .L_lambda_simple_params_loop_03b5
  4585                                  .L_lambda_simple_params_end_03b5:
  4586 00001C59 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
  4587 00001C5C 4889C3                  	mov rbx, rax
  4588 00001C5F 58                      	pop rax
  4589 00001C60 C60004                  	mov byte [rax], T_closure
  4590 00001C63 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4591 00001C67 48C74009[741C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03b5
  4592 00001C6F E99B000000              	jmp .L_lambda_simple_end_03b5
  4593                                  .L_lambda_simple_code_03b5:	; lambda-simple body
  4594 00001C74 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4595 00001C7A 740B                    	je .L_lambda_simple_arity_check_ok_03b5
  4596 00001C7C FF742410                	push qword [rsp + 8 * 2]
  4597 00001C80 6A01                    	push 1
  4598 00001C82 E918350100              	jmp L_error_incorrect_arity_simple
  4599                                  .L_lambda_simple_arity_check_ok_03b5:
  4600 00001C87 C8000000                	enter 0, 0
  4601                                  	; preparing a tail-call
  4602                                  	; preparing a non-tail-call
  4603 00001C8B 488B4520                	mov rax, PARAM(0)	; param x
  4604 00001C8F 50                      	push rax
  4605 00001C90 6A01                    	push 1	; arg count
  4606 00001C92 488B0425[63160000]      	mov rax, qword [free_var_53]	; free var cadr
  4607 00001C9A 803805                  	cmp byte [rax], T_undefined
  4608 00001C9D 0F8416340100            	je L_error_fvar_undefined
  4609 00001CA3 803804                  	cmp byte [rax], T_closure
  4610 00001CA6 0F8591340100            	jne L_error_non_closure
  4611 00001CAC FF7001                  	push SOB_CLOSURE_ENV(rax)
  4612 00001CAF FF5009                  	call SOB_CLOSURE_CODE(rax)
  4613 00001CB2 50                      	push rax
  4614 00001CB3 6A01                    	push 1	; arg count
  4615 00001CB5 488B0425[63160000]      	mov rax, qword [free_var_53]	; free var cadr
  4616 00001CBD 803805                  	cmp byte [rax], T_undefined
  4617 00001CC0 0F84F3330100            	je L_error_fvar_undefined
  4618 00001CC6 803804                  	cmp byte [rax], T_closure
  4619 00001CC9 0F856E340100            	jne L_error_non_closure
  4620 00001CCF FF7001                  	push SOB_CLOSURE_ENV(rax)
  4621                                  
  4622                                  	; recycling the current frame
  4623 00001CD2 FF7508                  	push qword [rbp + 8 * 1]	; old return address
  4624 00001CD5 FF7500                  	push qword [rbp]	; old frame-pointer
  4625 00001CD8 B905000000              	mov rcx, 5
  4626 00001CDD 488B5D18                	mov rbx, COUNT
  4627 00001CE1 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
  4628 00001CE6 488D55F8                	lea rdx, [rbp - 8]
  4629                                  .L_tc_recycle_frame_loop_04cd:
  4630 00001CEA 4883F900                	cmp rcx, 0
  4631 00001CEE 7413                    	je .L_tc_recycle_frame_done_04cd
  4632 00001CF0 488B32                  	mov rsi, qword [rdx]
  4633 00001CF3 488933                  	mov qword [rbx], rsi
  4634 00001CF6 48FFC9                  	dec rcx
  4635 00001CF9 4883EB08                	sub rbx, 8
  4636 00001CFD 4883EA08                	sub rdx, 8
  4637 00001D01 EBE7                    	jmp .L_tc_recycle_frame_loop_04cd
  4638                                  .L_tc_recycle_frame_done_04cd:
  4639 00001D03 488D6308                	lea rsp, [rbx + 8]
  4640 00001D07 5D                      	pop rbp
  4641 00001D08 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4642 00001D0B C9                      	leave
  4643 00001D0C C21800                  	ret AND_KILL_FRAME(1)
  4644                                  .L_lambda_simple_end_03b5:	; new closure is in rax
  4645 00001D0F 48890425[0E160000]      	mov qword [free_var_48], rax
  4646 00001D17 48B8-                   	mov rax, sob_void
  4646 00001D19 [0000000000000000] 
  4647                                  
  4648 00001D21 4889C7                  	mov rdi, rax
  4649 00001D24 E812370100              	call print_sexpr_if_not_void
  4650                                  
  4651 00001D29 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4652 00001D2E E8B3340100              	call malloc
  4653 00001D33 50                      	push rax
  4654 00001D34 BF00000000              	mov rdi, 8 * 0	; new rib
  4655 00001D39 E8A8340100              	call malloc
  4656 00001D3E 50                      	push rax
  4657 00001D3F BF08000000              	mov rdi, 8 * 1	; extended env
  4658 00001D44 E89D340100              	call malloc
  4659 00001D49 488B7D10                	mov rdi, ENV
  4660 00001D4D BE00000000              	mov rsi, 0
  4661 00001D52 BA01000000              	mov rdx, 1
  4662                                  .L_lambda_simple_env_loop_03b6:	; ext_env[i + 1] <-- env[i]
  4663 00001D57 4883FE00                	cmp rsi, 0
  4664 00001D5B 7410                    	je .L_lambda_simple_env_end_03b6
  4665 00001D5D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4666 00001D61 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4667 00001D65 48FFC6                  	inc rsi
  4668 00001D68 48FFC2                  	inc rdx
  4669 00001D6B EBEA                    	jmp .L_lambda_simple_env_loop_03b6
  4670                                  .L_lambda_simple_env_end_03b6:
  4671 00001D6D 5B                      	pop rbx
  4672 00001D6E BE00000000              	mov rsi, 0
  4673                                  .L_lambda_simple_params_loop_03b6:	; copy params
  4674 00001D73 4883FE00                	cmp rsi, 0
  4675 00001D77 740E                    	je .L_lambda_simple_params_end_03b6
  4676 00001D79 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4677 00001D7E 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4678 00001D82 48FFC6                  	inc rsi
  4679 00001D85 EBEC                    	jmp .L_lambda_simple_params_loop_03b6
  4680                                  .L_lambda_simple_params_end_03b6:
  4681 00001D87 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
  4682 00001D8A 4889C3                  	mov rbx, rax
  4683 00001D8D 58                      	pop rax
  4684 00001D8E C60004                  	mov byte [rax], T_closure
  4685 00001D91 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4686 00001D95 48C74009[A21D0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03b6
  4687 00001D9D E99B000000              	jmp .L_lambda_simple_end_03b6
  4688                                  .L_lambda_simple_code_03b6:	; lambda-simple body
  4689 00001DA2 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4690 00001DA8 740B                    	je .L_lambda_simple_arity_check_ok_03b6
  4691 00001DAA FF742410                	push qword [rsp + 8 * 2]
  4692 00001DAE 6A01                    	push 1
  4693 00001DB0 E9EA330100              	jmp L_error_incorrect_arity_simple
  4694                                  .L_lambda_simple_arity_check_ok_03b6:
  4695 00001DB5 C8000000                	enter 0, 0
  4696                                  	; preparing a tail-call
  4697                                  	; preparing a non-tail-call
  4698 00001DB9 488B4520                	mov rax, PARAM(0)	; param x
  4699 00001DBD 50                      	push rax
  4700 00001DBE 6A01                    	push 1	; arg count
  4701 00001DC0 488B0425[EB160000]      	mov rax, qword [free_var_61]	; free var cdar
  4702 00001DC8 803805                  	cmp byte [rax], T_undefined
  4703 00001DCB 0F84E8320100            	je L_error_fvar_undefined
  4704 00001DD1 803804                  	cmp byte [rax], T_closure
  4705 00001DD4 0F8563330100            	jne L_error_non_closure
  4706 00001DDA FF7001                  	push SOB_CLOSURE_ENV(rax)
  4707 00001DDD FF5009                  	call SOB_CLOSURE_CODE(rax)
  4708 00001DE0 50                      	push rax
  4709 00001DE1 6A01                    	push 1	; arg count
  4710 00001DE3 488B0425[63160000]      	mov rax, qword [free_var_53]	; free var cadr
  4711 00001DEB 803805                  	cmp byte [rax], T_undefined
  4712 00001DEE 0F84C5320100            	je L_error_fvar_undefined
  4713 00001DF4 803804                  	cmp byte [rax], T_closure
  4714 00001DF7 0F8540330100            	jne L_error_non_closure
  4715 00001DFD FF7001                  	push SOB_CLOSURE_ENV(rax)
  4716                                  
  4717                                  	; recycling the current frame
  4718 00001E00 FF7508                  	push qword [rbp + 8 * 1]	; old return address
  4719 00001E03 FF7500                  	push qword [rbp]	; old frame-pointer
  4720 00001E06 B905000000              	mov rcx, 5
  4721 00001E0B 488B5D18                	mov rbx, COUNT
  4722 00001E0F 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
  4723 00001E14 488D55F8                	lea rdx, [rbp - 8]
  4724                                  .L_tc_recycle_frame_loop_04ce:
  4725 00001E18 4883F900                	cmp rcx, 0
  4726 00001E1C 7413                    	je .L_tc_recycle_frame_done_04ce
  4727 00001E1E 488B32                  	mov rsi, qword [rdx]
  4728 00001E21 488933                  	mov qword [rbx], rsi
  4729 00001E24 48FFC9                  	dec rcx
  4730 00001E27 4883EB08                	sub rbx, 8
  4731 00001E2B 4883EA08                	sub rdx, 8
  4732 00001E2F EBE7                    	jmp .L_tc_recycle_frame_loop_04ce
  4733                                  .L_tc_recycle_frame_done_04ce:
  4734 00001E31 488D6308                	lea rsp, [rbx + 8]
  4735 00001E35 5D                      	pop rbp
  4736 00001E36 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4737 00001E39 C9                      	leave
  4738 00001E3A C21800                  	ret AND_KILL_FRAME(1)
  4739                                  .L_lambda_simple_end_03b6:	; new closure is in rax
  4740 00001E3D 48890425[30160000]      	mov qword [free_var_50], rax
  4741 00001E45 48B8-                   	mov rax, sob_void
  4741 00001E47 [0000000000000000] 
  4742                                  
  4743 00001E4F 4889C7                  	mov rdi, rax
  4744 00001E52 E8E4350100              	call print_sexpr_if_not_void
  4745                                  
  4746 00001E57 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4747 00001E5C E885330100              	call malloc
  4748 00001E61 50                      	push rax
  4749 00001E62 BF00000000              	mov rdi, 8 * 0	; new rib
  4750 00001E67 E87A330100              	call malloc
  4751 00001E6C 50                      	push rax
  4752 00001E6D BF08000000              	mov rdi, 8 * 1	; extended env
  4753 00001E72 E86F330100              	call malloc
  4754 00001E77 488B7D10                	mov rdi, ENV
  4755 00001E7B BE00000000              	mov rsi, 0
  4756 00001E80 BA01000000              	mov rdx, 1
  4757                                  .L_lambda_simple_env_loop_03b7:	; ext_env[i + 1] <-- env[i]
  4758 00001E85 4883FE00                	cmp rsi, 0
  4759 00001E89 7410                    	je .L_lambda_simple_env_end_03b7
  4760 00001E8B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4761 00001E8F 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4762 00001E93 48FFC6                  	inc rsi
  4763 00001E96 48FFC2                  	inc rdx
  4764 00001E99 EBEA                    	jmp .L_lambda_simple_env_loop_03b7
  4765                                  .L_lambda_simple_env_end_03b7:
  4766 00001E9B 5B                      	pop rbx
  4767 00001E9C BE00000000              	mov rsi, 0
  4768                                  .L_lambda_simple_params_loop_03b7:	; copy params
  4769 00001EA1 4883FE00                	cmp rsi, 0
  4770 00001EA5 740E                    	je .L_lambda_simple_params_end_03b7
  4771 00001EA7 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4772 00001EAC 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4773 00001EB0 48FFC6                  	inc rsi
  4774 00001EB3 EBEC                    	jmp .L_lambda_simple_params_loop_03b7
  4775                                  .L_lambda_simple_params_end_03b7:
  4776 00001EB5 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
  4777 00001EB8 4889C3                  	mov rbx, rax
  4778 00001EBB 58                      	pop rax
  4779 00001EBC C60004                  	mov byte [rax], T_closure
  4780 00001EBF 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4781 00001EC3 48C74009[D01E0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03b7
  4782 00001ECB E99B000000              	jmp .L_lambda_simple_end_03b7
  4783                                  .L_lambda_simple_code_03b7:	; lambda-simple body
  4784 00001ED0 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4785 00001ED6 740B                    	je .L_lambda_simple_arity_check_ok_03b7
  4786 00001ED8 FF742410                	push qword [rsp + 8 * 2]
  4787 00001EDC 6A01                    	push 1
  4788 00001EDE E9BC320100              	jmp L_error_incorrect_arity_simple
  4789                                  .L_lambda_simple_arity_check_ok_03b7:
  4790 00001EE3 C8000000                	enter 0, 0
  4791                                  	; preparing a tail-call
  4792                                  	; preparing a non-tail-call
  4793 00001EE7 488B4520                	mov rax, PARAM(0)	; param x
  4794 00001EEB 50                      	push rax
  4795 00001EEC 6A01                    	push 1	; arg count
  4796 00001EEE 488B0425[62170000]      	mov rax, qword [free_var_68]	; free var cddr
  4797 00001EF6 803805                  	cmp byte [rax], T_undefined
  4798 00001EF9 0F84BA310100            	je L_error_fvar_undefined
  4799 00001EFF 803804                  	cmp byte [rax], T_closure
  4800 00001F02 0F8535320100            	jne L_error_non_closure
  4801 00001F08 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4802 00001F0B FF5009                  	call SOB_CLOSURE_CODE(rax)
  4803 00001F0E 50                      	push rax
  4804 00001F0F 6A01                    	push 1	; arg count
  4805 00001F11 488B0425[63160000]      	mov rax, qword [free_var_53]	; free var cadr
  4806 00001F19 803805                  	cmp byte [rax], T_undefined
  4807 00001F1C 0F8497310100            	je L_error_fvar_undefined
  4808 00001F22 803804                  	cmp byte [rax], T_closure
  4809 00001F25 0F8512320100            	jne L_error_non_closure
  4810 00001F2B FF7001                  	push SOB_CLOSURE_ENV(rax)
  4811                                  
  4812                                  	; recycling the current frame
  4813 00001F2E FF7508                  	push qword [rbp + 8 * 1]	; old return address
  4814 00001F31 FF7500                  	push qword [rbp]	; old frame-pointer
  4815 00001F34 B905000000              	mov rcx, 5
  4816 00001F39 488B5D18                	mov rbx, COUNT
  4817 00001F3D 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
  4818 00001F42 488D55F8                	lea rdx, [rbp - 8]
  4819                                  .L_tc_recycle_frame_loop_04cf:
  4820 00001F46 4883F900                	cmp rcx, 0
  4821 00001F4A 7413                    	je .L_tc_recycle_frame_done_04cf
  4822 00001F4C 488B32                  	mov rsi, qword [rdx]
  4823 00001F4F 488933                  	mov qword [rbx], rsi
  4824 00001F52 48FFC9                  	dec rcx
  4825 00001F55 4883EB08                	sub rbx, 8
  4826 00001F59 4883EA08                	sub rdx, 8
  4827 00001F5D EBE7                    	jmp .L_tc_recycle_frame_loop_04cf
  4828                                  .L_tc_recycle_frame_done_04cf:
  4829 00001F5F 488D6308                	lea rsp, [rbx + 8]
  4830 00001F63 5D                      	pop rbp
  4831 00001F64 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4832 00001F67 C9                      	leave
  4833 00001F68 C21800                  	ret AND_KILL_FRAME(1)
  4834                                  .L_lambda_simple_end_03b7:	; new closure is in rax
  4835 00001F6B 48890425[41160000]      	mov qword [free_var_51], rax
  4836 00001F73 48B8-                   	mov rax, sob_void
  4836 00001F75 [0000000000000000] 
  4837                                  
  4838 00001F7D 4889C7                  	mov rdi, rax
  4839 00001F80 E8B6340100              	call print_sexpr_if_not_void
  4840                                  
  4841 00001F85 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4842 00001F8A E857320100              	call malloc
  4843 00001F8F 50                      	push rax
  4844 00001F90 BF00000000              	mov rdi, 8 * 0	; new rib
  4845 00001F95 E84C320100              	call malloc
  4846 00001F9A 50                      	push rax
  4847 00001F9B BF08000000              	mov rdi, 8 * 1	; extended env
  4848 00001FA0 E841320100              	call malloc
  4849 00001FA5 488B7D10                	mov rdi, ENV
  4850 00001FA9 BE00000000              	mov rsi, 0
  4851 00001FAE BA01000000              	mov rdx, 1
  4852                                  .L_lambda_simple_env_loop_03b8:	; ext_env[i + 1] <-- env[i]
  4853 00001FB3 4883FE00                	cmp rsi, 0
  4854 00001FB7 7410                    	je .L_lambda_simple_env_end_03b8
  4855 00001FB9 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4856 00001FBD 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4857 00001FC1 48FFC6                  	inc rsi
  4858 00001FC4 48FFC2                  	inc rdx
  4859 00001FC7 EBEA                    	jmp .L_lambda_simple_env_loop_03b8
  4860                                  .L_lambda_simple_env_end_03b8:
  4861 00001FC9 5B                      	pop rbx
  4862 00001FCA BE00000000              	mov rsi, 0
  4863                                  .L_lambda_simple_params_loop_03b8:	; copy params
  4864 00001FCF 4883FE00                	cmp rsi, 0
  4865 00001FD3 740E                    	je .L_lambda_simple_params_end_03b8
  4866 00001FD5 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4867 00001FDA 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4868 00001FDE 48FFC6                  	inc rsi
  4869 00001FE1 EBEC                    	jmp .L_lambda_simple_params_loop_03b8
  4870                                  .L_lambda_simple_params_end_03b8:
  4871 00001FE3 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
  4872 00001FE6 4889C3                  	mov rbx, rax
  4873 00001FE9 58                      	pop rax
  4874 00001FEA C60004                  	mov byte [rax], T_closure
  4875 00001FED 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4876 00001FF1 48C74009[FE1F0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03b8
  4877 00001FF9 E99B000000              	jmp .L_lambda_simple_end_03b8
  4878                                  .L_lambda_simple_code_03b8:	; lambda-simple body
  4879 00001FFE 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4880 00002004 740B                    	je .L_lambda_simple_arity_check_ok_03b8
  4881 00002006 FF742410                	push qword [rsp + 8 * 2]
  4882 0000200A 6A01                    	push 1
  4883 0000200C E98E310100              	jmp L_error_incorrect_arity_simple
  4884                                  .L_lambda_simple_arity_check_ok_03b8:
  4885 00002011 C8000000                	enter 0, 0
  4886                                  	; preparing a tail-call
  4887                                  	; preparing a non-tail-call
  4888 00002015 488B4520                	mov rax, PARAM(0)	; param x
  4889 00002019 50                      	push rax
  4890 0000201A 6A01                    	push 1	; arg count
  4891 0000201C 488B0425[EC150000]      	mov rax, qword [free_var_46]	; free var caar
  4892 00002024 803805                  	cmp byte [rax], T_undefined
  4893 00002027 0F848C300100            	je L_error_fvar_undefined
  4894 0000202D 803804                  	cmp byte [rax], T_closure
  4895 00002030 0F8507310100            	jne L_error_non_closure
  4896 00002036 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4897 00002039 FF5009                  	call SOB_CLOSURE_CODE(rax)
  4898 0000203C 50                      	push rax
  4899 0000203D 6A01                    	push 1	; arg count
  4900 0000203F 488B0425[EB160000]      	mov rax, qword [free_var_61]	; free var cdar
  4901 00002047 803805                  	cmp byte [rax], T_undefined
  4902 0000204A 0F8469300100            	je L_error_fvar_undefined
  4903 00002050 803804                  	cmp byte [rax], T_closure
  4904 00002053 0F85E4300100            	jne L_error_non_closure
  4905 00002059 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4906                                  
  4907                                  	; recycling the current frame
  4908 0000205C FF7508                  	push qword [rbp + 8 * 1]	; old return address
  4909 0000205F FF7500                  	push qword [rbp]	; old frame-pointer
  4910 00002062 B905000000              	mov rcx, 5
  4911 00002067 488B5D18                	mov rbx, COUNT
  4912 0000206B 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
  4913 00002070 488D55F8                	lea rdx, [rbp - 8]
  4914                                  .L_tc_recycle_frame_loop_04d0:
  4915 00002074 4883F900                	cmp rcx, 0
  4916 00002078 7413                    	je .L_tc_recycle_frame_done_04d0
  4917 0000207A 488B32                  	mov rsi, qword [rdx]
  4918 0000207D 488933                  	mov qword [rbx], rsi
  4919 00002080 48FFC9                  	dec rcx
  4920 00002083 4883EB08                	sub rbx, 8
  4921 00002087 4883EA08                	sub rdx, 8
  4922 0000208B EBE7                    	jmp .L_tc_recycle_frame_loop_04d0
  4923                                  .L_tc_recycle_frame_done_04d0:
  4924 0000208D 488D6308                	lea rsp, [rbx + 8]
  4925 00002091 5D                      	pop rbp
  4926 00002092 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4927 00002095 C9                      	leave
  4928 00002096 C21800                  	ret AND_KILL_FRAME(1)
  4929                                  .L_lambda_simple_end_03b8:	; new closure is in rax
  4930 00002099 48890425[85160000]      	mov qword [free_var_55], rax
  4931 000020A1 48B8-                   	mov rax, sob_void
  4931 000020A3 [0000000000000000] 
  4932                                  
  4933 000020AB 4889C7                  	mov rdi, rax
  4934 000020AE E888330100              	call print_sexpr_if_not_void
  4935                                  
  4936 000020B3 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4937 000020B8 E829310100              	call malloc
  4938 000020BD 50                      	push rax
  4939 000020BE BF00000000              	mov rdi, 8 * 0	; new rib
  4940 000020C3 E81E310100              	call malloc
  4941 000020C8 50                      	push rax
  4942 000020C9 BF08000000              	mov rdi, 8 * 1	; extended env
  4943 000020CE E813310100              	call malloc
  4944 000020D3 488B7D10                	mov rdi, ENV
  4945 000020D7 BE00000000              	mov rsi, 0
  4946 000020DC BA01000000              	mov rdx, 1
  4947                                  .L_lambda_simple_env_loop_03b9:	; ext_env[i + 1] <-- env[i]
  4948 000020E1 4883FE00                	cmp rsi, 0
  4949 000020E5 7410                    	je .L_lambda_simple_env_end_03b9
  4950 000020E7 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4951 000020EB 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4952 000020EF 48FFC6                  	inc rsi
  4953 000020F2 48FFC2                  	inc rdx
  4954 000020F5 EBEA                    	jmp .L_lambda_simple_env_loop_03b9
  4955                                  .L_lambda_simple_env_end_03b9:
  4956 000020F7 5B                      	pop rbx
  4957 000020F8 BE00000000              	mov rsi, 0
  4958                                  .L_lambda_simple_params_loop_03b9:	; copy params
  4959 000020FD 4883FE00                	cmp rsi, 0
  4960 00002101 740E                    	je .L_lambda_simple_params_end_03b9
  4961 00002103 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4962 00002108 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4963 0000210C 48FFC6                  	inc rsi
  4964 0000210F EBEC                    	jmp .L_lambda_simple_params_loop_03b9
  4965                                  .L_lambda_simple_params_end_03b9:
  4966 00002111 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
  4967 00002114 4889C3                  	mov rbx, rax
  4968 00002117 58                      	pop rax
  4969 00002118 C60004                  	mov byte [rax], T_closure
  4970 0000211B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4971 0000211F 48C74009[2C210000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03b9
  4972 00002127 E99B000000              	jmp .L_lambda_simple_end_03b9
  4973                                  .L_lambda_simple_code_03b9:	; lambda-simple body
  4974 0000212C 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4975 00002132 740B                    	je .L_lambda_simple_arity_check_ok_03b9
  4976 00002134 FF742410                	push qword [rsp + 8 * 2]
  4977 00002138 6A01                    	push 1
  4978 0000213A E960300100              	jmp L_error_incorrect_arity_simple
  4979                                  .L_lambda_simple_arity_check_ok_03b9:
  4980 0000213F C8000000                	enter 0, 0
  4981                                  	; preparing a tail-call
  4982                                  	; preparing a non-tail-call
  4983 00002143 488B4520                	mov rax, PARAM(0)	; param x
  4984 00002147 50                      	push rax
  4985 00002148 6A01                    	push 1	; arg count
  4986 0000214A 488B0425[63160000]      	mov rax, qword [free_var_53]	; free var cadr
  4987 00002152 803805                  	cmp byte [rax], T_undefined
  4988 00002155 0F845E2F0100            	je L_error_fvar_undefined
  4989 0000215B 803804                  	cmp byte [rax], T_closure
  4990 0000215E 0F85D92F0100            	jne L_error_non_closure
  4991 00002164 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4992 00002167 FF5009                  	call SOB_CLOSURE_CODE(rax)
  4993 0000216A 50                      	push rax
  4994 0000216B 6A01                    	push 1	; arg count
  4995 0000216D 488B0425[EB160000]      	mov rax, qword [free_var_61]	; free var cdar
  4996 00002175 803805                  	cmp byte [rax], T_undefined
  4997 00002178 0F843B2F0100            	je L_error_fvar_undefined
  4998 0000217E 803804                  	cmp byte [rax], T_closure
  4999 00002181 0F85B62F0100            	jne L_error_non_closure
  5000 00002187 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5001                                  
  5002                                  	; recycling the current frame
  5003 0000218A FF7508                  	push qword [rbp + 8 * 1]	; old return address
  5004 0000218D FF7500                  	push qword [rbp]	; old frame-pointer
  5005 00002190 B905000000              	mov rcx, 5
  5006 00002195 488B5D18                	mov rbx, COUNT
  5007 00002199 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
  5008 0000219E 488D55F8                	lea rdx, [rbp - 8]
  5009                                  .L_tc_recycle_frame_loop_04d1:
  5010 000021A2 4883F900                	cmp rcx, 0
  5011 000021A6 7413                    	je .L_tc_recycle_frame_done_04d1
  5012 000021A8 488B32                  	mov rsi, qword [rdx]
  5013 000021AB 488933                  	mov qword [rbx], rsi
  5014 000021AE 48FFC9                  	dec rcx
  5015 000021B1 4883EB08                	sub rbx, 8
  5016 000021B5 4883EA08                	sub rdx, 8
  5017 000021B9 EBE7                    	jmp .L_tc_recycle_frame_loop_04d1
  5018                                  .L_tc_recycle_frame_done_04d1:
  5019 000021BB 488D6308                	lea rsp, [rbx + 8]
  5020 000021BF 5D                      	pop rbp
  5021 000021C0 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  5022 000021C3 C9                      	leave
  5023 000021C4 C21800                  	ret AND_KILL_FRAME(1)
  5024                                  .L_lambda_simple_end_03b9:	; new closure is in rax
  5025 000021C7 48890425[96160000]      	mov qword [free_var_56], rax
  5026 000021CF 48B8-                   	mov rax, sob_void
  5026 000021D1 [0000000000000000] 
  5027                                  
  5028 000021D9 4889C7                  	mov rdi, rax
  5029 000021DC E85A320100              	call print_sexpr_if_not_void
  5030                                  
  5031 000021E1 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5032 000021E6 E8FB2F0100              	call malloc
  5033 000021EB 50                      	push rax
  5034 000021EC BF00000000              	mov rdi, 8 * 0	; new rib
  5035 000021F1 E8F02F0100              	call malloc
  5036 000021F6 50                      	push rax
  5037 000021F7 BF08000000              	mov rdi, 8 * 1	; extended env
  5038 000021FC E8E52F0100              	call malloc
  5039 00002201 488B7D10                	mov rdi, ENV
  5040 00002205 BE00000000              	mov rsi, 0
  5041 0000220A BA01000000              	mov rdx, 1
  5042                                  .L_lambda_simple_env_loop_03ba:	; ext_env[i + 1] <-- env[i]
  5043 0000220F 4883FE00                	cmp rsi, 0
  5044 00002213 7410                    	je .L_lambda_simple_env_end_03ba
  5045 00002215 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5046 00002219 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5047 0000221D 48FFC6                  	inc rsi
  5048 00002220 48FFC2                  	inc rdx
  5049 00002223 EBEA                    	jmp .L_lambda_simple_env_loop_03ba
  5050                                  .L_lambda_simple_env_end_03ba:
  5051 00002225 5B                      	pop rbx
  5052 00002226 BE00000000              	mov rsi, 0
  5053                                  .L_lambda_simple_params_loop_03ba:	; copy params
  5054 0000222B 4883FE00                	cmp rsi, 0
  5055 0000222F 740E                    	je .L_lambda_simple_params_end_03ba
  5056 00002231 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5057 00002236 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5058 0000223A 48FFC6                  	inc rsi
  5059 0000223D EBEC                    	jmp .L_lambda_simple_params_loop_03ba
  5060                                  .L_lambda_simple_params_end_03ba:
  5061 0000223F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
  5062 00002242 4889C3                  	mov rbx, rax
  5063 00002245 58                      	pop rax
  5064 00002246 C60004                  	mov byte [rax], T_closure
  5065 00002249 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5066 0000224D 48C74009[5A220000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03ba
  5067 00002255 E99B000000              	jmp .L_lambda_simple_end_03ba
  5068                                  .L_lambda_simple_code_03ba:	; lambda-simple body
  5069 0000225A 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5070 00002260 740B                    	je .L_lambda_simple_arity_check_ok_03ba
  5071 00002262 FF742410                	push qword [rsp + 8 * 2]
  5072 00002266 6A01                    	push 1
  5073 00002268 E9322F0100              	jmp L_error_incorrect_arity_simple
  5074                                  .L_lambda_simple_arity_check_ok_03ba:
  5075 0000226D C8000000                	enter 0, 0
  5076                                  	; preparing a tail-call
  5077                                  	; preparing a non-tail-call
  5078 00002271 488B4520                	mov rax, PARAM(0)	; param x
  5079 00002275 50                      	push rax
  5080 00002276 6A01                    	push 1	; arg count
  5081 00002278 488B0425[EB160000]      	mov rax, qword [free_var_61]	; free var cdar
  5082 00002280 803805                  	cmp byte [rax], T_undefined
  5083 00002283 0F84302E0100            	je L_error_fvar_undefined
  5084 00002289 803804                  	cmp byte [rax], T_closure
  5085 0000228C 0F85AB2E0100            	jne L_error_non_closure
  5086 00002292 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5087 00002295 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5088 00002298 50                      	push rax
  5089 00002299 6A01                    	push 1	; arg count
  5090 0000229B 488B0425[EB160000]      	mov rax, qword [free_var_61]	; free var cdar
  5091 000022A3 803805                  	cmp byte [rax], T_undefined
  5092 000022A6 0F840D2E0100            	je L_error_fvar_undefined
  5093 000022AC 803804                  	cmp byte [rax], T_closure
  5094 000022AF 0F85882E0100            	jne L_error_non_closure
  5095 000022B5 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5096                                  
  5097                                  	; recycling the current frame
  5098 000022B8 FF7508                  	push qword [rbp + 8 * 1]	; old return address
  5099 000022BB FF7500                  	push qword [rbp]	; old frame-pointer
  5100 000022BE B905000000              	mov rcx, 5
  5101 000022C3 488B5D18                	mov rbx, COUNT
  5102 000022C7 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
  5103 000022CC 488D55F8                	lea rdx, [rbp - 8]
  5104                                  .L_tc_recycle_frame_loop_04d2:
  5105 000022D0 4883F900                	cmp rcx, 0
  5106 000022D4 7413                    	je .L_tc_recycle_frame_done_04d2
  5107 000022D6 488B32                  	mov rsi, qword [rdx]
  5108 000022D9 488933                  	mov qword [rbx], rsi
  5109 000022DC 48FFC9                  	dec rcx
  5110 000022DF 4883EB08                	sub rbx, 8
  5111 000022E3 4883EA08                	sub rdx, 8
  5112 000022E7 EBE7                    	jmp .L_tc_recycle_frame_loop_04d2
  5113                                  .L_tc_recycle_frame_done_04d2:
  5114 000022E9 488D6308                	lea rsp, [rbx + 8]
  5115 000022ED 5D                      	pop rbp
  5116 000022EE FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  5117 000022F1 C9                      	leave
  5118 000022F2 C21800                  	ret AND_KILL_FRAME(1)
  5119                                  .L_lambda_simple_end_03ba:	; new closure is in rax
  5120 000022F5 48890425[B8160000]      	mov qword [free_var_58], rax
  5121 000022FD 48B8-                   	mov rax, sob_void
  5121 000022FF [0000000000000000] 
  5122                                  
  5123 00002307 4889C7                  	mov rdi, rax
  5124 0000230A E82C310100              	call print_sexpr_if_not_void
  5125                                  
  5126 0000230F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5127 00002314 E8CD2E0100              	call malloc
  5128 00002319 50                      	push rax
  5129 0000231A BF00000000              	mov rdi, 8 * 0	; new rib
  5130 0000231F E8C22E0100              	call malloc
  5131 00002324 50                      	push rax
  5132 00002325 BF08000000              	mov rdi, 8 * 1	; extended env
  5133 0000232A E8B72E0100              	call malloc
  5134 0000232F 488B7D10                	mov rdi, ENV
  5135 00002333 BE00000000              	mov rsi, 0
  5136 00002338 BA01000000              	mov rdx, 1
  5137                                  .L_lambda_simple_env_loop_03bb:	; ext_env[i + 1] <-- env[i]
  5138 0000233D 4883FE00                	cmp rsi, 0
  5139 00002341 7410                    	je .L_lambda_simple_env_end_03bb
  5140 00002343 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5141 00002347 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5142 0000234B 48FFC6                  	inc rsi
  5143 0000234E 48FFC2                  	inc rdx
  5144 00002351 EBEA                    	jmp .L_lambda_simple_env_loop_03bb
  5145                                  .L_lambda_simple_env_end_03bb:
  5146 00002353 5B                      	pop rbx
  5147 00002354 BE00000000              	mov rsi, 0
  5148                                  .L_lambda_simple_params_loop_03bb:	; copy params
  5149 00002359 4883FE00                	cmp rsi, 0
  5150 0000235D 740E                    	je .L_lambda_simple_params_end_03bb
  5151 0000235F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5152 00002364 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5153 00002368 48FFC6                  	inc rsi
  5154 0000236B EBEC                    	jmp .L_lambda_simple_params_loop_03bb
  5155                                  .L_lambda_simple_params_end_03bb:
  5156 0000236D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
  5157 00002370 4889C3                  	mov rbx, rax
  5158 00002373 58                      	pop rax
  5159 00002374 C60004                  	mov byte [rax], T_closure
  5160 00002377 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5161 0000237B 48C74009[88230000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03bb
  5162 00002383 E99B000000              	jmp .L_lambda_simple_end_03bb
  5163                                  .L_lambda_simple_code_03bb:	; lambda-simple body
  5164 00002388 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5165 0000238E 740B                    	je .L_lambda_simple_arity_check_ok_03bb
  5166 00002390 FF742410                	push qword [rsp + 8 * 2]
  5167 00002394 6A01                    	push 1
  5168 00002396 E9042E0100              	jmp L_error_incorrect_arity_simple
  5169                                  .L_lambda_simple_arity_check_ok_03bb:
  5170 0000239B C8000000                	enter 0, 0
  5171                                  	; preparing a tail-call
  5172                                  	; preparing a non-tail-call
  5173 0000239F 488B4520                	mov rax, PARAM(0)	; param x
  5174 000023A3 50                      	push rax
  5175 000023A4 6A01                    	push 1	; arg count
  5176 000023A6 488B0425[62170000]      	mov rax, qword [free_var_68]	; free var cddr
  5177 000023AE 803805                  	cmp byte [rax], T_undefined
  5178 000023B1 0F84022D0100            	je L_error_fvar_undefined
  5179 000023B7 803804                  	cmp byte [rax], T_closure
  5180 000023BA 0F857D2D0100            	jne L_error_non_closure
  5181 000023C0 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5182 000023C3 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5183 000023C6 50                      	push rax
  5184 000023C7 6A01                    	push 1	; arg count
  5185 000023C9 488B0425[EB160000]      	mov rax, qword [free_var_61]	; free var cdar
  5186 000023D1 803805                  	cmp byte [rax], T_undefined
  5187 000023D4 0F84DF2C0100            	je L_error_fvar_undefined
  5188 000023DA 803804                  	cmp byte [rax], T_closure
  5189 000023DD 0F855A2D0100            	jne L_error_non_closure
  5190 000023E3 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5191                                  
  5192                                  	; recycling the current frame
  5193 000023E6 FF7508                  	push qword [rbp + 8 * 1]	; old return address
  5194 000023E9 FF7500                  	push qword [rbp]	; old frame-pointer
  5195 000023EC B905000000              	mov rcx, 5
  5196 000023F1 488B5D18                	mov rbx, COUNT
  5197 000023F5 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
  5198 000023FA 488D55F8                	lea rdx, [rbp - 8]
  5199                                  .L_tc_recycle_frame_loop_04d3:
  5200 000023FE 4883F900                	cmp rcx, 0
  5201 00002402 7413                    	je .L_tc_recycle_frame_done_04d3
  5202 00002404 488B32                  	mov rsi, qword [rdx]
  5203 00002407 488933                  	mov qword [rbx], rsi
  5204 0000240A 48FFC9                  	dec rcx
  5205 0000240D 4883EB08                	sub rbx, 8
  5206 00002411 4883EA08                	sub rdx, 8
  5207 00002415 EBE7                    	jmp .L_tc_recycle_frame_loop_04d3
  5208                                  .L_tc_recycle_frame_done_04d3:
  5209 00002417 488D6308                	lea rsp, [rbx + 8]
  5210 0000241B 5D                      	pop rbp
  5211 0000241C FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  5212 0000241F C9                      	leave
  5213 00002420 C21800                  	ret AND_KILL_FRAME(1)
  5214                                  .L_lambda_simple_end_03bb:	; new closure is in rax
  5215 00002423 48890425[C9160000]      	mov qword [free_var_59], rax
  5216 0000242B 48B8-                   	mov rax, sob_void
  5216 0000242D [0000000000000000] 
  5217                                  
  5218 00002435 4889C7                  	mov rdi, rax
  5219 00002438 E8FE2F0100              	call print_sexpr_if_not_void
  5220                                  
  5221 0000243D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5222 00002442 E89F2D0100              	call malloc
  5223 00002447 50                      	push rax
  5224 00002448 BF00000000              	mov rdi, 8 * 0	; new rib
  5225 0000244D E8942D0100              	call malloc
  5226 00002452 50                      	push rax
  5227 00002453 BF08000000              	mov rdi, 8 * 1	; extended env
  5228 00002458 E8892D0100              	call malloc
  5229 0000245D 488B7D10                	mov rdi, ENV
  5230 00002461 BE00000000              	mov rsi, 0
  5231 00002466 BA01000000              	mov rdx, 1
  5232                                  .L_lambda_simple_env_loop_03bc:	; ext_env[i + 1] <-- env[i]
  5233 0000246B 4883FE00                	cmp rsi, 0
  5234 0000246F 7410                    	je .L_lambda_simple_env_end_03bc
  5235 00002471 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5236 00002475 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5237 00002479 48FFC6                  	inc rsi
  5238 0000247C 48FFC2                  	inc rdx
  5239 0000247F EBEA                    	jmp .L_lambda_simple_env_loop_03bc
  5240                                  .L_lambda_simple_env_end_03bc:
  5241 00002481 5B                      	pop rbx
  5242 00002482 BE00000000              	mov rsi, 0
  5243                                  .L_lambda_simple_params_loop_03bc:	; copy params
  5244 00002487 4883FE00                	cmp rsi, 0
  5245 0000248B 740E                    	je .L_lambda_simple_params_end_03bc
  5246 0000248D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5247 00002492 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5248 00002496 48FFC6                  	inc rsi
  5249 00002499 EBEC                    	jmp .L_lambda_simple_params_loop_03bc
  5250                                  .L_lambda_simple_params_end_03bc:
  5251 0000249B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
  5252 0000249E 4889C3                  	mov rbx, rax
  5253 000024A1 58                      	pop rax
  5254 000024A2 C60004                  	mov byte [rax], T_closure
  5255 000024A5 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5256 000024A9 48C74009[B6240000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03bc
  5257 000024B1 E99B000000              	jmp .L_lambda_simple_end_03bc
  5258                                  .L_lambda_simple_code_03bc:	; lambda-simple body
  5259 000024B6 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5260 000024BC 740B                    	je .L_lambda_simple_arity_check_ok_03bc
  5261 000024BE FF742410                	push qword [rsp + 8 * 2]
  5262 000024C2 6A01                    	push 1
  5263 000024C4 E9D62C0100              	jmp L_error_incorrect_arity_simple
  5264                                  .L_lambda_simple_arity_check_ok_03bc:
  5265 000024C9 C8000000                	enter 0, 0
  5266                                  	; preparing a tail-call
  5267                                  	; preparing a non-tail-call
  5268 000024CD 488B4520                	mov rax, PARAM(0)	; param x
  5269 000024D1 50                      	push rax
  5270 000024D2 6A01                    	push 1	; arg count
  5271 000024D4 488B0425[EC150000]      	mov rax, qword [free_var_46]	; free var caar
  5272 000024DC 803805                  	cmp byte [rax], T_undefined
  5273 000024DF 0F84D42B0100            	je L_error_fvar_undefined
  5274 000024E5 803804                  	cmp byte [rax], T_closure
  5275 000024E8 0F854F2C0100            	jne L_error_non_closure
  5276 000024EE FF7001                  	push SOB_CLOSURE_ENV(rax)
  5277 000024F1 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5278 000024F4 50                      	push rax
  5279 000024F5 6A01                    	push 1	; arg count
  5280 000024F7 488B0425[62170000]      	mov rax, qword [free_var_68]	; free var cddr
  5281 000024FF 803805                  	cmp byte [rax], T_undefined
  5282 00002502 0F84B12B0100            	je L_error_fvar_undefined
  5283 00002508 803804                  	cmp byte [rax], T_closure
  5284 0000250B 0F852C2C0100            	jne L_error_non_closure
  5285 00002511 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5286                                  
  5287                                  	; recycling the current frame
  5288 00002514 FF7508                  	push qword [rbp + 8 * 1]	; old return address
  5289 00002517 FF7500                  	push qword [rbp]	; old frame-pointer
  5290 0000251A B905000000              	mov rcx, 5
  5291 0000251F 488B5D18                	mov rbx, COUNT
  5292 00002523 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
  5293 00002528 488D55F8                	lea rdx, [rbp - 8]
  5294                                  .L_tc_recycle_frame_loop_04d4:
  5295 0000252C 4883F900                	cmp rcx, 0
  5296 00002530 7413                    	je .L_tc_recycle_frame_done_04d4
  5297 00002532 488B32                  	mov rsi, qword [rdx]
  5298 00002535 488933                  	mov qword [rbx], rsi
  5299 00002538 48FFC9                  	dec rcx
  5300 0000253B 4883EB08                	sub rbx, 8
  5301 0000253F 4883EA08                	sub rdx, 8
  5302 00002543 EBE7                    	jmp .L_tc_recycle_frame_loop_04d4
  5303                                  .L_tc_recycle_frame_done_04d4:
  5304 00002545 488D6308                	lea rsp, [rbx + 8]
  5305 00002549 5D                      	pop rbp
  5306 0000254A FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  5307 0000254D C9                      	leave
  5308 0000254E C21800                  	ret AND_KILL_FRAME(1)
  5309                                  .L_lambda_simple_end_03bc:	; new closure is in rax
  5310 00002551 48890425[FC160000]      	mov qword [free_var_62], rax
  5311 00002559 48B8-                   	mov rax, sob_void
  5311 0000255B [0000000000000000] 
  5312                                  
  5313 00002563 4889C7                  	mov rdi, rax
  5314 00002566 E8D02E0100              	call print_sexpr_if_not_void
  5315                                  
  5316 0000256B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5317 00002570 E8712C0100              	call malloc
  5318 00002575 50                      	push rax
  5319 00002576 BF00000000              	mov rdi, 8 * 0	; new rib
  5320 0000257B E8662C0100              	call malloc
  5321 00002580 50                      	push rax
  5322 00002581 BF08000000              	mov rdi, 8 * 1	; extended env
  5323 00002586 E85B2C0100              	call malloc
  5324 0000258B 488B7D10                	mov rdi, ENV
  5325 0000258F BE00000000              	mov rsi, 0
  5326 00002594 BA01000000              	mov rdx, 1
  5327                                  .L_lambda_simple_env_loop_03bd:	; ext_env[i + 1] <-- env[i]
  5328 00002599 4883FE00                	cmp rsi, 0
  5329 0000259D 7410                    	je .L_lambda_simple_env_end_03bd
  5330 0000259F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5331 000025A3 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5332 000025A7 48FFC6                  	inc rsi
  5333 000025AA 48FFC2                  	inc rdx
  5334 000025AD EBEA                    	jmp .L_lambda_simple_env_loop_03bd
  5335                                  .L_lambda_simple_env_end_03bd:
  5336 000025AF 5B                      	pop rbx
  5337 000025B0 BE00000000              	mov rsi, 0
  5338                                  .L_lambda_simple_params_loop_03bd:	; copy params
  5339 000025B5 4883FE00                	cmp rsi, 0
  5340 000025B9 740E                    	je .L_lambda_simple_params_end_03bd
  5341 000025BB 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5342 000025C0 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5343 000025C4 48FFC6                  	inc rsi
  5344 000025C7 EBEC                    	jmp .L_lambda_simple_params_loop_03bd
  5345                                  .L_lambda_simple_params_end_03bd:
  5346 000025C9 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
  5347 000025CC 4889C3                  	mov rbx, rax
  5348 000025CF 58                      	pop rax
  5349 000025D0 C60004                  	mov byte [rax], T_closure
  5350 000025D3 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5351 000025D7 48C74009[E4250000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03bd
  5352 000025DF E99B000000              	jmp .L_lambda_simple_end_03bd
  5353                                  .L_lambda_simple_code_03bd:	; lambda-simple body
  5354 000025E4 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5355 000025EA 740B                    	je .L_lambda_simple_arity_check_ok_03bd
  5356 000025EC FF742410                	push qword [rsp + 8 * 2]
  5357 000025F0 6A01                    	push 1
  5358 000025F2 E9A82B0100              	jmp L_error_incorrect_arity_simple
  5359                                  .L_lambda_simple_arity_check_ok_03bd:
  5360 000025F7 C8000000                	enter 0, 0
  5361                                  	; preparing a tail-call
  5362                                  	; preparing a non-tail-call
  5363 000025FB 488B4520                	mov rax, PARAM(0)	; param x
  5364 000025FF 50                      	push rax
  5365 00002600 6A01                    	push 1	; arg count
  5366 00002602 488B0425[63160000]      	mov rax, qword [free_var_53]	; free var cadr
  5367 0000260A 803805                  	cmp byte [rax], T_undefined
  5368 0000260D 0F84A62A0100            	je L_error_fvar_undefined
  5369 00002613 803804                  	cmp byte [rax], T_closure
  5370 00002616 0F85212B0100            	jne L_error_non_closure
  5371 0000261C FF7001                  	push SOB_CLOSURE_ENV(rax)
  5372 0000261F FF5009                  	call SOB_CLOSURE_CODE(rax)
  5373 00002622 50                      	push rax
  5374 00002623 6A01                    	push 1	; arg count
  5375 00002625 488B0425[62170000]      	mov rax, qword [free_var_68]	; free var cddr
  5376 0000262D 803805                  	cmp byte [rax], T_undefined
  5377 00002630 0F84832A0100            	je L_error_fvar_undefined
  5378 00002636 803804                  	cmp byte [rax], T_closure
  5379 00002639 0F85FE2A0100            	jne L_error_non_closure
  5380 0000263F FF7001                  	push SOB_CLOSURE_ENV(rax)
  5381                                  
  5382                                  	; recycling the current frame
  5383 00002642 FF7508                  	push qword [rbp + 8 * 1]	; old return address
  5384 00002645 FF7500                  	push qword [rbp]	; old frame-pointer
  5385 00002648 B905000000              	mov rcx, 5
  5386 0000264D 488B5D18                	mov rbx, COUNT
  5387 00002651 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
  5388 00002656 488D55F8                	lea rdx, [rbp - 8]
  5389                                  .L_tc_recycle_frame_loop_04d5:
  5390 0000265A 4883F900                	cmp rcx, 0
  5391 0000265E 7413                    	je .L_tc_recycle_frame_done_04d5
  5392 00002660 488B32                  	mov rsi, qword [rdx]
  5393 00002663 488933                  	mov qword [rbx], rsi
  5394 00002666 48FFC9                  	dec rcx
  5395 00002669 4883EB08                	sub rbx, 8
  5396 0000266D 4883EA08                	sub rdx, 8
  5397 00002671 EBE7                    	jmp .L_tc_recycle_frame_loop_04d5
  5398                                  .L_tc_recycle_frame_done_04d5:
  5399 00002673 488D6308                	lea rsp, [rbx + 8]
  5400 00002677 5D                      	pop rbp
  5401 00002678 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  5402 0000267B C9                      	leave
  5403 0000267C C21800                  	ret AND_KILL_FRAME(1)
  5404                                  .L_lambda_simple_end_03bd:	; new closure is in rax
  5405 0000267F 48890425[0D170000]      	mov qword [free_var_63], rax
  5406 00002687 48B8-                   	mov rax, sob_void
  5406 00002689 [0000000000000000] 
  5407                                  
  5408 00002691 4889C7                  	mov rdi, rax
  5409 00002694 E8A22D0100              	call print_sexpr_if_not_void
  5410                                  
  5411 00002699 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5412 0000269E E8432B0100              	call malloc
  5413 000026A3 50                      	push rax
  5414 000026A4 BF00000000              	mov rdi, 8 * 0	; new rib
  5415 000026A9 E8382B0100              	call malloc
  5416 000026AE 50                      	push rax
  5417 000026AF BF08000000              	mov rdi, 8 * 1	; extended env
  5418 000026B4 E82D2B0100              	call malloc
  5419 000026B9 488B7D10                	mov rdi, ENV
  5420 000026BD BE00000000              	mov rsi, 0
  5421 000026C2 BA01000000              	mov rdx, 1
  5422                                  .L_lambda_simple_env_loop_03be:	; ext_env[i + 1] <-- env[i]
  5423 000026C7 4883FE00                	cmp rsi, 0
  5424 000026CB 7410                    	je .L_lambda_simple_env_end_03be
  5425 000026CD 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5426 000026D1 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5427 000026D5 48FFC6                  	inc rsi
  5428 000026D8 48FFC2                  	inc rdx
  5429 000026DB EBEA                    	jmp .L_lambda_simple_env_loop_03be
  5430                                  .L_lambda_simple_env_end_03be:
  5431 000026DD 5B                      	pop rbx
  5432 000026DE BE00000000              	mov rsi, 0
  5433                                  .L_lambda_simple_params_loop_03be:	; copy params
  5434 000026E3 4883FE00                	cmp rsi, 0
  5435 000026E7 740E                    	je .L_lambda_simple_params_end_03be
  5436 000026E9 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5437 000026EE 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5438 000026F2 48FFC6                  	inc rsi
  5439 000026F5 EBEC                    	jmp .L_lambda_simple_params_loop_03be
  5440                                  .L_lambda_simple_params_end_03be:
  5441 000026F7 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
  5442 000026FA 4889C3                  	mov rbx, rax
  5443 000026FD 58                      	pop rax
  5444 000026FE C60004                  	mov byte [rax], T_closure
  5445 00002701 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5446 00002705 48C74009[12270000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03be
  5447 0000270D E99B000000              	jmp .L_lambda_simple_end_03be
  5448                                  .L_lambda_simple_code_03be:	; lambda-simple body
  5449 00002712 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5450 00002718 740B                    	je .L_lambda_simple_arity_check_ok_03be
  5451 0000271A FF742410                	push qword [rsp + 8 * 2]
  5452 0000271E 6A01                    	push 1
  5453 00002720 E97A2A0100              	jmp L_error_incorrect_arity_simple
  5454                                  .L_lambda_simple_arity_check_ok_03be:
  5455 00002725 C8000000                	enter 0, 0
  5456                                  	; preparing a tail-call
  5457                                  	; preparing a non-tail-call
  5458 00002729 488B4520                	mov rax, PARAM(0)	; param x
  5459 0000272D 50                      	push rax
  5460 0000272E 6A01                    	push 1	; arg count
  5461 00002730 488B0425[EB160000]      	mov rax, qword [free_var_61]	; free var cdar
  5462 00002738 803805                  	cmp byte [rax], T_undefined
  5463 0000273B 0F8478290100            	je L_error_fvar_undefined
  5464 00002741 803804                  	cmp byte [rax], T_closure
  5465 00002744 0F85F3290100            	jne L_error_non_closure
  5466 0000274A FF7001                  	push SOB_CLOSURE_ENV(rax)
  5467 0000274D FF5009                  	call SOB_CLOSURE_CODE(rax)
  5468 00002750 50                      	push rax
  5469 00002751 6A01                    	push 1	; arg count
  5470 00002753 488B0425[62170000]      	mov rax, qword [free_var_68]	; free var cddr
  5471 0000275B 803805                  	cmp byte [rax], T_undefined
  5472 0000275E 0F8455290100            	je L_error_fvar_undefined
  5473 00002764 803804                  	cmp byte [rax], T_closure
  5474 00002767 0F85D0290100            	jne L_error_non_closure
  5475 0000276D FF7001                  	push SOB_CLOSURE_ENV(rax)
  5476                                  
  5477                                  	; recycling the current frame
  5478 00002770 FF7508                  	push qword [rbp + 8 * 1]	; old return address
  5479 00002773 FF7500                  	push qword [rbp]	; old frame-pointer
  5480 00002776 B905000000              	mov rcx, 5
  5481 0000277B 488B5D18                	mov rbx, COUNT
  5482 0000277F 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
  5483 00002784 488D55F8                	lea rdx, [rbp - 8]
  5484                                  .L_tc_recycle_frame_loop_04d6:
  5485 00002788 4883F900                	cmp rcx, 0
  5486 0000278C 7413                    	je .L_tc_recycle_frame_done_04d6
  5487 0000278E 488B32                  	mov rsi, qword [rdx]
  5488 00002791 488933                  	mov qword [rbx], rsi
  5489 00002794 48FFC9                  	dec rcx
  5490 00002797 4883EB08                	sub rbx, 8
  5491 0000279B 4883EA08                	sub rdx, 8
  5492 0000279F EBE7                    	jmp .L_tc_recycle_frame_loop_04d6
  5493                                  .L_tc_recycle_frame_done_04d6:
  5494 000027A1 488D6308                	lea rsp, [rbx + 8]
  5495 000027A5 5D                      	pop rbp
  5496 000027A6 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  5497 000027A9 C9                      	leave
  5498 000027AA C21800                  	ret AND_KILL_FRAME(1)
  5499                                  .L_lambda_simple_end_03be:	; new closure is in rax
  5500 000027AD 48890425[2F170000]      	mov qword [free_var_65], rax
  5501 000027B5 48B8-                   	mov rax, sob_void
  5501 000027B7 [0000000000000000] 
  5502                                  
  5503 000027BF 4889C7                  	mov rdi, rax
  5504 000027C2 E8742C0100              	call print_sexpr_if_not_void
  5505                                  
  5506 000027C7 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5507 000027CC E8152A0100              	call malloc
  5508 000027D1 50                      	push rax
  5509 000027D2 BF00000000              	mov rdi, 8 * 0	; new rib
  5510 000027D7 E80A2A0100              	call malloc
  5511 000027DC 50                      	push rax
  5512 000027DD BF08000000              	mov rdi, 8 * 1	; extended env
  5513 000027E2 E8FF290100              	call malloc
  5514 000027E7 488B7D10                	mov rdi, ENV
  5515 000027EB BE00000000              	mov rsi, 0
  5516 000027F0 BA01000000              	mov rdx, 1
  5517                                  .L_lambda_simple_env_loop_03bf:	; ext_env[i + 1] <-- env[i]
  5518 000027F5 4883FE00                	cmp rsi, 0
  5519 000027F9 7410                    	je .L_lambda_simple_env_end_03bf
  5520 000027FB 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5521 000027FF 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5522 00002803 48FFC6                  	inc rsi
  5523 00002806 48FFC2                  	inc rdx
  5524 00002809 EBEA                    	jmp .L_lambda_simple_env_loop_03bf
  5525                                  .L_lambda_simple_env_end_03bf:
  5526 0000280B 5B                      	pop rbx
  5527 0000280C BE00000000              	mov rsi, 0
  5528                                  .L_lambda_simple_params_loop_03bf:	; copy params
  5529 00002811 4883FE00                	cmp rsi, 0
  5530 00002815 740E                    	je .L_lambda_simple_params_end_03bf
  5531 00002817 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5532 0000281C 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5533 00002820 48FFC6                  	inc rsi
  5534 00002823 EBEC                    	jmp .L_lambda_simple_params_loop_03bf
  5535                                  .L_lambda_simple_params_end_03bf:
  5536 00002825 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
  5537 00002828 4889C3                  	mov rbx, rax
  5538 0000282B 58                      	pop rax
  5539 0000282C C60004                  	mov byte [rax], T_closure
  5540 0000282F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5541 00002833 48C74009[40280000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03bf
  5542 0000283B E99B000000              	jmp .L_lambda_simple_end_03bf
  5543                                  .L_lambda_simple_code_03bf:	; lambda-simple body
  5544 00002840 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5545 00002846 740B                    	je .L_lambda_simple_arity_check_ok_03bf
  5546 00002848 FF742410                	push qword [rsp + 8 * 2]
  5547 0000284C 6A01                    	push 1
  5548 0000284E E94C290100              	jmp L_error_incorrect_arity_simple
  5549                                  .L_lambda_simple_arity_check_ok_03bf:
  5550 00002853 C8000000                	enter 0, 0
  5551                                  	; preparing a tail-call
  5552                                  	; preparing a non-tail-call
  5553 00002857 488B4520                	mov rax, PARAM(0)	; param x
  5554 0000285B 50                      	push rax
  5555 0000285C 6A01                    	push 1	; arg count
  5556 0000285E 488B0425[62170000]      	mov rax, qword [free_var_68]	; free var cddr
  5557 00002866 803805                  	cmp byte [rax], T_undefined
  5558 00002869 0F844A280100            	je L_error_fvar_undefined
  5559 0000286F 803804                  	cmp byte [rax], T_closure
  5560 00002872 0F85C5280100            	jne L_error_non_closure
  5561 00002878 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5562 0000287B FF5009                  	call SOB_CLOSURE_CODE(rax)
  5563 0000287E 50                      	push rax
  5564 0000287F 6A01                    	push 1	; arg count
  5565 00002881 488B0425[62170000]      	mov rax, qword [free_var_68]	; free var cddr
  5566 00002889 803805                  	cmp byte [rax], T_undefined
  5567 0000288C 0F8427280100            	je L_error_fvar_undefined
  5568 00002892 803804                  	cmp byte [rax], T_closure
  5569 00002895 0F85A2280100            	jne L_error_non_closure
  5570 0000289B FF7001                  	push SOB_CLOSURE_ENV(rax)
  5571                                  
  5572                                  	; recycling the current frame
  5573 0000289E FF7508                  	push qword [rbp + 8 * 1]	; old return address
  5574 000028A1 FF7500                  	push qword [rbp]	; old frame-pointer
  5575 000028A4 B905000000              	mov rcx, 5
  5576 000028A9 488B5D18                	mov rbx, COUNT
  5577 000028AD 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
  5578 000028B2 488D55F8                	lea rdx, [rbp - 8]
  5579                                  .L_tc_recycle_frame_loop_04d7:
  5580 000028B6 4883F900                	cmp rcx, 0
  5581 000028BA 7413                    	je .L_tc_recycle_frame_done_04d7
  5582 000028BC 488B32                  	mov rsi, qword [rdx]
  5583 000028BF 488933                  	mov qword [rbx], rsi
  5584 000028C2 48FFC9                  	dec rcx
  5585 000028C5 4883EB08                	sub rbx, 8
  5586 000028C9 4883EA08                	sub rdx, 8
  5587 000028CD EBE7                    	jmp .L_tc_recycle_frame_loop_04d7
  5588                                  .L_tc_recycle_frame_done_04d7:
  5589 000028CF 488D6308                	lea rsp, [rbx + 8]
  5590 000028D3 5D                      	pop rbp
  5591 000028D4 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  5592 000028D7 C9                      	leave
  5593 000028D8 C21800                  	ret AND_KILL_FRAME(1)
  5594                                  .L_lambda_simple_end_03bf:	; new closure is in rax
  5595 000028DB 48890425[40170000]      	mov qword [free_var_66], rax
  5596 000028E3 48B8-                   	mov rax, sob_void
  5596 000028E5 [0000000000000000] 
  5597                                  
  5598 000028ED 4889C7                  	mov rdi, rax
  5599 000028F0 E8462B0100              	call print_sexpr_if_not_void
  5600                                  
  5601 000028F5 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5602 000028FA E8E7280100              	call malloc
  5603 000028FF 50                      	push rax
  5604 00002900 BF00000000              	mov rdi, 8 * 0	; new rib
  5605 00002905 E8DC280100              	call malloc
  5606 0000290A 50                      	push rax
  5607 0000290B BF08000000              	mov rdi, 8 * 1	; extended env
  5608 00002910 E8D1280100              	call malloc
  5609 00002915 488B7D10                	mov rdi, ENV
  5610 00002919 BE00000000              	mov rsi, 0
  5611 0000291E BA01000000              	mov rdx, 1
  5612                                  .L_lambda_simple_env_loop_03c0:	; ext_env[i + 1] <-- env[i]
  5613 00002923 4883FE00                	cmp rsi, 0
  5614 00002927 7410                    	je .L_lambda_simple_env_end_03c0
  5615 00002929 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5616 0000292D 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5617 00002931 48FFC6                  	inc rsi
  5618 00002934 48FFC2                  	inc rdx
  5619 00002937 EBEA                    	jmp .L_lambda_simple_env_loop_03c0
  5620                                  .L_lambda_simple_env_end_03c0:
  5621 00002939 5B                      	pop rbx
  5622 0000293A BE00000000              	mov rsi, 0
  5623                                  .L_lambda_simple_params_loop_03c0:	; copy params
  5624 0000293F 4883FE00                	cmp rsi, 0
  5625 00002943 740E                    	je .L_lambda_simple_params_end_03c0
  5626 00002945 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5627 0000294A 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5628 0000294E 48FFC6                  	inc rsi
  5629 00002951 EBEC                    	jmp .L_lambda_simple_params_loop_03c0
  5630                                  .L_lambda_simple_params_end_03c0:
  5631 00002953 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
  5632 00002956 4889C3                  	mov rbx, rax
  5633 00002959 58                      	pop rax
  5634 0000295A C60004                  	mov byte [rax], T_closure
  5635 0000295D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5636 00002961 48C74009[6E290000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03c0
  5637 00002969 E90D010000              	jmp .L_lambda_simple_end_03c0
  5638                                  .L_lambda_simple_code_03c0:	; lambda-simple body
  5639 0000296E 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5640 00002974 740B                    	je .L_lambda_simple_arity_check_ok_03c0
  5641 00002976 FF742410                	push qword [rsp + 8 * 2]
  5642 0000297A 6A01                    	push 1
  5643 0000297C E91E280100              	jmp L_error_incorrect_arity_simple
  5644                                  .L_lambda_simple_arity_check_ok_03c0:
  5645 00002981 C8000000                	enter 0, 0
  5646                                  	; preparing a non-tail-call
  5647 00002985 488B4520                	mov rax, PARAM(0)	; param e
  5648 00002989 50                      	push rax
  5649 0000298A 6A01                    	push 1	; arg count
  5650 0000298C 488B0425[3C1B0000]      	mov rax, qword [free_var_126]	; free var null?
  5651 00002994 803805                  	cmp byte [rax], T_undefined
  5652 00002997 0F841C270100            	je L_error_fvar_undefined
  5653 0000299D 803804                  	cmp byte [rax], T_closure
  5654 000029A0 0F8597270100            	jne L_error_non_closure
  5655 000029A6 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5656 000029A9 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5657 000029AC 483D[02000000]          	cmp rax, sob_boolean_false
  5658 000029B2 0F85BF000000            	jne .L_or_end_0047
  5659                                  	; preparing a non-tail-call
  5660 000029B8 488B4520                	mov rax, PARAM(0)	; param e
  5661 000029BC 50                      	push rax
  5662 000029BD 6A01                    	push 1	; arg count
  5663 000029BF 488B0425[911B0000]      	mov rax, qword [free_var_131]	; free var pair?
  5664 000029C7 803805                  	cmp byte [rax], T_undefined
  5665 000029CA 0F84E9260100            	je L_error_fvar_undefined
  5666 000029D0 803804                  	cmp byte [rax], T_closure
  5667 000029D3 0F8564270100            	jne L_error_non_closure
  5668 000029D9 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5669 000029DC FF5009                  	call SOB_CLOSURE_CODE(rax)
  5670 000029DF 483D[02000000]          	cmp rax, sob_boolean_false
  5671 000029E5 0F8482000000            	je .L_if_else_02ab
  5672                                  	; preparing a tail-call
  5673                                  	; preparing a non-tail-call
  5674 000029EB 488B4520                	mov rax, PARAM(0)	; param e
  5675 000029EF 50                      	push rax
  5676 000029F0 6A01                    	push 1	; arg count
  5677 000029F2 488B0425[73170000]      	mov rax, qword [free_var_69]	; free var cdr
  5678 000029FA 803805                  	cmp byte [rax], T_undefined
  5679 000029FD 0F84B6260100            	je L_error_fvar_undefined
  5680 00002A03 803804                  	cmp byte [rax], T_closure
  5681 00002A06 0F8531270100            	jne L_error_non_closure
  5682 00002A0C FF7001                  	push SOB_CLOSURE_ENV(rax)
  5683 00002A0F FF5009                  	call SOB_CLOSURE_CODE(rax)
  5684 00002A12 50                      	push rax
  5685 00002A13 6A01                    	push 1	; arg count
  5686 00002A15 488B0425[2C1A0000]      	mov rax, qword [free_var_110]	; free var list?
  5687 00002A1D 803805                  	cmp byte [rax], T_undefined
  5688 00002A20 0F8493260100            	je L_error_fvar_undefined
  5689 00002A26 803804                  	cmp byte [rax], T_closure
  5690 00002A29 0F850E270100            	jne L_error_non_closure
  5691 00002A2F FF7001                  	push SOB_CLOSURE_ENV(rax)
  5692                                  
  5693                                  	; recycling the current frame
  5694 00002A32 FF7508                  	push qword [rbp + 8 * 1]	; old return address
  5695 00002A35 FF7500                  	push qword [rbp]	; old frame-pointer
  5696 00002A38 B905000000              	mov rcx, 5
  5697 00002A3D 488B5D18                	mov rbx, COUNT
  5698 00002A41 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
  5699 00002A46 488D55F8                	lea rdx, [rbp - 8]
  5700                                  .L_tc_recycle_frame_loop_04d8:
  5701 00002A4A 4883F900                	cmp rcx, 0
  5702 00002A4E 7413                    	je .L_tc_recycle_frame_done_04d8
  5703 00002A50 488B32                  	mov rsi, qword [rdx]
  5704 00002A53 488933                  	mov qword [rbx], rsi
  5705 00002A56 48FFC9                  	dec rcx
  5706 00002A59 4883EB08                	sub rbx, 8
  5707 00002A5D 4883EA08                	sub rdx, 8
  5708 00002A61 EBE7                    	jmp .L_tc_recycle_frame_loop_04d8
  5709                                  .L_tc_recycle_frame_done_04d8:
  5710 00002A63 488D6308                	lea rsp, [rbx + 8]
  5711 00002A67 5D                      	pop rbp
  5712 00002A68 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  5713 00002A6B EB0A                    	jmp .L_if_end_02ab
  5714                                  .L_if_else_02ab:
  5715 00002A6D 48B8-                   	mov rax, L_constants + 2
  5715 00002A6F [0200000000000000] 
  5716                                  .L_if_end_02ab:
  5717                                  .L_or_end_0047:
  5718 00002A77 C9                      	leave
  5719 00002A78 C21800                  	ret AND_KILL_FRAME(1)
  5720                                  .L_lambda_simple_end_03c0:	; new closure is in rax
  5721 00002A7B 48890425[2C1A0000]      	mov qword [free_var_110], rax
  5722 00002A83 48B8-                   	mov rax, sob_void
  5722 00002A85 [0000000000000000] 
  5723                                  
  5724 00002A8D 4889C7                  	mov rdi, rax
  5725 00002A90 E8A6290100              	call print_sexpr_if_not_void
  5726                                  
  5727 00002A95 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5728 00002A9A E847270100              	call malloc
  5729 00002A9F 50                      	push rax
  5730 00002AA0 BF00000000              	mov rdi, 8 * 0	; new rib
  5731 00002AA5 E83C270100              	call malloc
  5732 00002AAA 50                      	push rax
  5733 00002AAB BF08000000              	mov rdi, 8 * 1	; extended env
  5734 00002AB0 E831270100              	call malloc
  5735 00002AB5 488B7D10                	mov rdi, ENV
  5736 00002AB9 BE00000000              	mov rsi, 0
  5737 00002ABE BA01000000              	mov rdx, 1
  5738                                  .L_lambda_opt_env_loop_007a:	; ext_env[i + 1] <-- env[i]
  5739 00002AC3 4883FE00                	cmp rsi, 0
  5740 00002AC7 7410                    	je .L_lambda_opt_env_end_007a
  5741 00002AC9 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5742 00002ACD 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5743 00002AD1 48FFC6                  	inc rsi
  5744 00002AD4 48FFC2                  	inc rdx
  5745 00002AD7 EBEA                    	jmp .L_lambda_opt_env_loop_007a
  5746                                  .L_lambda_opt_env_end_007a:
  5747 00002AD9 5B                      	pop rbx
  5748 00002ADA BE00000000              	mov rsi, 0
  5749                                  .L_lambda_opt_params_loop_007a:	; copy params
  5750 00002ADF 4883FE00                	cmp rsi, 0
  5751 00002AE3 740E                    	je .L_lambda_opt_params_end_007a
  5752 00002AE5 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5753 00002AEA 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5754 00002AEE 48FFC6                  	inc rsi
  5755 00002AF1 EBEC                    	jmp .L_lambda_opt_params_loop_007a
  5756                                  .L_lambda_opt_params_end_007a:
  5757 00002AF3 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
  5758 00002AF6 4889C3                  	mov rbx, rax
  5759 00002AF9 58                      	pop rax
  5760 00002AFA C60004                  	mov byte [rax], T_closure
  5761 00002AFD 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5762 00002B01 48C74009[0E2B0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_007a
  5763 00002B09 E9DF000000              	jmp .L_lambda_opt_end_007a
  5764                                  .L_lambda_opt_code_007a:	; lambda-simple body
  5765 00002B0E 48837C241000            	cmp qword [rsp + 8 * 2], 0 ;	 check num of args
  5766 00002B14 740D                    	je .L_lambda_opt_arity_check_exact_007a ;	 if equal, go to exact arity
  5767 00002B16 7F42                    	jg .L_lambda_opt_arity_check_more_007a ;	 if greater than, go to arity more
  5768 00002B18 FF742410                	push qword [rsp + 8 * 2] ;	 else, throw opt arity error
  5769 00002B1C 6A00                    	push 0
  5770 00002B1E E990260100              	jmp L_error_incorrect_arity_opt
  5771                                  .L_lambda_opt_arity_check_exact_007a:
  5772 00002B23 488B442410              	mov rax, qword [rsp + 8 * 2] ;	 number of args
  5773 00002B28 488D5CC410              	lea rbx, [rsp + 8 * (2 + rax)] ;	 address of last element
  5774 00002B2D 4883EC08                	sub rsp, 8
  5775 00002B31 488D0C24                	lea rcx, [rsp + 0] ;	 new start
  5776                                  .L_lambda_opt_shift_entry_007a:
  5777 00002B35 488B5108                	mov rdx, [rcx + 8]
  5778 00002B39 488911                  	mov [rcx], rdx
  5779 00002B3C 4883C108                	add rcx, 8
  5780 00002B40 4839CB                  	cmp rbx, rcx
  5781 00002B43 75F0                    	jne .L_lambda_opt_shift_entry_007a
  5782                                  .L_lambda_opt_shift_exit_007a:
  5783 00002B45 48C703[01000000]        	mov qword[rbx], sob_nil ;	 place nil
  5784 00002B4C 4883C001                	add rax, 1
  5785 00002B50 4889442410              	mov qword [rsp + 8 * 2], rax
  5786 00002B55 E987000000              	jmp .L_lambda_opt_stack_adjusted_007a
  5787                                  .L_lambda_opt_arity_check_more_007a:
  5788 00002B5A 48BA-                   	mov rdx, sob_nil ;	 base cdr
  5788 00002B5C [0100000000000000] 
  5789 00002B64 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5790 00002B6A 7451                    	je .L_lambda_opt_stack_shrink_loop_exit_007a
  5791                                  .L_lambda_opt_stack_shrink_loop_007a:
  5792 00002B6C BF11000000              	mov rdi, (1 + 8 + 8)
  5793 00002B71 E870260100              	call malloc
  5794 00002B76 C60021                  	mov byte[rax], T_pair
  5795 00002B79 48895009                	mov SOB_PAIR_CDR(rax), rdx
  5796 00002B7D 4889C2                  	mov rdx, rax
  5797 00002B80 488B442410              	mov rax, qword [rsp + 8 * 2]
  5798 00002B85 488B5CC410              	mov rbx, qword [rsp + 8 * (2 + rax)]
  5799 00002B8A 48895A01                	mov SOB_PAIR_CAR(rdx), rbx
  5800 00002B8E 488D5CC408              	lea rbx, [rsp + 8 * (2 + rax - 1)]
  5801                                  .L_lambda_opt_extra_shift_process_007a:
  5802 00002B93 488B0B                  	mov rcx, [rbx]
  5803 00002B96 48894B08                	mov [rbx + 8], rcx
  5804 00002B9A 4883EB08                	sub rbx, 8
  5805 00002B9E 4839DC                  	cmp rsp, rbx
  5806 00002BA1 7EF0                    	jle .L_lambda_opt_extra_shift_process_007a
  5807                                  .L_lambda_opt_extra_shift_process_end_007a:
  5808 00002BA3 4883C408                	add rsp, 8
  5809 00002BA7 488B5C2410              	mov rbx, [rsp + 8 * 2]
  5810 00002BAC 4883EB01                	sub rbx, 1
  5811 00002BB0 48895C2410              	mov [rsp + 8 * 2], rbx
  5812 00002BB5 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5813 00002BBB 7FAF                    	jg .L_lambda_opt_stack_shrink_loop_007a
  5814                                  .L_lambda_opt_stack_shrink_loop_exit_007a:
  5815 00002BBD 488B4C2410              	mov rcx, [rsp + 8 * 2]
  5816 00002BC2 488B5CCC10              	mov rbx, qword [rsp + 8 * (2 + rcx)]
  5817 00002BC7 BF11000000              	mov rdi, (1 + 8 + 8)
  5818 00002BCC E815260100              	call malloc
  5819 00002BD1 C60021                  	mov byte[rax], T_pair
  5820 00002BD4 48895009                	mov SOB_PAIR_CDR(rax), rdx
  5821 00002BD8 48895801                	mov SOB_PAIR_CAR(rax), rbx
  5822 00002BDC 488944CC10              	mov [rsp + 8 * (2 + rcx)], rax
  5823                                  .L_lambda_opt_stack_adjusted_007a:
  5824 00002BE1 C8000000                	enter 0, 0
  5825 00002BE5 488B4520                	mov rax, PARAM(0)	; param args
  5826 00002BE9 C9                      	leave
  5827 00002BEA C21800                  	ret AND_KILL_FRAME(1)
  5828                                  .L_lambda_opt_end_007a:	; new closure is in rax
  5829 00002BED 48890425[E8190000]      	mov qword [free_var_106], rax
  5830 00002BF5 48B8-                   	mov rax, sob_void
  5830 00002BF7 [0000000000000000] 
  5831                                  
  5832 00002BFF 4889C7                  	mov rdi, rax
  5833 00002C02 E834280100              	call print_sexpr_if_not_void
  5834                                  
  5835 00002C07 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5836 00002C0C E8D5250100              	call malloc
  5837 00002C11 50                      	push rax
  5838 00002C12 BF00000000              	mov rdi, 8 * 0	; new rib
  5839 00002C17 E8CA250100              	call malloc
  5840 00002C1C 50                      	push rax
  5841 00002C1D BF08000000              	mov rdi, 8 * 1	; extended env
  5842 00002C22 E8BF250100              	call malloc
  5843 00002C27 488B7D10                	mov rdi, ENV
  5844 00002C2B BE00000000              	mov rsi, 0
  5845 00002C30 BA01000000              	mov rdx, 1
  5846                                  .L_lambda_simple_env_loop_03c1:	; ext_env[i + 1] <-- env[i]
  5847 00002C35 4883FE00                	cmp rsi, 0
  5848 00002C39 7410                    	je .L_lambda_simple_env_end_03c1
  5849 00002C3B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5850 00002C3F 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5851 00002C43 48FFC6                  	inc rsi
  5852 00002C46 48FFC2                  	inc rdx
  5853 00002C49 EBEA                    	jmp .L_lambda_simple_env_loop_03c1
  5854                                  .L_lambda_simple_env_end_03c1:
  5855 00002C4B 5B                      	pop rbx
  5856 00002C4C BE00000000              	mov rsi, 0
  5857                                  .L_lambda_simple_params_loop_03c1:	; copy params
  5858 00002C51 4883FE00                	cmp rsi, 0
  5859 00002C55 740E                    	je .L_lambda_simple_params_end_03c1
  5860 00002C57 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5861 00002C5C 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5862 00002C60 48FFC6                  	inc rsi
  5863 00002C63 EBEC                    	jmp .L_lambda_simple_params_loop_03c1
  5864                                  .L_lambda_simple_params_end_03c1:
  5865 00002C65 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
  5866 00002C68 4889C3                  	mov rbx, rax
  5867 00002C6B 58                      	pop rax
  5868 00002C6C C60004                  	mov byte [rax], T_closure
  5869 00002C6F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5870 00002C73 48C74009[7D2C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03c1
  5871 00002C7B EB3D                    	jmp .L_lambda_simple_end_03c1
  5872                                  .L_lambda_simple_code_03c1:	; lambda-simple body
  5873 00002C7D 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5874 00002C83 740B                    	je .L_lambda_simple_arity_check_ok_03c1
  5875 00002C85 FF742410                	push qword [rsp + 8 * 2]
  5876 00002C89 6A01                    	push 1
  5877 00002C8B E90F250100              	jmp L_error_incorrect_arity_simple
  5878                                  .L_lambda_simple_arity_check_ok_03c1:
  5879 00002C90 C8000000                	enter 0, 0
  5880 00002C94 488B4520                	mov rax, PARAM(0)	; param x
  5881 00002C98 483D[02000000]          	cmp rax, sob_boolean_false
  5882 00002C9E 740C                    	je .L_if_else_02ac
  5883 00002CA0 48B8-                   	mov rax, L_constants + 2
  5883 00002CA2 [0200000000000000] 
  5884 00002CAA EB0A                    	jmp .L_if_end_02ac
  5885                                  .L_if_else_02ac:
  5886 00002CAC 48B8-                   	mov rax, L_constants + 3
  5886 00002CAE [0300000000000000] 
  5887                                  .L_if_end_02ac:
  5888 00002CB6 C9                      	leave
  5889 00002CB7 C21800                  	ret AND_KILL_FRAME(1)
  5890                                  .L_lambda_simple_end_03c1:	; new closure is in rax
  5891 00002CBA 48890425[2B1B0000]      	mov qword [free_var_125], rax
  5892 00002CC2 48B8-                   	mov rax, sob_void
  5892 00002CC4 [0000000000000000] 
  5893                                  
  5894 00002CCC 4889C7                  	mov rdi, rax
  5895 00002CCF E867270100              	call print_sexpr_if_not_void
  5896                                  
  5897 00002CD4 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5898 00002CD9 E808250100              	call malloc
  5899 00002CDE 50                      	push rax
  5900 00002CDF BF00000000              	mov rdi, 8 * 0	; new rib
  5901 00002CE4 E8FD240100              	call malloc
  5902 00002CE9 50                      	push rax
  5903 00002CEA BF08000000              	mov rdi, 8 * 1	; extended env
  5904 00002CEF E8F2240100              	call malloc
  5905 00002CF4 488B7D10                	mov rdi, ENV
  5906 00002CF8 BE00000000              	mov rsi, 0
  5907 00002CFD BA01000000              	mov rdx, 1
  5908                                  .L_lambda_simple_env_loop_03c2:	; ext_env[i + 1] <-- env[i]
  5909 00002D02 4883FE00                	cmp rsi, 0
  5910 00002D06 7410                    	je .L_lambda_simple_env_end_03c2
  5911 00002D08 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5912 00002D0C 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5913 00002D10 48FFC6                  	inc rsi
  5914 00002D13 48FFC2                  	inc rdx
  5915 00002D16 EBEA                    	jmp .L_lambda_simple_env_loop_03c2
  5916                                  .L_lambda_simple_env_end_03c2:
  5917 00002D18 5B                      	pop rbx
  5918 00002D19 BE00000000              	mov rsi, 0
  5919                                  .L_lambda_simple_params_loop_03c2:	; copy params
  5920 00002D1E 4883FE00                	cmp rsi, 0
  5921 00002D22 740E                    	je .L_lambda_simple_params_end_03c2
  5922 00002D24 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5923 00002D29 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5924 00002D2D 48FFC6                  	inc rsi
  5925 00002D30 EBEC                    	jmp .L_lambda_simple_params_loop_03c2
  5926                                  .L_lambda_simple_params_end_03c2:
  5927 00002D32 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
  5928 00002D35 4889C3                  	mov rbx, rax
  5929 00002D38 58                      	pop rax
  5930 00002D39 C60004                  	mov byte [rax], T_closure
  5931 00002D3C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5932 00002D40 48C74009[4D2D0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03c2
  5933 00002D48 E9A7000000              	jmp .L_lambda_simple_end_03c2
  5934                                  .L_lambda_simple_code_03c2:	; lambda-simple body
  5935 00002D4D 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5936 00002D53 740B                    	je .L_lambda_simple_arity_check_ok_03c2
  5937 00002D55 FF742410                	push qword [rsp + 8 * 2]
  5938 00002D59 6A01                    	push 1
  5939 00002D5B E93F240100              	jmp L_error_incorrect_arity_simple
  5940                                  .L_lambda_simple_arity_check_ok_03c2:
  5941 00002D60 C8000000                	enter 0, 0
  5942                                  	; preparing a non-tail-call
  5943 00002D64 488B4520                	mov rax, PARAM(0)	; param q
  5944 00002D68 50                      	push rax
  5945 00002D69 6A01                    	push 1	; arg count
  5946 00002D6B 488B0425[B5190000]      	mov rax, qword [free_var_103]	; free var integer?
  5947 00002D73 803805                  	cmp byte [rax], T_undefined
  5948 00002D76 0F843D230100            	je L_error_fvar_undefined
  5949 00002D7C 803804                  	cmp byte [rax], T_closure
  5950 00002D7F 0F85B8230100            	jne L_error_non_closure
  5951 00002D85 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5952 00002D88 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5953 00002D8B 483D[02000000]          	cmp rax, sob_boolean_false
  5954 00002D91 755D                    	jne .L_or_end_0048
  5955                                  	; preparing a tail-call
  5956 00002D93 488B4520                	mov rax, PARAM(0)	; param q
  5957 00002D97 50                      	push rax
  5958 00002D98 6A01                    	push 1	; arg count
  5959 00002D9A 488B0425[4F190000]      	mov rax, qword [free_var_97]	; free var fraction?
  5960 00002DA2 803805                  	cmp byte [rax], T_undefined
  5961 00002DA5 0F840E230100            	je L_error_fvar_undefined
  5962 00002DAB 803804                  	cmp byte [rax], T_closure
  5963 00002DAE 0F8589230100            	jne L_error_non_closure
  5964 00002DB4 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5965                                  
  5966                                  	; recycling the current frame
  5967 00002DB7 FF7508                  	push qword [rbp + 8 * 1]	; old return address
  5968 00002DBA FF7500                  	push qword [rbp]	; old frame-pointer
  5969 00002DBD B905000000              	mov rcx, 5
  5970 00002DC2 488B5D18                	mov rbx, COUNT
  5971 00002DC6 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
  5972 00002DCB 488D55F8                	lea rdx, [rbp - 8]
  5973                                  .L_tc_recycle_frame_loop_04d9:
  5974 00002DCF 4883F900                	cmp rcx, 0
  5975 00002DD3 7413                    	je .L_tc_recycle_frame_done_04d9
  5976 00002DD5 488B32                  	mov rsi, qword [rdx]
  5977 00002DD8 488933                  	mov qword [rbx], rsi
  5978 00002DDB 48FFC9                  	dec rcx
  5979 00002DDE 4883EB08                	sub rbx, 8
  5980 00002DE2 4883EA08                	sub rdx, 8
  5981 00002DE6 EBE7                    	jmp .L_tc_recycle_frame_loop_04d9
  5982                                  .L_tc_recycle_frame_done_04d9:
  5983 00002DE8 488D6308                	lea rsp, [rbx + 8]
  5984 00002DEC 5D                      	pop rbp
  5985 00002DED FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  5986                                  .L_or_end_0048:
  5987 00002DF0 C9                      	leave
  5988 00002DF1 C21800                  	ret AND_KILL_FRAME(1)
  5989                                  .L_lambda_simple_end_03c2:	; new closure is in rax
  5990 00002DF4 48890425[F71B0000]      	mov qword [free_var_137], rax
  5991 00002DFC 48B8-                   	mov rax, sob_void
  5991 00002DFE [0000000000000000] 
  5992                                  
  5993 00002E06 4889C7                  	mov rdi, rax
  5994 00002E09 E82D260100              	call print_sexpr_if_not_void
  5995                                  
  5996                                  	; preparing a non-tail-call
  5997 00002E0E 48B8-                   	mov rax, L_constants + 2335
  5997 00002E10 [1F09000000000000] 
  5998 00002E18 50                      	push rax
  5999 00002E19 6A01                    	push 1	; arg count
  6000 00002E1B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6001 00002E20 E8C1230100              	call malloc
  6002 00002E25 50                      	push rax
  6003 00002E26 BF00000000              	mov rdi, 8 * 0	; new rib
  6004 00002E2B E8B6230100              	call malloc
  6005 00002E30 50                      	push rax
  6006 00002E31 BF08000000              	mov rdi, 8 * 1	; extended env
  6007 00002E36 E8AB230100              	call malloc
  6008 00002E3B 488B7D10                	mov rdi, ENV
  6009 00002E3F BE00000000              	mov rsi, 0
  6010 00002E44 BA01000000              	mov rdx, 1
  6011                                  .L_lambda_simple_env_loop_03c3:	; ext_env[i + 1] <-- env[i]
  6012 00002E49 4883FE00                	cmp rsi, 0
  6013 00002E4D 7410                    	je .L_lambda_simple_env_end_03c3
  6014 00002E4F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6015 00002E53 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6016 00002E57 48FFC6                  	inc rsi
  6017 00002E5A 48FFC2                  	inc rdx
  6018 00002E5D EBEA                    	jmp .L_lambda_simple_env_loop_03c3
  6019                                  .L_lambda_simple_env_end_03c3:
  6020 00002E5F 5B                      	pop rbx
  6021 00002E60 BE00000000              	mov rsi, 0
  6022                                  .L_lambda_simple_params_loop_03c3:	; copy params
  6023 00002E65 4883FE00                	cmp rsi, 0
  6024 00002E69 740E                    	je .L_lambda_simple_params_end_03c3
  6025 00002E6B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6026 00002E70 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6027 00002E74 48FFC6                  	inc rsi
  6028 00002E77 EBEC                    	jmp .L_lambda_simple_params_loop_03c3
  6029                                  .L_lambda_simple_params_end_03c3:
  6030 00002E79 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
  6031 00002E7C 4889C3                  	mov rbx, rax
  6032 00002E7F 58                      	pop rax
  6033 00002E80 C60004                  	mov byte [rax], T_closure
  6034 00002E83 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6035 00002E87 48C74009[942E0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03c3
  6036 00002E8F E995030000              	jmp .L_lambda_simple_end_03c3
  6037                                  .L_lambda_simple_code_03c3:	; lambda-simple body
  6038 00002E94 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6039 00002E9A 740B                    	je .L_lambda_simple_arity_check_ok_03c3
  6040 00002E9C FF742410                	push qword [rsp + 8 * 2]
  6041 00002EA0 6A01                    	push 1
  6042 00002EA2 E9F8220100              	jmp L_error_incorrect_arity_simple
  6043                                  .L_lambda_simple_arity_check_ok_03c3:
  6044 00002EA7 C8000000                	enter 0, 0
  6045                                  
  6046 00002EAB BF08000000              	mov rdi, 8
  6047 00002EB0 E831230100              	call malloc
  6048 00002EB5 488B5D20                	mov rbx, PARAM(0)	; param run
  6049 00002EB9 488918                  	mov [rax], rbx	; box run
  6050 00002EBC 48894520                	mov PARAM(0), rax	; replace param with box
  6051 00002EC0 48B8-                   	mov rax, sob_void
  6051 00002EC2 [0000000000000000] 
  6052                                  
  6053 00002ECA BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6054 00002ECF E812230100              	call malloc
  6055 00002ED4 50                      	push rax
  6056 00002ED5 BF08000000              	mov rdi, 8 * 1	; new rib
  6057 00002EDA E807230100              	call malloc
  6058 00002EDF 50                      	push rax
  6059 00002EE0 BF10000000              	mov rdi, 8 * 2	; extended env
  6060 00002EE5 E8FC220100              	call malloc
  6061 00002EEA 488B7D10                	mov rdi, ENV
  6062 00002EEE BE00000000              	mov rsi, 0
  6063 00002EF3 BA01000000              	mov rdx, 1
  6064                                  .L_lambda_simple_env_loop_03c4:	; ext_env[i + 1] <-- env[i]
  6065 00002EF8 4883FE01                	cmp rsi, 1
  6066 00002EFC 7410                    	je .L_lambda_simple_env_end_03c4
  6067 00002EFE 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6068 00002F02 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6069 00002F06 48FFC6                  	inc rsi
  6070 00002F09 48FFC2                  	inc rdx
  6071 00002F0C EBEA                    	jmp .L_lambda_simple_env_loop_03c4
  6072                                  .L_lambda_simple_env_end_03c4:
  6073 00002F0E 5B                      	pop rbx
  6074 00002F0F BE00000000              	mov rsi, 0
  6075                                  .L_lambda_simple_params_loop_03c4:	; copy params
  6076 00002F14 4883FE01                	cmp rsi, 1
  6077 00002F18 740E                    	je .L_lambda_simple_params_end_03c4
  6078 00002F1A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6079 00002F1F 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6080 00002F23 48FFC6                  	inc rsi
  6081 00002F26 EBEC                    	jmp .L_lambda_simple_params_loop_03c4
  6082                                  .L_lambda_simple_params_end_03c4:
  6083 00002F28 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
  6084 00002F2B 4889C3                  	mov rbx, rax
  6085 00002F2E 58                      	pop rax
  6086 00002F2F C60004                  	mov byte [rax], T_closure
  6087 00002F32 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6088 00002F36 48C74009[432F0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03c4
  6089 00002F3E E91F010000              	jmp .L_lambda_simple_end_03c4
  6090                                  .L_lambda_simple_code_03c4:	; lambda-simple body
  6091 00002F43 48837C241002            	cmp qword [rsp + 8 * 2], 2
  6092 00002F49 740B                    	je .L_lambda_simple_arity_check_ok_03c4
  6093 00002F4B FF742410                	push qword [rsp + 8 * 2]
  6094 00002F4F 6A02                    	push 2
  6095 00002F51 E949220100              	jmp L_error_incorrect_arity_simple
  6096                                  .L_lambda_simple_arity_check_ok_03c4:
  6097 00002F56 C8000000                	enter 0, 0
  6098                                  	; preparing a non-tail-call
  6099 00002F5A 488B4528                	mov rax, PARAM(1)	; param s
  6100 00002F5E 50                      	push rax
  6101 00002F5F 6A01                    	push 1	; arg count
  6102 00002F61 488B0425[3C1B0000]      	mov rax, qword [free_var_126]	; free var null?
  6103 00002F69 803805                  	cmp byte [rax], T_undefined
  6104 00002F6C 0F8447210100            	je L_error_fvar_undefined
  6105 00002F72 803804                  	cmp byte [rax], T_closure
  6106 00002F75 0F85C2210100            	jne L_error_non_closure
  6107 00002F7B FF7001                  	push SOB_CLOSURE_ENV(rax)
  6108 00002F7E FF5009                  	call SOB_CLOSURE_CODE(rax)
  6109 00002F81 483D[02000000]          	cmp rax, sob_boolean_false
  6110 00002F87 7409                    	je .L_if_else_02ad
  6111 00002F89 488B4520                	mov rax, PARAM(0)	; param a
  6112 00002F8D E9CC000000              	jmp .L_if_end_02ad
  6113                                  .L_if_else_02ad:
  6114                                  	; preparing a tail-call
  6115                                  	; preparing a non-tail-call
  6116                                  	; preparing a non-tail-call
  6117 00002F92 488B4528                	mov rax, PARAM(1)	; param s
  6118 00002F96 50                      	push rax
  6119 00002F97 6A01                    	push 1	; arg count
  6120 00002F99 488B0425[73170000]      	mov rax, qword [free_var_69]	; free var cdr
  6121 00002FA1 803805                  	cmp byte [rax], T_undefined
  6122 00002FA4 0F840F210100            	je L_error_fvar_undefined
  6123 00002FAA 803804                  	cmp byte [rax], T_closure
  6124 00002FAD 0F858A210100            	jne L_error_non_closure
  6125 00002FB3 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6126 00002FB6 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6127 00002FB9 50                      	push rax
  6128                                  	; preparing a non-tail-call
  6129 00002FBA 488B4528                	mov rax, PARAM(1)	; param s
  6130 00002FBE 50                      	push rax
  6131 00002FBF 6A01                    	push 1	; arg count
  6132 00002FC1 488B0425[74160000]      	mov rax, qword [free_var_54]	; free var car
  6133 00002FC9 803805                  	cmp byte [rax], T_undefined
  6134 00002FCC 0F84E7200100            	je L_error_fvar_undefined
  6135 00002FD2 803804                  	cmp byte [rax], T_closure
  6136 00002FD5 0F8562210100            	jne L_error_non_closure
  6137 00002FDB FF7001                  	push SOB_CLOSURE_ENV(rax)
  6138 00002FDE FF5009                  	call SOB_CLOSURE_CODE(rax)
  6139 00002FE1 50                      	push rax
  6140 00002FE2 6A02                    	push 2	; arg count
  6141 00002FE4 488B4510                	mov rax, ENV
  6142 00002FE8 488B00                  	mov rax, qword [rax + 8 * 0]
  6143 00002FEB 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  6144 00002FEE 488B00                  	mov rax, qword [rax]
  6145 00002FF1 803804                  	cmp byte [rax], T_closure
  6146 00002FF4 0F8543210100            	jne L_error_non_closure
  6147 00002FFA FF7001                  	push SOB_CLOSURE_ENV(rax)
  6148 00002FFD FF5009                  	call SOB_CLOSURE_CODE(rax)
  6149 00003000 50                      	push rax
  6150 00003001 488B4520                	mov rax, PARAM(0)	; param a
  6151 00003005 50                      	push rax
  6152 00003006 6A02                    	push 2	; arg count
  6153 00003008 488B0425[83180000]      	mov rax, qword [free_var_85]	; free var cons
  6154 00003010 803805                  	cmp byte [rax], T_undefined
  6155 00003013 0F84A0200100            	je L_error_fvar_undefined
  6156 00003019 803804                  	cmp byte [rax], T_closure
  6157 0000301C 0F851B210100            	jne L_error_non_closure
  6158 00003022 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6159                                  
  6160                                  	; recycling the current frame
  6161 00003025 FF7508                  	push qword [rbp + 8 * 1]	; old return address
  6162 00003028 FF7500                  	push qword [rbp]	; old frame-pointer
  6163 0000302B B906000000              	mov rcx, 6
  6164 00003030 488B5D18                	mov rbx, COUNT
  6165 00003034 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
  6166 00003039 488D55F8                	lea rdx, [rbp - 8]
  6167                                  .L_tc_recycle_frame_loop_04da:
  6168 0000303D 4883F900                	cmp rcx, 0
  6169 00003041 7413                    	je .L_tc_recycle_frame_done_04da
  6170 00003043 488B32                  	mov rsi, qword [rdx]
  6171 00003046 488933                  	mov qword [rbx], rsi
  6172 00003049 48FFC9                  	dec rcx
  6173 0000304C 4883EB08                	sub rbx, 8
  6174 00003050 4883EA08                	sub rdx, 8
  6175 00003054 EBE7                    	jmp .L_tc_recycle_frame_loop_04da
  6176                                  .L_tc_recycle_frame_done_04da:
  6177 00003056 488D6308                	lea rsp, [rbx + 8]
  6178 0000305A 5D                      	pop rbp
  6179 0000305B FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  6180                                  .L_if_end_02ad:
  6181 0000305E C9                      	leave
  6182 0000305F C22000                  	ret AND_KILL_FRAME(2)
  6183                                  .L_lambda_simple_end_03c4:	; new closure is in rax
  6184                                  
  6185 00003062 50                      	push rax
  6186 00003063 488B4520                	mov rax, PARAM(0)	; param run
  6187                                  
  6188 00003067 8F00                    	pop qword[rax]
  6189 00003069 48B8-                   	mov rax, sob_void
  6189 0000306B [0000000000000000] 
  6190                                  
  6191 00003073 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6192 00003078 E869210100              	call malloc
  6193 0000307D 50                      	push rax
  6194 0000307E BF08000000              	mov rdi, 8 * 1	; new rib
  6195 00003083 E85E210100              	call malloc
  6196 00003088 50                      	push rax
  6197 00003089 BF10000000              	mov rdi, 8 * 2	; extended env
  6198 0000308E E853210100              	call malloc
  6199 00003093 488B7D10                	mov rdi, ENV
  6200 00003097 BE00000000              	mov rsi, 0
  6201 0000309C BA01000000              	mov rdx, 1
  6202                                  .L_lambda_opt_env_loop_007b:	; ext_env[i + 1] <-- env[i]
  6203 000030A1 4883FE01                	cmp rsi, 1
  6204 000030A5 7410                    	je .L_lambda_opt_env_end_007b
  6205 000030A7 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6206 000030AB 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6207 000030AF 48FFC6                  	inc rsi
  6208 000030B2 48FFC2                  	inc rdx
  6209 000030B5 EBEA                    	jmp .L_lambda_opt_env_loop_007b
  6210                                  .L_lambda_opt_env_end_007b:
  6211 000030B7 5B                      	pop rbx
  6212 000030B8 BE00000000              	mov rsi, 0
  6213                                  .L_lambda_opt_params_loop_007b:	; copy params
  6214 000030BD 4883FE01                	cmp rsi, 1
  6215 000030C1 740E                    	je .L_lambda_opt_params_end_007b
  6216 000030C3 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6217 000030C8 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6218 000030CC 48FFC6                  	inc rsi
  6219 000030CF EBEC                    	jmp .L_lambda_opt_params_loop_007b
  6220                                  .L_lambda_opt_params_end_007b:
  6221 000030D1 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
  6222 000030D4 4889C3                  	mov rbx, rax
  6223 000030D7 58                      	pop rax
  6224 000030D8 C60004                  	mov byte [rax], T_closure
  6225 000030DB 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6226 000030DF 48C74009[EC300000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_007b
  6227 000030E7 E939010000              	jmp .L_lambda_opt_end_007b
  6228                                  .L_lambda_opt_code_007b:	; lambda-simple body
  6229 000030EC 48837C241001            	cmp qword [rsp + 8 * 2], 1 ;	 check num of args
  6230 000030F2 740D                    	je .L_lambda_opt_arity_check_exact_007b ;	 if equal, go to exact arity
  6231 000030F4 7F42                    	jg .L_lambda_opt_arity_check_more_007b ;	 if greater than, go to arity more
  6232 000030F6 FF742410                	push qword [rsp + 8 * 2] ;	 else, throw opt arity error
  6233 000030FA 6A01                    	push 1
  6234 000030FC E9B2200100              	jmp L_error_incorrect_arity_opt
  6235                                  .L_lambda_opt_arity_check_exact_007b:
  6236 00003101 488B442410              	mov rax, qword [rsp + 8 * 2] ;	 number of args
  6237 00003106 488D5CC410              	lea rbx, [rsp + 8 * (2 + rax)] ;	 address of last element
  6238 0000310B 4883EC08                	sub rsp, 8
  6239 0000310F 488D0C24                	lea rcx, [rsp + 0] ;	 new start
  6240                                  .L_lambda_opt_shift_entry_007b:
  6241 00003113 488B5108                	mov rdx, [rcx + 8]
  6242 00003117 488911                  	mov [rcx], rdx
  6243 0000311A 4883C108                	add rcx, 8
  6244 0000311E 4839CB                  	cmp rbx, rcx
  6245 00003121 75F0                    	jne .L_lambda_opt_shift_entry_007b
  6246                                  .L_lambda_opt_shift_exit_007b:
  6247 00003123 48C703[01000000]        	mov qword[rbx], sob_nil ;	 place nil
  6248 0000312A 4883C001                	add rax, 1
  6249 0000312E 4889442410              	mov qword [rsp + 8 * 2], rax
  6250 00003133 E987000000              	jmp .L_lambda_opt_stack_adjusted_007b
  6251                                  .L_lambda_opt_arity_check_more_007b:
  6252 00003138 48BA-                   	mov rdx, sob_nil ;	 base cdr
  6252 0000313A [0100000000000000] 
  6253 00003142 48837C241002            	cmp qword [rsp + 8 * 2], 2
  6254 00003148 7451                    	je .L_lambda_opt_stack_shrink_loop_exit_007b
  6255                                  .L_lambda_opt_stack_shrink_loop_007b:
  6256 0000314A BF11000000              	mov rdi, (1 + 8 + 8)
  6257 0000314F E892200100              	call malloc
  6258 00003154 C60021                  	mov byte[rax], T_pair
  6259 00003157 48895009                	mov SOB_PAIR_CDR(rax), rdx
  6260 0000315B 4889C2                  	mov rdx, rax
  6261 0000315E 488B442410              	mov rax, qword [rsp + 8 * 2]
  6262 00003163 488B5CC410              	mov rbx, qword [rsp + 8 * (2 + rax)]
  6263 00003168 48895A01                	mov SOB_PAIR_CAR(rdx), rbx
  6264 0000316C 488D5CC408              	lea rbx, [rsp + 8 * (2 + rax - 1)]
  6265                                  .L_lambda_opt_extra_shift_process_007b:
  6266 00003171 488B0B                  	mov rcx, [rbx]
  6267 00003174 48894B08                	mov [rbx + 8], rcx
  6268 00003178 4883EB08                	sub rbx, 8
  6269 0000317C 4839DC                  	cmp rsp, rbx
  6270 0000317F 7EF0                    	jle .L_lambda_opt_extra_shift_process_007b
  6271                                  .L_lambda_opt_extra_shift_process_end_007b:
  6272 00003181 4883C408                	add rsp, 8
  6273 00003185 488B5C2410              	mov rbx, [rsp + 8 * 2]
  6274 0000318A 4883EB01                	sub rbx, 1
  6275 0000318E 48895C2410              	mov [rsp + 8 * 2], rbx
  6276 00003193 48837C241002            	cmp qword [rsp + 8 * 2], 2
  6277 00003199 7FAF                    	jg .L_lambda_opt_stack_shrink_loop_007b
  6278                                  .L_lambda_opt_stack_shrink_loop_exit_007b:
  6279 0000319B 488B4C2410              	mov rcx, [rsp + 8 * 2]
  6280 000031A0 488B5CCC10              	mov rbx, qword [rsp + 8 * (2 + rcx)]
  6281 000031A5 BF11000000              	mov rdi, (1 + 8 + 8)
  6282 000031AA E837200100              	call malloc
  6283 000031AF C60021                  	mov byte[rax], T_pair
  6284 000031B2 48895009                	mov SOB_PAIR_CDR(rax), rdx
  6285 000031B6 48895801                	mov SOB_PAIR_CAR(rax), rbx
  6286 000031BA 488944CC10              	mov [rsp + 8 * (2 + rcx)], rax
  6287                                  .L_lambda_opt_stack_adjusted_007b:
  6288 000031BF C8000000                	enter 0, 0
  6289                                  	; preparing a tail-call
  6290 000031C3 488B4528                	mov rax, PARAM(1)	; param s
  6291 000031C7 50                      	push rax
  6292 000031C8 488B4520                	mov rax, PARAM(0)	; param a
  6293 000031CC 50                      	push rax
  6294 000031CD 6A02                    	push 2	; arg count
  6295 000031CF 488B4510                	mov rax, ENV
  6296 000031D3 488B00                  	mov rax, qword [rax + 8 * 0]
  6297 000031D6 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  6298 000031D9 488B00                  	mov rax, qword [rax]
  6299 000031DC 803804                  	cmp byte [rax], T_closure
  6300 000031DF 0F85581F0100            	jne L_error_non_closure
  6301 000031E5 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6302                                  
  6303                                  	; recycling the current frame
  6304 000031E8 FF7508                  	push qword [rbp + 8 * 1]	; old return address
  6305 000031EB FF7500                  	push qword [rbp]	; old frame-pointer
  6306 000031EE B906000000              	mov rcx, 6
  6307 000031F3 488B5D18                	mov rbx, COUNT
  6308 000031F7 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
  6309 000031FC 488D55F8                	lea rdx, [rbp - 8]
  6310                                  .L_tc_recycle_frame_loop_04db:
  6311 00003200 4883F900                	cmp rcx, 0
  6312 00003204 7413                    	je .L_tc_recycle_frame_done_04db
  6313 00003206 488B32                  	mov rsi, qword [rdx]
  6314 00003209 488933                  	mov qword [rbx], rsi
  6315 0000320C 48FFC9                  	dec rcx
  6316 0000320F 4883EB08                	sub rbx, 8
  6317 00003213 4883EA08                	sub rdx, 8
  6318 00003217 EBE7                    	jmp .L_tc_recycle_frame_loop_04db
  6319                                  .L_tc_recycle_frame_done_04db:
  6320 00003219 488D6308                	lea rsp, [rbx + 8]
  6321 0000321D 5D                      	pop rbp
  6322 0000321E FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  6323 00003221 C9                      	leave
  6324 00003222 C22000                  	ret AND_KILL_FRAME(2)
  6325                                  .L_lambda_opt_end_007b:	; new closure is in rax
  6326 00003225 C9                      	leave
  6327 00003226 C21800                  	ret AND_KILL_FRAME(1)
  6328                                  .L_lambda_simple_end_03c3:	; new closure is in rax
  6329 00003229 803804                  	cmp byte [rax], T_closure
  6330 0000322C 0F850B1F0100            	jne L_error_non_closure
  6331 00003232 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6332 00003235 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6333 00003238 48890425[F9190000]      	mov qword [free_var_107], rax
  6334 00003240 48B8-                   	mov rax, sob_void
  6334 00003242 [0000000000000000] 
  6335                                  
  6336 0000324A 4889C7                  	mov rdi, rax
  6337 0000324D E8E9210100              	call print_sexpr_if_not_void
  6338                                  
  6339                                  	; preparing a non-tail-call
  6340 00003252 48B8-                   	mov rax, L_constants + 2335
  6340 00003254 [1F09000000000000] 
  6341 0000325C 50                      	push rax
  6342 0000325D 6A01                    	push 1	; arg count
  6343 0000325F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6344 00003264 E87D1F0100              	call malloc
  6345 00003269 50                      	push rax
  6346 0000326A BF00000000              	mov rdi, 8 * 0	; new rib
  6347 0000326F E8721F0100              	call malloc
  6348 00003274 50                      	push rax
  6349 00003275 BF08000000              	mov rdi, 8 * 1	; extended env
  6350 0000327A E8671F0100              	call malloc
  6351 0000327F 488B7D10                	mov rdi, ENV
  6352 00003283 BE00000000              	mov rsi, 0
  6353 00003288 BA01000000              	mov rdx, 1
  6354                                  .L_lambda_simple_env_loop_03c5:	; ext_env[i + 1] <-- env[i]
  6355 0000328D 4883FE00                	cmp rsi, 0
  6356 00003291 7410                    	je .L_lambda_simple_env_end_03c5
  6357 00003293 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6358 00003297 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6359 0000329B 48FFC6                  	inc rsi
  6360 0000329E 48FFC2                  	inc rdx
  6361 000032A1 EBEA                    	jmp .L_lambda_simple_env_loop_03c5
  6362                                  .L_lambda_simple_env_end_03c5:
  6363 000032A3 5B                      	pop rbx
  6364 000032A4 BE00000000              	mov rsi, 0
  6365                                  .L_lambda_simple_params_loop_03c5:	; copy params
  6366 000032A9 4883FE00                	cmp rsi, 0
  6367 000032AD 740E                    	je .L_lambda_simple_params_end_03c5
  6368 000032AF 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6369 000032B4 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6370 000032B8 48FFC6                  	inc rsi
  6371 000032BB EBEC                    	jmp .L_lambda_simple_params_loop_03c5
  6372                                  .L_lambda_simple_params_end_03c5:
  6373 000032BD 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
  6374 000032C0 4889C3                  	mov rbx, rax
  6375 000032C3 58                      	pop rax
  6376 000032C4 C60004                  	mov byte [rax], T_closure
  6377 000032C7 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6378 000032CB 48C74009[D8320000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03c5
  6379 000032D3 E904040000              	jmp .L_lambda_simple_end_03c5
  6380                                  .L_lambda_simple_code_03c5:	; lambda-simple body
  6381 000032D8 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6382 000032DE 740B                    	je .L_lambda_simple_arity_check_ok_03c5
  6383 000032E0 FF742410                	push qword [rsp + 8 * 2]
  6384 000032E4 6A01                    	push 1
  6385 000032E6 E9B41E0100              	jmp L_error_incorrect_arity_simple
  6386                                  .L_lambda_simple_arity_check_ok_03c5:
  6387 000032EB C8000000                	enter 0, 0
  6388                                  
  6389 000032EF BF08000000              	mov rdi, 8
  6390 000032F4 E8ED1E0100              	call malloc
  6391 000032F9 488B5D20                	mov rbx, PARAM(0)	; param run
  6392 000032FD 488918                  	mov [rax], rbx	; box run
  6393 00003300 48894520                	mov PARAM(0), rax	; replace param with box
  6394 00003304 48B8-                   	mov rax, sob_void
  6394 00003306 [0000000000000000] 
  6395                                  
  6396 0000330E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6397 00003313 E8CE1E0100              	call malloc
  6398 00003318 50                      	push rax
  6399 00003319 BF08000000              	mov rdi, 8 * 1	; new rib
  6400 0000331E E8C31E0100              	call malloc
  6401 00003323 50                      	push rax
  6402 00003324 BF10000000              	mov rdi, 8 * 2	; extended env
  6403 00003329 E8B81E0100              	call malloc
  6404 0000332E 488B7D10                	mov rdi, ENV
  6405 00003332 BE00000000              	mov rsi, 0
  6406 00003337 BA01000000              	mov rdx, 1
  6407                                  .L_lambda_simple_env_loop_03c6:	; ext_env[i + 1] <-- env[i]
  6408 0000333C 4883FE01                	cmp rsi, 1
  6409 00003340 7410                    	je .L_lambda_simple_env_end_03c6
  6410 00003342 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6411 00003346 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6412 0000334A 48FFC6                  	inc rsi
  6413 0000334D 48FFC2                  	inc rdx
  6414 00003350 EBEA                    	jmp .L_lambda_simple_env_loop_03c6
  6415                                  .L_lambda_simple_env_end_03c6:
  6416 00003352 5B                      	pop rbx
  6417 00003353 BE00000000              	mov rsi, 0
  6418                                  .L_lambda_simple_params_loop_03c6:	; copy params
  6419 00003358 4883FE01                	cmp rsi, 1
  6420 0000335C 740E                    	je .L_lambda_simple_params_end_03c6
  6421 0000335E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6422 00003363 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6423 00003367 48FFC6                  	inc rsi
  6424 0000336A EBEC                    	jmp .L_lambda_simple_params_loop_03c6
  6425                                  .L_lambda_simple_params_end_03c6:
  6426 0000336C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
  6427 0000336F 4889C3                  	mov rbx, rax
  6428 00003372 58                      	pop rax
  6429 00003373 C60004                  	mov byte [rax], T_closure
  6430 00003376 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6431 0000337A 48C74009[87330000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03c6
  6432 00003382 E920010000              	jmp .L_lambda_simple_end_03c6
  6433                                  .L_lambda_simple_code_03c6:	; lambda-simple body
  6434 00003387 48837C241002            	cmp qword [rsp + 8 * 2], 2
  6435 0000338D 740B                    	je .L_lambda_simple_arity_check_ok_03c6
  6436 0000338F FF742410                	push qword [rsp + 8 * 2]
  6437 00003393 6A02                    	push 2
  6438 00003395 E9051E0100              	jmp L_error_incorrect_arity_simple
  6439                                  .L_lambda_simple_arity_check_ok_03c6:
  6440 0000339A C8000000                	enter 0, 0
  6441                                  	; preparing a non-tail-call
  6442 0000339E 488B4528                	mov rax, PARAM(1)	; param s
  6443 000033A2 50                      	push rax
  6444 000033A3 6A01                    	push 1	; arg count
  6445 000033A5 488B0425[911B0000]      	mov rax, qword [free_var_131]	; free var pair?
  6446 000033AD 803805                  	cmp byte [rax], T_undefined
  6447 000033B0 0F84031D0100            	je L_error_fvar_undefined
  6448 000033B6 803804                  	cmp byte [rax], T_closure
  6449 000033B9 0F857E1D0100            	jne L_error_non_closure
  6450 000033BF FF7001                  	push SOB_CLOSURE_ENV(rax)
  6451 000033C2 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6452 000033C5 483D[02000000]          	cmp rax, sob_boolean_false
  6453 000033CB 0F84CE000000            	je .L_if_else_02ae
  6454                                  	; preparing a tail-call
  6455                                  	; preparing a non-tail-call
  6456                                  	; preparing a non-tail-call
  6457 000033D1 488B4528                	mov rax, PARAM(1)	; param s
  6458 000033D5 50                      	push rax
  6459 000033D6 6A01                    	push 1	; arg count
  6460 000033D8 488B0425[73170000]      	mov rax, qword [free_var_69]	; free var cdr
  6461 000033E0 803805                  	cmp byte [rax], T_undefined
  6462 000033E3 0F84D01C0100            	je L_error_fvar_undefined
  6463 000033E9 803804                  	cmp byte [rax], T_closure
  6464 000033EC 0F854B1D0100            	jne L_error_non_closure
  6465 000033F2 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6466 000033F5 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6467 000033F8 50                      	push rax
  6468                                  	; preparing a non-tail-call
  6469 000033F9 488B4528                	mov rax, PARAM(1)	; param s
  6470 000033FD 50                      	push rax
  6471 000033FE 6A01                    	push 1	; arg count
  6472 00003400 488B0425[74160000]      	mov rax, qword [free_var_54]	; free var car
  6473 00003408 803805                  	cmp byte [rax], T_undefined
  6474 0000340B 0F84A81C0100            	je L_error_fvar_undefined
  6475 00003411 803804                  	cmp byte [rax], T_closure
  6476 00003414 0F85231D0100            	jne L_error_non_closure
  6477 0000341A FF7001                  	push SOB_CLOSURE_ENV(rax)
  6478 0000341D FF5009                  	call SOB_CLOSURE_CODE(rax)
  6479 00003420 50                      	push rax
  6480 00003421 6A02                    	push 2	; arg count
  6481 00003423 488B4510                	mov rax, ENV
  6482 00003427 488B00                  	mov rax, qword [rax + 8 * 0]
  6483 0000342A 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  6484 0000342D 488B00                  	mov rax, qword [rax]
  6485 00003430 803804                  	cmp byte [rax], T_closure
  6486 00003433 0F85041D0100            	jne L_error_non_closure
  6487 00003439 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6488 0000343C FF5009                  	call SOB_CLOSURE_CODE(rax)
  6489 0000343F 50                      	push rax
  6490 00003440 488B4520                	mov rax, PARAM(0)	; param a
  6491 00003444 50                      	push rax
  6492 00003445 6A02                    	push 2	; arg count
  6493 00003447 488B0425[83180000]      	mov rax, qword [free_var_85]	; free var cons
  6494 0000344F 803805                  	cmp byte [rax], T_undefined
  6495 00003452 0F84611C0100            	je L_error_fvar_undefined
  6496 00003458 803804                  	cmp byte [rax], T_closure
  6497 0000345B 0F85DC1C0100            	jne L_error_non_closure
  6498 00003461 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6499                                  
  6500                                  	; recycling the current frame
  6501 00003464 FF7508                  	push qword [rbp + 8 * 1]	; old return address
  6502 00003467 FF7500                  	push qword [rbp]	; old frame-pointer
  6503 0000346A B906000000              	mov rcx, 6
  6504 0000346F 488B5D18                	mov rbx, COUNT
  6505 00003473 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
  6506 00003478 488D55F8                	lea rdx, [rbp - 8]
  6507                                  .L_tc_recycle_frame_loop_04dc:
  6508 0000347C 4883F900                	cmp rcx, 0
  6509 00003480 7413                    	je .L_tc_recycle_frame_done_04dc
  6510 00003482 488B32                  	mov rsi, qword [rdx]
  6511 00003485 488933                  	mov qword [rbx], rsi
  6512 00003488 48FFC9                  	dec rcx
  6513 0000348B 4883EB08                	sub rbx, 8
  6514 0000348F 4883EA08                	sub rdx, 8
  6515 00003493 EBE7                    	jmp .L_tc_recycle_frame_loop_04dc
  6516                                  .L_tc_recycle_frame_done_04dc:
  6517 00003495 488D6308                	lea rsp, [rbx + 8]
  6518 00003499 5D                      	pop rbp
  6519 0000349A FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  6520 0000349D EB04                    	jmp .L_if_end_02ae
  6521                                  .L_if_else_02ae:
  6522 0000349F 488B4520                	mov rax, PARAM(0)	; param a
  6523                                  .L_if_end_02ae:
  6524 000034A3 C9                      	leave
  6525 000034A4 C22000                  	ret AND_KILL_FRAME(2)
  6526                                  .L_lambda_simple_end_03c6:	; new closure is in rax
  6527                                  
  6528 000034A7 50                      	push rax
  6529 000034A8 488B4520                	mov rax, PARAM(0)	; param run
  6530                                  
  6531 000034AC 8F00                    	pop qword[rax]
  6532 000034AE 48B8-                   	mov rax, sob_void
  6532 000034B0 [0000000000000000] 
  6533                                  
  6534 000034B8 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6535 000034BD E8241D0100              	call malloc
  6536 000034C2 50                      	push rax
  6537 000034C3 BF08000000              	mov rdi, 8 * 1	; new rib
  6538 000034C8 E8191D0100              	call malloc
  6539 000034CD 50                      	push rax
  6540 000034CE BF10000000              	mov rdi, 8 * 2	; extended env
  6541 000034D3 E80E1D0100              	call malloc
  6542 000034D8 488B7D10                	mov rdi, ENV
  6543 000034DC BE00000000              	mov rsi, 0
  6544 000034E1 BA01000000              	mov rdx, 1
  6545                                  .L_lambda_opt_env_loop_007c:	; ext_env[i + 1] <-- env[i]
  6546 000034E6 4883FE01                	cmp rsi, 1
  6547 000034EA 7410                    	je .L_lambda_opt_env_end_007c
  6548 000034EC 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6549 000034F0 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6550 000034F4 48FFC6                  	inc rsi
  6551 000034F7 48FFC2                  	inc rdx
  6552 000034FA EBEA                    	jmp .L_lambda_opt_env_loop_007c
  6553                                  .L_lambda_opt_env_end_007c:
  6554 000034FC 5B                      	pop rbx
  6555 000034FD BE00000000              	mov rsi, 0
  6556                                  .L_lambda_opt_params_loop_007c:	; copy params
  6557 00003502 4883FE01                	cmp rsi, 1
  6558 00003506 740E                    	je .L_lambda_opt_params_end_007c
  6559 00003508 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6560 0000350D 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6561 00003511 48FFC6                  	inc rsi
  6562 00003514 EBEC                    	jmp .L_lambda_opt_params_loop_007c
  6563                                  .L_lambda_opt_params_end_007c:
  6564 00003516 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
  6565 00003519 4889C3                  	mov rbx, rax
  6566 0000351C 58                      	pop rax
  6567 0000351D C60004                  	mov byte [rax], T_closure
  6568 00003520 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6569 00003524 48C74009[31350000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_007c
  6570 0000352C E9A7010000              	jmp .L_lambda_opt_end_007c
  6571                                  .L_lambda_opt_code_007c:	; lambda-simple body
  6572 00003531 48837C241001            	cmp qword [rsp + 8 * 2], 1 ;	 check num of args
  6573 00003537 740D                    	je .L_lambda_opt_arity_check_exact_007c ;	 if equal, go to exact arity
  6574 00003539 7F42                    	jg .L_lambda_opt_arity_check_more_007c ;	 if greater than, go to arity more
  6575 0000353B FF742410                	push qword [rsp + 8 * 2] ;	 else, throw opt arity error
  6576 0000353F 6A01                    	push 1
  6577 00003541 E96D1C0100              	jmp L_error_incorrect_arity_opt
  6578                                  .L_lambda_opt_arity_check_exact_007c:
  6579 00003546 488B442410              	mov rax, qword [rsp + 8 * 2] ;	 number of args
  6580 0000354B 488D5CC410              	lea rbx, [rsp + 8 * (2 + rax)] ;	 address of last element
  6581 00003550 4883EC08                	sub rsp, 8
  6582 00003554 488D0C24                	lea rcx, [rsp + 0] ;	 new start
  6583                                  .L_lambda_opt_shift_entry_007c:
  6584 00003558 488B5108                	mov rdx, [rcx + 8]
  6585 0000355C 488911                  	mov [rcx], rdx
  6586 0000355F 4883C108                	add rcx, 8
  6587 00003563 4839CB                  	cmp rbx, rcx
  6588 00003566 75F0                    	jne .L_lambda_opt_shift_entry_007c
  6589                                  .L_lambda_opt_shift_exit_007c:
  6590 00003568 48C703[01000000]        	mov qword[rbx], sob_nil ;	 place nil
  6591 0000356F 4883C001                	add rax, 1
  6592 00003573 4889442410              	mov qword [rsp + 8 * 2], rax
  6593 00003578 E987000000              	jmp .L_lambda_opt_stack_adjusted_007c
  6594                                  .L_lambda_opt_arity_check_more_007c:
  6595 0000357D 48BA-                   	mov rdx, sob_nil ;	 base cdr
  6595 0000357F [0100000000000000] 
  6596 00003587 48837C241002            	cmp qword [rsp + 8 * 2], 2
  6597 0000358D 7451                    	je .L_lambda_opt_stack_shrink_loop_exit_007c
  6598                                  .L_lambda_opt_stack_shrink_loop_007c:
  6599 0000358F BF11000000              	mov rdi, (1 + 8 + 8)
  6600 00003594 E84D1C0100              	call malloc
  6601 00003599 C60021                  	mov byte[rax], T_pair
  6602 0000359C 48895009                	mov SOB_PAIR_CDR(rax), rdx
  6603 000035A0 4889C2                  	mov rdx, rax
  6604 000035A3 488B442410              	mov rax, qword [rsp + 8 * 2]
  6605 000035A8 488B5CC410              	mov rbx, qword [rsp + 8 * (2 + rax)]
  6606 000035AD 48895A01                	mov SOB_PAIR_CAR(rdx), rbx
  6607 000035B1 488D5CC408              	lea rbx, [rsp + 8 * (2 + rax - 1)]
  6608                                  .L_lambda_opt_extra_shift_process_007c:
  6609 000035B6 488B0B                  	mov rcx, [rbx]
  6610 000035B9 48894B08                	mov [rbx + 8], rcx
  6611 000035BD 4883EB08                	sub rbx, 8
  6612 000035C1 4839DC                  	cmp rsp, rbx
  6613 000035C4 7EF0                    	jle .L_lambda_opt_extra_shift_process_007c
  6614                                  .L_lambda_opt_extra_shift_process_end_007c:
  6615 000035C6 4883C408                	add rsp, 8
  6616 000035CA 488B5C2410              	mov rbx, [rsp + 8 * 2]
  6617 000035CF 4883EB01                	sub rbx, 1
  6618 000035D3 48895C2410              	mov [rsp + 8 * 2], rbx
  6619 000035D8 48837C241002            	cmp qword [rsp + 8 * 2], 2
  6620 000035DE 7FAF                    	jg .L_lambda_opt_stack_shrink_loop_007c
  6621                                  .L_lambda_opt_stack_shrink_loop_exit_007c:
  6622 000035E0 488B4C2410              	mov rcx, [rsp + 8 * 2]
  6623 000035E5 488B5CCC10              	mov rbx, qword [rsp + 8 * (2 + rcx)]
  6624 000035EA BF11000000              	mov rdi, (1 + 8 + 8)
  6625 000035EF E8F21B0100              	call malloc
  6626 000035F4 C60021                  	mov byte[rax], T_pair
  6627 000035F7 48895009                	mov SOB_PAIR_CDR(rax), rdx
  6628 000035FB 48895801                	mov SOB_PAIR_CAR(rax), rbx
  6629 000035FF 488944CC10              	mov [rsp + 8 * (2 + rcx)], rax
  6630                                  .L_lambda_opt_stack_adjusted_007c:
  6631 00003604 C8000000                	enter 0, 0
  6632                                  	; preparing a tail-call
  6633                                  	; preparing a non-tail-call
  6634                                  	; preparing a non-tail-call
  6635 00003608 488B4528                	mov rax, PARAM(1)	; param s
  6636 0000360C 50                      	push rax
  6637 0000360D 6A01                    	push 1	; arg count
  6638 0000360F 488B0425[73170000]      	mov rax, qword [free_var_69]	; free var cdr
  6639 00003617 803805                  	cmp byte [rax], T_undefined
  6640 0000361A 0F84991A0100            	je L_error_fvar_undefined
  6641 00003620 803804                  	cmp byte [rax], T_closure
  6642 00003623 0F85141B0100            	jne L_error_non_closure
  6643 00003629 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6644 0000362C FF5009                  	call SOB_CLOSURE_CODE(rax)
  6645 0000362F 50                      	push rax
  6646                                  	; preparing a non-tail-call
  6647 00003630 488B4528                	mov rax, PARAM(1)	; param s
  6648 00003634 50                      	push rax
  6649 00003635 6A01                    	push 1	; arg count
  6650 00003637 488B0425[74160000]      	mov rax, qword [free_var_54]	; free var car
  6651 0000363F 803805                  	cmp byte [rax], T_undefined
  6652 00003642 0F84711A0100            	je L_error_fvar_undefined
  6653 00003648 803804                  	cmp byte [rax], T_closure
  6654 0000364B 0F85EC1A0100            	jne L_error_non_closure
  6655 00003651 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6656 00003654 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6657 00003657 50                      	push rax
  6658 00003658 6A02                    	push 2	; arg count
  6659 0000365A 488B4510                	mov rax, ENV
  6660 0000365E 488B00                  	mov rax, qword [rax + 8 * 0]
  6661 00003661 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  6662 00003664 488B00                  	mov rax, qword [rax]
  6663 00003667 803804                  	cmp byte [rax], T_closure
  6664 0000366A 0F85CD1A0100            	jne L_error_non_closure
  6665 00003670 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6666 00003673 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6667 00003676 50                      	push rax
  6668 00003677 488B4520                	mov rax, PARAM(0)	; param f
  6669 0000367B 50                      	push rax
  6670 0000367C 6A02                    	push 2	; arg count
  6671 0000367E 488B0425[AA130000]      	mov rax, qword [free_var_12]	; free var __bin-apply
  6672 00003686 803805                  	cmp byte [rax], T_undefined
  6673 00003689 0F842A1A0100            	je L_error_fvar_undefined
  6674 0000368F 803804                  	cmp byte [rax], T_closure
  6675 00003692 0F85A51A0100            	jne L_error_non_closure
  6676 00003698 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6677                                  
  6678                                  	; recycling the current frame
  6679 0000369B FF7508                  	push qword [rbp + 8 * 1]	; old return address
  6680 0000369E FF7500                  	push qword [rbp]	; old frame-pointer
  6681 000036A1 B906000000              	mov rcx, 6
  6682 000036A6 488B5D18                	mov rbx, COUNT
  6683 000036AA 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
  6684 000036AF 488D55F8                	lea rdx, [rbp - 8]
  6685                                  .L_tc_recycle_frame_loop_04dd:
  6686 000036B3 4883F900                	cmp rcx, 0
  6687 000036B7 7413                    	je .L_tc_recycle_frame_done_04dd
  6688 000036B9 488B32                  	mov rsi, qword [rdx]
  6689 000036BC 488933                  	mov qword [rbx], rsi
  6690 000036BF 48FFC9                  	dec rcx
  6691 000036C2 4883EB08                	sub rbx, 8
  6692 000036C6 4883EA08                	sub rdx, 8
  6693 000036CA EBE7                    	jmp .L_tc_recycle_frame_loop_04dd
  6694                                  .L_tc_recycle_frame_done_04dd:
  6695 000036CC 488D6308                	lea rsp, [rbx + 8]
  6696 000036D0 5D                      	pop rbp
  6697 000036D1 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  6698 000036D4 C9                      	leave
  6699 000036D5 C22000                  	ret AND_KILL_FRAME(2)
  6700                                  .L_lambda_opt_end_007c:	; new closure is in rax
  6701 000036D8 C9                      	leave
  6702 000036D9 C21800                  	ret AND_KILL_FRAME(1)
  6703                                  .L_lambda_simple_end_03c5:	; new closure is in rax
  6704 000036DC 803804                  	cmp byte [rax], T_closure
  6705 000036DF 0F85581A0100            	jne L_error_non_closure
  6706 000036E5 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6707 000036E8 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6708 000036EB 48890425[0F150000]      	mov qword [free_var_33], rax
  6709 000036F3 48B8-                   	mov rax, sob_void
  6709 000036F5 [0000000000000000] 
  6710                                  
  6711 000036FD 4889C7                  	mov rdi, rax
  6712 00003700 E8361D0100              	call print_sexpr_if_not_void
  6713                                  
  6714 00003705 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6715 0000370A E8D71A0100              	call malloc
  6716 0000370F 50                      	push rax
  6717 00003710 BF00000000              	mov rdi, 8 * 0	; new rib
  6718 00003715 E8CC1A0100              	call malloc
  6719 0000371A 50                      	push rax
  6720 0000371B BF08000000              	mov rdi, 8 * 1	; extended env
  6721 00003720 E8C11A0100              	call malloc
  6722 00003725 488B7D10                	mov rdi, ENV
  6723 00003729 BE00000000              	mov rsi, 0
  6724 0000372E BA01000000              	mov rdx, 1
  6725                                  .L_lambda_opt_env_loop_007d:	; ext_env[i + 1] <-- env[i]
  6726 00003733 4883FE00                	cmp rsi, 0
  6727 00003737 7410                    	je .L_lambda_opt_env_end_007d
  6728 00003739 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6729 0000373D 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6730 00003741 48FFC6                  	inc rsi
  6731 00003744 48FFC2                  	inc rdx
  6732 00003747 EBEA                    	jmp .L_lambda_opt_env_loop_007d
  6733                                  .L_lambda_opt_env_end_007d:
  6734 00003749 5B                      	pop rbx
  6735 0000374A BE00000000              	mov rsi, 0
  6736                                  .L_lambda_opt_params_loop_007d:	; copy params
  6737 0000374F 4883FE00                	cmp rsi, 0
  6738 00003753 740E                    	je .L_lambda_opt_params_end_007d
  6739 00003755 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6740 0000375A 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6741 0000375E 48FFC6                  	inc rsi
  6742 00003761 EBEC                    	jmp .L_lambda_opt_params_loop_007d
  6743                                  .L_lambda_opt_params_end_007d:
  6744 00003763 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
  6745 00003766 4889C3                  	mov rbx, rax
  6746 00003769 58                      	pop rax
  6747 0000376A C60004                  	mov byte [rax], T_closure
  6748 0000376D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6749 00003771 48C74009[7E370000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_007d
  6750 00003779 E985040000              	jmp .L_lambda_opt_end_007d
  6751                                  .L_lambda_opt_code_007d:	; lambda-simple body
  6752 0000377E 48837C241001            	cmp qword [rsp + 8 * 2], 1 ;	 check num of args
  6753 00003784 740D                    	je .L_lambda_opt_arity_check_exact_007d ;	 if equal, go to exact arity
  6754 00003786 7F42                    	jg .L_lambda_opt_arity_check_more_007d ;	 if greater than, go to arity more
  6755 00003788 FF742410                	push qword [rsp + 8 * 2] ;	 else, throw opt arity error
  6756 0000378C 6A01                    	push 1
  6757 0000378E E9201A0100              	jmp L_error_incorrect_arity_opt
  6758                                  .L_lambda_opt_arity_check_exact_007d:
  6759 00003793 488B442410              	mov rax, qword [rsp + 8 * 2] ;	 number of args
  6760 00003798 488D5CC410              	lea rbx, [rsp + 8 * (2 + rax)] ;	 address of last element
  6761 0000379D 4883EC08                	sub rsp, 8
  6762 000037A1 488D0C24                	lea rcx, [rsp + 0] ;	 new start
  6763                                  .L_lambda_opt_shift_entry_007d:
  6764 000037A5 488B5108                	mov rdx, [rcx + 8]
  6765 000037A9 488911                  	mov [rcx], rdx
  6766 000037AC 4883C108                	add rcx, 8
  6767 000037B0 4839CB                  	cmp rbx, rcx
  6768 000037B3 75F0                    	jne .L_lambda_opt_shift_entry_007d
  6769                                  .L_lambda_opt_shift_exit_007d:
  6770 000037B5 48C703[01000000]        	mov qword[rbx], sob_nil ;	 place nil
  6771 000037BC 4883C001                	add rax, 1
  6772 000037C0 4889442410              	mov qword [rsp + 8 * 2], rax
  6773 000037C5 E987000000              	jmp .L_lambda_opt_stack_adjusted_007d
  6774                                  .L_lambda_opt_arity_check_more_007d:
  6775 000037CA 48BA-                   	mov rdx, sob_nil ;	 base cdr
  6775 000037CC [0100000000000000] 
  6776 000037D4 48837C241002            	cmp qword [rsp + 8 * 2], 2
  6777 000037DA 7451                    	je .L_lambda_opt_stack_shrink_loop_exit_007d
  6778                                  .L_lambda_opt_stack_shrink_loop_007d:
  6779 000037DC BF11000000              	mov rdi, (1 + 8 + 8)
  6780 000037E1 E8001A0100              	call malloc
  6781 000037E6 C60021                  	mov byte[rax], T_pair
  6782 000037E9 48895009                	mov SOB_PAIR_CDR(rax), rdx
  6783 000037ED 4889C2                  	mov rdx, rax
  6784 000037F0 488B442410              	mov rax, qword [rsp + 8 * 2]
  6785 000037F5 488B5CC410              	mov rbx, qword [rsp + 8 * (2 + rax)]
  6786 000037FA 48895A01                	mov SOB_PAIR_CAR(rdx), rbx
  6787 000037FE 488D5CC408              	lea rbx, [rsp + 8 * (2 + rax - 1)]
  6788                                  .L_lambda_opt_extra_shift_process_007d:
  6789 00003803 488B0B                  	mov rcx, [rbx]
  6790 00003806 48894B08                	mov [rbx + 8], rcx
  6791 0000380A 4883EB08                	sub rbx, 8
  6792 0000380E 4839DC                  	cmp rsp, rbx
  6793 00003811 7EF0                    	jle .L_lambda_opt_extra_shift_process_007d
  6794                                  .L_lambda_opt_extra_shift_process_end_007d:
  6795 00003813 4883C408                	add rsp, 8
  6796 00003817 488B5C2410              	mov rbx, [rsp + 8 * 2]
  6797 0000381C 4883EB01                	sub rbx, 1
  6798 00003820 48895C2410              	mov [rsp + 8 * 2], rbx
  6799 00003825 48837C241002            	cmp qword [rsp + 8 * 2], 2
  6800 0000382B 7FAF                    	jg .L_lambda_opt_stack_shrink_loop_007d
  6801                                  .L_lambda_opt_stack_shrink_loop_exit_007d:
  6802 0000382D 488B4C2410              	mov rcx, [rsp + 8 * 2]
  6803 00003832 488B5CCC10              	mov rbx, qword [rsp + 8 * (2 + rcx)]
  6804 00003837 BF11000000              	mov rdi, (1 + 8 + 8)
  6805 0000383C E8A5190100              	call malloc
  6806 00003841 C60021                  	mov byte[rax], T_pair
  6807 00003844 48895009                	mov SOB_PAIR_CDR(rax), rdx
  6808 00003848 48895801                	mov SOB_PAIR_CAR(rax), rbx
  6809 0000384C 488944CC10              	mov [rsp + 8 * (2 + rcx)], rax
  6810                                  .L_lambda_opt_stack_adjusted_007d:
  6811 00003851 C8000000                	enter 0, 0
  6812                                  	; preparing a tail-call
  6813 00003855 48B8-                   	mov rax, L_constants + 2335
  6813 00003857 [1F09000000000000] 
  6814 0000385F 50                      	push rax
  6815 00003860 6A01                    	push 1	; arg count
  6816 00003862 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6817 00003867 E87A190100              	call malloc
  6818 0000386C 50                      	push rax
  6819 0000386D BF10000000              	mov rdi, 8 * 2	; new rib
  6820 00003872 E86F190100              	call malloc
  6821 00003877 50                      	push rax
  6822 00003878 BF10000000              	mov rdi, 8 * 2	; extended env
  6823 0000387D E864190100              	call malloc
  6824 00003882 488B7D10                	mov rdi, ENV
  6825 00003886 BE00000000              	mov rsi, 0
  6826 0000388B BA01000000              	mov rdx, 1
  6827                                  .L_lambda_simple_env_loop_03c7:	; ext_env[i + 1] <-- env[i]
  6828 00003890 4883FE01                	cmp rsi, 1
  6829 00003894 7410                    	je .L_lambda_simple_env_end_03c7
  6830 00003896 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6831 0000389A 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6832 0000389E 48FFC6                  	inc rsi
  6833 000038A1 48FFC2                  	inc rdx
  6834 000038A4 EBEA                    	jmp .L_lambda_simple_env_loop_03c7
  6835                                  .L_lambda_simple_env_end_03c7:
  6836 000038A6 5B                      	pop rbx
  6837 000038A7 BE00000000              	mov rsi, 0
  6838                                  .L_lambda_simple_params_loop_03c7:	; copy params
  6839 000038AC 4883FE02                	cmp rsi, 2
  6840 000038B0 740E                    	je .L_lambda_simple_params_end_03c7
  6841 000038B2 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6842 000038B7 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6843 000038BB 48FFC6                  	inc rsi
  6844 000038BE EBEC                    	jmp .L_lambda_simple_params_loop_03c7
  6845                                  .L_lambda_simple_params_end_03c7:
  6846 000038C0 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
  6847 000038C3 4889C3                  	mov rbx, rax
  6848 000038C6 58                      	pop rax
  6849 000038C7 C60004                  	mov byte [rax], T_closure
  6850 000038CA 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6851 000038CE 48C74009[DB380000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03c7
  6852 000038D6 E9DF020000              	jmp .L_lambda_simple_end_03c7
  6853                                  .L_lambda_simple_code_03c7:	; lambda-simple body
  6854 000038DB 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6855 000038E1 740B                    	je .L_lambda_simple_arity_check_ok_03c7
  6856 000038E3 FF742410                	push qword [rsp + 8 * 2]
  6857 000038E7 6A01                    	push 1
  6858 000038E9 E9B1180100              	jmp L_error_incorrect_arity_simple
  6859                                  .L_lambda_simple_arity_check_ok_03c7:
  6860 000038EE C8000000                	enter 0, 0
  6861                                  
  6862 000038F2 BF08000000              	mov rdi, 8
  6863 000038F7 E8EA180100              	call malloc
  6864 000038FC 488B5D20                	mov rbx, PARAM(0)	; param loop
  6865 00003900 488918                  	mov [rax], rbx	; box loop
  6866 00003903 48894520                	mov PARAM(0), rax	; replace param with box
  6867 00003907 48B8-                   	mov rax, sob_void
  6867 00003909 [0000000000000000] 
  6868                                  
  6869 00003911 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6870 00003916 E8CB180100              	call malloc
  6871 0000391B 50                      	push rax
  6872 0000391C BF08000000              	mov rdi, 8 * 1	; new rib
  6873 00003921 E8C0180100              	call malloc
  6874 00003926 50                      	push rax
  6875 00003927 BF18000000              	mov rdi, 8 * 3	; extended env
  6876 0000392C E8B5180100              	call malloc
  6877 00003931 488B7D10                	mov rdi, ENV
  6878 00003935 BE00000000              	mov rsi, 0
  6879 0000393A BA01000000              	mov rdx, 1
  6880                                  .L_lambda_simple_env_loop_03c8:	; ext_env[i + 1] <-- env[i]
  6881 0000393F 4883FE02                	cmp rsi, 2
  6882 00003943 7410                    	je .L_lambda_simple_env_end_03c8
  6883 00003945 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6884 00003949 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6885 0000394D 48FFC6                  	inc rsi
  6886 00003950 48FFC2                  	inc rdx
  6887 00003953 EBEA                    	jmp .L_lambda_simple_env_loop_03c8
  6888                                  .L_lambda_simple_env_end_03c8:
  6889 00003955 5B                      	pop rbx
  6890 00003956 BE00000000              	mov rsi, 0
  6891                                  .L_lambda_simple_params_loop_03c8:	; copy params
  6892 0000395B 4883FE01                	cmp rsi, 1
  6893 0000395F 740E                    	je .L_lambda_simple_params_end_03c8
  6894 00003961 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6895 00003966 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6896 0000396A 48FFC6                  	inc rsi
  6897 0000396D EBEC                    	jmp .L_lambda_simple_params_loop_03c8
  6898                                  .L_lambda_simple_params_end_03c8:
  6899 0000396F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
  6900 00003972 4889C3                  	mov rbx, rax
  6901 00003975 58                      	pop rax
  6902 00003976 C60004                  	mov byte [rax], T_closure
  6903 00003979 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6904 0000397D 48C74009[8A390000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03c8
  6905 00003985 E97F010000              	jmp .L_lambda_simple_end_03c8
  6906                                  .L_lambda_simple_code_03c8:	; lambda-simple body
  6907 0000398A 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6908 00003990 740B                    	je .L_lambda_simple_arity_check_ok_03c8
  6909 00003992 FF742410                	push qword [rsp + 8 * 2]
  6910 00003996 6A01                    	push 1
  6911 00003998 E902180100              	jmp L_error_incorrect_arity_simple
  6912                                  .L_lambda_simple_arity_check_ok_03c8:
  6913 0000399D C8000000                	enter 0, 0
  6914                                  	; preparing a non-tail-call
  6915                                  	; preparing a non-tail-call
  6916 000039A1 488B4520                	mov rax, PARAM(0)	; param s
  6917 000039A5 50                      	push rax
  6918 000039A6 6A01                    	push 1	; arg count
  6919 000039A8 488B0425[74160000]      	mov rax, qword [free_var_54]	; free var car
  6920 000039B0 803805                  	cmp byte [rax], T_undefined
  6921 000039B3 0F8400170100            	je L_error_fvar_undefined
  6922 000039B9 803804                  	cmp byte [rax], T_closure
  6923 000039BC 0F857B170100            	jne L_error_non_closure
  6924 000039C2 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6925 000039C5 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6926 000039C8 50                      	push rax
  6927 000039C9 6A01                    	push 1	; arg count
  6928 000039CB 488B0425[911B0000]      	mov rax, qword [free_var_131]	; free var pair?
  6929 000039D3 803805                  	cmp byte [rax], T_undefined
  6930 000039D6 0F84DD160100            	je L_error_fvar_undefined
  6931 000039DC 803804                  	cmp byte [rax], T_closure
  6932 000039DF 0F8558170100            	jne L_error_non_closure
  6933 000039E5 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6934 000039E8 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6935 000039EB 483D[02000000]          	cmp rax, sob_boolean_false
  6936 000039F1 0F8404010000            	je .L_if_else_02af
  6937                                  	; preparing a non-tail-call
  6938                                  	; preparing a non-tail-call
  6939 000039F7 488B4520                	mov rax, PARAM(0)	; param s
  6940 000039FB 50                      	push rax
  6941 000039FC 488B0425[74160000]      	mov rax, qword [free_var_54]	; free var car
  6942 00003A04 803805                  	cmp byte [rax], T_undefined
  6943 00003A07 0F84AC160100            	je L_error_fvar_undefined
  6944 00003A0D 50                      	push rax
  6945 00003A0E 6A02                    	push 2	; arg count
  6946 00003A10 488B0425[F81A0000]      	mov rax, qword [free_var_122]	; free var map
  6947 00003A18 803805                  	cmp byte [rax], T_undefined
  6948 00003A1B 0F8498160100            	je L_error_fvar_undefined
  6949 00003A21 803804                  	cmp byte [rax], T_closure
  6950 00003A24 0F8513170100            	jne L_error_non_closure
  6951 00003A2A FF7001                  	push SOB_CLOSURE_ENV(rax)
  6952 00003A2D FF5009                  	call SOB_CLOSURE_CODE(rax)
  6953 00003A30 50                      	push rax
  6954 00003A31 488B4510                	mov rax, ENV
  6955 00003A35 488B4008                	mov rax, qword [rax + 8 * 1]
  6956 00003A39 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var f
  6957 00003A3C 50                      	push rax
  6958 00003A3D 6A02                    	push 2	; arg count
  6959 00003A3F 488B0425[0F150000]      	mov rax, qword [free_var_33]	; free var apply
  6960 00003A47 803805                  	cmp byte [rax], T_undefined
  6961 00003A4A 0F8469160100            	je L_error_fvar_undefined
  6962 00003A50 803804                  	cmp byte [rax], T_closure
  6963 00003A53 0F85E4160100            	jne L_error_non_closure
  6964 00003A59 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6965 00003A5C FF5009                  	call SOB_CLOSURE_CODE(rax)
  6966 00003A5F 483D[02000000]          	cmp rax, sob_boolean_false
  6967 00003A65 0F858E000000            	jne .L_or_end_0049
  6968                                  	; preparing a tail-call
  6969                                  	; preparing a non-tail-call
  6970 00003A6B 488B4520                	mov rax, PARAM(0)	; param s
  6971 00003A6F 50                      	push rax
  6972 00003A70 488B0425[73170000]      	mov rax, qword [free_var_69]	; free var cdr
  6973 00003A78 803805                  	cmp byte [rax], T_undefined
  6974 00003A7B 0F8438160100            	je L_error_fvar_undefined
  6975 00003A81 50                      	push rax
  6976 00003A82 6A02                    	push 2	; arg count
  6977 00003A84 488B0425[F81A0000]      	mov rax, qword [free_var_122]	; free var map
  6978 00003A8C 803805                  	cmp byte [rax], T_undefined
  6979 00003A8F 0F8424160100            	je L_error_fvar_undefined
  6980 00003A95 803804                  	cmp byte [rax], T_closure
  6981 00003A98 0F859F160100            	jne L_error_non_closure
  6982 00003A9E FF7001                  	push SOB_CLOSURE_ENV(rax)
  6983 00003AA1 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6984 00003AA4 50                      	push rax
  6985 00003AA5 6A01                    	push 1	; arg count
  6986 00003AA7 488B4510                	mov rax, ENV
  6987 00003AAB 488B00                  	mov rax, qword [rax + 8 * 0]
  6988 00003AAE 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var loop
  6989 00003AB1 488B00                  	mov rax, qword [rax]
  6990 00003AB4 803804                  	cmp byte [rax], T_closure
  6991 00003AB7 0F8580160100            	jne L_error_non_closure
  6992 00003ABD FF7001                  	push SOB_CLOSURE_ENV(rax)
  6993                                  
  6994                                  	; recycling the current frame
  6995 00003AC0 FF7508                  	push qword [rbp + 8 * 1]	; old return address
  6996 00003AC3 FF7500                  	push qword [rbp]	; old frame-pointer
  6997 00003AC6 B905000000              	mov rcx, 5
  6998 00003ACB 488B5D18                	mov rbx, COUNT
  6999 00003ACF 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
  7000 00003AD4 488D55F8                	lea rdx, [rbp - 8]
  7001                                  .L_tc_recycle_frame_loop_04de:
  7002 00003AD8 4883F900                	cmp rcx, 0
  7003 00003ADC 7413                    	je .L_tc_recycle_frame_done_04de
  7004 00003ADE 488B32                  	mov rsi, qword [rdx]
  7005 00003AE1 488933                  	mov qword [rbx], rsi
  7006 00003AE4 48FFC9                  	dec rcx
  7007 00003AE7 4883EB08                	sub rbx, 8
  7008 00003AEB 4883EA08                	sub rdx, 8
  7009 00003AEF EBE7                    	jmp .L_tc_recycle_frame_loop_04de
  7010                                  .L_tc_recycle_frame_done_04de:
  7011 00003AF1 488D6308                	lea rsp, [rbx + 8]
  7012 00003AF5 5D                      	pop rbp
  7013 00003AF6 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  7014                                  .L_or_end_0049:
  7015 00003AF9 EB0A                    	jmp .L_if_end_02af
  7016                                  .L_if_else_02af:
  7017 00003AFB 48B8-                   	mov rax, L_constants + 2
  7017 00003AFD [0200000000000000] 
  7018                                  .L_if_end_02af:
  7019 00003B05 C9                      	leave
  7020 00003B06 C21800                  	ret AND_KILL_FRAME(1)
  7021                                  .L_lambda_simple_end_03c8:	; new closure is in rax
  7022                                  
  7023 00003B09 50                      	push rax
  7024 00003B0A 488B4520                	mov rax, PARAM(0)	; param loop
  7025                                  
  7026 00003B0E 8F00                    	pop qword[rax]
  7027 00003B10 48B8-                   	mov rax, sob_void
  7027 00003B12 [0000000000000000] 
  7028                                  
  7029                                  	; preparing a non-tail-call
  7030 00003B1A 488B4510                	mov rax, ENV
  7031 00003B1E 488B00                  	mov rax, qword [rax + 8 * 0]
  7032 00003B21 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var s
  7033 00003B25 50                      	push rax
  7034 00003B26 6A01                    	push 1	; arg count
  7035 00003B28 488B0425[911B0000]      	mov rax, qword [free_var_131]	; free var pair?
  7036 00003B30 803805                  	cmp byte [rax], T_undefined
  7037 00003B33 0F8480150100            	je L_error_fvar_undefined
  7038 00003B39 803804                  	cmp byte [rax], T_closure
  7039 00003B3C 0F85FB150100            	jne L_error_non_closure
  7040 00003B42 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7041 00003B45 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7042 00003B48 483D[02000000]          	cmp rax, sob_boolean_false
  7043 00003B4E 745C                    	je .L_if_else_02b0
  7044                                  	; preparing a tail-call
  7045 00003B50 488B4510                	mov rax, ENV
  7046 00003B54 488B00                  	mov rax, qword [rax + 8 * 0]
  7047 00003B57 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var s
  7048 00003B5B 50                      	push rax
  7049 00003B5C 6A01                    	push 1	; arg count
  7050 00003B5E 488B4520                	mov rax, PARAM(0)	; param loop
  7051 00003B62 488B00                  	mov rax, qword [rax]
  7052 00003B65 803804                  	cmp byte [rax], T_closure
  7053 00003B68 0F85CF150100            	jne L_error_non_closure
  7054 00003B6E FF7001                  	push SOB_CLOSURE_ENV(rax)
  7055                                  
  7056                                  	; recycling the current frame
  7057 00003B71 FF7508                  	push qword [rbp + 8 * 1]	; old return address
  7058 00003B74 FF7500                  	push qword [rbp]	; old frame-pointer
  7059 00003B77 B905000000              	mov rcx, 5
  7060 00003B7C 488B5D18                	mov rbx, COUNT
  7061 00003B80 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
  7062 00003B85 488D55F8                	lea rdx, [rbp - 8]
  7063                                  .L_tc_recycle_frame_loop_04df:
  7064 00003B89 4883F900                	cmp rcx, 0
  7065 00003B8D 7413                    	je .L_tc_recycle_frame_done_04df
  7066 00003B8F 488B32                  	mov rsi, qword [rdx]
  7067 00003B92 488933                  	mov qword [rbx], rsi
  7068 00003B95 48FFC9                  	dec rcx
  7069 00003B98 4883EB08                	sub rbx, 8
  7070 00003B9C 4883EA08                	sub rdx, 8
  7071 00003BA0 EBE7                    	jmp .L_tc_recycle_frame_loop_04df
  7072                                  .L_tc_recycle_frame_done_04df:
  7073 00003BA2 488D6308                	lea rsp, [rbx + 8]
  7074 00003BA6 5D                      	pop rbp
  7075 00003BA7 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  7076 00003BAA EB0A                    	jmp .L_if_end_02b0
  7077                                  .L_if_else_02b0:
  7078 00003BAC 48B8-                   	mov rax, L_constants + 2
  7078 00003BAE [0200000000000000] 
  7079                                  .L_if_end_02b0:
  7080 00003BB6 C9                      	leave
  7081 00003BB7 C21800                  	ret AND_KILL_FRAME(1)
  7082                                  .L_lambda_simple_end_03c7:	; new closure is in rax
  7083 00003BBA 803804                  	cmp byte [rax], T_closure
  7084 00003BBD 0F857A150100            	jne L_error_non_closure
  7085 00003BC3 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7086                                  
  7087                                  	; recycling the current frame
  7088 00003BC6 FF7508                  	push qword [rbp + 8 * 1]	; old return address
  7089 00003BC9 FF7500                  	push qword [rbp]	; old frame-pointer
  7090 00003BCC B905000000              	mov rcx, 5
  7091 00003BD1 488B5D18                	mov rbx, COUNT
  7092 00003BD5 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
  7093 00003BDA 488D55F8                	lea rdx, [rbp - 8]
  7094                                  .L_tc_recycle_frame_loop_04e0:
  7095 00003BDE 4883F900                	cmp rcx, 0
  7096 00003BE2 7413                    	je .L_tc_recycle_frame_done_04e0
  7097 00003BE4 488B32                  	mov rsi, qword [rdx]
  7098 00003BE7 488933                  	mov qword [rbx], rsi
  7099 00003BEA 48FFC9                  	dec rcx
  7100 00003BED 4883EB08                	sub rbx, 8
  7101 00003BF1 4883EA08                	sub rdx, 8
  7102 00003BF5 EBE7                    	jmp .L_tc_recycle_frame_loop_04e0
  7103                                  .L_tc_recycle_frame_done_04e0:
  7104 00003BF7 488D6308                	lea rsp, [rbx + 8]
  7105 00003BFB 5D                      	pop rbp
  7106 00003BFC FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  7107 00003BFF C9                      	leave
  7108 00003C00 C22000                  	ret AND_KILL_FRAME(2)
  7109                                  .L_lambda_opt_end_007d:	; new closure is in rax
  7110 00003C03 48890425[801B0000]      	mov qword [free_var_130], rax
  7111 00003C0B 48B8-                   	mov rax, sob_void
  7111 00003C0D [0000000000000000] 
  7112                                  
  7113 00003C15 4889C7                  	mov rdi, rax
  7114 00003C18 E81E180100              	call print_sexpr_if_not_void
  7115                                  
  7116 00003C1D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7117 00003C22 E8BF150100              	call malloc
  7118 00003C27 50                      	push rax
  7119 00003C28 BF00000000              	mov rdi, 8 * 0	; new rib
  7120 00003C2D E8B4150100              	call malloc
  7121 00003C32 50                      	push rax
  7122 00003C33 BF08000000              	mov rdi, 8 * 1	; extended env
  7123 00003C38 E8A9150100              	call malloc
  7124 00003C3D 488B7D10                	mov rdi, ENV
  7125 00003C41 BE00000000              	mov rsi, 0
  7126 00003C46 BA01000000              	mov rdx, 1
  7127                                  .L_lambda_opt_env_loop_007e:	; ext_env[i + 1] <-- env[i]
  7128 00003C4B 4883FE00                	cmp rsi, 0
  7129 00003C4F 7410                    	je .L_lambda_opt_env_end_007e
  7130 00003C51 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7131 00003C55 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7132 00003C59 48FFC6                  	inc rsi
  7133 00003C5C 48FFC2                  	inc rdx
  7134 00003C5F EBEA                    	jmp .L_lambda_opt_env_loop_007e
  7135                                  .L_lambda_opt_env_end_007e:
  7136 00003C61 5B                      	pop rbx
  7137 00003C62 BE00000000              	mov rsi, 0
  7138                                  .L_lambda_opt_params_loop_007e:	; copy params
  7139 00003C67 4883FE00                	cmp rsi, 0
  7140 00003C6B 740E                    	je .L_lambda_opt_params_end_007e
  7141 00003C6D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7142 00003C72 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7143 00003C76 48FFC6                  	inc rsi
  7144 00003C79 EBEC                    	jmp .L_lambda_opt_params_loop_007e
  7145                                  .L_lambda_opt_params_end_007e:
  7146 00003C7B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
  7147 00003C7E 4889C3                  	mov rbx, rax
  7148 00003C81 58                      	pop rax
  7149 00003C82 C60004                  	mov byte [rax], T_closure
  7150 00003C85 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7151 00003C89 48C74009[963C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_007e
  7152 00003C91 E9BF040000              	jmp .L_lambda_opt_end_007e
  7153                                  .L_lambda_opt_code_007e:	; lambda-simple body
  7154 00003C96 48837C241001            	cmp qword [rsp + 8 * 2], 1 ;	 check num of args
  7155 00003C9C 740D                    	je .L_lambda_opt_arity_check_exact_007e ;	 if equal, go to exact arity
  7156 00003C9E 7F42                    	jg .L_lambda_opt_arity_check_more_007e ;	 if greater than, go to arity more
  7157 00003CA0 FF742410                	push qword [rsp + 8 * 2] ;	 else, throw opt arity error
  7158 00003CA4 6A01                    	push 1
  7159 00003CA6 E908150100              	jmp L_error_incorrect_arity_opt
  7160                                  .L_lambda_opt_arity_check_exact_007e:
  7161 00003CAB 488B442410              	mov rax, qword [rsp + 8 * 2] ;	 number of args
  7162 00003CB0 488D5CC410              	lea rbx, [rsp + 8 * (2 + rax)] ;	 address of last element
  7163 00003CB5 4883EC08                	sub rsp, 8
  7164 00003CB9 488D0C24                	lea rcx, [rsp + 0] ;	 new start
  7165                                  .L_lambda_opt_shift_entry_007e:
  7166 00003CBD 488B5108                	mov rdx, [rcx + 8]
  7167 00003CC1 488911                  	mov [rcx], rdx
  7168 00003CC4 4883C108                	add rcx, 8
  7169 00003CC8 4839CB                  	cmp rbx, rcx
  7170 00003CCB 75F0                    	jne .L_lambda_opt_shift_entry_007e
  7171                                  .L_lambda_opt_shift_exit_007e:
  7172 00003CCD 48C703[01000000]        	mov qword[rbx], sob_nil ;	 place nil
  7173 00003CD4 4883C001                	add rax, 1
  7174 00003CD8 4889442410              	mov qword [rsp + 8 * 2], rax
  7175 00003CDD E987000000              	jmp .L_lambda_opt_stack_adjusted_007e
  7176                                  .L_lambda_opt_arity_check_more_007e:
  7177 00003CE2 48BA-                   	mov rdx, sob_nil ;	 base cdr
  7177 00003CE4 [0100000000000000] 
  7178 00003CEC 48837C241002            	cmp qword [rsp + 8 * 2], 2
  7179 00003CF2 7451                    	je .L_lambda_opt_stack_shrink_loop_exit_007e
  7180                                  .L_lambda_opt_stack_shrink_loop_007e:
  7181 00003CF4 BF11000000              	mov rdi, (1 + 8 + 8)
  7182 00003CF9 E8E8140100              	call malloc
  7183 00003CFE C60021                  	mov byte[rax], T_pair
  7184 00003D01 48895009                	mov SOB_PAIR_CDR(rax), rdx
  7185 00003D05 4889C2                  	mov rdx, rax
  7186 00003D08 488B442410              	mov rax, qword [rsp + 8 * 2]
  7187 00003D0D 488B5CC410              	mov rbx, qword [rsp + 8 * (2 + rax)]
  7188 00003D12 48895A01                	mov SOB_PAIR_CAR(rdx), rbx
  7189 00003D16 488D5CC408              	lea rbx, [rsp + 8 * (2 + rax - 1)]
  7190                                  .L_lambda_opt_extra_shift_process_007e:
  7191 00003D1B 488B0B                  	mov rcx, [rbx]
  7192 00003D1E 48894B08                	mov [rbx + 8], rcx
  7193 00003D22 4883EB08                	sub rbx, 8
  7194 00003D26 4839DC                  	cmp rsp, rbx
  7195 00003D29 7EF0                    	jle .L_lambda_opt_extra_shift_process_007e
  7196                                  .L_lambda_opt_extra_shift_process_end_007e:
  7197 00003D2B 4883C408                	add rsp, 8
  7198 00003D2F 488B5C2410              	mov rbx, [rsp + 8 * 2]
  7199 00003D34 4883EB01                	sub rbx, 1
  7200 00003D38 48895C2410              	mov [rsp + 8 * 2], rbx
  7201 00003D3D 48837C241002            	cmp qword [rsp + 8 * 2], 2
  7202 00003D43 7FAF                    	jg .L_lambda_opt_stack_shrink_loop_007e
  7203                                  .L_lambda_opt_stack_shrink_loop_exit_007e:
  7204 00003D45 488B4C2410              	mov rcx, [rsp + 8 * 2]
  7205 00003D4A 488B5CCC10              	mov rbx, qword [rsp + 8 * (2 + rcx)]
  7206 00003D4F BF11000000              	mov rdi, (1 + 8 + 8)
  7207 00003D54 E88D140100              	call malloc
  7208 00003D59 C60021                  	mov byte[rax], T_pair
  7209 00003D5C 48895009                	mov SOB_PAIR_CDR(rax), rdx
  7210 00003D60 48895801                	mov SOB_PAIR_CAR(rax), rbx
  7211 00003D64 488944CC10              	mov [rsp + 8 * (2 + rcx)], rax
  7212                                  .L_lambda_opt_stack_adjusted_007e:
  7213 00003D69 C8000000                	enter 0, 0
  7214                                  	; preparing a tail-call
  7215 00003D6D 48B8-                   	mov rax, L_constants + 2335
  7215 00003D6F [1F09000000000000] 
  7216 00003D77 50                      	push rax
  7217 00003D78 6A01                    	push 1	; arg count
  7218 00003D7A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7219 00003D7F E862140100              	call malloc
  7220 00003D84 50                      	push rax
  7221 00003D85 BF10000000              	mov rdi, 8 * 2	; new rib
  7222 00003D8A E857140100              	call malloc
  7223 00003D8F 50                      	push rax
  7224 00003D90 BF10000000              	mov rdi, 8 * 2	; extended env
  7225 00003D95 E84C140100              	call malloc
  7226 00003D9A 488B7D10                	mov rdi, ENV
  7227 00003D9E BE00000000              	mov rsi, 0
  7228 00003DA3 BA01000000              	mov rdx, 1
  7229                                  .L_lambda_simple_env_loop_03c9:	; ext_env[i + 1] <-- env[i]
  7230 00003DA8 4883FE01                	cmp rsi, 1
  7231 00003DAC 7410                    	je .L_lambda_simple_env_end_03c9
  7232 00003DAE 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7233 00003DB2 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7234 00003DB6 48FFC6                  	inc rsi
  7235 00003DB9 48FFC2                  	inc rdx
  7236 00003DBC EBEA                    	jmp .L_lambda_simple_env_loop_03c9
  7237                                  .L_lambda_simple_env_end_03c9:
  7238 00003DBE 5B                      	pop rbx
  7239 00003DBF BE00000000              	mov rsi, 0
  7240                                  .L_lambda_simple_params_loop_03c9:	; copy params
  7241 00003DC4 4883FE02                	cmp rsi, 2
  7242 00003DC8 740E                    	je .L_lambda_simple_params_end_03c9
  7243 00003DCA 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7244 00003DCF 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7245 00003DD3 48FFC6                  	inc rsi
  7246 00003DD6 EBEC                    	jmp .L_lambda_simple_params_loop_03c9
  7247                                  .L_lambda_simple_params_end_03c9:
  7248 00003DD8 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
  7249 00003DDB 4889C3                  	mov rbx, rax
  7250 00003DDE 58                      	pop rax
  7251 00003DDF C60004                  	mov byte [rax], T_closure
  7252 00003DE2 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7253 00003DE6 48C74009[F33D0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03c9
  7254 00003DEE E919030000              	jmp .L_lambda_simple_end_03c9
  7255                                  .L_lambda_simple_code_03c9:	; lambda-simple body
  7256 00003DF3 48837C241001            	cmp qword [rsp + 8 * 2], 1
  7257 00003DF9 740B                    	je .L_lambda_simple_arity_check_ok_03c9
  7258 00003DFB FF742410                	push qword [rsp + 8 * 2]
  7259 00003DFF 6A01                    	push 1
  7260 00003E01 E999130100              	jmp L_error_incorrect_arity_simple
  7261                                  .L_lambda_simple_arity_check_ok_03c9:
  7262 00003E06 C8000000                	enter 0, 0
  7263                                  
  7264 00003E0A BF08000000              	mov rdi, 8
  7265 00003E0F E8D2130100              	call malloc
  7266 00003E14 488B5D20                	mov rbx, PARAM(0)	; param loop
  7267 00003E18 488918                  	mov [rax], rbx	; box loop
  7268 00003E1B 48894520                	mov PARAM(0), rax	; replace param with box
  7269 00003E1F 48B8-                   	mov rax, sob_void
  7269 00003E21 [0000000000000000] 
  7270                                  
  7271 00003E29 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7272 00003E2E E8B3130100              	call malloc
  7273 00003E33 50                      	push rax
  7274 00003E34 BF08000000              	mov rdi, 8 * 1	; new rib
  7275 00003E39 E8A8130100              	call malloc
  7276 00003E3E 50                      	push rax
  7277 00003E3F BF18000000              	mov rdi, 8 * 3	; extended env
  7278 00003E44 E89D130100              	call malloc
  7279 00003E49 488B7D10                	mov rdi, ENV
  7280 00003E4D BE00000000              	mov rsi, 0
  7281 00003E52 BA01000000              	mov rdx, 1
  7282                                  .L_lambda_simple_env_loop_03ca:	; ext_env[i + 1] <-- env[i]
  7283 00003E57 4883FE02                	cmp rsi, 2
  7284 00003E5B 7410                    	je .L_lambda_simple_env_end_03ca
  7285 00003E5D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7286 00003E61 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7287 00003E65 48FFC6                  	inc rsi
  7288 00003E68 48FFC2                  	inc rdx
  7289 00003E6B EBEA                    	jmp .L_lambda_simple_env_loop_03ca
  7290                                  .L_lambda_simple_env_end_03ca:
  7291 00003E6D 5B                      	pop rbx
  7292 00003E6E BE00000000              	mov rsi, 0
  7293                                  .L_lambda_simple_params_loop_03ca:	; copy params
  7294 00003E73 4883FE01                	cmp rsi, 1
  7295 00003E77 740E                    	je .L_lambda_simple_params_end_03ca
  7296 00003E79 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7297 00003E7E 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7298 00003E82 48FFC6                  	inc rsi
  7299 00003E85 EBEC                    	jmp .L_lambda_simple_params_loop_03ca
  7300                                  .L_lambda_simple_params_end_03ca:
  7301 00003E87 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
  7302 00003E8A 4889C3                  	mov rbx, rax
  7303 00003E8D 58                      	pop rax
  7304 00003E8E C60004                  	mov byte [rax], T_closure
  7305 00003E91 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7306 00003E95 48C74009[A23E0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03ca
  7307 00003E9D E97F010000              	jmp .L_lambda_simple_end_03ca
  7308                                  .L_lambda_simple_code_03ca:	; lambda-simple body
  7309 00003EA2 48837C241001            	cmp qword [rsp + 8 * 2], 1
  7310 00003EA8 740B                    	je .L_lambda_simple_arity_check_ok_03ca
  7311 00003EAA FF742410                	push qword [rsp + 8 * 2]
  7312 00003EAE 6A01                    	push 1
  7313 00003EB0 E9EA120100              	jmp L_error_incorrect_arity_simple
  7314                                  .L_lambda_simple_arity_check_ok_03ca:
  7315 00003EB5 C8000000                	enter 0, 0
  7316                                  	; preparing a non-tail-call
  7317                                  	; preparing a non-tail-call
  7318 00003EB9 488B4520                	mov rax, PARAM(0)	; param s
  7319 00003EBD 50                      	push rax
  7320 00003EBE 6A01                    	push 1	; arg count
  7321 00003EC0 488B0425[74160000]      	mov rax, qword [free_var_54]	; free var car
  7322 00003EC8 803805                  	cmp byte [rax], T_undefined
  7323 00003ECB 0F84E8110100            	je L_error_fvar_undefined
  7324 00003ED1 803804                  	cmp byte [rax], T_closure
  7325 00003ED4 0F8563120100            	jne L_error_non_closure
  7326 00003EDA FF7001                  	push SOB_CLOSURE_ENV(rax)
  7327 00003EDD FF5009                  	call SOB_CLOSURE_CODE(rax)
  7328 00003EE0 50                      	push rax
  7329 00003EE1 6A01                    	push 1	; arg count
  7330 00003EE3 488B0425[3C1B0000]      	mov rax, qword [free_var_126]	; free var null?
  7331 00003EEB 803805                  	cmp byte [rax], T_undefined
  7332 00003EEE 0F84C5110100            	je L_error_fvar_undefined
  7333 00003EF4 803804                  	cmp byte [rax], T_closure
  7334 00003EF7 0F8540120100            	jne L_error_non_closure
  7335 00003EFD FF7001                  	push SOB_CLOSURE_ENV(rax)
  7336 00003F00 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7337 00003F03 483D[02000000]          	cmp rax, sob_boolean_false
  7338 00003F09 0F850E010000            	jne .L_or_end_004a
  7339                                  	; preparing a non-tail-call
  7340                                  	; preparing a non-tail-call
  7341 00003F0F 488B4520                	mov rax, PARAM(0)	; param s
  7342 00003F13 50                      	push rax
  7343 00003F14 488B0425[74160000]      	mov rax, qword [free_var_54]	; free var car
  7344 00003F1C 803805                  	cmp byte [rax], T_undefined
  7345 00003F1F 0F8494110100            	je L_error_fvar_undefined
  7346 00003F25 50                      	push rax
  7347 00003F26 6A02                    	push 2	; arg count
  7348 00003F28 488B0425[F81A0000]      	mov rax, qword [free_var_122]	; free var map
  7349 00003F30 803805                  	cmp byte [rax], T_undefined
  7350 00003F33 0F8480110100            	je L_error_fvar_undefined
  7351 00003F39 803804                  	cmp byte [rax], T_closure
  7352 00003F3C 0F85FB110100            	jne L_error_non_closure
  7353 00003F42 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7354 00003F45 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7355 00003F48 50                      	push rax
  7356 00003F49 488B4510                	mov rax, ENV
  7357 00003F4D 488B4008                	mov rax, qword [rax + 8 * 1]
  7358 00003F51 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var f
  7359 00003F54 50                      	push rax
  7360 00003F55 6A02                    	push 2	; arg count
  7361 00003F57 488B0425[0F150000]      	mov rax, qword [free_var_33]	; free var apply
  7362 00003F5F 803805                  	cmp byte [rax], T_undefined
  7363 00003F62 0F8451110100            	je L_error_fvar_undefined
  7364 00003F68 803804                  	cmp byte [rax], T_closure
  7365 00003F6B 0F85CC110100            	jne L_error_non_closure
  7366 00003F71 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7367 00003F74 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7368 00003F77 483D[02000000]          	cmp rax, sob_boolean_false
  7369 00003F7D 0F8490000000            	je .L_if_else_02b1
  7370                                  	; preparing a tail-call
  7371                                  	; preparing a non-tail-call
  7372 00003F83 488B4520                	mov rax, PARAM(0)	; param s
  7373 00003F87 50                      	push rax
  7374 00003F88 488B0425[73170000]      	mov rax, qword [free_var_69]	; free var cdr
  7375 00003F90 803805                  	cmp byte [rax], T_undefined
  7376 00003F93 0F8420110100            	je L_error_fvar_undefined
  7377 00003F99 50                      	push rax
  7378 00003F9A 6A02                    	push 2	; arg count
  7379 00003F9C 488B0425[F81A0000]      	mov rax, qword [free_var_122]	; free var map
  7380 00003FA4 803805                  	cmp byte [rax], T_undefined
  7381 00003FA7 0F840C110100            	je L_error_fvar_undefined
  7382 00003FAD 803804                  	cmp byte [rax], T_closure
  7383 00003FB0 0F8587110100            	jne L_error_non_closure
  7384 00003FB6 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7385 00003FB9 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7386 00003FBC 50                      	push rax
  7387 00003FBD 6A01                    	push 1	; arg count
  7388 00003FBF 488B4510                	mov rax, ENV
  7389 00003FC3 488B00                  	mov rax, qword [rax + 8 * 0]
  7390 00003FC6 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var loop
  7391 00003FC9 488B00                  	mov rax, qword [rax]
  7392 00003FCC 803804                  	cmp byte [rax], T_closure
  7393 00003FCF 0F8568110100            	jne L_error_non_closure
  7394 00003FD5 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7395                                  
  7396                                  	; recycling the current frame
  7397 00003FD8 FF7508                  	push qword [rbp + 8 * 1]	; old return address
  7398 00003FDB FF7500                  	push qword [rbp]	; old frame-pointer
  7399 00003FDE B905000000              	mov rcx, 5
  7400 00003FE3 488B5D18                	mov rbx, COUNT
  7401 00003FE7 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
  7402 00003FEC 488D55F8                	lea rdx, [rbp - 8]
  7403                                  .L_tc_recycle_frame_loop_04e1:
  7404 00003FF0 4883F900                	cmp rcx, 0
  7405 00003FF4 7413                    	je .L_tc_recycle_frame_done_04e1
  7406 00003FF6 488B32                  	mov rsi, qword [rdx]
  7407 00003FF9 488933                  	mov qword [rbx], rsi
  7408 00003FFC 48FFC9                  	dec rcx
  7409 00003FFF 4883EB08                	sub rbx, 8
  7410 00004003 4883EA08                	sub rdx, 8
  7411 00004007 EBE7                    	jmp .L_tc_recycle_frame_loop_04e1
  7412                                  .L_tc_recycle_frame_done_04e1:
  7413 00004009 488D6308                	lea rsp, [rbx + 8]
  7414 0000400D 5D                      	pop rbp
  7415 0000400E FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  7416 00004011 EB0A                    	jmp .L_if_end_02b1
  7417                                  .L_if_else_02b1:
  7418 00004013 48B8-                   	mov rax, L_constants + 2
  7418 00004015 [0200000000000000] 
  7419                                  .L_if_end_02b1:
  7420                                  .L_or_end_004a:
  7421 0000401D C9                      	leave
  7422 0000401E C21800                  	ret AND_KILL_FRAME(1)
  7423                                  .L_lambda_simple_end_03ca:	; new closure is in rax
  7424                                  
  7425 00004021 50                      	push rax
  7426 00004022 488B4520                	mov rax, PARAM(0)	; param loop
  7427                                  
  7428 00004026 8F00                    	pop qword[rax]
  7429 00004028 48B8-                   	mov rax, sob_void
  7429 0000402A [0000000000000000] 
  7430                                  
  7431                                  	; preparing a non-tail-call
  7432 00004032 488B4510                	mov rax, ENV
  7433 00004036 488B00                  	mov rax, qword [rax + 8 * 0]
  7434 00004039 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var s
  7435 0000403D 50                      	push rax
  7436 0000403E 6A01                    	push 1	; arg count
  7437 00004040 488B0425[3C1B0000]      	mov rax, qword [free_var_126]	; free var null?
  7438 00004048 803805                  	cmp byte [rax], T_undefined
  7439 0000404B 0F8468100100            	je L_error_fvar_undefined
  7440 00004051 803804                  	cmp byte [rax], T_closure
  7441 00004054 0F85E3100100            	jne L_error_non_closure
  7442 0000405A FF7001                  	push SOB_CLOSURE_ENV(rax)
  7443 0000405D FF5009                  	call SOB_CLOSURE_CODE(rax)
  7444 00004060 483D[02000000]          	cmp rax, sob_boolean_false
  7445 00004066 0F859C000000            	jne .L_or_end_004b
  7446                                  	; preparing a non-tail-call
  7447 0000406C 488B4510                	mov rax, ENV
  7448 00004070 488B00                  	mov rax, qword [rax + 8 * 0]
  7449 00004073 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var s
  7450 00004077 50                      	push rax
  7451 00004078 6A01                    	push 1	; arg count
  7452 0000407A 488B0425[911B0000]      	mov rax, qword [free_var_131]	; free var pair?
  7453 00004082 803805                  	cmp byte [rax], T_undefined
  7454 00004085 0F842E100100            	je L_error_fvar_undefined
  7455 0000408B 803804                  	cmp byte [rax], T_closure
  7456 0000408E 0F85A9100100            	jne L_error_non_closure
  7457 00004094 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7458 00004097 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7459 0000409A 483D[02000000]          	cmp rax, sob_boolean_false
  7460 000040A0 745C                    	je .L_if_else_02b2
  7461                                  	; preparing a tail-call
  7462 000040A2 488B4510                	mov rax, ENV
  7463 000040A6 488B00                  	mov rax, qword [rax + 8 * 0]
  7464 000040A9 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var s
  7465 000040AD 50                      	push rax
  7466 000040AE 6A01                    	push 1	; arg count
  7467 000040B0 488B4520                	mov rax, PARAM(0)	; param loop
  7468 000040B4 488B00                  	mov rax, qword [rax]
  7469 000040B7 803804                  	cmp byte [rax], T_closure
  7470 000040BA 0F857D100100            	jne L_error_non_closure
  7471 000040C0 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7472                                  
  7473                                  	; recycling the current frame
  7474 000040C3 FF7508                  	push qword [rbp + 8 * 1]	; old return address
  7475 000040C6 FF7500                  	push qword [rbp]	; old frame-pointer
  7476 000040C9 B905000000              	mov rcx, 5
  7477 000040CE 488B5D18                	mov rbx, COUNT
  7478 000040D2 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
  7479 000040D7 488D55F8                	lea rdx, [rbp - 8]
  7480                                  .L_tc_recycle_frame_loop_04e2:
  7481 000040DB 4883F900                	cmp rcx, 0
  7482 000040DF 7413                    	je .L_tc_recycle_frame_done_04e2
  7483 000040E1 488B32                  	mov rsi, qword [rdx]
  7484 000040E4 488933                  	mov qword [rbx], rsi
  7485 000040E7 48FFC9                  	dec rcx
  7486 000040EA 4883EB08                	sub rbx, 8
  7487 000040EE 4883EA08                	sub rdx, 8
  7488 000040F2 EBE7                    	jmp .L_tc_recycle_frame_loop_04e2
  7489                                  .L_tc_recycle_frame_done_04e2:
  7490 000040F4 488D6308                	lea rsp, [rbx + 8]
  7491 000040F8 5D                      	pop rbp
  7492 000040F9 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  7493 000040FC EB0A                    	jmp .L_if_end_02b2
  7494                                  .L_if_else_02b2:
  7495 000040FE 48B8-                   	mov rax, L_constants + 2
  7495 00004100 [0200000000000000] 
  7496                                  .L_if_end_02b2:
  7497                                  .L_or_end_004b:
  7498 00004108 C9                      	leave
  7499 00004109 C21800                  	ret AND_KILL_FRAME(1)
  7500                                  .L_lambda_simple_end_03c9:	; new closure is in rax
  7501 0000410C 803804                  	cmp byte [rax], T_closure
  7502 0000410F 0F8528100100            	jne L_error_non_closure
  7503 00004115 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7504                                  
  7505                                  	; recycling the current frame
  7506 00004118 FF7508                  	push qword [rbp + 8 * 1]	; old return address
  7507 0000411B FF7500                  	push qword [rbp]	; old frame-pointer
  7508 0000411E B905000000              	mov rcx, 5
  7509 00004123 488B5D18                	mov rbx, COUNT
  7510 00004127 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
  7511 0000412C 488D55F8                	lea rdx, [rbp - 8]
  7512                                  .L_tc_recycle_frame_loop_04e3:
  7513 00004130 4883F900                	cmp rcx, 0
  7514 00004134 7413                    	je .L_tc_recycle_frame_done_04e3
  7515 00004136 488B32                  	mov rsi, qword [rdx]
  7516 00004139 488933                  	mov qword [rbx], rsi
  7517 0000413C 48FFC9                  	dec rcx
  7518 0000413F 4883EB08                	sub rbx, 8
  7519 00004143 4883EA08                	sub rdx, 8
  7520 00004147 EBE7                    	jmp .L_tc_recycle_frame_loop_04e3
  7521                                  .L_tc_recycle_frame_done_04e3:
  7522 00004149 488D6308                	lea rsp, [rbx + 8]
  7523 0000414D 5D                      	pop rbp
  7524 0000414E FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  7525 00004151 C9                      	leave
  7526 00004152 C22000                  	ret AND_KILL_FRAME(2)
  7527                                  .L_lambda_opt_end_007e:	; new closure is in rax
  7528 00004155 48890425[ED140000]      	mov qword [free_var_31], rax
  7529 0000415D 48B8-                   	mov rax, sob_void
  7529 0000415F [0000000000000000] 
  7530                                  
  7531 00004167 4889C7                  	mov rdi, rax
  7532 0000416A E8CC120100              	call print_sexpr_if_not_void
  7533                                  
  7534                                  	; preparing a non-tail-call
  7535 0000416F 48B8-                   	mov rax, L_constants + 2335
  7535 00004171 [1F09000000000000] 
  7536 00004179 50                      	push rax
  7537 0000417A 48B8-                   	mov rax, L_constants + 2335
  7537 0000417C [1F09000000000000] 
  7538 00004184 50                      	push rax
  7539 00004185 6A02                    	push 2	; arg count
  7540 00004187 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7541 0000418C E855100100              	call malloc
  7542 00004191 50                      	push rax
  7543 00004192 BF00000000              	mov rdi, 8 * 0	; new rib
  7544 00004197 E84A100100              	call malloc
  7545 0000419C 50                      	push rax
  7546 0000419D BF08000000              	mov rdi, 8 * 1	; extended env
  7547 000041A2 E83F100100              	call malloc
  7548 000041A7 488B7D10                	mov rdi, ENV
  7549 000041AB BE00000000              	mov rsi, 0
  7550 000041B0 BA01000000              	mov rdx, 1
  7551                                  .L_lambda_simple_env_loop_03cb:	; ext_env[i + 1] <-- env[i]
  7552 000041B5 4883FE00                	cmp rsi, 0
  7553 000041B9 7410                    	je .L_lambda_simple_env_end_03cb
  7554 000041BB 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7555 000041BF 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7556 000041C3 48FFC6                  	inc rsi
  7557 000041C6 48FFC2                  	inc rdx
  7558 000041C9 EBEA                    	jmp .L_lambda_simple_env_loop_03cb
  7559                                  .L_lambda_simple_env_end_03cb:
  7560 000041CB 5B                      	pop rbx
  7561 000041CC BE00000000              	mov rsi, 0
  7562                                  .L_lambda_simple_params_loop_03cb:	; copy params
  7563 000041D1 4883FE00                	cmp rsi, 0
  7564 000041D5 740E                    	je .L_lambda_simple_params_end_03cb
  7565 000041D7 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7566 000041DC 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7567 000041E0 48FFC6                  	inc rsi
  7568 000041E3 EBEC                    	jmp .L_lambda_simple_params_loop_03cb
  7569                                  .L_lambda_simple_params_end_03cb:
  7570 000041E5 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
  7571 000041E8 4889C3                  	mov rbx, rax
  7572 000041EB 58                      	pop rax
  7573 000041EC C60004                  	mov byte [rax], T_closure
  7574 000041EF 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7575 000041F3 48C74009[00420000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03cb
  7576 000041FB E923060000              	jmp .L_lambda_simple_end_03cb
  7577                                  .L_lambda_simple_code_03cb:	; lambda-simple body
  7578 00004200 48837C241002            	cmp qword [rsp + 8 * 2], 2
  7579 00004206 740B                    	je .L_lambda_simple_arity_check_ok_03cb
  7580 00004208 FF742410                	push qword [rsp + 8 * 2]
  7581 0000420C 6A02                    	push 2
  7582 0000420E E98C0F0100              	jmp L_error_incorrect_arity_simple
  7583                                  .L_lambda_simple_arity_check_ok_03cb:
  7584 00004213 C8000000                	enter 0, 0
  7585                                  
  7586 00004217 BF08000000              	mov rdi, 8
  7587 0000421C E8C50F0100              	call malloc
  7588 00004221 488B5D20                	mov rbx, PARAM(0)	; param map1
  7589 00004225 488918                  	mov [rax], rbx	; box map1
  7590 00004228 48894520                	mov PARAM(0), rax	; replace param with box
  7591 0000422C 48B8-                   	mov rax, sob_void
  7591 0000422E [0000000000000000] 
  7592                                  
  7593                                  
  7594 00004236 BF08000000              	mov rdi, 8
  7595 0000423B E8A60F0100              	call malloc
  7596 00004240 488B5D28                	mov rbx, PARAM(1)	; param map-list
  7597 00004244 488918                  	mov [rax], rbx	; box map-list
  7598 00004247 48894528                	mov PARAM(1), rax	; replace param with box
  7599 0000424B 48B8-                   	mov rax, sob_void
  7599 0000424D [0000000000000000] 
  7600                                  
  7601 00004255 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7602 0000425A E8870F0100              	call malloc
  7603 0000425F 50                      	push rax
  7604 00004260 BF10000000              	mov rdi, 8 * 2	; new rib
  7605 00004265 E87C0F0100              	call malloc
  7606 0000426A 50                      	push rax
  7607 0000426B BF10000000              	mov rdi, 8 * 2	; extended env
  7608 00004270 E8710F0100              	call malloc
  7609 00004275 488B7D10                	mov rdi, ENV
  7610 00004279 BE00000000              	mov rsi, 0
  7611 0000427E BA01000000              	mov rdx, 1
  7612                                  .L_lambda_simple_env_loop_03cc:	; ext_env[i + 1] <-- env[i]
  7613 00004283 4883FE01                	cmp rsi, 1
  7614 00004287 7410                    	je .L_lambda_simple_env_end_03cc
  7615 00004289 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7616 0000428D 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7617 00004291 48FFC6                  	inc rsi
  7618 00004294 48FFC2                  	inc rdx
  7619 00004297 EBEA                    	jmp .L_lambda_simple_env_loop_03cc
  7620                                  .L_lambda_simple_env_end_03cc:
  7621 00004299 5B                      	pop rbx
  7622 0000429A BE00000000              	mov rsi, 0
  7623                                  .L_lambda_simple_params_loop_03cc:	; copy params
  7624 0000429F 4883FE02                	cmp rsi, 2
  7625 000042A3 740E                    	je .L_lambda_simple_params_end_03cc
  7626 000042A5 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7627 000042AA 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7628 000042AE 48FFC6                  	inc rsi
  7629 000042B1 EBEC                    	jmp .L_lambda_simple_params_loop_03cc
  7630                                  .L_lambda_simple_params_end_03cc:
  7631 000042B3 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
  7632 000042B6 4889C3                  	mov rbx, rax
  7633 000042B9 58                      	pop rax
  7634 000042BA C60004                  	mov byte [rax], T_closure
  7635 000042BD 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7636 000042C1 48C74009[CE420000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03cc
  7637 000042C9 E93B010000              	jmp .L_lambda_simple_end_03cc
  7638                                  .L_lambda_simple_code_03cc:	; lambda-simple body
  7639 000042CE 48837C241002            	cmp qword [rsp + 8 * 2], 2
  7640 000042D4 740B                    	je .L_lambda_simple_arity_check_ok_03cc
  7641 000042D6 FF742410                	push qword [rsp + 8 * 2]
  7642 000042DA 6A02                    	push 2
  7643 000042DC E9BE0E0100              	jmp L_error_incorrect_arity_simple
  7644                                  .L_lambda_simple_arity_check_ok_03cc:
  7645 000042E1 C8000000                	enter 0, 0
  7646                                  	; preparing a non-tail-call
  7647 000042E5 488B4528                	mov rax, PARAM(1)	; param s
  7648 000042E9 50                      	push rax
  7649 000042EA 6A01                    	push 1	; arg count
  7650 000042EC 488B0425[3C1B0000]      	mov rax, qword [free_var_126]	; free var null?
  7651 000042F4 803805                  	cmp byte [rax], T_undefined
  7652 000042F7 0F84BC0D0100            	je L_error_fvar_undefined
  7653 000042FD 803804                  	cmp byte [rax], T_closure
  7654 00004300 0F85370E0100            	jne L_error_non_closure
  7655 00004306 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7656 00004309 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7657 0000430C 483D[02000000]          	cmp rax, sob_boolean_false
  7658 00004312 740F                    	je .L_if_else_02b3
  7659 00004314 48B8-                   	mov rax, L_constants + 1
  7659 00004316 [0100000000000000] 
  7660 0000431E E9E2000000              	jmp .L_if_end_02b3
  7661                                  .L_if_else_02b3:
  7662                                  	; preparing a tail-call
  7663                                  	; preparing a non-tail-call
  7664                                  	; preparing a non-tail-call
  7665 00004323 488B4528                	mov rax, PARAM(1)	; param s
  7666 00004327 50                      	push rax
  7667 00004328 6A01                    	push 1	; arg count
  7668 0000432A 488B0425[73170000]      	mov rax, qword [free_var_69]	; free var cdr
  7669 00004332 803805                  	cmp byte [rax], T_undefined
  7670 00004335 0F847E0D0100            	je L_error_fvar_undefined
  7671 0000433B 803804                  	cmp byte [rax], T_closure
  7672 0000433E 0F85F90D0100            	jne L_error_non_closure
  7673 00004344 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7674 00004347 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7675 0000434A 50                      	push rax
  7676 0000434B 488B4520                	mov rax, PARAM(0)	; param f
  7677 0000434F 50                      	push rax
  7678 00004350 6A02                    	push 2	; arg count
  7679 00004352 488B4510                	mov rax, ENV
  7680 00004356 488B00                  	mov rax, qword [rax + 8 * 0]
  7681 00004359 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var map1
  7682 0000435C 488B00                  	mov rax, qword [rax]
  7683 0000435F 803804                  	cmp byte [rax], T_closure
  7684 00004362 0F85D50D0100            	jne L_error_non_closure
  7685 00004368 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7686 0000436B FF5009                  	call SOB_CLOSURE_CODE(rax)
  7687 0000436E 50                      	push rax
  7688                                  	; preparing a non-tail-call
  7689                                  	; preparing a non-tail-call
  7690 0000436F 488B4528                	mov rax, PARAM(1)	; param s
  7691 00004373 50                      	push rax
  7692 00004374 6A01                    	push 1	; arg count
  7693 00004376 488B0425[74160000]      	mov rax, qword [free_var_54]	; free var car
  7694 0000437E 803805                  	cmp byte [rax], T_undefined
  7695 00004381 0F84320D0100            	je L_error_fvar_undefined
  7696 00004387 803804                  	cmp byte [rax], T_closure
  7697 0000438A 0F85AD0D0100            	jne L_error_non_closure
  7698 00004390 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7699 00004393 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7700 00004396 50                      	push rax
  7701 00004397 6A01                    	push 1	; arg count
  7702 00004399 488B4520                	mov rax, PARAM(0)	; param f
  7703 0000439D 803804                  	cmp byte [rax], T_closure
  7704 000043A0 0F85970D0100            	jne L_error_non_closure
  7705 000043A6 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7706 000043A9 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7707 000043AC 50                      	push rax
  7708 000043AD 6A02                    	push 2	; arg count
  7709 000043AF 488B0425[83180000]      	mov rax, qword [free_var_85]	; free var cons
  7710 000043B7 803805                  	cmp byte [rax], T_undefined
  7711 000043BA 0F84F90C0100            	je L_error_fvar_undefined
  7712 000043C0 803804                  	cmp byte [rax], T_closure
  7713 000043C3 0F85740D0100            	jne L_error_non_closure
  7714 000043C9 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7715                                  
  7716                                  	; recycling the current frame
  7717 000043CC FF7508                  	push qword [rbp + 8 * 1]	; old return address
  7718 000043CF FF7500                  	push qword [rbp]	; old frame-pointer
  7719 000043D2 B906000000              	mov rcx, 6
  7720 000043D7 488B5D18                	mov rbx, COUNT
  7721 000043DB 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
  7722 000043E0 488D55F8                	lea rdx, [rbp - 8]
  7723                                  .L_tc_recycle_frame_loop_04e4:
  7724 000043E4 4883F900                	cmp rcx, 0
  7725 000043E8 7413                    	je .L_tc_recycle_frame_done_04e4
  7726 000043EA 488B32                  	mov rsi, qword [rdx]
  7727 000043ED 488933                  	mov qword [rbx], rsi
  7728 000043F0 48FFC9                  	dec rcx
  7729 000043F3 4883EB08                	sub rbx, 8
  7730 000043F7 4883EA08                	sub rdx, 8
  7731 000043FB EBE7                    	jmp .L_tc_recycle_frame_loop_04e4
  7732                                  .L_tc_recycle_frame_done_04e4:
  7733 000043FD 488D6308                	lea rsp, [rbx + 8]
  7734 00004401 5D                      	pop rbp
  7735 00004402 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  7736                                  .L_if_end_02b3:
  7737 00004405 C9                      	leave
  7738 00004406 C22000                  	ret AND_KILL_FRAME(2)
  7739                                  .L_lambda_simple_end_03cc:	; new closure is in rax
  7740                                  
  7741 00004409 50                      	push rax
  7742 0000440A 488B4520                	mov rax, PARAM(0)	; param map1
  7743                                  
  7744 0000440E 8F00                    	pop qword[rax]
  7745 00004410 48B8-                   	mov rax, sob_void
  7745 00004412 [0000000000000000] 
  7746                                  
  7747 0000441A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7748 0000441F E8C20D0100              	call malloc
  7749 00004424 50                      	push rax
  7750 00004425 BF10000000              	mov rdi, 8 * 2	; new rib
  7751 0000442A E8B70D0100              	call malloc
  7752 0000442F 50                      	push rax
  7753 00004430 BF10000000              	mov rdi, 8 * 2	; extended env
  7754 00004435 E8AC0D0100              	call malloc
  7755 0000443A 488B7D10                	mov rdi, ENV
  7756 0000443E BE00000000              	mov rsi, 0
  7757 00004443 BA01000000              	mov rdx, 1
  7758                                  .L_lambda_simple_env_loop_03cd:	; ext_env[i + 1] <-- env[i]
  7759 00004448 4883FE01                	cmp rsi, 1
  7760 0000444C 7410                    	je .L_lambda_simple_env_end_03cd
  7761 0000444E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7762 00004452 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7763 00004456 48FFC6                  	inc rsi
  7764 00004459 48FFC2                  	inc rdx
  7765 0000445C EBEA                    	jmp .L_lambda_simple_env_loop_03cd
  7766                                  .L_lambda_simple_env_end_03cd:
  7767 0000445E 5B                      	pop rbx
  7768 0000445F BE00000000              	mov rsi, 0
  7769                                  .L_lambda_simple_params_loop_03cd:	; copy params
  7770 00004464 4883FE02                	cmp rsi, 2
  7771 00004468 740E                    	je .L_lambda_simple_params_end_03cd
  7772 0000446A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7773 0000446F 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7774 00004473 48FFC6                  	inc rsi
  7775 00004476 EBEC                    	jmp .L_lambda_simple_params_loop_03cd
  7776                                  .L_lambda_simple_params_end_03cd:
  7777 00004478 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
  7778 0000447B 4889C3                  	mov rbx, rax
  7779 0000447E 58                      	pop rax
  7780 0000447F C60004                  	mov byte [rax], T_closure
  7781 00004482 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7782 00004486 48C74009[93440000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03cd
  7783 0000448E E98D010000              	jmp .L_lambda_simple_end_03cd
  7784                                  .L_lambda_simple_code_03cd:	; lambda-simple body
  7785 00004493 48837C241002            	cmp qword [rsp + 8 * 2], 2
  7786 00004499 740B                    	je .L_lambda_simple_arity_check_ok_03cd
  7787 0000449B FF742410                	push qword [rsp + 8 * 2]
  7788 0000449F 6A02                    	push 2
  7789 000044A1 E9F90C0100              	jmp L_error_incorrect_arity_simple
  7790                                  .L_lambda_simple_arity_check_ok_03cd:
  7791 000044A6 C8000000                	enter 0, 0
  7792                                  	; preparing a non-tail-call
  7793                                  	; preparing a non-tail-call
  7794 000044AA 488B4528                	mov rax, PARAM(1)	; param s
  7795 000044AE 50                      	push rax
  7796 000044AF 6A01                    	push 1	; arg count
  7797 000044B1 488B0425[74160000]      	mov rax, qword [free_var_54]	; free var car
  7798 000044B9 803805                  	cmp byte [rax], T_undefined
  7799 000044BC 0F84F70B0100            	je L_error_fvar_undefined
  7800 000044C2 803804                  	cmp byte [rax], T_closure
  7801 000044C5 0F85720C0100            	jne L_error_non_closure
  7802 000044CB FF7001                  	push SOB_CLOSURE_ENV(rax)
  7803 000044CE FF5009                  	call SOB_CLOSURE_CODE(rax)
  7804 000044D1 50                      	push rax
  7805 000044D2 6A01                    	push 1	; arg count
  7806 000044D4 488B0425[3C1B0000]      	mov rax, qword [free_var_126]	; free var null?
  7807 000044DC 803805                  	cmp byte [rax], T_undefined
  7808 000044DF 0F84D40B0100            	je L_error_fvar_undefined
  7809 000044E5 803804                  	cmp byte [rax], T_closure
  7810 000044E8 0F854F0C0100            	jne L_error_non_closure
  7811 000044EE FF7001                  	push SOB_CLOSURE_ENV(rax)
  7812 000044F1 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7813 000044F4 483D[02000000]          	cmp rax, sob_boolean_false
  7814 000044FA 740F                    	je .L_if_else_02b4
  7815 000044FC 48B8-                   	mov rax, L_constants + 1
  7815 000044FE [0100000000000000] 
  7816 00004506 E911010000              	jmp .L_if_end_02b4
  7817                                  .L_if_else_02b4:
  7818                                  	; preparing a tail-call
  7819                                  	; preparing a non-tail-call
  7820                                  	; preparing a non-tail-call
  7821 0000450B 488B4528                	mov rax, PARAM(1)	; param s
  7822 0000450F 50                      	push rax
  7823 00004510 488B0425[73170000]      	mov rax, qword [free_var_69]	; free var cdr
  7824 00004518 803805                  	cmp byte [rax], T_undefined
  7825 0000451B 0F84980B0100            	je L_error_fvar_undefined
  7826 00004521 50                      	push rax
  7827 00004522 6A02                    	push 2	; arg count
  7828 00004524 488B4510                	mov rax, ENV
  7829 00004528 488B00                  	mov rax, qword [rax + 8 * 0]
  7830 0000452B 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var map1
  7831 0000452E 488B00                  	mov rax, qword [rax]
  7832 00004531 803804                  	cmp byte [rax], T_closure
  7833 00004534 0F85030C0100            	jne L_error_non_closure
  7834 0000453A FF7001                  	push SOB_CLOSURE_ENV(rax)
  7835 0000453D FF5009                  	call SOB_CLOSURE_CODE(rax)
  7836 00004540 50                      	push rax
  7837 00004541 488B4520                	mov rax, PARAM(0)	; param f
  7838 00004545 50                      	push rax
  7839 00004546 6A02                    	push 2	; arg count
  7840 00004548 488B4510                	mov rax, ENV
  7841 0000454C 488B00                  	mov rax, qword [rax + 8 * 0]
  7842 0000454F 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var map-list
  7843 00004553 488B00                  	mov rax, qword [rax]
  7844 00004556 803804                  	cmp byte [rax], T_closure
  7845 00004559 0F85DE0B0100            	jne L_error_non_closure
  7846 0000455F FF7001                  	push SOB_CLOSURE_ENV(rax)
  7847 00004562 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7848 00004565 50                      	push rax
  7849                                  	; preparing a non-tail-call
  7850                                  	; preparing a non-tail-call
  7851 00004566 488B4528                	mov rax, PARAM(1)	; param s
  7852 0000456A 50                      	push rax
  7853 0000456B 488B0425[74160000]      	mov rax, qword [free_var_54]	; free var car
  7854 00004573 803805                  	cmp byte [rax], T_undefined
  7855 00004576 0F843D0B0100            	je L_error_fvar_undefined
  7856 0000457C 50                      	push rax
  7857 0000457D 6A02                    	push 2	; arg count
  7858 0000457F 488B4510                	mov rax, ENV
  7859 00004583 488B00                  	mov rax, qword [rax + 8 * 0]
  7860 00004586 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var map1
  7861 00004589 488B00                  	mov rax, qword [rax]
  7862 0000458C 803804                  	cmp byte [rax], T_closure
  7863 0000458F 0F85A80B0100            	jne L_error_non_closure
  7864 00004595 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7865 00004598 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7866 0000459B 50                      	push rax
  7867 0000459C 488B4520                	mov rax, PARAM(0)	; param f
  7868 000045A0 50                      	push rax
  7869 000045A1 6A02                    	push 2	; arg count
  7870 000045A3 488B0425[0F150000]      	mov rax, qword [free_var_33]	; free var apply
  7871 000045AB 803805                  	cmp byte [rax], T_undefined
  7872 000045AE 0F84050B0100            	je L_error_fvar_undefined
  7873 000045B4 803804                  	cmp byte [rax], T_closure
  7874 000045B7 0F85800B0100            	jne L_error_non_closure
  7875 000045BD FF7001                  	push SOB_CLOSURE_ENV(rax)
  7876 000045C0 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7877 000045C3 50                      	push rax
  7878 000045C4 6A02                    	push 2	; arg count
  7879 000045C6 488B0425[83180000]      	mov rax, qword [free_var_85]	; free var cons
  7880 000045CE 803805                  	cmp byte [rax], T_undefined
  7881 000045D1 0F84E20A0100            	je L_error_fvar_undefined
  7882 000045D7 803804                  	cmp byte [rax], T_closure
  7883 000045DA 0F855D0B0100            	jne L_error_non_closure
  7884 000045E0 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7885                                  
  7886                                  	; recycling the current frame
  7887 000045E3 FF7508                  	push qword [rbp + 8 * 1]	; old return address
  7888 000045E6 FF7500                  	push qword [rbp]	; old frame-pointer
  7889 000045E9 B906000000              	mov rcx, 6
  7890 000045EE 488B5D18                	mov rbx, COUNT
  7891 000045F2 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
  7892 000045F7 488D55F8                	lea rdx, [rbp - 8]
  7893                                  .L_tc_recycle_frame_loop_04e5:
  7894 000045FB 4883F900                	cmp rcx, 0
  7895 000045FF 7413                    	je .L_tc_recycle_frame_done_04e5
  7896 00004601 488B32                  	mov rsi, qword [rdx]
  7897 00004604 488933                  	mov qword [rbx], rsi
  7898 00004607 48FFC9                  	dec rcx
  7899 0000460A 4883EB08                	sub rbx, 8
  7900 0000460E 4883EA08                	sub rdx, 8
  7901 00004612 EBE7                    	jmp .L_tc_recycle_frame_loop_04e5
  7902                                  .L_tc_recycle_frame_done_04e5:
  7903 00004614 488D6308                	lea rsp, [rbx + 8]
  7904 00004618 5D                      	pop rbp
  7905 00004619 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  7906                                  .L_if_end_02b4:
  7907 0000461C C9                      	leave
  7908 0000461D C22000                  	ret AND_KILL_FRAME(2)
  7909                                  .L_lambda_simple_end_03cd:	; new closure is in rax
  7910                                  
  7911 00004620 50                      	push rax
  7912 00004621 488B4528                	mov rax, PARAM(1)	; param map-list
  7913                                  
  7914 00004625 8F00                    	pop qword[rax]
  7915 00004627 48B8-                   	mov rax, sob_void
  7915 00004629 [0000000000000000] 
  7916                                  
  7917 00004631 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7918 00004636 E8AB0B0100              	call malloc
  7919 0000463B 50                      	push rax
  7920 0000463C BF10000000              	mov rdi, 8 * 2	; new rib
  7921 00004641 E8A00B0100              	call malloc
  7922 00004646 50                      	push rax
  7923 00004647 BF10000000              	mov rdi, 8 * 2	; extended env
  7924 0000464C E8950B0100              	call malloc
  7925 00004651 488B7D10                	mov rdi, ENV
  7926 00004655 BE00000000              	mov rsi, 0
  7927 0000465A BA01000000              	mov rdx, 1
  7928                                  .L_lambda_opt_env_loop_007f:	; ext_env[i + 1] <-- env[i]
  7929 0000465F 4883FE01                	cmp rsi, 1
  7930 00004663 7410                    	je .L_lambda_opt_env_end_007f
  7931 00004665 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7932 00004669 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7933 0000466D 48FFC6                  	inc rsi
  7934 00004670 48FFC2                  	inc rdx
  7935 00004673 EBEA                    	jmp .L_lambda_opt_env_loop_007f
  7936                                  .L_lambda_opt_env_end_007f:
  7937 00004675 5B                      	pop rbx
  7938 00004676 BE00000000              	mov rsi, 0
  7939                                  .L_lambda_opt_params_loop_007f:	; copy params
  7940 0000467B 4883FE02                	cmp rsi, 2
  7941 0000467F 740E                    	je .L_lambda_opt_params_end_007f
  7942 00004681 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7943 00004686 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7944 0000468A 48FFC6                  	inc rsi
  7945 0000468D EBEC                    	jmp .L_lambda_opt_params_loop_007f
  7946                                  .L_lambda_opt_params_end_007f:
  7947 0000468F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
  7948 00004692 4889C3                  	mov rbx, rax
  7949 00004695 58                      	pop rax
  7950 00004696 C60004                  	mov byte [rax], T_closure
  7951 00004699 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7952 0000469D 48C74009[AA460000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_007f
  7953 000046A5 E975010000              	jmp .L_lambda_opt_end_007f
  7954                                  .L_lambda_opt_code_007f:	; lambda-simple body
  7955 000046AA 48837C241001            	cmp qword [rsp + 8 * 2], 1 ;	 check num of args
  7956 000046B0 740D                    	je .L_lambda_opt_arity_check_exact_007f ;	 if equal, go to exact arity
  7957 000046B2 7F42                    	jg .L_lambda_opt_arity_check_more_007f ;	 if greater than, go to arity more
  7958 000046B4 FF742410                	push qword [rsp + 8 * 2] ;	 else, throw opt arity error
  7959 000046B8 6A01                    	push 1
  7960 000046BA E9F40A0100              	jmp L_error_incorrect_arity_opt
  7961                                  .L_lambda_opt_arity_check_exact_007f:
  7962 000046BF 488B442410              	mov rax, qword [rsp + 8 * 2] ;	 number of args
  7963 000046C4 488D5CC410              	lea rbx, [rsp + 8 * (2 + rax)] ;	 address of last element
  7964 000046C9 4883EC08                	sub rsp, 8
  7965 000046CD 488D0C24                	lea rcx, [rsp + 0] ;	 new start
  7966                                  .L_lambda_opt_shift_entry_007f:
  7967 000046D1 488B5108                	mov rdx, [rcx + 8]
  7968 000046D5 488911                  	mov [rcx], rdx
  7969 000046D8 4883C108                	add rcx, 8
  7970 000046DC 4839CB                  	cmp rbx, rcx
  7971 000046DF 75F0                    	jne .L_lambda_opt_shift_entry_007f
  7972                                  .L_lambda_opt_shift_exit_007f:
  7973 000046E1 48C703[01000000]        	mov qword[rbx], sob_nil ;	 place nil
  7974 000046E8 4883C001                	add rax, 1
  7975 000046EC 4889442410              	mov qword [rsp + 8 * 2], rax
  7976 000046F1 E987000000              	jmp .L_lambda_opt_stack_adjusted_007f
  7977                                  .L_lambda_opt_arity_check_more_007f:
  7978 000046F6 48BA-                   	mov rdx, sob_nil ;	 base cdr
  7978 000046F8 [0100000000000000] 
  7979 00004700 48837C241002            	cmp qword [rsp + 8 * 2], 2
  7980 00004706 7451                    	je .L_lambda_opt_stack_shrink_loop_exit_007f
  7981                                  .L_lambda_opt_stack_shrink_loop_007f:
  7982 00004708 BF11000000              	mov rdi, (1 + 8 + 8)
  7983 0000470D E8D40A0100              	call malloc
  7984 00004712 C60021                  	mov byte[rax], T_pair
  7985 00004715 48895009                	mov SOB_PAIR_CDR(rax), rdx
  7986 00004719 4889C2                  	mov rdx, rax
  7987 0000471C 488B442410              	mov rax, qword [rsp + 8 * 2]
  7988 00004721 488B5CC410              	mov rbx, qword [rsp + 8 * (2 + rax)]
  7989 00004726 48895A01                	mov SOB_PAIR_CAR(rdx), rbx
  7990 0000472A 488D5CC408              	lea rbx, [rsp + 8 * (2 + rax - 1)]
  7991                                  .L_lambda_opt_extra_shift_process_007f:
  7992 0000472F 488B0B                  	mov rcx, [rbx]
  7993 00004732 48894B08                	mov [rbx + 8], rcx
  7994 00004736 4883EB08                	sub rbx, 8
  7995 0000473A 4839DC                  	cmp rsp, rbx
  7996 0000473D 7EF0                    	jle .L_lambda_opt_extra_shift_process_007f
  7997                                  .L_lambda_opt_extra_shift_process_end_007f:
  7998 0000473F 4883C408                	add rsp, 8
  7999 00004743 488B5C2410              	mov rbx, [rsp + 8 * 2]
  8000 00004748 4883EB01                	sub rbx, 1
  8001 0000474C 48895C2410              	mov [rsp + 8 * 2], rbx
  8002 00004751 48837C241002            	cmp qword [rsp + 8 * 2], 2
  8003 00004757 7FAF                    	jg .L_lambda_opt_stack_shrink_loop_007f
  8004                                  .L_lambda_opt_stack_shrink_loop_exit_007f:
  8005 00004759 488B4C2410              	mov rcx, [rsp + 8 * 2]
  8006 0000475E 488B5CCC10              	mov rbx, qword [rsp + 8 * (2 + rcx)]
  8007 00004763 BF11000000              	mov rdi, (1 + 8 + 8)
  8008 00004768 E8790A0100              	call malloc
  8009 0000476D C60021                  	mov byte[rax], T_pair
  8010 00004770 48895009                	mov SOB_PAIR_CDR(rax), rdx
  8011 00004774 48895801                	mov SOB_PAIR_CAR(rax), rbx
  8012 00004778 488944CC10              	mov [rsp + 8 * (2 + rcx)], rax
  8013                                  .L_lambda_opt_stack_adjusted_007f:
  8014 0000477D C8000000                	enter 0, 0
  8015                                  	; preparing a non-tail-call
  8016 00004781 488B4528                	mov rax, PARAM(1)	; param s
  8017 00004785 50                      	push rax
  8018 00004786 6A01                    	push 1	; arg count
  8019 00004788 488B0425[3C1B0000]      	mov rax, qword [free_var_126]	; free var null?
  8020 00004790 803805                  	cmp byte [rax], T_undefined
  8021 00004793 0F8420090100            	je L_error_fvar_undefined
  8022 00004799 803804                  	cmp byte [rax], T_closure
  8023 0000479C 0F859B090100            	jne L_error_non_closure
  8024 000047A2 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8025 000047A5 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8026 000047A8 483D[02000000]          	cmp rax, sob_boolean_false
  8027 000047AE 740C                    	je .L_if_else_02b5
  8028 000047B0 48B8-                   	mov rax, L_constants + 1
  8028 000047B2 [0100000000000000] 
  8029 000047BA EB5F                    	jmp .L_if_end_02b5
  8030                                  .L_if_else_02b5:
  8031                                  	; preparing a tail-call
  8032 000047BC 488B4528                	mov rax, PARAM(1)	; param s
  8033 000047C0 50                      	push rax
  8034 000047C1 488B4520                	mov rax, PARAM(0)	; param f
  8035 000047C5 50                      	push rax
  8036 000047C6 6A02                    	push 2	; arg count
  8037 000047C8 488B4510                	mov rax, ENV
  8038 000047CC 488B00                  	mov rax, qword [rax + 8 * 0]
  8039 000047CF 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var map-list
  8040 000047D3 488B00                  	mov rax, qword [rax]
  8041 000047D6 803804                  	cmp byte [rax], T_closure
  8042 000047D9 0F855E090100            	jne L_error_non_closure
  8043 000047DF FF7001                  	push SOB_CLOSURE_ENV(rax)
  8044                                  
  8045                                  	; recycling the current frame
  8046 000047E2 FF7508                  	push qword [rbp + 8 * 1]	; old return address
  8047 000047E5 FF7500                  	push qword [rbp]	; old frame-pointer
  8048 000047E8 B906000000              	mov rcx, 6
  8049 000047ED 488B5D18                	mov rbx, COUNT
  8050 000047F1 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
  8051 000047F6 488D55F8                	lea rdx, [rbp - 8]
  8052                                  .L_tc_recycle_frame_loop_04e6:
  8053 000047FA 4883F900                	cmp rcx, 0
  8054 000047FE 7413                    	je .L_tc_recycle_frame_done_04e6
  8055 00004800 488B32                  	mov rsi, qword [rdx]
  8056 00004803 488933                  	mov qword [rbx], rsi
  8057 00004806 48FFC9                  	dec rcx
  8058 00004809 4883EB08                	sub rbx, 8
  8059 0000480D 4883EA08                	sub rdx, 8
  8060 00004811 EBE7                    	jmp .L_tc_recycle_frame_loop_04e6
  8061                                  .L_tc_recycle_frame_done_04e6:
  8062 00004813 488D6308                	lea rsp, [rbx + 8]
  8063 00004817 5D                      	pop rbp
  8064 00004818 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  8065                                  .L_if_end_02b5:
  8066 0000481B C9                      	leave
  8067 0000481C C22000                  	ret AND_KILL_FRAME(2)
  8068                                  .L_lambda_opt_end_007f:	; new closure is in rax
  8069 0000481F C9                      	leave
  8070 00004820 C22000                  	ret AND_KILL_FRAME(2)
  8071                                  .L_lambda_simple_end_03cb:	; new closure is in rax
  8072 00004823 803804                  	cmp byte [rax], T_closure
  8073 00004826 0F8511090100            	jne L_error_non_closure
  8074 0000482C FF7001                  	push SOB_CLOSURE_ENV(rax)
  8075 0000482F FF5009                  	call SOB_CLOSURE_CODE(rax)
  8076 00004832 48890425[F81A0000]      	mov qword [free_var_122], rax
  8077 0000483A 48B8-                   	mov rax, sob_void
  8077 0000483C [0000000000000000] 
  8078                                  
  8079 00004844 4889C7                  	mov rdi, rax
  8080 00004847 E8EF0B0100              	call print_sexpr_if_not_void
  8081                                  
  8082 0000484C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8083 00004851 E890090100              	call malloc
  8084 00004856 50                      	push rax
  8085 00004857 BF00000000              	mov rdi, 8 * 0	; new rib
  8086 0000485C E885090100              	call malloc
  8087 00004861 50                      	push rax
  8088 00004862 BF08000000              	mov rdi, 8 * 1	; extended env
  8089 00004867 E87A090100              	call malloc
  8090 0000486C 488B7D10                	mov rdi, ENV
  8091 00004870 BE00000000              	mov rsi, 0
  8092 00004875 BA01000000              	mov rdx, 1
  8093                                  .L_lambda_simple_env_loop_03ce:	; ext_env[i + 1] <-- env[i]
  8094 0000487A 4883FE00                	cmp rsi, 0
  8095 0000487E 7410                    	je .L_lambda_simple_env_end_03ce
  8096 00004880 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8097 00004884 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8098 00004888 48FFC6                  	inc rsi
  8099 0000488B 48FFC2                  	inc rdx
  8100 0000488E EBEA                    	jmp .L_lambda_simple_env_loop_03ce
  8101                                  .L_lambda_simple_env_end_03ce:
  8102 00004890 5B                      	pop rbx
  8103 00004891 BE00000000              	mov rsi, 0
  8104                                  .L_lambda_simple_params_loop_03ce:	; copy params
  8105 00004896 4883FE00                	cmp rsi, 0
  8106 0000489A 740E                    	je .L_lambda_simple_params_end_03ce
  8107 0000489C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8108 000048A1 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8109 000048A5 48FFC6                  	inc rsi
  8110 000048A8 EBEC                    	jmp .L_lambda_simple_params_loop_03ce
  8111                                  .L_lambda_simple_params_end_03ce:
  8112 000048AA 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
  8113 000048AD 4889C3                  	mov rbx, rax
  8114 000048B0 58                      	pop rax
  8115 000048B1 C60004                  	mov byte [rax], T_closure
  8116 000048B4 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8117 000048B8 48C74009[C5480000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03ce
  8118 000048C0 E97A010000              	jmp .L_lambda_simple_end_03ce
  8119                                  .L_lambda_simple_code_03ce:	; lambda-simple body
  8120 000048C5 48837C241001            	cmp qword [rsp + 8 * 2], 1
  8121 000048CB 740B                    	je .L_lambda_simple_arity_check_ok_03ce
  8122 000048CD FF742410                	push qword [rsp + 8 * 2]
  8123 000048D1 6A01                    	push 1
  8124 000048D3 E9C7080100              	jmp L_error_incorrect_arity_simple
  8125                                  .L_lambda_simple_arity_check_ok_03ce:
  8126 000048D8 C8000000                	enter 0, 0
  8127                                  	; preparing a tail-call
  8128 000048DC 488B4520                	mov rax, PARAM(0)	; param s
  8129 000048E0 50                      	push rax
  8130 000048E1 48B8-                   	mov rax, L_constants + 1
  8130 000048E3 [0100000000000000] 
  8131 000048EB 50                      	push rax
  8132 000048EC BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8133 000048F1 E8F0080100              	call malloc
  8134 000048F6 50                      	push rax
  8135 000048F7 BF08000000              	mov rdi, 8 * 1	; new rib
  8136 000048FC E8E5080100              	call malloc
  8137 00004901 50                      	push rax
  8138 00004902 BF10000000              	mov rdi, 8 * 2	; extended env
  8139 00004907 E8DA080100              	call malloc
  8140 0000490C 488B7D10                	mov rdi, ENV
  8141 00004910 BE00000000              	mov rsi, 0
  8142 00004915 BA01000000              	mov rdx, 1
  8143                                  .L_lambda_simple_env_loop_03cf:	; ext_env[i + 1] <-- env[i]
  8144 0000491A 4883FE01                	cmp rsi, 1
  8145 0000491E 7410                    	je .L_lambda_simple_env_end_03cf
  8146 00004920 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8147 00004924 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8148 00004928 48FFC6                  	inc rsi
  8149 0000492B 48FFC2                  	inc rdx
  8150 0000492E EBEA                    	jmp .L_lambda_simple_env_loop_03cf
  8151                                  .L_lambda_simple_env_end_03cf:
  8152 00004930 5B                      	pop rbx
  8153 00004931 BE00000000              	mov rsi, 0
  8154                                  .L_lambda_simple_params_loop_03cf:	; copy params
  8155 00004936 4883FE01                	cmp rsi, 1
  8156 0000493A 740E                    	je .L_lambda_simple_params_end_03cf
  8157 0000493C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8158 00004941 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8159 00004945 48FFC6                  	inc rsi
  8160 00004948 EBEC                    	jmp .L_lambda_simple_params_loop_03cf
  8161                                  .L_lambda_simple_params_end_03cf:
  8162 0000494A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
  8163 0000494D 4889C3                  	mov rbx, rax
  8164 00004950 58                      	pop rax
  8165 00004951 C60004                  	mov byte [rax], T_closure
  8166 00004954 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8167 00004958 48C74009[65490000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03cf
  8168 00004960 E97D000000              	jmp .L_lambda_simple_end_03cf
  8169                                  .L_lambda_simple_code_03cf:	; lambda-simple body
  8170 00004965 48837C241002            	cmp qword [rsp + 8 * 2], 2
  8171 0000496B 740B                    	je .L_lambda_simple_arity_check_ok_03cf
  8172 0000496D FF742410                	push qword [rsp + 8 * 2]
  8173 00004971 6A02                    	push 2
  8174 00004973 E927080100              	jmp L_error_incorrect_arity_simple
  8175                                  .L_lambda_simple_arity_check_ok_03cf:
  8176 00004978 C8000000                	enter 0, 0
  8177                                  	; preparing a tail-call
  8178 0000497C 488B4520                	mov rax, PARAM(0)	; param r
  8179 00004980 50                      	push rax
  8180 00004981 488B4528                	mov rax, PARAM(1)	; param a
  8181 00004985 50                      	push rax
  8182 00004986 6A02                    	push 2	; arg count
  8183 00004988 488B0425[83180000]      	mov rax, qword [free_var_85]	; free var cons
  8184 00004990 803805                  	cmp byte [rax], T_undefined
  8185 00004993 0F8420070100            	je L_error_fvar_undefined
  8186 00004999 803804                  	cmp byte [rax], T_closure
  8187 0000499C 0F859B070100            	jne L_error_non_closure
  8188 000049A2 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8189                                  
  8190                                  	; recycling the current frame
  8191 000049A5 FF7508                  	push qword [rbp + 8 * 1]	; old return address
  8192 000049A8 FF7500                  	push qword [rbp]	; old frame-pointer
  8193 000049AB B906000000              	mov rcx, 6
  8194 000049B0 488B5D18                	mov rbx, COUNT
  8195 000049B4 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
  8196 000049B9 488D55F8                	lea rdx, [rbp - 8]
  8197                                  .L_tc_recycle_frame_loop_04e7:
  8198 000049BD 4883F900                	cmp rcx, 0
  8199 000049C1 7413                    	je .L_tc_recycle_frame_done_04e7
  8200 000049C3 488B32                  	mov rsi, qword [rdx]
  8201 000049C6 488933                  	mov qword [rbx], rsi
  8202 000049C9 48FFC9                  	dec rcx
  8203 000049CC 4883EB08                	sub rbx, 8
  8204 000049D0 4883EA08                	sub rdx, 8
  8205 000049D4 EBE7                    	jmp .L_tc_recycle_frame_loop_04e7
  8206                                  .L_tc_recycle_frame_done_04e7:
  8207 000049D6 488D6308                	lea rsp, [rbx + 8]
  8208 000049DA 5D                      	pop rbp
  8209 000049DB FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  8210 000049DE C9                      	leave
  8211 000049DF C22000                  	ret AND_KILL_FRAME(2)
  8212                                  .L_lambda_simple_end_03cf:	; new closure is in rax
  8213 000049E2 50                      	push rax
  8214 000049E3 6A03                    	push 3	; arg count
  8215 000049E5 488B0425[1C190000]      	mov rax, qword [free_var_94]	; free var fold-left
  8216 000049ED 803805                  	cmp byte [rax], T_undefined
  8217 000049F0 0F84C3060100            	je L_error_fvar_undefined
  8218 000049F6 803804                  	cmp byte [rax], T_closure
  8219 000049F9 0F853E070100            	jne L_error_non_closure
  8220 000049FF FF7001                  	push SOB_CLOSURE_ENV(rax)
  8221                                  
  8222                                  	; recycling the current frame
  8223 00004A02 FF7508                  	push qword [rbp + 8 * 1]	; old return address
  8224 00004A05 FF7500                  	push qword [rbp]	; old frame-pointer
  8225 00004A08 B907000000              	mov rcx, 7
  8226 00004A0D 488B5D18                	mov rbx, COUNT
  8227 00004A11 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
  8228 00004A16 488D55F8                	lea rdx, [rbp - 8]
  8229                                  .L_tc_recycle_frame_loop_04e8:
  8230 00004A1A 4883F900                	cmp rcx, 0
  8231 00004A1E 7413                    	je .L_tc_recycle_frame_done_04e8
  8232 00004A20 488B32                  	mov rsi, qword [rdx]
  8233 00004A23 488933                  	mov qword [rbx], rsi
  8234 00004A26 48FFC9                  	dec rcx
  8235 00004A29 4883EB08                	sub rbx, 8
  8236 00004A2D 4883EA08                	sub rdx, 8
  8237 00004A31 EBE7                    	jmp .L_tc_recycle_frame_loop_04e8
  8238                                  .L_tc_recycle_frame_done_04e8:
  8239 00004A33 488D6308                	lea rsp, [rbx + 8]
  8240 00004A37 5D                      	pop rbp
  8241 00004A38 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  8242 00004A3B C9                      	leave
  8243 00004A3C C21800                  	ret AND_KILL_FRAME(1)
  8244                                  .L_lambda_simple_end_03ce:	; new closure is in rax
  8245 00004A3F 48890425[5D1C0000]      	mov qword [free_var_143], rax
  8246 00004A47 48B8-                   	mov rax, sob_void
  8246 00004A49 [0000000000000000] 
  8247                                  
  8248 00004A51 4889C7                  	mov rdi, rax
  8249 00004A54 E8E2090100              	call print_sexpr_if_not_void
  8250                                  
  8251                                  	; preparing a non-tail-call
  8252 00004A59 48B8-                   	mov rax, L_constants + 2335
  8252 00004A5B [1F09000000000000] 
  8253 00004A63 50                      	push rax
  8254 00004A64 48B8-                   	mov rax, L_constants + 2335
  8254 00004A66 [1F09000000000000] 
  8255 00004A6E 50                      	push rax
  8256 00004A6F 6A02                    	push 2	; arg count
  8257 00004A71 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8258 00004A76 E86B070100              	call malloc
  8259 00004A7B 50                      	push rax
  8260 00004A7C BF00000000              	mov rdi, 8 * 0	; new rib
  8261 00004A81 E860070100              	call malloc
  8262 00004A86 50                      	push rax
  8263 00004A87 BF08000000              	mov rdi, 8 * 1	; extended env
  8264 00004A8C E855070100              	call malloc
  8265 00004A91 488B7D10                	mov rdi, ENV
  8266 00004A95 BE00000000              	mov rsi, 0
  8267 00004A9A BA01000000              	mov rdx, 1
  8268                                  .L_lambda_simple_env_loop_03d0:	; ext_env[i + 1] <-- env[i]
  8269 00004A9F 4883FE00                	cmp rsi, 0
  8270 00004AA3 7410                    	je .L_lambda_simple_env_end_03d0
  8271 00004AA5 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8272 00004AA9 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8273 00004AAD 48FFC6                  	inc rsi
  8274 00004AB0 48FFC2                  	inc rdx
  8275 00004AB3 EBEA                    	jmp .L_lambda_simple_env_loop_03d0
  8276                                  .L_lambda_simple_env_end_03d0:
  8277 00004AB5 5B                      	pop rbx
  8278 00004AB6 BE00000000              	mov rsi, 0
  8279                                  .L_lambda_simple_params_loop_03d0:	; copy params
  8280 00004ABB 4883FE00                	cmp rsi, 0
  8281 00004ABF 740E                    	je .L_lambda_simple_params_end_03d0
  8282 00004AC1 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8283 00004AC6 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8284 00004ACA 48FFC6                  	inc rsi
  8285 00004ACD EBEC                    	jmp .L_lambda_simple_params_loop_03d0
  8286                                  .L_lambda_simple_params_end_03d0:
  8287 00004ACF 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
  8288 00004AD2 4889C3                  	mov rbx, rax
  8289 00004AD5 58                      	pop rax
  8290 00004AD6 C60004                  	mov byte [rax], T_closure
  8291 00004AD9 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8292 00004ADD 48C74009[EA4A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03d0
  8293 00004AE5 E9DF050000              	jmp .L_lambda_simple_end_03d0
  8294                                  .L_lambda_simple_code_03d0:	; lambda-simple body
  8295 00004AEA 48837C241002            	cmp qword [rsp + 8 * 2], 2
  8296 00004AF0 740B                    	je .L_lambda_simple_arity_check_ok_03d0
  8297 00004AF2 FF742410                	push qword [rsp + 8 * 2]
  8298 00004AF6 6A02                    	push 2
  8299 00004AF8 E9A2060100              	jmp L_error_incorrect_arity_simple
  8300                                  .L_lambda_simple_arity_check_ok_03d0:
  8301 00004AFD C8000000                	enter 0, 0
  8302                                  
  8303 00004B01 BF08000000              	mov rdi, 8
  8304 00004B06 E8DB060100              	call malloc
  8305 00004B0B 488B5D20                	mov rbx, PARAM(0)	; param run-1
  8306 00004B0F 488918                  	mov [rax], rbx	; box run-1
  8307 00004B12 48894520                	mov PARAM(0), rax	; replace param with box
  8308 00004B16 48B8-                   	mov rax, sob_void
  8308 00004B18 [0000000000000000] 
  8309                                  
  8310                                  
  8311 00004B20 BF08000000              	mov rdi, 8
  8312 00004B25 E8BC060100              	call malloc
  8313 00004B2A 488B5D28                	mov rbx, PARAM(1)	; param run-2
  8314 00004B2E 488918                  	mov [rax], rbx	; box run-2
  8315 00004B31 48894528                	mov PARAM(1), rax	; replace param with box
  8316 00004B35 48B8-                   	mov rax, sob_void
  8316 00004B37 [0000000000000000] 
  8317                                  
  8318 00004B3F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8319 00004B44 E89D060100              	call malloc
  8320 00004B49 50                      	push rax
  8321 00004B4A BF10000000              	mov rdi, 8 * 2	; new rib
  8322 00004B4F E892060100              	call malloc
  8323 00004B54 50                      	push rax
  8324 00004B55 BF10000000              	mov rdi, 8 * 2	; extended env
  8325 00004B5A E887060100              	call malloc
  8326 00004B5F 488B7D10                	mov rdi, ENV
  8327 00004B63 BE00000000              	mov rsi, 0
  8328 00004B68 BA01000000              	mov rdx, 1
  8329                                  .L_lambda_simple_env_loop_03d1:	; ext_env[i + 1] <-- env[i]
  8330 00004B6D 4883FE01                	cmp rsi, 1
  8331 00004B71 7410                    	je .L_lambda_simple_env_end_03d1
  8332 00004B73 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8333 00004B77 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8334 00004B7B 48FFC6                  	inc rsi
  8335 00004B7E 48FFC2                  	inc rdx
  8336 00004B81 EBEA                    	jmp .L_lambda_simple_env_loop_03d1
  8337                                  .L_lambda_simple_env_end_03d1:
  8338 00004B83 5B                      	pop rbx
  8339 00004B84 BE00000000              	mov rsi, 0
  8340                                  .L_lambda_simple_params_loop_03d1:	; copy params
  8341 00004B89 4883FE02                	cmp rsi, 2
  8342 00004B8D 740E                    	je .L_lambda_simple_params_end_03d1
  8343 00004B8F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8344 00004B94 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8345 00004B98 48FFC6                  	inc rsi
  8346 00004B9B EBEC                    	jmp .L_lambda_simple_params_loop_03d1
  8347                                  .L_lambda_simple_params_end_03d1:
  8348 00004B9D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
  8349 00004BA0 4889C3                  	mov rbx, rax
  8350 00004BA3 58                      	pop rax
  8351 00004BA4 C60004                  	mov byte [rax], T_closure
  8352 00004BA7 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8353 00004BAB 48C74009[B84B0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03d1
  8354 00004BB3 E91C010000              	jmp .L_lambda_simple_end_03d1
  8355                                  .L_lambda_simple_code_03d1:	; lambda-simple body
  8356 00004BB8 48837C241002            	cmp qword [rsp + 8 * 2], 2
  8357 00004BBE 740B                    	je .L_lambda_simple_arity_check_ok_03d1
  8358 00004BC0 FF742410                	push qword [rsp + 8 * 2]
  8359 00004BC4 6A02                    	push 2
  8360 00004BC6 E9D4050100              	jmp L_error_incorrect_arity_simple
  8361                                  .L_lambda_simple_arity_check_ok_03d1:
  8362 00004BCB C8000000                	enter 0, 0
  8363                                  	; preparing a non-tail-call
  8364 00004BCF 488B4528                	mov rax, PARAM(1)	; param sr
  8365 00004BD3 50                      	push rax
  8366 00004BD4 6A01                    	push 1	; arg count
  8367 00004BD6 488B0425[3C1B0000]      	mov rax, qword [free_var_126]	; free var null?
  8368 00004BDE 803805                  	cmp byte [rax], T_undefined
  8369 00004BE1 0F84D2040100            	je L_error_fvar_undefined
  8370 00004BE7 803804                  	cmp byte [rax], T_closure
  8371 00004BEA 0F854D050100            	jne L_error_non_closure
  8372 00004BF0 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8373 00004BF3 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8374 00004BF6 483D[02000000]          	cmp rax, sob_boolean_false
  8375 00004BFC 7409                    	je .L_if_else_02b6
  8376 00004BFE 488B4520                	mov rax, PARAM(0)	; param s1
  8377 00004C02 E9C9000000              	jmp .L_if_end_02b6
  8378                                  .L_if_else_02b6:
  8379                                  	; preparing a tail-call
  8380                                  	; preparing a non-tail-call
  8381                                  	; preparing a non-tail-call
  8382 00004C07 488B4528                	mov rax, PARAM(1)	; param sr
  8383 00004C0B 50                      	push rax
  8384 00004C0C 6A01                    	push 1	; arg count
  8385 00004C0E 488B0425[73170000]      	mov rax, qword [free_var_69]	; free var cdr
  8386 00004C16 803805                  	cmp byte [rax], T_undefined
  8387 00004C19 0F849A040100            	je L_error_fvar_undefined
  8388 00004C1F 803804                  	cmp byte [rax], T_closure
  8389 00004C22 0F8515050100            	jne L_error_non_closure
  8390 00004C28 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8391 00004C2B FF5009                  	call SOB_CLOSURE_CODE(rax)
  8392 00004C2E 50                      	push rax
  8393                                  	; preparing a non-tail-call
  8394 00004C2F 488B4528                	mov rax, PARAM(1)	; param sr
  8395 00004C33 50                      	push rax
  8396 00004C34 6A01                    	push 1	; arg count
  8397 00004C36 488B0425[74160000]      	mov rax, qword [free_var_54]	; free var car
  8398 00004C3E 803805                  	cmp byte [rax], T_undefined
  8399 00004C41 0F8472040100            	je L_error_fvar_undefined
  8400 00004C47 803804                  	cmp byte [rax], T_closure
  8401 00004C4A 0F85ED040100            	jne L_error_non_closure
  8402 00004C50 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8403 00004C53 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8404 00004C56 50                      	push rax
  8405 00004C57 6A02                    	push 2	; arg count
  8406 00004C59 488B4510                	mov rax, ENV
  8407 00004C5D 488B00                  	mov rax, qword [rax + 8 * 0]
  8408 00004C60 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run-1
  8409 00004C63 488B00                  	mov rax, qword [rax]
  8410 00004C66 803804                  	cmp byte [rax], T_closure
  8411 00004C69 0F85CE040100            	jne L_error_non_closure
  8412 00004C6F FF7001                  	push SOB_CLOSURE_ENV(rax)
  8413 00004C72 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8414 00004C75 50                      	push rax
  8415 00004C76 488B4520                	mov rax, PARAM(0)	; param s1
  8416 00004C7A 50                      	push rax
  8417 00004C7B 6A02                    	push 2	; arg count
  8418 00004C7D 488B4510                	mov rax, ENV
  8419 00004C81 488B00                  	mov rax, qword [rax + 8 * 0]
  8420 00004C84 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var run-2
  8421 00004C88 488B00                  	mov rax, qword [rax]
  8422 00004C8B 803804                  	cmp byte [rax], T_closure
  8423 00004C8E 0F85A9040100            	jne L_error_non_closure
  8424 00004C94 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8425                                  
  8426                                  	; recycling the current frame
  8427 00004C97 FF7508                  	push qword [rbp + 8 * 1]	; old return address
  8428 00004C9A FF7500                  	push qword [rbp]	; old frame-pointer
  8429 00004C9D B906000000              	mov rcx, 6
  8430 00004CA2 488B5D18                	mov rbx, COUNT
  8431 00004CA6 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
  8432 00004CAB 488D55F8                	lea rdx, [rbp - 8]
  8433                                  .L_tc_recycle_frame_loop_04e9:
  8434 00004CAF 4883F900                	cmp rcx, 0
  8435 00004CB3 7413                    	je .L_tc_recycle_frame_done_04e9
  8436 00004CB5 488B32                  	mov rsi, qword [rdx]
  8437 00004CB8 488933                  	mov qword [rbx], rsi
  8438 00004CBB 48FFC9                  	dec rcx
  8439 00004CBE 4883EB08                	sub rbx, 8
  8440 00004CC2 4883EA08                	sub rdx, 8
  8441 00004CC6 EBE7                    	jmp .L_tc_recycle_frame_loop_04e9
  8442                                  .L_tc_recycle_frame_done_04e9:
  8443 00004CC8 488D6308                	lea rsp, [rbx + 8]
  8444 00004CCC 5D                      	pop rbp
  8445 00004CCD FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  8446                                  .L_if_end_02b6:
  8447 00004CD0 C9                      	leave
  8448 00004CD1 C22000                  	ret AND_KILL_FRAME(2)
  8449                                  .L_lambda_simple_end_03d1:	; new closure is in rax
  8450                                  
  8451 00004CD4 50                      	push rax
  8452 00004CD5 488B4520                	mov rax, PARAM(0)	; param run-1
  8453                                  
  8454 00004CD9 8F00                    	pop qword[rax]
  8455 00004CDB 48B8-                   	mov rax, sob_void
  8455 00004CDD [0000000000000000] 
  8456                                  
  8457 00004CE5 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8458 00004CEA E8F7040100              	call malloc
  8459 00004CEF 50                      	push rax
  8460 00004CF0 BF10000000              	mov rdi, 8 * 2	; new rib
  8461 00004CF5 E8EC040100              	call malloc
  8462 00004CFA 50                      	push rax
  8463 00004CFB BF10000000              	mov rdi, 8 * 2	; extended env
  8464 00004D00 E8E1040100              	call malloc
  8465 00004D05 488B7D10                	mov rdi, ENV
  8466 00004D09 BE00000000              	mov rsi, 0
  8467 00004D0E BA01000000              	mov rdx, 1
  8468                                  .L_lambda_simple_env_loop_03d2:	; ext_env[i + 1] <-- env[i]
  8469 00004D13 4883FE01                	cmp rsi, 1
  8470 00004D17 7410                    	je .L_lambda_simple_env_end_03d2
  8471 00004D19 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8472 00004D1D 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8473 00004D21 48FFC6                  	inc rsi
  8474 00004D24 48FFC2                  	inc rdx
  8475 00004D27 EBEA                    	jmp .L_lambda_simple_env_loop_03d2
  8476                                  .L_lambda_simple_env_end_03d2:
  8477 00004D29 5B                      	pop rbx
  8478 00004D2A BE00000000              	mov rsi, 0
  8479                                  .L_lambda_simple_params_loop_03d2:	; copy params
  8480 00004D2F 4883FE02                	cmp rsi, 2
  8481 00004D33 740E                    	je .L_lambda_simple_params_end_03d2
  8482 00004D35 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8483 00004D3A 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8484 00004D3E 48FFC6                  	inc rsi
  8485 00004D41 EBEC                    	jmp .L_lambda_simple_params_loop_03d2
  8486                                  .L_lambda_simple_params_end_03d2:
  8487 00004D43 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
  8488 00004D46 4889C3                  	mov rbx, rax
  8489 00004D49 58                      	pop rax
  8490 00004D4A C60004                  	mov byte [rax], T_closure
  8491 00004D4D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8492 00004D51 48C74009[5E4D0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03d2
  8493 00004D59 E920010000              	jmp .L_lambda_simple_end_03d2
  8494                                  .L_lambda_simple_code_03d2:	; lambda-simple body
  8495 00004D5E 48837C241002            	cmp qword [rsp + 8 * 2], 2
  8496 00004D64 740B                    	je .L_lambda_simple_arity_check_ok_03d2
  8497 00004D66 FF742410                	push qword [rsp + 8 * 2]
  8498 00004D6A 6A02                    	push 2
  8499 00004D6C E92E040100              	jmp L_error_incorrect_arity_simple
  8500                                  .L_lambda_simple_arity_check_ok_03d2:
  8501 00004D71 C8000000                	enter 0, 0
  8502                                  	; preparing a non-tail-call
  8503 00004D75 488B4520                	mov rax, PARAM(0)	; param s1
  8504 00004D79 50                      	push rax
  8505 00004D7A 6A01                    	push 1	; arg count
  8506 00004D7C 488B0425[3C1B0000]      	mov rax, qword [free_var_126]	; free var null?
  8507 00004D84 803805                  	cmp byte [rax], T_undefined
  8508 00004D87 0F842C030100            	je L_error_fvar_undefined
  8509 00004D8D 803804                  	cmp byte [rax], T_closure
  8510 00004D90 0F85A7030100            	jne L_error_non_closure
  8511 00004D96 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8512 00004D99 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8513 00004D9C 483D[02000000]          	cmp rax, sob_boolean_false
  8514 00004DA2 7409                    	je .L_if_else_02b7
  8515 00004DA4 488B4528                	mov rax, PARAM(1)	; param s2
  8516 00004DA8 E9CD000000              	jmp .L_if_end_02b7
  8517                                  .L_if_else_02b7:
  8518                                  	; preparing a tail-call
  8519                                  	; preparing a non-tail-call
  8520 00004DAD 488B4528                	mov rax, PARAM(1)	; param s2
  8521 00004DB1 50                      	push rax
  8522                                  	; preparing a non-tail-call
  8523 00004DB2 488B4520                	mov rax, PARAM(0)	; param s1
  8524 00004DB6 50                      	push rax
  8525 00004DB7 6A01                    	push 1	; arg count
  8526 00004DB9 488B0425[73170000]      	mov rax, qword [free_var_69]	; free var cdr
  8527 00004DC1 803805                  	cmp byte [rax], T_undefined
  8528 00004DC4 0F84EF020100            	je L_error_fvar_undefined
  8529 00004DCA 803804                  	cmp byte [rax], T_closure
  8530 00004DCD 0F856A030100            	jne L_error_non_closure
  8531 00004DD3 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8532 00004DD6 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8533 00004DD9 50                      	push rax
  8534 00004DDA 6A02                    	push 2	; arg count
  8535 00004DDC 488B4510                	mov rax, ENV
  8536 00004DE0 488B00                  	mov rax, qword [rax + 8 * 0]
  8537 00004DE3 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var run-2
  8538 00004DE7 488B00                  	mov rax, qword [rax]
  8539 00004DEA 803804                  	cmp byte [rax], T_closure
  8540 00004DED 0F854A030100            	jne L_error_non_closure
  8541 00004DF3 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8542 00004DF6 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8543 00004DF9 50                      	push rax
  8544                                  	; preparing a non-tail-call
  8545 00004DFA 488B4520                	mov rax, PARAM(0)	; param s1
  8546 00004DFE 50                      	push rax
  8547 00004DFF 6A01                    	push 1	; arg count
  8548 00004E01 488B0425[74160000]      	mov rax, qword [free_var_54]	; free var car
  8549 00004E09 803805                  	cmp byte [rax], T_undefined
  8550 00004E0C 0F84A7020100            	je L_error_fvar_undefined
  8551 00004E12 803804                  	cmp byte [rax], T_closure
  8552 00004E15 0F8522030100            	jne L_error_non_closure
  8553 00004E1B FF7001                  	push SOB_CLOSURE_ENV(rax)
  8554 00004E1E FF5009                  	call SOB_CLOSURE_CODE(rax)
  8555 00004E21 50                      	push rax
  8556 00004E22 6A02                    	push 2	; arg count
  8557 00004E24 488B0425[83180000]      	mov rax, qword [free_var_85]	; free var cons
  8558 00004E2C 803805                  	cmp byte [rax], T_undefined
  8559 00004E2F 0F8484020100            	je L_error_fvar_undefined
  8560 00004E35 803804                  	cmp byte [rax], T_closure
  8561 00004E38 0F85FF020100            	jne L_error_non_closure
  8562 00004E3E FF7001                  	push SOB_CLOSURE_ENV(rax)
  8563                                  
  8564                                  	; recycling the current frame
  8565 00004E41 FF7508                  	push qword [rbp + 8 * 1]	; old return address
  8566 00004E44 FF7500                  	push qword [rbp]	; old frame-pointer
  8567 00004E47 B906000000              	mov rcx, 6
  8568 00004E4C 488B5D18                	mov rbx, COUNT
  8569 00004E50 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
  8570 00004E55 488D55F8                	lea rdx, [rbp - 8]
  8571                                  .L_tc_recycle_frame_loop_04ea:
  8572 00004E59 4883F900                	cmp rcx, 0
  8573 00004E5D 7413                    	je .L_tc_recycle_frame_done_04ea
  8574 00004E5F 488B32                  	mov rsi, qword [rdx]
  8575 00004E62 488933                  	mov qword [rbx], rsi
  8576 00004E65 48FFC9                  	dec rcx
  8577 00004E68 4883EB08                	sub rbx, 8
  8578 00004E6C 4883EA08                	sub rdx, 8
  8579 00004E70 EBE7                    	jmp .L_tc_recycle_frame_loop_04ea
  8580                                  .L_tc_recycle_frame_done_04ea:
  8581 00004E72 488D6308                	lea rsp, [rbx + 8]
  8582 00004E76 5D                      	pop rbp
  8583 00004E77 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  8584                                  .L_if_end_02b7:
  8585 00004E7A C9                      	leave
  8586 00004E7B C22000                  	ret AND_KILL_FRAME(2)
  8587                                  .L_lambda_simple_end_03d2:	; new closure is in rax
  8588                                  
  8589 00004E7E 50                      	push rax
  8590 00004E7F 488B4528                	mov rax, PARAM(1)	; param run-2
  8591                                  
  8592 00004E83 8F00                    	pop qword[rax]
  8593 00004E85 48B8-                   	mov rax, sob_void
  8593 00004E87 [0000000000000000] 
  8594                                  
  8595 00004E8F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8596 00004E94 E84D030100              	call malloc
  8597 00004E99 50                      	push rax
  8598 00004E9A BF10000000              	mov rdi, 8 * 2	; new rib
  8599 00004E9F E842030100              	call malloc
  8600 00004EA4 50                      	push rax
  8601 00004EA5 BF10000000              	mov rdi, 8 * 2	; extended env
  8602 00004EAA E837030100              	call malloc
  8603 00004EAF 488B7D10                	mov rdi, ENV
  8604 00004EB3 BE00000000              	mov rsi, 0
  8605 00004EB8 BA01000000              	mov rdx, 1
  8606                                  .L_lambda_opt_env_loop_0080:	; ext_env[i + 1] <-- env[i]
  8607 00004EBD 4883FE01                	cmp rsi, 1
  8608 00004EC1 7410                    	je .L_lambda_opt_env_end_0080
  8609 00004EC3 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8610 00004EC7 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8611 00004ECB 48FFC6                  	inc rsi
  8612 00004ECE 48FFC2                  	inc rdx
  8613 00004ED1 EBEA                    	jmp .L_lambda_opt_env_loop_0080
  8614                                  .L_lambda_opt_env_end_0080:
  8615 00004ED3 5B                      	pop rbx
  8616 00004ED4 BE00000000              	mov rsi, 0
  8617                                  .L_lambda_opt_params_loop_0080:	; copy params
  8618 00004ED9 4883FE02                	cmp rsi, 2
  8619 00004EDD 740E                    	je .L_lambda_opt_params_end_0080
  8620 00004EDF 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8621 00004EE4 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8622 00004EE8 48FFC6                  	inc rsi
  8623 00004EEB EBEC                    	jmp .L_lambda_opt_params_loop_0080
  8624                                  .L_lambda_opt_params_end_0080:
  8625 00004EED 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
  8626 00004EF0 4889C3                  	mov rbx, rax
  8627 00004EF3 58                      	pop rax
  8628 00004EF4 C60004                  	mov byte [rax], T_closure
  8629 00004EF7 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8630 00004EFB 48C74009[084F0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0080
  8631 00004F03 E9BD010000              	jmp .L_lambda_opt_end_0080
  8632                                  .L_lambda_opt_code_0080:	; lambda-simple body
  8633 00004F08 48837C241000            	cmp qword [rsp + 8 * 2], 0 ;	 check num of args
  8634 00004F0E 740D                    	je .L_lambda_opt_arity_check_exact_0080 ;	 if equal, go to exact arity
  8635 00004F10 7F42                    	jg .L_lambda_opt_arity_check_more_0080 ;	 if greater than, go to arity more
  8636 00004F12 FF742410                	push qword [rsp + 8 * 2] ;	 else, throw opt arity error
  8637 00004F16 6A00                    	push 0
  8638 00004F18 E996020100              	jmp L_error_incorrect_arity_opt
  8639                                  .L_lambda_opt_arity_check_exact_0080:
  8640 00004F1D 488B442410              	mov rax, qword [rsp + 8 * 2] ;	 number of args
  8641 00004F22 488D5CC410              	lea rbx, [rsp + 8 * (2 + rax)] ;	 address of last element
  8642 00004F27 4883EC08                	sub rsp, 8
  8643 00004F2B 488D0C24                	lea rcx, [rsp + 0] ;	 new start
  8644                                  .L_lambda_opt_shift_entry_0080:
  8645 00004F2F 488B5108                	mov rdx, [rcx + 8]
  8646 00004F33 488911                  	mov [rcx], rdx
  8647 00004F36 4883C108                	add rcx, 8
  8648 00004F3A 4839CB                  	cmp rbx, rcx
  8649 00004F3D 75F0                    	jne .L_lambda_opt_shift_entry_0080
  8650                                  .L_lambda_opt_shift_exit_0080:
  8651 00004F3F 48C703[01000000]        	mov qword[rbx], sob_nil ;	 place nil
  8652 00004F46 4883C001                	add rax, 1
  8653 00004F4A 4889442410              	mov qword [rsp + 8 * 2], rax
  8654 00004F4F E987000000              	jmp .L_lambda_opt_stack_adjusted_0080
  8655                                  .L_lambda_opt_arity_check_more_0080:
  8656 00004F54 48BA-                   	mov rdx, sob_nil ;	 base cdr
  8656 00004F56 [0100000000000000] 
  8657 00004F5E 48837C241001            	cmp qword [rsp + 8 * 2], 1
  8658 00004F64 7451                    	je .L_lambda_opt_stack_shrink_loop_exit_0080
  8659                                  .L_lambda_opt_stack_shrink_loop_0080:
  8660 00004F66 BF11000000              	mov rdi, (1 + 8 + 8)
  8661 00004F6B E876020100              	call malloc
  8662 00004F70 C60021                  	mov byte[rax], T_pair
  8663 00004F73 48895009                	mov SOB_PAIR_CDR(rax), rdx
  8664 00004F77 4889C2                  	mov rdx, rax
  8665 00004F7A 488B442410              	mov rax, qword [rsp + 8 * 2]
  8666 00004F7F 488B5CC410              	mov rbx, qword [rsp + 8 * (2 + rax)]
  8667 00004F84 48895A01                	mov SOB_PAIR_CAR(rdx), rbx
  8668 00004F88 488D5CC408              	lea rbx, [rsp + 8 * (2 + rax - 1)]
  8669                                  .L_lambda_opt_extra_shift_process_0080:
  8670 00004F8D 488B0B                  	mov rcx, [rbx]
  8671 00004F90 48894B08                	mov [rbx + 8], rcx
  8672 00004F94 4883EB08                	sub rbx, 8
  8673 00004F98 4839DC                  	cmp rsp, rbx
  8674 00004F9B 7EF0                    	jle .L_lambda_opt_extra_shift_process_0080
  8675                                  .L_lambda_opt_extra_shift_process_end_0080:
  8676 00004F9D 4883C408                	add rsp, 8
  8677 00004FA1 488B5C2410              	mov rbx, [rsp + 8 * 2]
  8678 00004FA6 4883EB01                	sub rbx, 1
  8679 00004FAA 48895C2410              	mov [rsp + 8 * 2], rbx
  8680 00004FAF 48837C241001            	cmp qword [rsp + 8 * 2], 1
  8681 00004FB5 7FAF                    	jg .L_lambda_opt_stack_shrink_loop_0080
  8682                                  .L_lambda_opt_stack_shrink_loop_exit_0080:
  8683 00004FB7 488B4C2410              	mov rcx, [rsp + 8 * 2]
  8684 00004FBC 488B5CCC10              	mov rbx, qword [rsp + 8 * (2 + rcx)]
  8685 00004FC1 BF11000000              	mov rdi, (1 + 8 + 8)
  8686 00004FC6 E81B020100              	call malloc
  8687 00004FCB C60021                  	mov byte[rax], T_pair
  8688 00004FCE 48895009                	mov SOB_PAIR_CDR(rax), rdx
  8689 00004FD2 48895801                	mov SOB_PAIR_CAR(rax), rbx
  8690 00004FD6 488944CC10              	mov [rsp + 8 * (2 + rcx)], rax
  8691                                  .L_lambda_opt_stack_adjusted_0080:
  8692 00004FDB C8000000                	enter 0, 0
  8693                                  	; preparing a non-tail-call
  8694 00004FDF 488B4520                	mov rax, PARAM(0)	; param s
  8695 00004FE3 50                      	push rax
  8696 00004FE4 6A01                    	push 1	; arg count
  8697 00004FE6 488B0425[3C1B0000]      	mov rax, qword [free_var_126]	; free var null?
  8698 00004FEE 803805                  	cmp byte [rax], T_undefined
  8699 00004FF1 0F84C2000100            	je L_error_fvar_undefined
  8700 00004FF7 803804                  	cmp byte [rax], T_closure
  8701 00004FFA 0F853D010100            	jne L_error_non_closure
  8702 00005000 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8703 00005003 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8704 00005006 483D[02000000]          	cmp rax, sob_boolean_false
  8705 0000500C 740F                    	je .L_if_else_02b8
  8706 0000500E 48B8-                   	mov rax, L_constants + 1
  8706 00005010 [0100000000000000] 
  8707 00005018 E9A4000000              	jmp .L_if_end_02b8
  8708                                  .L_if_else_02b8:
  8709                                  	; preparing a tail-call
  8710                                  	; preparing a non-tail-call
  8711 0000501D 488B4520                	mov rax, PARAM(0)	; param s
  8712 00005021 50                      	push rax
  8713 00005022 6A01                    	push 1	; arg count
  8714 00005024 488B0425[73170000]      	mov rax, qword [free_var_69]	; free var cdr
  8715 0000502C 803805                  	cmp byte [rax], T_undefined
  8716 0000502F 0F8484000100            	je L_error_fvar_undefined
  8717 00005035 803804                  	cmp byte [rax], T_closure
  8718 00005038 0F85FF000100            	jne L_error_non_closure
  8719 0000503E FF7001                  	push SOB_CLOSURE_ENV(rax)
  8720 00005041 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8721 00005044 50                      	push rax
  8722                                  	; preparing a non-tail-call
  8723 00005045 488B4520                	mov rax, PARAM(0)	; param s
  8724 00005049 50                      	push rax
  8725 0000504A 6A01                    	push 1	; arg count
  8726 0000504C 488B0425[74160000]      	mov rax, qword [free_var_54]	; free var car
  8727 00005054 803805                  	cmp byte [rax], T_undefined
  8728 00005057 0F845C000100            	je L_error_fvar_undefined
  8729 0000505D 803804                  	cmp byte [rax], T_closure
  8730 00005060 0F85D7000100            	jne L_error_non_closure
  8731 00005066 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8732 00005069 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8733 0000506C 50                      	push rax
  8734 0000506D 6A02                    	push 2	; arg count
  8735 0000506F 488B4510                	mov rax, ENV
  8736 00005073 488B00                  	mov rax, qword [rax + 8 * 0]
  8737 00005076 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run-1
  8738 00005079 488B00                  	mov rax, qword [rax]
  8739 0000507C 803804                  	cmp byte [rax], T_closure
  8740 0000507F 0F85B8000100            	jne L_error_non_closure
  8741 00005085 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8742                                  
  8743                                  	; recycling the current frame
  8744 00005088 FF7508                  	push qword [rbp + 8 * 1]	; old return address
  8745 0000508B FF7500                  	push qword [rbp]	; old frame-pointer
  8746 0000508E B906000000              	mov rcx, 6
  8747 00005093 488B5D18                	mov rbx, COUNT
  8748 00005097 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
  8749 0000509C 488D55F8                	lea rdx, [rbp - 8]
  8750                                  .L_tc_recycle_frame_loop_04eb:
  8751 000050A0 4883F900                	cmp rcx, 0
  8752 000050A4 7413                    	je .L_tc_recycle_frame_done_04eb
  8753 000050A6 488B32                  	mov rsi, qword [rdx]
  8754 000050A9 488933                  	mov qword [rbx], rsi
  8755 000050AC 48FFC9                  	dec rcx
  8756 000050AF 4883EB08                	sub rbx, 8
  8757 000050B3 4883EA08                	sub rdx, 8
  8758 000050B7 EBE7                    	jmp .L_tc_recycle_frame_loop_04eb
  8759                                  .L_tc_recycle_frame_done_04eb:
  8760 000050B9 488D6308                	lea rsp, [rbx + 8]
  8761 000050BD 5D                      	pop rbp
  8762 000050BE FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  8763                                  .L_if_end_02b8:
  8764 000050C1 C9                      	leave
  8765 000050C2 C21800                  	ret AND_KILL_FRAME(1)
  8766                                  .L_lambda_opt_end_0080:	; new closure is in rax
  8767 000050C5 C9                      	leave
  8768 000050C6 C22000                  	ret AND_KILL_FRAME(2)
  8769                                  .L_lambda_simple_end_03d0:	; new closure is in rax
  8770 000050C9 803804                  	cmp byte [rax], T_closure
  8771 000050CC 0F856B000100            	jne L_error_non_closure
  8772 000050D2 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8773 000050D5 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8774 000050D8 48890425[FE140000]      	mov qword [free_var_32], rax
  8775 000050E0 48B8-                   	mov rax, sob_void
  8775 000050E2 [0000000000000000] 
  8776                                  
  8777 000050EA 4889C7                  	mov rdi, rax
  8778 000050ED E849030100              	call print_sexpr_if_not_void
  8779                                  
  8780                                  	; preparing a non-tail-call
  8781 000050F2 48B8-                   	mov rax, L_constants + 2335
  8781 000050F4 [1F09000000000000] 
  8782 000050FC 50                      	push rax
  8783 000050FD 6A01                    	push 1	; arg count
  8784 000050FF BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8785 00005104 E8DD000100              	call malloc
  8786 00005109 50                      	push rax
  8787 0000510A BF00000000              	mov rdi, 8 * 0	; new rib
  8788 0000510F E8D2000100              	call malloc
  8789 00005114 50                      	push rax
  8790 00005115 BF08000000              	mov rdi, 8 * 1	; extended env
  8791 0000511A E8C7000100              	call malloc
  8792 0000511F 488B7D10                	mov rdi, ENV
  8793 00005123 BE00000000              	mov rsi, 0
  8794 00005128 BA01000000              	mov rdx, 1
  8795                                  .L_lambda_simple_env_loop_03d3:	; ext_env[i + 1] <-- env[i]
  8796 0000512D 4883FE00                	cmp rsi, 0
  8797 00005131 7410                    	je .L_lambda_simple_env_end_03d3
  8798 00005133 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8799 00005137 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8800 0000513B 48FFC6                  	inc rsi
  8801 0000513E 48FFC2                  	inc rdx
  8802 00005141 EBEA                    	jmp .L_lambda_simple_env_loop_03d3
  8803                                  .L_lambda_simple_env_end_03d3:
  8804 00005143 5B                      	pop rbx
  8805 00005144 BE00000000              	mov rsi, 0
  8806                                  .L_lambda_simple_params_loop_03d3:	; copy params
  8807 00005149 4883FE00                	cmp rsi, 0
  8808 0000514D 740E                    	je .L_lambda_simple_params_end_03d3
  8809 0000514F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8810 00005154 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8811 00005158 48FFC6                  	inc rsi
  8812 0000515B EBEC                    	jmp .L_lambda_simple_params_loop_03d3
  8813                                  .L_lambda_simple_params_end_03d3:
  8814 0000515D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
  8815 00005160 4889C3                  	mov rbx, rax
  8816 00005163 58                      	pop rax
  8817 00005164 C60004                  	mov byte [rax], T_closure
  8818 00005167 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8819 0000516B 48C74009[78510000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03d3
  8820 00005173 E9DA030000              	jmp .L_lambda_simple_end_03d3
  8821                                  .L_lambda_simple_code_03d3:	; lambda-simple body
  8822 00005178 48837C241001            	cmp qword [rsp + 8 * 2], 1
  8823 0000517E 740B                    	je .L_lambda_simple_arity_check_ok_03d3
  8824 00005180 FF742410                	push qword [rsp + 8 * 2]
  8825 00005184 6A01                    	push 1
  8826 00005186 E914000100              	jmp L_error_incorrect_arity_simple
  8827                                  .L_lambda_simple_arity_check_ok_03d3:
  8828 0000518B C8000000                	enter 0, 0
  8829                                  
  8830 0000518F BF08000000              	mov rdi, 8
  8831 00005194 E84D000100              	call malloc
  8832 00005199 488B5D20                	mov rbx, PARAM(0)	; param run
  8833 0000519D 488918                  	mov [rax], rbx	; box run
  8834 000051A0 48894520                	mov PARAM(0), rax	; replace param with box
  8835 000051A4 48B8-                   	mov rax, sob_void
  8835 000051A6 [0000000000000000] 
  8836                                  
  8837 000051AE BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8838 000051B3 E82E000100              	call malloc
  8839 000051B8 50                      	push rax
  8840 000051B9 BF08000000              	mov rdi, 8 * 1	; new rib
  8841 000051BE E823000100              	call malloc
  8842 000051C3 50                      	push rax
  8843 000051C4 BF10000000              	mov rdi, 8 * 2	; extended env
  8844 000051C9 E818000100              	call malloc
  8845 000051CE 488B7D10                	mov rdi, ENV
  8846 000051D2 BE00000000              	mov rsi, 0
  8847 000051D7 BA01000000              	mov rdx, 1
  8848                                  .L_lambda_simple_env_loop_03d4:	; ext_env[i + 1] <-- env[i]
  8849 000051DC 4883FE01                	cmp rsi, 1
  8850 000051E0 7410                    	je .L_lambda_simple_env_end_03d4
  8851 000051E2 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8852 000051E6 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8853 000051EA 48FFC6                  	inc rsi
  8854 000051ED 48FFC2                  	inc rdx
  8855 000051F0 EBEA                    	jmp .L_lambda_simple_env_loop_03d4
  8856                                  .L_lambda_simple_env_end_03d4:
  8857 000051F2 5B                      	pop rbx
  8858 000051F3 BE00000000              	mov rsi, 0
  8859                                  .L_lambda_simple_params_loop_03d4:	; copy params
  8860 000051F8 4883FE01                	cmp rsi, 1
  8861 000051FC 740E                    	je .L_lambda_simple_params_end_03d4
  8862 000051FE 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8863 00005203 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8864 00005207 48FFC6                  	inc rsi
  8865 0000520A EBEC                    	jmp .L_lambda_simple_params_loop_03d4
  8866                                  .L_lambda_simple_params_end_03d4:
  8867 0000520C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
  8868 0000520F 4889C3                  	mov rbx, rax
  8869 00005212 58                      	pop rax
  8870 00005213 C60004                  	mov byte [rax], T_closure
  8871 00005216 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8872 0000521A 48C74009[27520000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03d4
  8873 00005222 E95F010000              	jmp .L_lambda_simple_end_03d4
  8874                                  .L_lambda_simple_code_03d4:	; lambda-simple body
  8875 00005227 48837C241003            	cmp qword [rsp + 8 * 2], 3
  8876 0000522D 740B                    	je .L_lambda_simple_arity_check_ok_03d4
  8877 0000522F FF742410                	push qword [rsp + 8 * 2]
  8878 00005233 6A03                    	push 3
  8879 00005235 E965FF0000              	jmp L_error_incorrect_arity_simple
  8880                                  .L_lambda_simple_arity_check_ok_03d4:
  8881 0000523A C8000000                	enter 0, 0
  8882                                  	; preparing a non-tail-call
  8883 0000523E 488B4530                	mov rax, PARAM(2)	; param ss
  8884 00005242 50                      	push rax
  8885 00005243 488B0425[3C1B0000]      	mov rax, qword [free_var_126]	; free var null?
  8886 0000524B 803805                  	cmp byte [rax], T_undefined
  8887 0000524E 0F8465FE0000            	je L_error_fvar_undefined
  8888 00005254 50                      	push rax
  8889 00005255 6A02                    	push 2	; arg count
  8890 00005257 488B0425[801B0000]      	mov rax, qword [free_var_130]	; free var ormap
  8891 0000525F 803805                  	cmp byte [rax], T_undefined
  8892 00005262 0F8451FE0000            	je L_error_fvar_undefined
  8893 00005268 803804                  	cmp byte [rax], T_closure
  8894 0000526B 0F85CCFE0000            	jne L_error_non_closure
  8895 00005271 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8896 00005274 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8897 00005277 483D[02000000]          	cmp rax, sob_boolean_false
  8898 0000527D 7409                    	je .L_if_else_02b9
  8899 0000527F 488B4528                	mov rax, PARAM(1)	; param unit
  8900 00005283 E9FA000000              	jmp .L_if_end_02b9
  8901                                  .L_if_else_02b9:
  8902                                  	; preparing a tail-call
  8903                                  	; preparing a non-tail-call
  8904 00005288 488B4530                	mov rax, PARAM(2)	; param ss
  8905 0000528C 50                      	push rax
  8906 0000528D 488B0425[73170000]      	mov rax, qword [free_var_69]	; free var cdr
  8907 00005295 803805                  	cmp byte [rax], T_undefined
  8908 00005298 0F841BFE0000            	je L_error_fvar_undefined
  8909 0000529E 50                      	push rax
  8910 0000529F 6A02                    	push 2	; arg count
  8911 000052A1 488B0425[F81A0000]      	mov rax, qword [free_var_122]	; free var map
  8912 000052A9 803805                  	cmp byte [rax], T_undefined
  8913 000052AC 0F8407FE0000            	je L_error_fvar_undefined
  8914 000052B2 803804                  	cmp byte [rax], T_closure
  8915 000052B5 0F8582FE0000            	jne L_error_non_closure
  8916 000052BB FF7001                  	push SOB_CLOSURE_ENV(rax)
  8917 000052BE FF5009                  	call SOB_CLOSURE_CODE(rax)
  8918 000052C1 50                      	push rax
  8919                                  	; preparing a non-tail-call
  8920                                  	; preparing a non-tail-call
  8921 000052C2 488B4530                	mov rax, PARAM(2)	; param ss
  8922 000052C6 50                      	push rax
  8923 000052C7 488B0425[74160000]      	mov rax, qword [free_var_54]	; free var car
  8924 000052CF 803805                  	cmp byte [rax], T_undefined
  8925 000052D2 0F84E1FD0000            	je L_error_fvar_undefined
  8926 000052D8 50                      	push rax
  8927 000052D9 6A02                    	push 2	; arg count
  8928 000052DB 488B0425[F81A0000]      	mov rax, qword [free_var_122]	; free var map
  8929 000052E3 803805                  	cmp byte [rax], T_undefined
  8930 000052E6 0F84CDFD0000            	je L_error_fvar_undefined
  8931 000052EC 803804                  	cmp byte [rax], T_closure
  8932 000052EF 0F8548FE0000            	jne L_error_non_closure
  8933 000052F5 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8934 000052F8 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8935 000052FB 50                      	push rax
  8936 000052FC 488B4528                	mov rax, PARAM(1)	; param unit
  8937 00005300 50                      	push rax
  8938 00005301 488B4520                	mov rax, PARAM(0)	; param f
  8939 00005305 50                      	push rax
  8940 00005306 6A03                    	push 3	; arg count
  8941 00005308 488B0425[0F150000]      	mov rax, qword [free_var_33]	; free var apply
  8942 00005310 803805                  	cmp byte [rax], T_undefined
  8943 00005313 0F84A0FD0000            	je L_error_fvar_undefined
  8944 00005319 803804                  	cmp byte [rax], T_closure
  8945 0000531C 0F851BFE0000            	jne L_error_non_closure
  8946 00005322 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8947 00005325 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8948 00005328 50                      	push rax
  8949 00005329 488B4520                	mov rax, PARAM(0)	; param f
  8950 0000532D 50                      	push rax
  8951 0000532E 6A03                    	push 3	; arg count
  8952 00005330 488B4510                	mov rax, ENV
  8953 00005334 488B00                  	mov rax, qword [rax + 8 * 0]
  8954 00005337 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  8955 0000533A 488B00                  	mov rax, qword [rax]
  8956 0000533D 803804                  	cmp byte [rax], T_closure
  8957 00005340 0F85F7FD0000            	jne L_error_non_closure
  8958 00005346 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8959                                  
  8960                                  	; recycling the current frame
  8961 00005349 FF7508                  	push qword [rbp + 8 * 1]	; old return address
  8962 0000534C FF7500                  	push qword [rbp]	; old frame-pointer
  8963 0000534F B907000000              	mov rcx, 7
  8964 00005354 488B5D18                	mov rbx, COUNT
  8965 00005358 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
  8966 0000535D 488D55F8                	lea rdx, [rbp - 8]
  8967                                  .L_tc_recycle_frame_loop_04ec:
  8968 00005361 4883F900                	cmp rcx, 0
  8969 00005365 7413                    	je .L_tc_recycle_frame_done_04ec
  8970 00005367 488B32                  	mov rsi, qword [rdx]
  8971 0000536A 488933                  	mov qword [rbx], rsi
  8972 0000536D 48FFC9                  	dec rcx
  8973 00005370 4883EB08                	sub rbx, 8
  8974 00005374 4883EA08                	sub rdx, 8
  8975 00005378 EBE7                    	jmp .L_tc_recycle_frame_loop_04ec
  8976                                  .L_tc_recycle_frame_done_04ec:
  8977 0000537A 488D6308                	lea rsp, [rbx + 8]
  8978 0000537E 5D                      	pop rbp
  8979 0000537F FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  8980                                  .L_if_end_02b9:
  8981 00005382 C9                      	leave
  8982 00005383 C22800                  	ret AND_KILL_FRAME(3)
  8983                                  .L_lambda_simple_end_03d4:	; new closure is in rax
  8984                                  
  8985 00005386 50                      	push rax
  8986 00005387 488B4520                	mov rax, PARAM(0)	; param run
  8987                                  
  8988 0000538B 8F00                    	pop qword[rax]
  8989 0000538D 48B8-                   	mov rax, sob_void
  8989 0000538F [0000000000000000] 
  8990                                  
  8991 00005397 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8992 0000539C E845FE0000              	call malloc
  8993 000053A1 50                      	push rax
  8994 000053A2 BF08000000              	mov rdi, 8 * 1	; new rib
  8995 000053A7 E83AFE0000              	call malloc
  8996 000053AC 50                      	push rax
  8997 000053AD BF10000000              	mov rdi, 8 * 2	; extended env
  8998 000053B2 E82FFE0000              	call malloc
  8999 000053B7 488B7D10                	mov rdi, ENV
  9000 000053BB BE00000000              	mov rsi, 0
  9001 000053C0 BA01000000              	mov rdx, 1
  9002                                  .L_lambda_opt_env_loop_0081:	; ext_env[i + 1] <-- env[i]
  9003 000053C5 4883FE01                	cmp rsi, 1
  9004 000053C9 7410                    	je .L_lambda_opt_env_end_0081
  9005 000053CB 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  9006 000053CF 48890CD0                	mov qword [rax + 8 * rdx], rcx
  9007 000053D3 48FFC6                  	inc rsi
  9008 000053D6 48FFC2                  	inc rdx
  9009 000053D9 EBEA                    	jmp .L_lambda_opt_env_loop_0081
  9010                                  .L_lambda_opt_env_end_0081:
  9011 000053DB 5B                      	pop rbx
  9012 000053DC BE00000000              	mov rsi, 0
  9013                                  .L_lambda_opt_params_loop_0081:	; copy params
  9014 000053E1 4883FE01                	cmp rsi, 1
  9015 000053E5 740E                    	je .L_lambda_opt_params_end_0081
  9016 000053E7 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  9017 000053EC 488914F3                	mov qword [rbx + 8 * rsi], rdx
  9018 000053F0 48FFC6                  	inc rsi
  9019 000053F3 EBEC                    	jmp .L_lambda_opt_params_loop_0081
  9020                                  .L_lambda_opt_params_end_0081:
  9021 000053F5 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
  9022 000053F8 4889C3                  	mov rbx, rax
  9023 000053FB 58                      	pop rax
  9024 000053FC C60004                  	mov byte [rax], T_closure
  9025 000053FF 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  9026 00005403 48C74009[10540000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0081
  9027 0000540B E93E010000              	jmp .L_lambda_opt_end_0081
  9028                                  .L_lambda_opt_code_0081:	; lambda-simple body
  9029 00005410 48837C241002            	cmp qword [rsp + 8 * 2], 2 ;	 check num of args
  9030 00005416 740D                    	je .L_lambda_opt_arity_check_exact_0081 ;	 if equal, go to exact arity
  9031 00005418 7F42                    	jg .L_lambda_opt_arity_check_more_0081 ;	 if greater than, go to arity more
  9032 0000541A FF742410                	push qword [rsp + 8 * 2] ;	 else, throw opt arity error
  9033 0000541E 6A02                    	push 2
  9034 00005420 E98EFD0000              	jmp L_error_incorrect_arity_opt
  9035                                  .L_lambda_opt_arity_check_exact_0081:
  9036 00005425 488B442410              	mov rax, qword [rsp + 8 * 2] ;	 number of args
  9037 0000542A 488D5CC410              	lea rbx, [rsp + 8 * (2 + rax)] ;	 address of last element
  9038 0000542F 4883EC08                	sub rsp, 8
  9039 00005433 488D0C24                	lea rcx, [rsp + 0] ;	 new start
  9040                                  .L_lambda_opt_shift_entry_0081:
  9041 00005437 488B5108                	mov rdx, [rcx + 8]
  9042 0000543B 488911                  	mov [rcx], rdx
  9043 0000543E 4883C108                	add rcx, 8
  9044 00005442 4839CB                  	cmp rbx, rcx
  9045 00005445 75F0                    	jne .L_lambda_opt_shift_entry_0081
  9046                                  .L_lambda_opt_shift_exit_0081:
  9047 00005447 48C703[01000000]        	mov qword[rbx], sob_nil ;	 place nil
  9048 0000544E 4883C001                	add rax, 1
  9049 00005452 4889442410              	mov qword [rsp + 8 * 2], rax
  9050 00005457 E987000000              	jmp .L_lambda_opt_stack_adjusted_0081
  9051                                  .L_lambda_opt_arity_check_more_0081:
  9052 0000545C 48BA-                   	mov rdx, sob_nil ;	 base cdr
  9052 0000545E [0100000000000000] 
  9053 00005466 48837C241003            	cmp qword [rsp + 8 * 2], 3
  9054 0000546C 7451                    	je .L_lambda_opt_stack_shrink_loop_exit_0081
  9055                                  .L_lambda_opt_stack_shrink_loop_0081:
  9056 0000546E BF11000000              	mov rdi, (1 + 8 + 8)
  9057 00005473 E86EFD0000              	call malloc
  9058 00005478 C60021                  	mov byte[rax], T_pair
  9059 0000547B 48895009                	mov SOB_PAIR_CDR(rax), rdx
  9060 0000547F 4889C2                  	mov rdx, rax
  9061 00005482 488B442410              	mov rax, qword [rsp + 8 * 2]
  9062 00005487 488B5CC410              	mov rbx, qword [rsp + 8 * (2 + rax)]
  9063 0000548C 48895A01                	mov SOB_PAIR_CAR(rdx), rbx
  9064 00005490 488D5CC408              	lea rbx, [rsp + 8 * (2 + rax - 1)]
  9065                                  .L_lambda_opt_extra_shift_process_0081:
  9066 00005495 488B0B                  	mov rcx, [rbx]
  9067 00005498 48894B08                	mov [rbx + 8], rcx
  9068 0000549C 4883EB08                	sub rbx, 8
  9069 000054A0 4839DC                  	cmp rsp, rbx
  9070 000054A3 7EF0                    	jle .L_lambda_opt_extra_shift_process_0081
  9071                                  .L_lambda_opt_extra_shift_process_end_0081:
  9072 000054A5 4883C408                	add rsp, 8
  9073 000054A9 488B5C2410              	mov rbx, [rsp + 8 * 2]
  9074 000054AE 4883EB01                	sub rbx, 1
  9075 000054B2 48895C2410              	mov [rsp + 8 * 2], rbx
  9076 000054B7 48837C241003            	cmp qword [rsp + 8 * 2], 3
  9077 000054BD 7FAF                    	jg .L_lambda_opt_stack_shrink_loop_0081
  9078                                  .L_lambda_opt_stack_shrink_loop_exit_0081:
  9079 000054BF 488B4C2410              	mov rcx, [rsp + 8 * 2]
  9080 000054C4 488B5CCC10              	mov rbx, qword [rsp + 8 * (2 + rcx)]
  9081 000054C9 BF11000000              	mov rdi, (1 + 8 + 8)
  9082 000054CE E813FD0000              	call malloc
  9083 000054D3 C60021                  	mov byte[rax], T_pair
  9084 000054D6 48895009                	mov SOB_PAIR_CDR(rax), rdx
  9085 000054DA 48895801                	mov SOB_PAIR_CAR(rax), rbx
  9086 000054DE 488944CC10              	mov [rsp + 8 * (2 + rcx)], rax
  9087                                  .L_lambda_opt_stack_adjusted_0081:
  9088 000054E3 C8000000                	enter 0, 0
  9089                                  	; preparing a tail-call
  9090 000054E7 488B4530                	mov rax, PARAM(2)	; param ss
  9091 000054EB 50                      	push rax
  9092 000054EC 488B4528                	mov rax, PARAM(1)	; param unit
  9093 000054F0 50                      	push rax
  9094 000054F1 488B4520                	mov rax, PARAM(0)	; param f
  9095 000054F5 50                      	push rax
  9096 000054F6 6A03                    	push 3	; arg count
  9097 000054F8 488B4510                	mov rax, ENV
  9098 000054FC 488B00                  	mov rax, qword [rax + 8 * 0]
  9099 000054FF 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  9100 00005502 488B00                  	mov rax, qword [rax]
  9101 00005505 803804                  	cmp byte [rax], T_closure
  9102 00005508 0F852FFC0000            	jne L_error_non_closure
  9103 0000550E FF7001                  	push SOB_CLOSURE_ENV(rax)
  9104                                  
  9105                                  	; recycling the current frame
  9106 00005511 FF7508                  	push qword [rbp + 8 * 1]	; old return address
  9107 00005514 FF7500                  	push qword [rbp]	; old frame-pointer
  9108 00005517 B907000000              	mov rcx, 7
  9109 0000551C 488B5D18                	mov rbx, COUNT
  9110 00005520 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
  9111 00005525 488D55F8                	lea rdx, [rbp - 8]
  9112                                  .L_tc_recycle_frame_loop_04ed:
  9113 00005529 4883F900                	cmp rcx, 0
  9114 0000552D 7413                    	je .L_tc_recycle_frame_done_04ed
  9115 0000552F 488B32                  	mov rsi, qword [rdx]
  9116 00005532 488933                  	mov qword [rbx], rsi
  9117 00005535 48FFC9                  	dec rcx
  9118 00005538 4883EB08                	sub rbx, 8
  9119 0000553C 4883EA08                	sub rdx, 8
  9120 00005540 EBE7                    	jmp .L_tc_recycle_frame_loop_04ed
  9121                                  .L_tc_recycle_frame_done_04ed:
  9122 00005542 488D6308                	lea rsp, [rbx + 8]
  9123 00005546 5D                      	pop rbp
  9124 00005547 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9125 0000554A C9                      	leave
  9126 0000554B C22800                  	ret AND_KILL_FRAME(3)
  9127                                  .L_lambda_opt_end_0081:	; new closure is in rax
  9128 0000554E C9                      	leave
  9129 0000554F C21800                  	ret AND_KILL_FRAME(1)
  9130                                  .L_lambda_simple_end_03d3:	; new closure is in rax
  9131 00005552 803804                  	cmp byte [rax], T_closure
  9132 00005555 0F85E2FB0000            	jne L_error_non_closure
  9133 0000555B FF7001                  	push SOB_CLOSURE_ENV(rax)
  9134 0000555E FF5009                  	call SOB_CLOSURE_CODE(rax)
  9135 00005561 48890425[1C190000]      	mov qword [free_var_94], rax
  9136 00005569 48B8-                   	mov rax, sob_void
  9136 0000556B [0000000000000000] 
  9137                                  
  9138 00005573 4889C7                  	mov rdi, rax
  9139 00005576 E8C0FE0000              	call print_sexpr_if_not_void
  9140                                  
  9141                                  	; preparing a non-tail-call
  9142 0000557B 48B8-                   	mov rax, L_constants + 2335
  9142 0000557D [1F09000000000000] 
  9143 00005585 50                      	push rax
  9144 00005586 6A01                    	push 1	; arg count
  9145 00005588 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  9146 0000558D E854FC0000              	call malloc
  9147 00005592 50                      	push rax
  9148 00005593 BF00000000              	mov rdi, 8 * 0	; new rib
  9149 00005598 E849FC0000              	call malloc
  9150 0000559D 50                      	push rax
  9151 0000559E BF08000000              	mov rdi, 8 * 1	; extended env
  9152 000055A3 E83EFC0000              	call malloc
  9153 000055A8 488B7D10                	mov rdi, ENV
  9154 000055AC BE00000000              	mov rsi, 0
  9155 000055B1 BA01000000              	mov rdx, 1
  9156                                  .L_lambda_simple_env_loop_03d5:	; ext_env[i + 1] <-- env[i]
  9157 000055B6 4883FE00                	cmp rsi, 0
  9158 000055BA 7410                    	je .L_lambda_simple_env_end_03d5
  9159 000055BC 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  9160 000055C0 48890CD0                	mov qword [rax + 8 * rdx], rcx
  9161 000055C4 48FFC6                  	inc rsi
  9162 000055C7 48FFC2                  	inc rdx
  9163 000055CA EBEA                    	jmp .L_lambda_simple_env_loop_03d5
  9164                                  .L_lambda_simple_env_end_03d5:
  9165 000055CC 5B                      	pop rbx
  9166 000055CD BE00000000              	mov rsi, 0
  9167                                  .L_lambda_simple_params_loop_03d5:	; copy params
  9168 000055D2 4883FE00                	cmp rsi, 0
  9169 000055D6 740E                    	je .L_lambda_simple_params_end_03d5
  9170 000055D8 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  9171 000055DD 488914F3                	mov qword [rbx + 8 * rsi], rdx
  9172 000055E1 48FFC6                  	inc rsi
  9173 000055E4 EBEC                    	jmp .L_lambda_simple_params_loop_03d5
  9174                                  .L_lambda_simple_params_end_03d5:
  9175 000055E6 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
  9176 000055E9 4889C3                  	mov rbx, rax
  9177 000055EC 58                      	pop rax
  9178 000055ED C60004                  	mov byte [rax], T_closure
  9179 000055F0 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  9180 000055F4 48C74009[01560000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03d5
  9181 000055FC E92B040000              	jmp .L_lambda_simple_end_03d5
  9182                                  .L_lambda_simple_code_03d5:	; lambda-simple body
  9183 00005601 48837C241001            	cmp qword [rsp + 8 * 2], 1
  9184 00005607 740B                    	je .L_lambda_simple_arity_check_ok_03d5
  9185 00005609 FF742410                	push qword [rsp + 8 * 2]
  9186 0000560D 6A01                    	push 1
  9187 0000560F E98BFB0000              	jmp L_error_incorrect_arity_simple
  9188                                  .L_lambda_simple_arity_check_ok_03d5:
  9189 00005614 C8000000                	enter 0, 0
  9190                                  
  9191 00005618 BF08000000              	mov rdi, 8
  9192 0000561D E8C4FB0000              	call malloc
  9193 00005622 488B5D20                	mov rbx, PARAM(0)	; param run
  9194 00005626 488918                  	mov [rax], rbx	; box run
  9195 00005629 48894520                	mov PARAM(0), rax	; replace param with box
  9196 0000562D 48B8-                   	mov rax, sob_void
  9196 0000562F [0000000000000000] 
  9197                                  
  9198 00005637 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  9199 0000563C E8A5FB0000              	call malloc
  9200 00005641 50                      	push rax
  9201 00005642 BF08000000              	mov rdi, 8 * 1	; new rib
  9202 00005647 E89AFB0000              	call malloc
  9203 0000564C 50                      	push rax
  9204 0000564D BF10000000              	mov rdi, 8 * 2	; extended env
  9205 00005652 E88FFB0000              	call malloc
  9206 00005657 488B7D10                	mov rdi, ENV
  9207 0000565B BE00000000              	mov rsi, 0
  9208 00005660 BA01000000              	mov rdx, 1
  9209                                  .L_lambda_simple_env_loop_03d6:	; ext_env[i + 1] <-- env[i]
  9210 00005665 4883FE01                	cmp rsi, 1
  9211 00005669 7410                    	je .L_lambda_simple_env_end_03d6
  9212 0000566B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  9213 0000566F 48890CD0                	mov qword [rax + 8 * rdx], rcx
  9214 00005673 48FFC6                  	inc rsi
  9215 00005676 48FFC2                  	inc rdx
  9216 00005679 EBEA                    	jmp .L_lambda_simple_env_loop_03d6
  9217                                  .L_lambda_simple_env_end_03d6:
  9218 0000567B 5B                      	pop rbx
  9219 0000567C BE00000000              	mov rsi, 0
  9220                                  .L_lambda_simple_params_loop_03d6:	; copy params
  9221 00005681 4883FE01                	cmp rsi, 1
  9222 00005685 740E                    	je .L_lambda_simple_params_end_03d6
  9223 00005687 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  9224 0000568C 488914F3                	mov qword [rbx + 8 * rsi], rdx
  9225 00005690 48FFC6                  	inc rsi
  9226 00005693 EBEC                    	jmp .L_lambda_simple_params_loop_03d6
  9227                                  .L_lambda_simple_params_end_03d6:
  9228 00005695 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
  9229 00005698 4889C3                  	mov rbx, rax
  9230 0000569B 58                      	pop rax
  9231 0000569C C60004                  	mov byte [rax], T_closure
  9232 0000569F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  9233 000056A3 48C74009[B0560000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03d6
  9234 000056AB E9B0010000              	jmp .L_lambda_simple_end_03d6
  9235                                  .L_lambda_simple_code_03d6:	; lambda-simple body
  9236 000056B0 48837C241003            	cmp qword [rsp + 8 * 2], 3
  9237 000056B6 740B                    	je .L_lambda_simple_arity_check_ok_03d6
  9238 000056B8 FF742410                	push qword [rsp + 8 * 2]
  9239 000056BC 6A03                    	push 3
  9240 000056BE E9DCFA0000              	jmp L_error_incorrect_arity_simple
  9241                                  .L_lambda_simple_arity_check_ok_03d6:
  9242 000056C3 C8000000                	enter 0, 0
  9243                                  	; preparing a non-tail-call
  9244 000056C7 488B4530                	mov rax, PARAM(2)	; param ss
  9245 000056CB 50                      	push rax
  9246 000056CC 488B0425[3C1B0000]      	mov rax, qword [free_var_126]	; free var null?
  9247 000056D4 803805                  	cmp byte [rax], T_undefined
  9248 000056D7 0F84DCF90000            	je L_error_fvar_undefined
  9249 000056DD 50                      	push rax
  9250 000056DE 6A02                    	push 2	; arg count
  9251 000056E0 488B0425[801B0000]      	mov rax, qword [free_var_130]	; free var ormap
  9252 000056E8 803805                  	cmp byte [rax], T_undefined
  9253 000056EB 0F84C8F90000            	je L_error_fvar_undefined
  9254 000056F1 803804                  	cmp byte [rax], T_closure
  9255 000056F4 0F8543FA0000            	jne L_error_non_closure
  9256 000056FA FF7001                  	push SOB_CLOSURE_ENV(rax)
  9257 000056FD FF5009                  	call SOB_CLOSURE_CODE(rax)
  9258 00005700 483D[02000000]          	cmp rax, sob_boolean_false
  9259 00005706 7409                    	je .L_if_else_02ba
  9260 00005708 488B4528                	mov rax, PARAM(1)	; param unit
  9261 0000570C E94B010000              	jmp .L_if_end_02ba
  9262                                  .L_if_else_02ba:
  9263                                  	; preparing a tail-call
  9264                                  	; preparing a non-tail-call
  9265                                  	; preparing a non-tail-call
  9266 00005711 48B8-                   	mov rax, L_constants + 1
  9266 00005713 [0100000000000000] 
  9267 0000571B 50                      	push rax
  9268                                  	; preparing a non-tail-call
  9269                                  	; preparing a non-tail-call
  9270 0000571C 488B4530                	mov rax, PARAM(2)	; param ss
  9271 00005720 50                      	push rax
  9272 00005721 488B0425[73170000]      	mov rax, qword [free_var_69]	; free var cdr
  9273 00005729 803805                  	cmp byte [rax], T_undefined
  9274 0000572C 0F8487F90000            	je L_error_fvar_undefined
  9275 00005732 50                      	push rax
  9276 00005733 6A02                    	push 2	; arg count
  9277 00005735 488B0425[F81A0000]      	mov rax, qword [free_var_122]	; free var map
  9278 0000573D 803805                  	cmp byte [rax], T_undefined
  9279 00005740 0F8473F90000            	je L_error_fvar_undefined
  9280 00005746 803804                  	cmp byte [rax], T_closure
  9281 00005749 0F85EEF90000            	jne L_error_non_closure
  9282 0000574F FF7001                  	push SOB_CLOSURE_ENV(rax)
  9283 00005752 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9284 00005755 50                      	push rax
  9285 00005756 488B4528                	mov rax, PARAM(1)	; param unit
  9286 0000575A 50                      	push rax
  9287 0000575B 488B4520                	mov rax, PARAM(0)	; param f
  9288 0000575F 50                      	push rax
  9289 00005760 6A03                    	push 3	; arg count
  9290 00005762 488B4510                	mov rax, ENV
  9291 00005766 488B00                  	mov rax, qword [rax + 8 * 0]
  9292 00005769 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  9293 0000576C 488B00                  	mov rax, qword [rax]
  9294 0000576F 803804                  	cmp byte [rax], T_closure
  9295 00005772 0F85C5F90000            	jne L_error_non_closure
  9296 00005778 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9297 0000577B FF5009                  	call SOB_CLOSURE_CODE(rax)
  9298 0000577E 50                      	push rax
  9299 0000577F 6A02                    	push 2	; arg count
  9300 00005781 488B0425[83180000]      	mov rax, qword [free_var_85]	; free var cons
  9301 00005789 803805                  	cmp byte [rax], T_undefined
  9302 0000578C 0F8427F90000            	je L_error_fvar_undefined
  9303 00005792 803804                  	cmp byte [rax], T_closure
  9304 00005795 0F85A2F90000            	jne L_error_non_closure
  9305 0000579B FF7001                  	push SOB_CLOSURE_ENV(rax)
  9306 0000579E FF5009                  	call SOB_CLOSURE_CODE(rax)
  9307 000057A1 50                      	push rax
  9308                                  	; preparing a non-tail-call
  9309 000057A2 488B4530                	mov rax, PARAM(2)	; param ss
  9310 000057A6 50                      	push rax
  9311 000057A7 488B0425[74160000]      	mov rax, qword [free_var_54]	; free var car
  9312 000057AF 803805                  	cmp byte [rax], T_undefined
  9313 000057B2 0F8401F90000            	je L_error_fvar_undefined
  9314 000057B8 50                      	push rax
  9315 000057B9 6A02                    	push 2	; arg count
  9316 000057BB 488B0425[F81A0000]      	mov rax, qword [free_var_122]	; free var map
  9317 000057C3 803805                  	cmp byte [rax], T_undefined
  9318 000057C6 0F84EDF80000            	je L_error_fvar_undefined
  9319 000057CC 803804                  	cmp byte [rax], T_closure
  9320 000057CF 0F8568F90000            	jne L_error_non_closure
  9321 000057D5 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9322 000057D8 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9323 000057DB 50                      	push rax
  9324 000057DC 6A02                    	push 2	; arg count
  9325 000057DE 488B0425[FE140000]      	mov rax, qword [free_var_32]	; free var append
  9326 000057E6 803805                  	cmp byte [rax], T_undefined
  9327 000057E9 0F84CAF80000            	je L_error_fvar_undefined
  9328 000057EF 803804                  	cmp byte [rax], T_closure
  9329 000057F2 0F8545F90000            	jne L_error_non_closure
  9330 000057F8 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9331 000057FB FF5009                  	call SOB_CLOSURE_CODE(rax)
  9332 000057FE 50                      	push rax
  9333 000057FF 488B4520                	mov rax, PARAM(0)	; param f
  9334 00005803 50                      	push rax
  9335 00005804 6A02                    	push 2	; arg count
  9336 00005806 488B0425[0F150000]      	mov rax, qword [free_var_33]	; free var apply
  9337 0000580E 803805                  	cmp byte [rax], T_undefined
  9338 00005811 0F84A2F80000            	je L_error_fvar_undefined
  9339 00005817 803804                  	cmp byte [rax], T_closure
  9340 0000581A 0F851DF90000            	jne L_error_non_closure
  9341 00005820 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9342                                  
  9343                                  	; recycling the current frame
  9344 00005823 FF7508                  	push qword [rbp + 8 * 1]	; old return address
  9345 00005826 FF7500                  	push qword [rbp]	; old frame-pointer
  9346 00005829 B906000000              	mov rcx, 6
  9347 0000582E 488B5D18                	mov rbx, COUNT
  9348 00005832 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
  9349 00005837 488D55F8                	lea rdx, [rbp - 8]
  9350                                  .L_tc_recycle_frame_loop_04ee:
  9351 0000583B 4883F900                	cmp rcx, 0
  9352 0000583F 7413                    	je .L_tc_recycle_frame_done_04ee
  9353 00005841 488B32                  	mov rsi, qword [rdx]
  9354 00005844 488933                  	mov qword [rbx], rsi
  9355 00005847 48FFC9                  	dec rcx
  9356 0000584A 4883EB08                	sub rbx, 8
  9357 0000584E 4883EA08                	sub rdx, 8
  9358 00005852 EBE7                    	jmp .L_tc_recycle_frame_loop_04ee
  9359                                  .L_tc_recycle_frame_done_04ee:
  9360 00005854 488D6308                	lea rsp, [rbx + 8]
  9361 00005858 5D                      	pop rbp
  9362 00005859 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9363                                  .L_if_end_02ba:
  9364 0000585C C9                      	leave
  9365 0000585D C22800                  	ret AND_KILL_FRAME(3)
  9366                                  .L_lambda_simple_end_03d6:	; new closure is in rax
  9367                                  
  9368 00005860 50                      	push rax
  9369 00005861 488B4520                	mov rax, PARAM(0)	; param run
  9370                                  
  9371 00005865 8F00                    	pop qword[rax]
  9372 00005867 48B8-                   	mov rax, sob_void
  9372 00005869 [0000000000000000] 
  9373                                  
  9374 00005871 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  9375 00005876 E86BF90000              	call malloc
  9376 0000587B 50                      	push rax
  9377 0000587C BF08000000              	mov rdi, 8 * 1	; new rib
  9378 00005881 E860F90000              	call malloc
  9379 00005886 50                      	push rax
  9380 00005887 BF10000000              	mov rdi, 8 * 2	; extended env
  9381 0000588C E855F90000              	call malloc
  9382 00005891 488B7D10                	mov rdi, ENV
  9383 00005895 BE00000000              	mov rsi, 0
  9384 0000589A BA01000000              	mov rdx, 1
  9385                                  .L_lambda_opt_env_loop_0082:	; ext_env[i + 1] <-- env[i]
  9386 0000589F 4883FE01                	cmp rsi, 1
  9387 000058A3 7410                    	je .L_lambda_opt_env_end_0082
  9388 000058A5 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  9389 000058A9 48890CD0                	mov qword [rax + 8 * rdx], rcx
  9390 000058AD 48FFC6                  	inc rsi
  9391 000058B0 48FFC2                  	inc rdx
  9392 000058B3 EBEA                    	jmp .L_lambda_opt_env_loop_0082
  9393                                  .L_lambda_opt_env_end_0082:
  9394 000058B5 5B                      	pop rbx
  9395 000058B6 BE00000000              	mov rsi, 0
  9396                                  .L_lambda_opt_params_loop_0082:	; copy params
  9397 000058BB 4883FE01                	cmp rsi, 1
  9398 000058BF 740E                    	je .L_lambda_opt_params_end_0082
  9399 000058C1 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  9400 000058C6 488914F3                	mov qword [rbx + 8 * rsi], rdx
  9401 000058CA 48FFC6                  	inc rsi
  9402 000058CD EBEC                    	jmp .L_lambda_opt_params_loop_0082
  9403                                  .L_lambda_opt_params_end_0082:
  9404 000058CF 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
  9405 000058D2 4889C3                  	mov rbx, rax
  9406 000058D5 58                      	pop rax
  9407 000058D6 C60004                  	mov byte [rax], T_closure
  9408 000058D9 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  9409 000058DD 48C74009[EA580000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0082
  9410 000058E5 E93E010000              	jmp .L_lambda_opt_end_0082
  9411                                  .L_lambda_opt_code_0082:	; lambda-simple body
  9412 000058EA 48837C241002            	cmp qword [rsp + 8 * 2], 2 ;	 check num of args
  9413 000058F0 740D                    	je .L_lambda_opt_arity_check_exact_0082 ;	 if equal, go to exact arity
  9414 000058F2 7F42                    	jg .L_lambda_opt_arity_check_more_0082 ;	 if greater than, go to arity more
  9415 000058F4 FF742410                	push qword [rsp + 8 * 2] ;	 else, throw opt arity error
  9416 000058F8 6A02                    	push 2
  9417 000058FA E9B4F80000              	jmp L_error_incorrect_arity_opt
  9418                                  .L_lambda_opt_arity_check_exact_0082:
  9419 000058FF 488B442410              	mov rax, qword [rsp + 8 * 2] ;	 number of args
  9420 00005904 488D5CC410              	lea rbx, [rsp + 8 * (2 + rax)] ;	 address of last element
  9421 00005909 4883EC08                	sub rsp, 8
  9422 0000590D 488D0C24                	lea rcx, [rsp + 0] ;	 new start
  9423                                  .L_lambda_opt_shift_entry_0082:
  9424 00005911 488B5108                	mov rdx, [rcx + 8]
  9425 00005915 488911                  	mov [rcx], rdx
  9426 00005918 4883C108                	add rcx, 8
  9427 0000591C 4839CB                  	cmp rbx, rcx
  9428 0000591F 75F0                    	jne .L_lambda_opt_shift_entry_0082
  9429                                  .L_lambda_opt_shift_exit_0082:
  9430 00005921 48C703[01000000]        	mov qword[rbx], sob_nil ;	 place nil
  9431 00005928 4883C001                	add rax, 1
  9432 0000592C 4889442410              	mov qword [rsp + 8 * 2], rax
  9433 00005931 E987000000              	jmp .L_lambda_opt_stack_adjusted_0082
  9434                                  .L_lambda_opt_arity_check_more_0082:
  9435 00005936 48BA-                   	mov rdx, sob_nil ;	 base cdr
  9435 00005938 [0100000000000000] 
  9436 00005940 48837C241003            	cmp qword [rsp + 8 * 2], 3
  9437 00005946 7451                    	je .L_lambda_opt_stack_shrink_loop_exit_0082
  9438                                  .L_lambda_opt_stack_shrink_loop_0082:
  9439 00005948 BF11000000              	mov rdi, (1 + 8 + 8)
  9440 0000594D E894F80000              	call malloc
  9441 00005952 C60021                  	mov byte[rax], T_pair
  9442 00005955 48895009                	mov SOB_PAIR_CDR(rax), rdx
  9443 00005959 4889C2                  	mov rdx, rax
  9444 0000595C 488B442410              	mov rax, qword [rsp + 8 * 2]
  9445 00005961 488B5CC410              	mov rbx, qword [rsp + 8 * (2 + rax)]
  9446 00005966 48895A01                	mov SOB_PAIR_CAR(rdx), rbx
  9447 0000596A 488D5CC408              	lea rbx, [rsp + 8 * (2 + rax - 1)]
  9448                                  .L_lambda_opt_extra_shift_process_0082:
  9449 0000596F 488B0B                  	mov rcx, [rbx]
  9450 00005972 48894B08                	mov [rbx + 8], rcx
  9451 00005976 4883EB08                	sub rbx, 8
  9452 0000597A 4839DC                  	cmp rsp, rbx
  9453 0000597D 7EF0                    	jle .L_lambda_opt_extra_shift_process_0082
  9454                                  .L_lambda_opt_extra_shift_process_end_0082:
  9455 0000597F 4883C408                	add rsp, 8
  9456 00005983 488B5C2410              	mov rbx, [rsp + 8 * 2]
  9457 00005988 4883EB01                	sub rbx, 1
  9458 0000598C 48895C2410              	mov [rsp + 8 * 2], rbx
  9459 00005991 48837C241003            	cmp qword [rsp + 8 * 2], 3
  9460 00005997 7FAF                    	jg .L_lambda_opt_stack_shrink_loop_0082
  9461                                  .L_lambda_opt_stack_shrink_loop_exit_0082:
  9462 00005999 488B4C2410              	mov rcx, [rsp + 8 * 2]
  9463 0000599E 488B5CCC10              	mov rbx, qword [rsp + 8 * (2 + rcx)]
  9464 000059A3 BF11000000              	mov rdi, (1 + 8 + 8)
  9465 000059A8 E839F80000              	call malloc
  9466 000059AD C60021                  	mov byte[rax], T_pair
  9467 000059B0 48895009                	mov SOB_PAIR_CDR(rax), rdx
  9468 000059B4 48895801                	mov SOB_PAIR_CAR(rax), rbx
  9469 000059B8 488944CC10              	mov [rsp + 8 * (2 + rcx)], rax
  9470                                  .L_lambda_opt_stack_adjusted_0082:
  9471 000059BD C8000000                	enter 0, 0
  9472                                  	; preparing a tail-call
  9473 000059C1 488B4530                	mov rax, PARAM(2)	; param ss
  9474 000059C5 50                      	push rax
  9475 000059C6 488B4528                	mov rax, PARAM(1)	; param unit
  9476 000059CA 50                      	push rax
  9477 000059CB 488B4520                	mov rax, PARAM(0)	; param f
  9478 000059CF 50                      	push rax
  9479 000059D0 6A03                    	push 3	; arg count
  9480 000059D2 488B4510                	mov rax, ENV
  9481 000059D6 488B00                  	mov rax, qword [rax + 8 * 0]
  9482 000059D9 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  9483 000059DC 488B00                  	mov rax, qword [rax]
  9484 000059DF 803804                  	cmp byte [rax], T_closure
  9485 000059E2 0F8555F70000            	jne L_error_non_closure
  9486 000059E8 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9487                                  
  9488                                  	; recycling the current frame
  9489 000059EB FF7508                  	push qword [rbp + 8 * 1]	; old return address
  9490 000059EE FF7500                  	push qword [rbp]	; old frame-pointer
  9491 000059F1 B907000000              	mov rcx, 7
  9492 000059F6 488B5D18                	mov rbx, COUNT
  9493 000059FA 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
  9494 000059FF 488D55F8                	lea rdx, [rbp - 8]
  9495                                  .L_tc_recycle_frame_loop_04ef:
  9496 00005A03 4883F900                	cmp rcx, 0
  9497 00005A07 7413                    	je .L_tc_recycle_frame_done_04ef
  9498 00005A09 488B32                  	mov rsi, qword [rdx]
  9499 00005A0C 488933                  	mov qword [rbx], rsi
  9500 00005A0F 48FFC9                  	dec rcx
  9501 00005A12 4883EB08                	sub rbx, 8
  9502 00005A16 4883EA08                	sub rdx, 8
  9503 00005A1A EBE7                    	jmp .L_tc_recycle_frame_loop_04ef
  9504                                  .L_tc_recycle_frame_done_04ef:
  9505 00005A1C 488D6308                	lea rsp, [rbx + 8]
  9506 00005A20 5D                      	pop rbp
  9507 00005A21 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9508 00005A24 C9                      	leave
  9509 00005A25 C22800                  	ret AND_KILL_FRAME(3)
  9510                                  .L_lambda_opt_end_0082:	; new closure is in rax
  9511 00005A28 C9                      	leave
  9512 00005A29 C21800                  	ret AND_KILL_FRAME(1)
  9513                                  .L_lambda_simple_end_03d5:	; new closure is in rax
  9514 00005A2C 803804                  	cmp byte [rax], T_closure
  9515 00005A2F 0F8508F70000            	jne L_error_non_closure
  9516 00005A35 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9517 00005A38 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9518 00005A3B 48890425[2D190000]      	mov qword [free_var_95], rax
  9519 00005A43 48B8-                   	mov rax, sob_void
  9519 00005A45 [0000000000000000] 
  9520                                  
  9521 00005A4D 4889C7                  	mov rdi, rax
  9522 00005A50 E8E6F90000              	call print_sexpr_if_not_void
  9523                                  
  9524                                  	; preparing a non-tail-call
  9525 00005A55 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  9526 00005A5A E887F70000              	call malloc
  9527 00005A5F 50                      	push rax
  9528 00005A60 BF00000000              	mov rdi, 8 * 0	; new rib
  9529 00005A65 E87CF70000              	call malloc
  9530 00005A6A 50                      	push rax
  9531 00005A6B BF08000000              	mov rdi, 8 * 1	; extended env
  9532 00005A70 E871F70000              	call malloc
  9533 00005A75 488B7D10                	mov rdi, ENV
  9534 00005A79 BE00000000              	mov rsi, 0
  9535 00005A7E BA01000000              	mov rdx, 1
  9536                                  .L_lambda_simple_env_loop_03d7:	; ext_env[i + 1] <-- env[i]
  9537 00005A83 4883FE00                	cmp rsi, 0
  9538 00005A87 7410                    	je .L_lambda_simple_env_end_03d7
  9539 00005A89 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  9540 00005A8D 48890CD0                	mov qword [rax + 8 * rdx], rcx
  9541 00005A91 48FFC6                  	inc rsi
  9542 00005A94 48FFC2                  	inc rdx
  9543 00005A97 EBEA                    	jmp .L_lambda_simple_env_loop_03d7
  9544                                  .L_lambda_simple_env_end_03d7:
  9545 00005A99 5B                      	pop rbx
  9546 00005A9A BE00000000              	mov rsi, 0
  9547                                  .L_lambda_simple_params_loop_03d7:	; copy params
  9548 00005A9F 4883FE00                	cmp rsi, 0
  9549 00005AA3 740E                    	je .L_lambda_simple_params_end_03d7
  9550 00005AA5 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  9551 00005AAA 488914F3                	mov qword [rbx + 8 * rsi], rdx
  9552 00005AAE 48FFC6                  	inc rsi
  9553 00005AB1 EBEC                    	jmp .L_lambda_simple_params_loop_03d7
  9554                                  .L_lambda_simple_params_end_03d7:
  9555 00005AB3 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
  9556 00005AB6 4889C3                  	mov rbx, rax
  9557 00005AB9 58                      	pop rax
  9558 00005ABA C60004                  	mov byte [rax], T_closure
  9559 00005ABD 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  9560 00005AC1 48C74009[CE5A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03d7
  9561 00005AC9 E989000000              	jmp .L_lambda_simple_end_03d7
  9562                                  .L_lambda_simple_code_03d7:	; lambda-simple body
  9563 00005ACE 48837C241000            	cmp qword [rsp + 8 * 2], 0
  9564 00005AD4 740B                    	je .L_lambda_simple_arity_check_ok_03d7
  9565 00005AD6 FF742410                	push qword [rsp + 8 * 2]
  9566 00005ADA 6A00                    	push 0
  9567 00005ADC E9BEF60000              	jmp L_error_incorrect_arity_simple
  9568                                  .L_lambda_simple_arity_check_ok_03d7:
  9569 00005AE1 C8000000                	enter 0, 0
  9570                                  	; preparing a tail-call
  9571 00005AE5 48B8-                   	mov rax, L_constants + 2691
  9571 00005AE7 [830A000000000000] 
  9572 00005AEF 50                      	push rax
  9573 00005AF0 48B8-                   	mov rax, L_constants + 2682
  9573 00005AF2 [7A0A000000000000] 
  9574 00005AFA 50                      	push rax
  9575 00005AFB 6A02                    	push 2	; arg count
  9576 00005AFD 488B0425[D8180000]      	mov rax, qword [free_var_90]	; free var error
  9577 00005B05 803805                  	cmp byte [rax], T_undefined
  9578 00005B08 0F84ABF50000            	je L_error_fvar_undefined
  9579 00005B0E 803804                  	cmp byte [rax], T_closure
  9580 00005B11 0F8526F60000            	jne L_error_non_closure
  9581 00005B17 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9582                                  
  9583                                  	; recycling the current frame
  9584 00005B1A FF7508                  	push qword [rbp + 8 * 1]	; old return address
  9585 00005B1D FF7500                  	push qword [rbp]	; old frame-pointer
  9586 00005B20 B906000000              	mov rcx, 6
  9587 00005B25 488B5D18                	mov rbx, COUNT
  9588 00005B29 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
  9589 00005B2E 488D55F8                	lea rdx, [rbp - 8]
  9590                                  .L_tc_recycle_frame_loop_04f0:
  9591 00005B32 4883F900                	cmp rcx, 0
  9592 00005B36 7413                    	je .L_tc_recycle_frame_done_04f0
  9593 00005B38 488B32                  	mov rsi, qword [rdx]
  9594 00005B3B 488933                  	mov qword [rbx], rsi
  9595 00005B3E 48FFC9                  	dec rcx
  9596 00005B41 4883EB08                	sub rbx, 8
  9597 00005B45 4883EA08                	sub rdx, 8
  9598 00005B49 EBE7                    	jmp .L_tc_recycle_frame_loop_04f0
  9599                                  .L_tc_recycle_frame_done_04f0:
  9600 00005B4B 488D6308                	lea rsp, [rbx + 8]
  9601 00005B4F 5D                      	pop rbp
  9602 00005B50 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9603 00005B53 C9                      	leave
  9604 00005B54 C21000                  	ret AND_KILL_FRAME(0)
  9605                                  .L_lambda_simple_end_03d7:	; new closure is in rax
  9606 00005B57 50                      	push rax
  9607 00005B58 6A01                    	push 1	; arg count
  9608 00005B5A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  9609 00005B5F E882F60000              	call malloc
  9610 00005B64 50                      	push rax
  9611 00005B65 BF00000000              	mov rdi, 8 * 0	; new rib
  9612 00005B6A E877F60000              	call malloc
  9613 00005B6F 50                      	push rax
  9614 00005B70 BF08000000              	mov rdi, 8 * 1	; extended env
  9615 00005B75 E86CF60000              	call malloc
  9616 00005B7A 488B7D10                	mov rdi, ENV
  9617 00005B7E BE00000000              	mov rsi, 0
  9618 00005B83 BA01000000              	mov rdx, 1
  9619                                  .L_lambda_simple_env_loop_03d8:	; ext_env[i + 1] <-- env[i]
  9620 00005B88 4883FE00                	cmp rsi, 0
  9621 00005B8C 7410                    	je .L_lambda_simple_env_end_03d8
  9622 00005B8E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  9623 00005B92 48890CD0                	mov qword [rax + 8 * rdx], rcx
  9624 00005B96 48FFC6                  	inc rsi
  9625 00005B99 48FFC2                  	inc rdx
  9626 00005B9C EBEA                    	jmp .L_lambda_simple_env_loop_03d8
  9627                                  .L_lambda_simple_env_end_03d8:
  9628 00005B9E 5B                      	pop rbx
  9629 00005B9F BE00000000              	mov rsi, 0
  9630                                  .L_lambda_simple_params_loop_03d8:	; copy params
  9631 00005BA4 4883FE00                	cmp rsi, 0
  9632 00005BA8 740E                    	je .L_lambda_simple_params_end_03d8
  9633 00005BAA 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  9634 00005BAF 488914F3                	mov qword [rbx + 8 * rsi], rdx
  9635 00005BB3 48FFC6                  	inc rsi
  9636 00005BB6 EBEC                    	jmp .L_lambda_simple_params_loop_03d8
  9637                                  .L_lambda_simple_params_end_03d8:
  9638 00005BB8 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
  9639 00005BBB 4889C3                  	mov rbx, rax
  9640 00005BBE 58                      	pop rax
  9641 00005BBF C60004                  	mov byte [rax], T_closure
  9642 00005BC2 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  9643 00005BC6 48C74009[D35B0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03d8
  9644 00005BCE E9620B0000              	jmp .L_lambda_simple_end_03d8
  9645                                  .L_lambda_simple_code_03d8:	; lambda-simple body
  9646 00005BD3 48837C241001            	cmp qword [rsp + 8 * 2], 1
  9647 00005BD9 740B                    	je .L_lambda_simple_arity_check_ok_03d8
  9648 00005BDB FF742410                	push qword [rsp + 8 * 2]
  9649 00005BDF 6A01                    	push 1
  9650 00005BE1 E9B9F50000              	jmp L_error_incorrect_arity_simple
  9651                                  .L_lambda_simple_arity_check_ok_03d8:
  9652 00005BE6 C8000000                	enter 0, 0
  9653                                  	; preparing a tail-call
  9654 00005BEA BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  9655 00005BEF E8F2F50000              	call malloc
  9656 00005BF4 50                      	push rax
  9657 00005BF5 BF08000000              	mov rdi, 8 * 1	; new rib
  9658 00005BFA E8E7F50000              	call malloc
  9659 00005BFF 50                      	push rax
  9660 00005C00 BF10000000              	mov rdi, 8 * 2	; extended env
  9661 00005C05 E8DCF50000              	call malloc
  9662 00005C0A 488B7D10                	mov rdi, ENV
  9663 00005C0E BE00000000              	mov rsi, 0
  9664 00005C13 BA01000000              	mov rdx, 1
  9665                                  .L_lambda_simple_env_loop_03d9:	; ext_env[i + 1] <-- env[i]
  9666 00005C18 4883FE01                	cmp rsi, 1
  9667 00005C1C 7410                    	je .L_lambda_simple_env_end_03d9
  9668 00005C1E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  9669 00005C22 48890CD0                	mov qword [rax + 8 * rdx], rcx
  9670 00005C26 48FFC6                  	inc rsi
  9671 00005C29 48FFC2                  	inc rdx
  9672 00005C2C EBEA                    	jmp .L_lambda_simple_env_loop_03d9
  9673                                  .L_lambda_simple_env_end_03d9:
  9674 00005C2E 5B                      	pop rbx
  9675 00005C2F BE00000000              	mov rsi, 0
  9676                                  .L_lambda_simple_params_loop_03d9:	; copy params
  9677 00005C34 4883FE01                	cmp rsi, 1
  9678 00005C38 740E                    	je .L_lambda_simple_params_end_03d9
  9679 00005C3A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  9680 00005C3F 488914F3                	mov qword [rbx + 8 * rsi], rdx
  9681 00005C43 48FFC6                  	inc rsi
  9682 00005C46 EBEC                    	jmp .L_lambda_simple_params_loop_03d9
  9683                                  .L_lambda_simple_params_end_03d9:
  9684 00005C48 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
  9685 00005C4B 4889C3                  	mov rbx, rax
  9686 00005C4E 58                      	pop rax
  9687 00005C4F C60004                  	mov byte [rax], T_closure
  9688 00005C52 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  9689 00005C56 48C74009[635C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03d9
  9690 00005C5E E92B080000              	jmp .L_lambda_simple_end_03d9
  9691                                  .L_lambda_simple_code_03d9:	; lambda-simple body
  9692 00005C63 48837C241002            	cmp qword [rsp + 8 * 2], 2
  9693 00005C69 740B                    	je .L_lambda_simple_arity_check_ok_03d9
  9694 00005C6B FF742410                	push qword [rsp + 8 * 2]
  9695 00005C6F 6A02                    	push 2
  9696 00005C71 E929F50000              	jmp L_error_incorrect_arity_simple
  9697                                  .L_lambda_simple_arity_check_ok_03d9:
  9698 00005C76 C8000000                	enter 0, 0
  9699                                  	; preparing a non-tail-call
  9700 00005C7A 488B4520                	mov rax, PARAM(0)	; param a
  9701 00005C7E 50                      	push rax
  9702 00005C7F 6A01                    	push 1	; arg count
  9703 00005C81 488B0425[B5190000]      	mov rax, qword [free_var_103]	; free var integer?
  9704 00005C89 803805                  	cmp byte [rax], T_undefined
  9705 00005C8C 0F8427F40000            	je L_error_fvar_undefined
  9706 00005C92 803804                  	cmp byte [rax], T_closure
  9707 00005C95 0F85A2F40000            	jne L_error_non_closure
  9708 00005C9B FF7001                  	push SOB_CLOSURE_ENV(rax)
  9709 00005C9E FF5009                  	call SOB_CLOSURE_CODE(rax)
  9710 00005CA1 483D[02000000]          	cmp rax, sob_boolean_false
  9711 00005CA7 0F8463020000            	je .L_if_else_02c6
  9712                                  	; preparing a non-tail-call
  9713 00005CAD 488B4528                	mov rax, PARAM(1)	; param b
  9714 00005CB1 50                      	push rax
  9715 00005CB2 6A01                    	push 1	; arg count
  9716 00005CB4 488B0425[B5190000]      	mov rax, qword [free_var_103]	; free var integer?
  9717 00005CBC 803805                  	cmp byte [rax], T_undefined
  9718 00005CBF 0F84F4F30000            	je L_error_fvar_undefined
  9719 00005CC5 803804                  	cmp byte [rax], T_closure
  9720 00005CC8 0F856FF40000            	jne L_error_non_closure
  9721 00005CCE FF7001                  	push SOB_CLOSURE_ENV(rax)
  9722 00005CD1 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9723 00005CD4 483D[02000000]          	cmp rax, sob_boolean_false
  9724 00005CDA 7467                    	je .L_if_else_02bd
  9725                                  	; preparing a tail-call
  9726 00005CDC 488B4528                	mov rax, PARAM(1)	; param b
  9727 00005CE0 50                      	push rax
  9728 00005CE1 488B4520                	mov rax, PARAM(0)	; param a
  9729 00005CE5 50                      	push rax
  9730 00005CE6 6A02                    	push 2	; arg count
  9731 00005CE8 488B0425[99130000]      	mov rax, qword [free_var_11]	; free var __bin-add-zz
  9732 00005CF0 803805                  	cmp byte [rax], T_undefined
  9733 00005CF3 0F84C0F30000            	je L_error_fvar_undefined
  9734 00005CF9 803804                  	cmp byte [rax], T_closure
  9735 00005CFC 0F853BF40000            	jne L_error_non_closure
  9736 00005D02 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9737                                  
  9738                                  	; recycling the current frame
  9739 00005D05 FF7508                  	push qword [rbp + 8 * 1]	; old return address
  9740 00005D08 FF7500                  	push qword [rbp]	; old frame-pointer
  9741 00005D0B B906000000              	mov rcx, 6
  9742 00005D10 488B5D18                	mov rbx, COUNT
  9743 00005D14 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
  9744 00005D19 488D55F8                	lea rdx, [rbp - 8]
  9745                                  .L_tc_recycle_frame_loop_04f1:
  9746 00005D1D 4883F900                	cmp rcx, 0
  9747 00005D21 7413                    	je .L_tc_recycle_frame_done_04f1
  9748 00005D23 488B32                  	mov rsi, qword [rdx]
  9749 00005D26 488933                  	mov qword [rbx], rsi
  9750 00005D29 48FFC9                  	dec rcx
  9751 00005D2C 4883EB08                	sub rbx, 8
  9752 00005D30 4883EA08                	sub rdx, 8
  9753 00005D34 EBE7                    	jmp .L_tc_recycle_frame_loop_04f1
  9754                                  .L_tc_recycle_frame_done_04f1:
  9755 00005D36 488D6308                	lea rsp, [rbx + 8]
  9756 00005D3A 5D                      	pop rbp
  9757 00005D3B FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9758 00005D3E E9C8010000              	jmp .L_if_end_02bd
  9759                                  .L_if_else_02bd:
  9760                                  	; preparing a non-tail-call
  9761 00005D43 488B4528                	mov rax, PARAM(1)	; param b
  9762 00005D47 50                      	push rax
  9763 00005D48 6A01                    	push 1	; arg count
  9764 00005D4A 488B0425[4F190000]      	mov rax, qword [free_var_97]	; free var fraction?
  9765 00005D52 803805                  	cmp byte [rax], T_undefined
  9766 00005D55 0F845EF30000            	je L_error_fvar_undefined
  9767 00005D5B 803804                  	cmp byte [rax], T_closure
  9768 00005D5E 0F85D9F30000            	jne L_error_non_closure
  9769 00005D64 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9770 00005D67 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9771 00005D6A 483D[02000000]          	cmp rax, sob_boolean_false
  9772 00005D70 0F848A000000            	je .L_if_else_02bc
  9773                                  	; preparing a tail-call
  9774 00005D76 488B4528                	mov rax, PARAM(1)	; param b
  9775 00005D7A 50                      	push rax
  9776                                  	; preparing a non-tail-call
  9777 00005D7B 488B4520                	mov rax, PARAM(0)	; param a
  9778 00005D7F 50                      	push rax
  9779 00005D80 6A01                    	push 1	; arg count
  9780 00005D82 488B0425[CB140000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
  9781 00005D8A 803805                  	cmp byte [rax], T_undefined
  9782 00005D8D 0F8426F30000            	je L_error_fvar_undefined
  9783 00005D93 803804                  	cmp byte [rax], T_closure
  9784 00005D96 0F85A1F30000            	jne L_error_non_closure
  9785 00005D9C FF7001                  	push SOB_CLOSURE_ENV(rax)
  9786 00005D9F FF5009                  	call SOB_CLOSURE_CODE(rax)
  9787 00005DA2 50                      	push rax
  9788 00005DA3 6A02                    	push 2	; arg count
  9789 00005DA5 488B0425[77130000]      	mov rax, qword [free_var_9]	; free var __bin-add-qq
  9790 00005DAD 803805                  	cmp byte [rax], T_undefined
  9791 00005DB0 0F8403F30000            	je L_error_fvar_undefined
  9792 00005DB6 803804                  	cmp byte [rax], T_closure
  9793 00005DB9 0F857EF30000            	jne L_error_non_closure
  9794 00005DBF FF7001                  	push SOB_CLOSURE_ENV(rax)
  9795                                  
  9796                                  	; recycling the current frame
  9797 00005DC2 FF7508                  	push qword [rbp + 8 * 1]	; old return address
  9798 00005DC5 FF7500                  	push qword [rbp]	; old frame-pointer
  9799 00005DC8 B906000000              	mov rcx, 6
  9800 00005DCD 488B5D18                	mov rbx, COUNT
  9801 00005DD1 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
  9802 00005DD6 488D55F8                	lea rdx, [rbp - 8]
  9803                                  .L_tc_recycle_frame_loop_04f2:
  9804 00005DDA 4883F900                	cmp rcx, 0
  9805 00005DDE 7413                    	je .L_tc_recycle_frame_done_04f2
  9806 00005DE0 488B32                  	mov rsi, qword [rdx]
  9807 00005DE3 488933                  	mov qword [rbx], rsi
  9808 00005DE6 48FFC9                  	dec rcx
  9809 00005DE9 4883EB08                	sub rbx, 8
  9810 00005DED 4883EA08                	sub rdx, 8
  9811 00005DF1 EBE7                    	jmp .L_tc_recycle_frame_loop_04f2
  9812                                  .L_tc_recycle_frame_done_04f2:
  9813 00005DF3 488D6308                	lea rsp, [rbx + 8]
  9814 00005DF7 5D                      	pop rbp
  9815 00005DF8 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9816 00005DFB E90B010000              	jmp .L_if_end_02bc
  9817                                  .L_if_else_02bc:
  9818                                  	; preparing a non-tail-call
  9819 00005E00 488B4528                	mov rax, PARAM(1)	; param b
  9820 00005E04 50                      	push rax
  9821 00005E05 6A01                    	push 1	; arg count
  9822 00005E07 488B0425[2A1C0000]      	mov rax, qword [free_var_140]	; free var real?
  9823 00005E0F 803805                  	cmp byte [rax], T_undefined
  9824 00005E12 0F84A1F20000            	je L_error_fvar_undefined
  9825 00005E18 803804                  	cmp byte [rax], T_closure
  9826 00005E1B 0F851CF30000            	jne L_error_non_closure
  9827 00005E21 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9828 00005E24 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9829 00005E27 483D[02000000]          	cmp rax, sob_boolean_false
  9830 00005E2D 0F8487000000            	je .L_if_else_02bb
  9831                                  	; preparing a tail-call
  9832 00005E33 488B4528                	mov rax, PARAM(1)	; param b
  9833 00005E37 50                      	push rax
  9834                                  	; preparing a non-tail-call
  9835 00005E38 488B4520                	mov rax, PARAM(0)	; param a
  9836 00005E3C 50                      	push rax
  9837 00005E3D 6A01                    	push 1	; arg count
  9838 00005E3F 488B0425[A4190000]      	mov rax, qword [free_var_102]	; free var integer->real
  9839 00005E47 803805                  	cmp byte [rax], T_undefined
  9840 00005E4A 0F8469F20000            	je L_error_fvar_undefined
  9841 00005E50 803804                  	cmp byte [rax], T_closure
  9842 00005E53 0F85E4F20000            	jne L_error_non_closure
  9843 00005E59 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9844 00005E5C FF5009                  	call SOB_CLOSURE_CODE(rax)
  9845 00005E5F 50                      	push rax
  9846 00005E60 6A02                    	push 2	; arg count
  9847 00005E62 488B0425[88130000]      	mov rax, qword [free_var_10]	; free var __bin-add-rr
  9848 00005E6A 803805                  	cmp byte [rax], T_undefined
  9849 00005E6D 0F8446F20000            	je L_error_fvar_undefined
  9850 00005E73 803804                  	cmp byte [rax], T_closure
  9851 00005E76 0F85C1F20000            	jne L_error_non_closure
  9852 00005E7C FF7001                  	push SOB_CLOSURE_ENV(rax)
  9853                                  
  9854                                  	; recycling the current frame
  9855 00005E7F FF7508                  	push qword [rbp + 8 * 1]	; old return address
  9856 00005E82 FF7500                  	push qword [rbp]	; old frame-pointer
  9857 00005E85 B906000000              	mov rcx, 6
  9858 00005E8A 488B5D18                	mov rbx, COUNT
  9859 00005E8E 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
  9860 00005E93 488D55F8                	lea rdx, [rbp - 8]
  9861                                  .L_tc_recycle_frame_loop_04f3:
  9862 00005E97 4883F900                	cmp rcx, 0
  9863 00005E9B 7413                    	je .L_tc_recycle_frame_done_04f3
  9864 00005E9D 488B32                  	mov rsi, qword [rdx]
  9865 00005EA0 488933                  	mov qword [rbx], rsi
  9866 00005EA3 48FFC9                  	dec rcx
  9867 00005EA6 4883EB08                	sub rbx, 8
  9868 00005EAA 4883EA08                	sub rdx, 8
  9869 00005EAE EBE7                    	jmp .L_tc_recycle_frame_loop_04f3
  9870                                  .L_tc_recycle_frame_done_04f3:
  9871 00005EB0 488D6308                	lea rsp, [rbx + 8]
  9872 00005EB4 5D                      	pop rbp
  9873 00005EB5 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9874 00005EB8 EB51                    	jmp .L_if_end_02bb
  9875                                  .L_if_else_02bb:
  9876                                  	; preparing a tail-call
  9877 00005EBA 6A00                    	push 0	; arg count
  9878 00005EBC 488B4510                	mov rax, ENV
  9879 00005EC0 488B00                  	mov rax, qword [rax + 8 * 0]
  9880 00005EC3 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
  9881 00005EC6 803804                  	cmp byte [rax], T_closure
  9882 00005EC9 0F856EF20000            	jne L_error_non_closure
  9883 00005ECF FF7001                  	push SOB_CLOSURE_ENV(rax)
  9884                                  
  9885                                  	; recycling the current frame
  9886 00005ED2 FF7508                  	push qword [rbp + 8 * 1]	; old return address
  9887 00005ED5 FF7500                  	push qword [rbp]	; old frame-pointer
  9888 00005ED8 B904000000              	mov rcx, 4
  9889 00005EDD 488B5D18                	mov rbx, COUNT
  9890 00005EE1 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
  9891 00005EE6 488D55F8                	lea rdx, [rbp - 8]
  9892                                  .L_tc_recycle_frame_loop_04f4:
  9893 00005EEA 4883F900                	cmp rcx, 0
  9894 00005EEE 7413                    	je .L_tc_recycle_frame_done_04f4
  9895 00005EF0 488B32                  	mov rsi, qword [rdx]
  9896 00005EF3 488933                  	mov qword [rbx], rsi
  9897 00005EF6 48FFC9                  	dec rcx
  9898 00005EF9 4883EB08                	sub rbx, 8
  9899 00005EFD 4883EA08                	sub rdx, 8
  9900 00005F01 EBE7                    	jmp .L_tc_recycle_frame_loop_04f4
  9901                                  .L_tc_recycle_frame_done_04f4:
  9902 00005F03 488D6308                	lea rsp, [rbx + 8]
  9903 00005F07 5D                      	pop rbp
  9904 00005F08 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9905                                  .L_if_end_02bb:
  9906                                  .L_if_end_02bc:
  9907                                  .L_if_end_02bd:
  9908 00005F0B E97A050000              	jmp .L_if_end_02c6
  9909                                  .L_if_else_02c6:
  9910                                  	; preparing a non-tail-call
  9911 00005F10 488B4520                	mov rax, PARAM(0)	; param a
  9912 00005F14 50                      	push rax
  9913 00005F15 6A01                    	push 1	; arg count
  9914 00005F17 488B0425[4F190000]      	mov rax, qword [free_var_97]	; free var fraction?
  9915 00005F1F 803805                  	cmp byte [rax], T_undefined
  9916 00005F22 0F8491F10000            	je L_error_fvar_undefined
  9917 00005F28 803804                  	cmp byte [rax], T_closure
  9918 00005F2B 0F850CF20000            	jne L_error_non_closure
  9919 00005F31 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9920 00005F34 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9921 00005F37 483D[02000000]          	cmp rax, sob_boolean_false
  9922 00005F3D 0F8463020000            	je .L_if_else_02c5
  9923                                  	; preparing a non-tail-call
  9924 00005F43 488B4528                	mov rax, PARAM(1)	; param b
  9925 00005F47 50                      	push rax
  9926 00005F48 6A01                    	push 1	; arg count
  9927 00005F4A 488B0425[B5190000]      	mov rax, qword [free_var_103]	; free var integer?
  9928 00005F52 803805                  	cmp byte [rax], T_undefined
  9929 00005F55 0F845EF10000            	je L_error_fvar_undefined
  9930 00005F5B 803804                  	cmp byte [rax], T_closure
  9931 00005F5E 0F85D9F10000            	jne L_error_non_closure
  9932 00005F64 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9933 00005F67 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9934 00005F6A 483D[02000000]          	cmp rax, sob_boolean_false
  9935 00005F70 0F848A000000            	je .L_if_else_02c0
  9936                                  	; preparing a tail-call
  9937                                  	; preparing a non-tail-call
  9938 00005F76 488B4528                	mov rax, PARAM(1)	; param b
  9939 00005F7A 50                      	push rax
  9940 00005F7B 6A01                    	push 1	; arg count
  9941 00005F7D 488B0425[BA140000]      	mov rax, qword [free_var_28]	; free var __bin_integer_to_fraction
  9942 00005F85 803805                  	cmp byte [rax], T_undefined
  9943 00005F88 0F842BF10000            	je L_error_fvar_undefined
  9944 00005F8E 803804                  	cmp byte [rax], T_closure
  9945 00005F91 0F85A6F10000            	jne L_error_non_closure
  9946 00005F97 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9947 00005F9A FF5009                  	call SOB_CLOSURE_CODE(rax)
  9948 00005F9D 50                      	push rax
  9949 00005F9E 488B4520                	mov rax, PARAM(0)	; param a
  9950 00005FA2 50                      	push rax
  9951 00005FA3 6A02                    	push 2	; arg count
  9952 00005FA5 488B0425[77130000]      	mov rax, qword [free_var_9]	; free var __bin-add-qq
  9953 00005FAD 803805                  	cmp byte [rax], T_undefined
  9954 00005FB0 0F8403F10000            	je L_error_fvar_undefined
  9955 00005FB6 803804                  	cmp byte [rax], T_closure
  9956 00005FB9 0F857EF10000            	jne L_error_non_closure
  9957 00005FBF FF7001                  	push SOB_CLOSURE_ENV(rax)
  9958                                  
  9959                                  	; recycling the current frame
  9960 00005FC2 FF7508                  	push qword [rbp + 8 * 1]	; old return address
  9961 00005FC5 FF7500                  	push qword [rbp]	; old frame-pointer
  9962 00005FC8 B906000000              	mov rcx, 6
  9963 00005FCD 488B5D18                	mov rbx, COUNT
  9964 00005FD1 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
  9965 00005FD6 488D55F8                	lea rdx, [rbp - 8]
  9966                                  .L_tc_recycle_frame_loop_04f5:
  9967 00005FDA 4883F900                	cmp rcx, 0
  9968 00005FDE 7413                    	je .L_tc_recycle_frame_done_04f5
  9969 00005FE0 488B32                  	mov rsi, qword [rdx]
  9970 00005FE3 488933                  	mov qword [rbx], rsi
  9971 00005FE6 48FFC9                  	dec rcx
  9972 00005FE9 4883EB08                	sub rbx, 8
  9973 00005FED 4883EA08                	sub rdx, 8
  9974 00005FF1 EBE7                    	jmp .L_tc_recycle_frame_loop_04f5
  9975                                  .L_tc_recycle_frame_done_04f5:
  9976 00005FF3 488D6308                	lea rsp, [rbx + 8]
  9977 00005FF7 5D                      	pop rbp
  9978 00005FF8 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9979 00005FFB E9A1010000              	jmp .L_if_end_02c0
  9980                                  .L_if_else_02c0:
  9981                                  	; preparing a non-tail-call
  9982 00006000 488B4528                	mov rax, PARAM(1)	; param b
  9983 00006004 50                      	push rax
  9984 00006005 6A01                    	push 1	; arg count
  9985 00006007 488B0425[4F190000]      	mov rax, qword [free_var_97]	; free var fraction?
  9986 0000600F 803805                  	cmp byte [rax], T_undefined
  9987 00006012 0F84A1F00000            	je L_error_fvar_undefined
  9988 00006018 803804                  	cmp byte [rax], T_closure
  9989 0000601B 0F851CF10000            	jne L_error_non_closure
  9990 00006021 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9991 00006024 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9992 00006027 483D[02000000]          	cmp rax, sob_boolean_false
  9993 0000602D 7467                    	je .L_if_else_02bf
  9994                                  	; preparing a tail-call
  9995 0000602F 488B4528                	mov rax, PARAM(1)	; param b
  9996 00006033 50                      	push rax
  9997 00006034 488B4520                	mov rax, PARAM(0)	; param a
  9998 00006038 50                      	push rax
  9999 00006039 6A02                    	push 2	; arg count
 10000 0000603B 488B0425[77130000]      	mov rax, qword [free_var_9]	; free var __bin-add-qq
 10001 00006043 803805                  	cmp byte [rax], T_undefined
 10002 00006046 0F846DF00000            	je L_error_fvar_undefined
 10003 0000604C 803804                  	cmp byte [rax], T_closure
 10004 0000604F 0F85E8F00000            	jne L_error_non_closure
 10005 00006055 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10006                                  
 10007                                  	; recycling the current frame
 10008 00006058 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 10009 0000605B FF7500                  	push qword [rbp]	; old frame-pointer
 10010 0000605E B906000000              	mov rcx, 6
 10011 00006063 488B5D18                	mov rbx, COUNT
 10012 00006067 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 10013 0000606C 488D55F8                	lea rdx, [rbp - 8]
 10014                                  .L_tc_recycle_frame_loop_04f6:
 10015 00006070 4883F900                	cmp rcx, 0
 10016 00006074 7413                    	je .L_tc_recycle_frame_done_04f6
 10017 00006076 488B32                  	mov rsi, qword [rdx]
 10018 00006079 488933                  	mov qword [rbx], rsi
 10019 0000607C 48FFC9                  	dec rcx
 10020 0000607F 4883EB08                	sub rbx, 8
 10021 00006083 4883EA08                	sub rdx, 8
 10022 00006087 EBE7                    	jmp .L_tc_recycle_frame_loop_04f6
 10023                                  .L_tc_recycle_frame_done_04f6:
 10024 00006089 488D6308                	lea rsp, [rbx + 8]
 10025 0000608D 5D                      	pop rbp
 10026 0000608E FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10027 00006091 E90B010000              	jmp .L_if_end_02bf
 10028                                  .L_if_else_02bf:
 10029                                  	; preparing a non-tail-call
 10030 00006096 488B4528                	mov rax, PARAM(1)	; param b
 10031 0000609A 50                      	push rax
 10032 0000609B 6A01                    	push 1	; arg count
 10033 0000609D 488B0425[2A1C0000]      	mov rax, qword [free_var_140]	; free var real?
 10034 000060A5 803805                  	cmp byte [rax], T_undefined
 10035 000060A8 0F840BF00000            	je L_error_fvar_undefined
 10036 000060AE 803804                  	cmp byte [rax], T_closure
 10037 000060B1 0F8586F00000            	jne L_error_non_closure
 10038 000060B7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10039 000060BA FF5009                  	call SOB_CLOSURE_CODE(rax)
 10040 000060BD 483D[02000000]          	cmp rax, sob_boolean_false
 10041 000060C3 0F8487000000            	je .L_if_else_02be
 10042                                  	; preparing a tail-call
 10043 000060C9 488B4528                	mov rax, PARAM(1)	; param b
 10044 000060CD 50                      	push rax
 10045                                  	; preparing a non-tail-call
 10046 000060CE 488B4520                	mov rax, PARAM(0)	; param a
 10047 000060D2 50                      	push rax
 10048 000060D3 6A01                    	push 1	; arg count
 10049 000060D5 488B0425[3E190000]      	mov rax, qword [free_var_96]	; free var fraction->real
 10050 000060DD 803805                  	cmp byte [rax], T_undefined
 10051 000060E0 0F84D3EF0000            	je L_error_fvar_undefined
 10052 000060E6 803804                  	cmp byte [rax], T_closure
 10053 000060E9 0F854EF00000            	jne L_error_non_closure
 10054 000060EF FF7001                  	push SOB_CLOSURE_ENV(rax)
 10055 000060F2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10056 000060F5 50                      	push rax
 10057 000060F6 6A02                    	push 2	; arg count
 10058 000060F8 488B0425[88130000]      	mov rax, qword [free_var_10]	; free var __bin-add-rr
 10059 00006100 803805                  	cmp byte [rax], T_undefined
 10060 00006103 0F84B0EF0000            	je L_error_fvar_undefined
 10061 00006109 803804                  	cmp byte [rax], T_closure
 10062 0000610C 0F852BF00000            	jne L_error_non_closure
 10063 00006112 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10064                                  
 10065                                  	; recycling the current frame
 10066 00006115 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 10067 00006118 FF7500                  	push qword [rbp]	; old frame-pointer
 10068 0000611B B906000000              	mov rcx, 6
 10069 00006120 488B5D18                	mov rbx, COUNT
 10070 00006124 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 10071 00006129 488D55F8                	lea rdx, [rbp - 8]
 10072                                  .L_tc_recycle_frame_loop_04f7:
 10073 0000612D 4883F900                	cmp rcx, 0
 10074 00006131 7413                    	je .L_tc_recycle_frame_done_04f7
 10075 00006133 488B32                  	mov rsi, qword [rdx]
 10076 00006136 488933                  	mov qword [rbx], rsi
 10077 00006139 48FFC9                  	dec rcx
 10078 0000613C 4883EB08                	sub rbx, 8
 10079 00006140 4883EA08                	sub rdx, 8
 10080 00006144 EBE7                    	jmp .L_tc_recycle_frame_loop_04f7
 10081                                  .L_tc_recycle_frame_done_04f7:
 10082 00006146 488D6308                	lea rsp, [rbx + 8]
 10083 0000614A 5D                      	pop rbp
 10084 0000614B FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10085 0000614E EB51                    	jmp .L_if_end_02be
 10086                                  .L_if_else_02be:
 10087                                  	; preparing a tail-call
 10088 00006150 6A00                    	push 0	; arg count
 10089 00006152 488B4510                	mov rax, ENV
 10090 00006156 488B00                  	mov rax, qword [rax + 8 * 0]
 10091 00006159 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 10092 0000615C 803804                  	cmp byte [rax], T_closure
 10093 0000615F 0F85D8EF0000            	jne L_error_non_closure
 10094 00006165 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10095                                  
 10096                                  	; recycling the current frame
 10097 00006168 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 10098 0000616B FF7500                  	push qword [rbp]	; old frame-pointer
 10099 0000616E B904000000              	mov rcx, 4
 10100 00006173 488B5D18                	mov rbx, COUNT
 10101 00006177 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 10102 0000617C 488D55F8                	lea rdx, [rbp - 8]
 10103                                  .L_tc_recycle_frame_loop_04f8:
 10104 00006180 4883F900                	cmp rcx, 0
 10105 00006184 7413                    	je .L_tc_recycle_frame_done_04f8
 10106 00006186 488B32                  	mov rsi, qword [rdx]
 10107 00006189 488933                  	mov qword [rbx], rsi
 10108 0000618C 48FFC9                  	dec rcx
 10109 0000618F 4883EB08                	sub rbx, 8
 10110 00006193 4883EA08                	sub rdx, 8
 10111 00006197 EBE7                    	jmp .L_tc_recycle_frame_loop_04f8
 10112                                  .L_tc_recycle_frame_done_04f8:
 10113 00006199 488D6308                	lea rsp, [rbx + 8]
 10114 0000619D 5D                      	pop rbp
 10115 0000619E FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10116                                  .L_if_end_02be:
 10117                                  .L_if_end_02bf:
 10118                                  .L_if_end_02c0:
 10119 000061A1 E9E4020000              	jmp .L_if_end_02c5
 10120                                  .L_if_else_02c5:
 10121                                  	; preparing a non-tail-call
 10122 000061A6 488B4520                	mov rax, PARAM(0)	; param a
 10123 000061AA 50                      	push rax
 10124 000061AB 6A01                    	push 1	; arg count
 10125 000061AD 488B0425[2A1C0000]      	mov rax, qword [free_var_140]	; free var real?
 10126 000061B5 803805                  	cmp byte [rax], T_undefined
 10127 000061B8 0F84FBEE0000            	je L_error_fvar_undefined
 10128 000061BE 803804                  	cmp byte [rax], T_closure
 10129 000061C1 0F8576EF0000            	jne L_error_non_closure
 10130 000061C7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10131 000061CA FF5009                  	call SOB_CLOSURE_CODE(rax)
 10132 000061CD 483D[02000000]          	cmp rax, sob_boolean_false
 10133 000061D3 0F8460020000            	je .L_if_else_02c4
 10134                                  	; preparing a non-tail-call
 10135 000061D9 488B4528                	mov rax, PARAM(1)	; param b
 10136 000061DD 50                      	push rax
 10137 000061DE 6A01                    	push 1	; arg count
 10138 000061E0 488B0425[B5190000]      	mov rax, qword [free_var_103]	; free var integer?
 10139 000061E8 803805                  	cmp byte [rax], T_undefined
 10140 000061EB 0F84C8EE0000            	je L_error_fvar_undefined
 10141 000061F1 803804                  	cmp byte [rax], T_closure
 10142 000061F4 0F8543EF0000            	jne L_error_non_closure
 10143 000061FA FF7001                  	push SOB_CLOSURE_ENV(rax)
 10144 000061FD FF5009                  	call SOB_CLOSURE_CODE(rax)
 10145 00006200 483D[02000000]          	cmp rax, sob_boolean_false
 10146 00006206 0F848A000000            	je .L_if_else_02c3
 10147                                  	; preparing a tail-call
 10148                                  	; preparing a non-tail-call
 10149 0000620C 488B4528                	mov rax, PARAM(1)	; param b
 10150 00006210 50                      	push rax
 10151 00006211 6A01                    	push 1	; arg count
 10152 00006213 488B0425[A4190000]      	mov rax, qword [free_var_102]	; free var integer->real
 10153 0000621B 803805                  	cmp byte [rax], T_undefined
 10154 0000621E 0F8495EE0000            	je L_error_fvar_undefined
 10155 00006224 803804                  	cmp byte [rax], T_closure
 10156 00006227 0F8510EF0000            	jne L_error_non_closure
 10157 0000622D FF7001                  	push SOB_CLOSURE_ENV(rax)
 10158 00006230 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10159 00006233 50                      	push rax
 10160 00006234 488B4520                	mov rax, PARAM(0)	; param a
 10161 00006238 50                      	push rax
 10162 00006239 6A02                    	push 2	; arg count
 10163 0000623B 488B0425[88130000]      	mov rax, qword [free_var_10]	; free var __bin-add-rr
 10164 00006243 803805                  	cmp byte [rax], T_undefined
 10165 00006246 0F846DEE0000            	je L_error_fvar_undefined
 10166 0000624C 803804                  	cmp byte [rax], T_closure
 10167 0000624F 0F85E8EE0000            	jne L_error_non_closure
 10168 00006255 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10169                                  
 10170                                  	; recycling the current frame
 10171 00006258 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 10172 0000625B FF7500                  	push qword [rbp]	; old frame-pointer
 10173 0000625E B906000000              	mov rcx, 6
 10174 00006263 488B5D18                	mov rbx, COUNT
 10175 00006267 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 10176 0000626C 488D55F8                	lea rdx, [rbp - 8]
 10177                                  .L_tc_recycle_frame_loop_04f9:
 10178 00006270 4883F900                	cmp rcx, 0
 10179 00006274 7413                    	je .L_tc_recycle_frame_done_04f9
 10180 00006276 488B32                  	mov rsi, qword [rdx]
 10181 00006279 488933                  	mov qword [rbx], rsi
 10182 0000627C 48FFC9                  	dec rcx
 10183 0000627F 4883EB08                	sub rbx, 8
 10184 00006283 4883EA08                	sub rdx, 8
 10185 00006287 EBE7                    	jmp .L_tc_recycle_frame_loop_04f9
 10186                                  .L_tc_recycle_frame_done_04f9:
 10187 00006289 488D6308                	lea rsp, [rbx + 8]
 10188 0000628D 5D                      	pop rbp
 10189 0000628E FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10190 00006291 E9A1010000              	jmp .L_if_end_02c3
 10191                                  .L_if_else_02c3:
 10192                                  	; preparing a non-tail-call
 10193 00006296 488B4528                	mov rax, PARAM(1)	; param b
 10194 0000629A 50                      	push rax
 10195 0000629B 6A01                    	push 1	; arg count
 10196 0000629D 488B0425[4F190000]      	mov rax, qword [free_var_97]	; free var fraction?
 10197 000062A5 803805                  	cmp byte [rax], T_undefined
 10198 000062A8 0F840BEE0000            	je L_error_fvar_undefined
 10199 000062AE 803804                  	cmp byte [rax], T_closure
 10200 000062B1 0F8586EE0000            	jne L_error_non_closure
 10201 000062B7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10202 000062BA FF5009                  	call SOB_CLOSURE_CODE(rax)
 10203 000062BD 483D[02000000]          	cmp rax, sob_boolean_false
 10204 000062C3 0F848A000000            	je .L_if_else_02c2
 10205                                  	; preparing a tail-call
 10206                                  	; preparing a non-tail-call
 10207 000062C9 488B4528                	mov rax, PARAM(1)	; param b
 10208 000062CD 50                      	push rax
 10209 000062CE 6A01                    	push 1	; arg count
 10210 000062D0 488B0425[3E190000]      	mov rax, qword [free_var_96]	; free var fraction->real
 10211 000062D8 803805                  	cmp byte [rax], T_undefined
 10212 000062DB 0F84D8ED0000            	je L_error_fvar_undefined
 10213 000062E1 803804                  	cmp byte [rax], T_closure
 10214 000062E4 0F8553EE0000            	jne L_error_non_closure
 10215 000062EA FF7001                  	push SOB_CLOSURE_ENV(rax)
 10216 000062ED FF5009                  	call SOB_CLOSURE_CODE(rax)
 10217 000062F0 50                      	push rax
 10218 000062F1 488B4520                	mov rax, PARAM(0)	; param a
 10219 000062F5 50                      	push rax
 10220 000062F6 6A02                    	push 2	; arg count
 10221 000062F8 488B0425[88130000]      	mov rax, qword [free_var_10]	; free var __bin-add-rr
 10222 00006300 803805                  	cmp byte [rax], T_undefined
 10223 00006303 0F84B0ED0000            	je L_error_fvar_undefined
 10224 00006309 803804                  	cmp byte [rax], T_closure
 10225 0000630C 0F852BEE0000            	jne L_error_non_closure
 10226 00006312 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10227                                  
 10228                                  	; recycling the current frame
 10229 00006315 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 10230 00006318 FF7500                  	push qword [rbp]	; old frame-pointer
 10231 0000631B B906000000              	mov rcx, 6
 10232 00006320 488B5D18                	mov rbx, COUNT
 10233 00006324 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 10234 00006329 488D55F8                	lea rdx, [rbp - 8]
 10235                                  .L_tc_recycle_frame_loop_04fa:
 10236 0000632D 4883F900                	cmp rcx, 0
 10237 00006331 7413                    	je .L_tc_recycle_frame_done_04fa
 10238 00006333 488B32                  	mov rsi, qword [rdx]
 10239 00006336 488933                  	mov qword [rbx], rsi
 10240 00006339 48FFC9                  	dec rcx
 10241 0000633C 4883EB08                	sub rbx, 8
 10242 00006340 4883EA08                	sub rdx, 8
 10243 00006344 EBE7                    	jmp .L_tc_recycle_frame_loop_04fa
 10244                                  .L_tc_recycle_frame_done_04fa:
 10245 00006346 488D6308                	lea rsp, [rbx + 8]
 10246 0000634A 5D                      	pop rbp
 10247 0000634B FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10248 0000634E E9E4000000              	jmp .L_if_end_02c2
 10249                                  .L_if_else_02c2:
 10250                                  	; preparing a non-tail-call
 10251 00006353 488B4528                	mov rax, PARAM(1)	; param b
 10252 00006357 50                      	push rax
 10253 00006358 6A01                    	push 1	; arg count
 10254 0000635A 488B0425[2A1C0000]      	mov rax, qword [free_var_140]	; free var real?
 10255 00006362 803805                  	cmp byte [rax], T_undefined
 10256 00006365 0F844EED0000            	je L_error_fvar_undefined
 10257 0000636B 803804                  	cmp byte [rax], T_closure
 10258 0000636E 0F85C9ED0000            	jne L_error_non_closure
 10259 00006374 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10260 00006377 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10261 0000637A 483D[02000000]          	cmp rax, sob_boolean_false
 10262 00006380 7464                    	je .L_if_else_02c1
 10263                                  	; preparing a tail-call
 10264 00006382 488B4528                	mov rax, PARAM(1)	; param b
 10265 00006386 50                      	push rax
 10266 00006387 488B4520                	mov rax, PARAM(0)	; param a
 10267 0000638B 50                      	push rax
 10268 0000638C 6A02                    	push 2	; arg count
 10269 0000638E 488B0425[88130000]      	mov rax, qword [free_var_10]	; free var __bin-add-rr
 10270 00006396 803805                  	cmp byte [rax], T_undefined
 10271 00006399 0F841AED0000            	je L_error_fvar_undefined
 10272 0000639F 803804                  	cmp byte [rax], T_closure
 10273 000063A2 0F8595ED0000            	jne L_error_non_closure
 10274 000063A8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10275                                  
 10276                                  	; recycling the current frame
 10277 000063AB FF7508                  	push qword [rbp + 8 * 1]	; old return address
 10278 000063AE FF7500                  	push qword [rbp]	; old frame-pointer
 10279 000063B1 B906000000              	mov rcx, 6
 10280 000063B6 488B5D18                	mov rbx, COUNT
 10281 000063BA 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 10282 000063BF 488D55F8                	lea rdx, [rbp - 8]
 10283                                  .L_tc_recycle_frame_loop_04fb:
 10284 000063C3 4883F900                	cmp rcx, 0
 10285 000063C7 7413                    	je .L_tc_recycle_frame_done_04fb
 10286 000063C9 488B32                  	mov rsi, qword [rdx]
 10287 000063CC 488933                  	mov qword [rbx], rsi
 10288 000063CF 48FFC9                  	dec rcx
 10289 000063D2 4883EB08                	sub rbx, 8
 10290 000063D6 4883EA08                	sub rdx, 8
 10291 000063DA EBE7                    	jmp .L_tc_recycle_frame_loop_04fb
 10292                                  .L_tc_recycle_frame_done_04fb:
 10293 000063DC 488D6308                	lea rsp, [rbx + 8]
 10294 000063E0 5D                      	pop rbp
 10295 000063E1 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10296 000063E4 EB51                    	jmp .L_if_end_02c1
 10297                                  .L_if_else_02c1:
 10298                                  	; preparing a tail-call
 10299 000063E6 6A00                    	push 0	; arg count
 10300 000063E8 488B4510                	mov rax, ENV
 10301 000063EC 488B00                  	mov rax, qword [rax + 8 * 0]
 10302 000063EF 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 10303 000063F2 803804                  	cmp byte [rax], T_closure
 10304 000063F5 0F8542ED0000            	jne L_error_non_closure
 10305 000063FB FF7001                  	push SOB_CLOSURE_ENV(rax)
 10306                                  
 10307                                  	; recycling the current frame
 10308 000063FE FF7508                  	push qword [rbp + 8 * 1]	; old return address
 10309 00006401 FF7500                  	push qword [rbp]	; old frame-pointer
 10310 00006404 B904000000              	mov rcx, 4
 10311 00006409 488B5D18                	mov rbx, COUNT
 10312 0000640D 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 10313 00006412 488D55F8                	lea rdx, [rbp - 8]
 10314                                  .L_tc_recycle_frame_loop_04fc:
 10315 00006416 4883F900                	cmp rcx, 0
 10316 0000641A 7413                    	je .L_tc_recycle_frame_done_04fc
 10317 0000641C 488B32                  	mov rsi, qword [rdx]
 10318 0000641F 488933                  	mov qword [rbx], rsi
 10319 00006422 48FFC9                  	dec rcx
 10320 00006425 4883EB08                	sub rbx, 8
 10321 00006429 4883EA08                	sub rdx, 8
 10322 0000642D EBE7                    	jmp .L_tc_recycle_frame_loop_04fc
 10323                                  .L_tc_recycle_frame_done_04fc:
 10324 0000642F 488D6308                	lea rsp, [rbx + 8]
 10325 00006433 5D                      	pop rbp
 10326 00006434 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10327                                  .L_if_end_02c1:
 10328                                  .L_if_end_02c2:
 10329                                  .L_if_end_02c3:
 10330 00006437 EB51                    	jmp .L_if_end_02c4
 10331                                  .L_if_else_02c4:
 10332                                  	; preparing a tail-call
 10333 00006439 6A00                    	push 0	; arg count
 10334 0000643B 488B4510                	mov rax, ENV
 10335 0000643F 488B00                  	mov rax, qword [rax + 8 * 0]
 10336 00006442 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 10337 00006445 803804                  	cmp byte [rax], T_closure
 10338 00006448 0F85EFEC0000            	jne L_error_non_closure
 10339 0000644E FF7001                  	push SOB_CLOSURE_ENV(rax)
 10340                                  
 10341                                  	; recycling the current frame
 10342 00006451 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 10343 00006454 FF7500                  	push qword [rbp]	; old frame-pointer
 10344 00006457 B904000000              	mov rcx, 4
 10345 0000645C 488B5D18                	mov rbx, COUNT
 10346 00006460 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 10347 00006465 488D55F8                	lea rdx, [rbp - 8]
 10348                                  .L_tc_recycle_frame_loop_04fd:
 10349 00006469 4883F900                	cmp rcx, 0
 10350 0000646D 7413                    	je .L_tc_recycle_frame_done_04fd
 10351 0000646F 488B32                  	mov rsi, qword [rdx]
 10352 00006472 488933                  	mov qword [rbx], rsi
 10353 00006475 48FFC9                  	dec rcx
 10354 00006478 4883EB08                	sub rbx, 8
 10355 0000647C 4883EA08                	sub rdx, 8
 10356 00006480 EBE7                    	jmp .L_tc_recycle_frame_loop_04fd
 10357                                  .L_tc_recycle_frame_done_04fd:
 10358 00006482 488D6308                	lea rsp, [rbx + 8]
 10359 00006486 5D                      	pop rbp
 10360 00006487 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10361                                  .L_if_end_02c4:
 10362                                  .L_if_end_02c5:
 10363                                  .L_if_end_02c6:
 10364 0000648A C9                      	leave
 10365 0000648B C22000                  	ret AND_KILL_FRAME(2)
 10366                                  .L_lambda_simple_end_03d9:	; new closure is in rax
 10367 0000648E 50                      	push rax
 10368 0000648F 6A01                    	push 1	; arg count
 10369 00006491 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 10370 00006496 E84BED0000              	call malloc
 10371 0000649B 50                      	push rax
 10372 0000649C BF08000000              	mov rdi, 8 * 1	; new rib
 10373 000064A1 E840ED0000              	call malloc
 10374 000064A6 50                      	push rax
 10375 000064A7 BF10000000              	mov rdi, 8 * 2	; extended env
 10376 000064AC E835ED0000              	call malloc
 10377 000064B1 488B7D10                	mov rdi, ENV
 10378 000064B5 BE00000000              	mov rsi, 0
 10379 000064BA BA01000000              	mov rdx, 1
 10380                                  .L_lambda_simple_env_loop_03da:	; ext_env[i + 1] <-- env[i]
 10381 000064BF 4883FE01                	cmp rsi, 1
 10382 000064C3 7410                    	je .L_lambda_simple_env_end_03da
 10383 000064C5 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 10384 000064C9 48890CD0                	mov qword [rax + 8 * rdx], rcx
 10385 000064CD 48FFC6                  	inc rsi
 10386 000064D0 48FFC2                  	inc rdx
 10387 000064D3 EBEA                    	jmp .L_lambda_simple_env_loop_03da
 10388                                  .L_lambda_simple_env_end_03da:
 10389 000064D5 5B                      	pop rbx
 10390 000064D6 BE00000000              	mov rsi, 0
 10391                                  .L_lambda_simple_params_loop_03da:	; copy params
 10392 000064DB 4883FE01                	cmp rsi, 1
 10393 000064DF 740E                    	je .L_lambda_simple_params_end_03da
 10394 000064E1 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 10395 000064E6 488914F3                	mov qword [rbx + 8 * rsi], rdx
 10396 000064EA 48FFC6                  	inc rsi
 10397 000064ED EBEC                    	jmp .L_lambda_simple_params_loop_03da
 10398                                  .L_lambda_simple_params_end_03da:
 10399 000064EF 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 10400 000064F2 4889C3                  	mov rbx, rax
 10401 000064F5 58                      	pop rax
 10402 000064F6 C60004                  	mov byte [rax], T_closure
 10403 000064F9 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 10404 000064FD 48C74009[0A650000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03da
 10405 00006505 E9E2010000              	jmp .L_lambda_simple_end_03da
 10406                                  .L_lambda_simple_code_03da:	; lambda-simple body
 10407 0000650A 48837C241001            	cmp qword [rsp + 8 * 2], 1
 10408 00006510 740B                    	je .L_lambda_simple_arity_check_ok_03da
 10409 00006512 FF742410                	push qword [rsp + 8 * 2]
 10410 00006516 6A01                    	push 1
 10411 00006518 E982EC0000              	jmp L_error_incorrect_arity_simple
 10412                                  .L_lambda_simple_arity_check_ok_03da:
 10413 0000651D C8000000                	enter 0, 0
 10414 00006521 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 10415 00006526 E8BBEC0000              	call malloc
 10416 0000652B 50                      	push rax
 10417 0000652C BF08000000              	mov rdi, 8 * 1	; new rib
 10418 00006531 E8B0EC0000              	call malloc
 10419 00006536 50                      	push rax
 10420 00006537 BF18000000              	mov rdi, 8 * 3	; extended env
 10421 0000653C E8A5EC0000              	call malloc
 10422 00006541 488B7D10                	mov rdi, ENV
 10423 00006545 BE00000000              	mov rsi, 0
 10424 0000654A BA01000000              	mov rdx, 1
 10425                                  .L_lambda_opt_env_loop_0083:	; ext_env[i + 1] <-- env[i]
 10426 0000654F 4883FE02                	cmp rsi, 2
 10427 00006553 7410                    	je .L_lambda_opt_env_end_0083
 10428 00006555 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 10429 00006559 48890CD0                	mov qword [rax + 8 * rdx], rcx
 10430 0000655D 48FFC6                  	inc rsi
 10431 00006560 48FFC2                  	inc rdx
 10432 00006563 EBEA                    	jmp .L_lambda_opt_env_loop_0083
 10433                                  .L_lambda_opt_env_end_0083:
 10434 00006565 5B                      	pop rbx
 10435 00006566 BE00000000              	mov rsi, 0
 10436                                  .L_lambda_opt_params_loop_0083:	; copy params
 10437 0000656B 4883FE01                	cmp rsi, 1
 10438 0000656F 740E                    	je .L_lambda_opt_params_end_0083
 10439 00006571 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 10440 00006576 488914F3                	mov qword [rbx + 8 * rsi], rdx
 10441 0000657A 48FFC6                  	inc rsi
 10442 0000657D EBEC                    	jmp .L_lambda_opt_params_loop_0083
 10443                                  .L_lambda_opt_params_end_0083:
 10444 0000657F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 10445 00006582 4889C3                  	mov rbx, rax
 10446 00006585 58                      	pop rax
 10447 00006586 C60004                  	mov byte [rax], T_closure
 10448 00006589 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 10449 0000658D 48C74009[9A650000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0083
 10450 00006595 E94E010000              	jmp .L_lambda_opt_end_0083
 10451                                  .L_lambda_opt_code_0083:	; lambda-simple body
 10452 0000659A 48837C241000            	cmp qword [rsp + 8 * 2], 0 ;	 check num of args
 10453 000065A0 740D                    	je .L_lambda_opt_arity_check_exact_0083 ;	 if equal, go to exact arity
 10454 000065A2 7F42                    	jg .L_lambda_opt_arity_check_more_0083 ;	 if greater than, go to arity more
 10455 000065A4 FF742410                	push qword [rsp + 8 * 2] ;	 else, throw opt arity error
 10456 000065A8 6A00                    	push 0
 10457 000065AA E904EC0000              	jmp L_error_incorrect_arity_opt
 10458                                  .L_lambda_opt_arity_check_exact_0083:
 10459 000065AF 488B442410              	mov rax, qword [rsp + 8 * 2] ;	 number of args
 10460 000065B4 488D5CC410              	lea rbx, [rsp + 8 * (2 + rax)] ;	 address of last element
 10461 000065B9 4883EC08                	sub rsp, 8
 10462 000065BD 488D0C24                	lea rcx, [rsp + 0] ;	 new start
 10463                                  .L_lambda_opt_shift_entry_0083:
 10464 000065C1 488B5108                	mov rdx, [rcx + 8]
 10465 000065C5 488911                  	mov [rcx], rdx
 10466 000065C8 4883C108                	add rcx, 8
 10467 000065CC 4839CB                  	cmp rbx, rcx
 10468 000065CF 75F0                    	jne .L_lambda_opt_shift_entry_0083
 10469                                  .L_lambda_opt_shift_exit_0083:
 10470 000065D1 48C703[01000000]        	mov qword[rbx], sob_nil ;	 place nil
 10471 000065D8 4883C001                	add rax, 1
 10472 000065DC 4889442410              	mov qword [rsp + 8 * 2], rax
 10473 000065E1 E987000000              	jmp .L_lambda_opt_stack_adjusted_0083
 10474                                  .L_lambda_opt_arity_check_more_0083:
 10475 000065E6 48BA-                   	mov rdx, sob_nil ;	 base cdr
 10475 000065E8 [0100000000000000] 
 10476 000065F0 48837C241001            	cmp qword [rsp + 8 * 2], 1
 10477 000065F6 7451                    	je .L_lambda_opt_stack_shrink_loop_exit_0083
 10478                                  .L_lambda_opt_stack_shrink_loop_0083:
 10479 000065F8 BF11000000              	mov rdi, (1 + 8 + 8)
 10480 000065FD E8E4EB0000              	call malloc
 10481 00006602 C60021                  	mov byte[rax], T_pair
 10482 00006605 48895009                	mov SOB_PAIR_CDR(rax), rdx
 10483 00006609 4889C2                  	mov rdx, rax
 10484 0000660C 488B442410              	mov rax, qword [rsp + 8 * 2]
 10485 00006611 488B5CC410              	mov rbx, qword [rsp + 8 * (2 + rax)]
 10486 00006616 48895A01                	mov SOB_PAIR_CAR(rdx), rbx
 10487 0000661A 488D5CC408              	lea rbx, [rsp + 8 * (2 + rax - 1)]
 10488                                  .L_lambda_opt_extra_shift_process_0083:
 10489 0000661F 488B0B                  	mov rcx, [rbx]
 10490 00006622 48894B08                	mov [rbx + 8], rcx
 10491 00006626 4883EB08                	sub rbx, 8
 10492 0000662A 4839DC                  	cmp rsp, rbx
 10493 0000662D 7EF0                    	jle .L_lambda_opt_extra_shift_process_0083
 10494                                  .L_lambda_opt_extra_shift_process_end_0083:
 10495 0000662F 4883C408                	add rsp, 8
 10496 00006633 488B5C2410              	mov rbx, [rsp + 8 * 2]
 10497 00006638 4883EB01                	sub rbx, 1
 10498 0000663C 48895C2410              	mov [rsp + 8 * 2], rbx
 10499 00006641 48837C241001            	cmp qword [rsp + 8 * 2], 1
 10500 00006647 7FAF                    	jg .L_lambda_opt_stack_shrink_loop_0083
 10501                                  .L_lambda_opt_stack_shrink_loop_exit_0083:
 10502 00006649 488B4C2410              	mov rcx, [rsp + 8 * 2]
 10503 0000664E 488B5CCC10              	mov rbx, qword [rsp + 8 * (2 + rcx)]
 10504 00006653 BF11000000              	mov rdi, (1 + 8 + 8)
 10505 00006658 E889EB0000              	call malloc
 10506 0000665D C60021                  	mov byte[rax], T_pair
 10507 00006660 48895009                	mov SOB_PAIR_CDR(rax), rdx
 10508 00006664 48895801                	mov SOB_PAIR_CAR(rax), rbx
 10509 00006668 488944CC10              	mov [rsp + 8 * (2 + rcx)], rax
 10510                                  .L_lambda_opt_stack_adjusted_0083:
 10511 0000666D C8000000                	enter 0, 0
 10512                                  	; preparing a tail-call
 10513 00006671 488B4520                	mov rax, PARAM(0)	; param s
 10514 00006675 50                      	push rax
 10515 00006676 48B8-                   	mov rax, L_constants + 2558
 10515 00006678 [FE09000000000000] 
 10516 00006680 50                      	push rax
 10517 00006681 488B4510                	mov rax, ENV
 10518 00006685 488B00                  	mov rax, qword [rax + 8 * 0]
 10519 00006688 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin+
 10520 0000668B 50                      	push rax
 10521 0000668C 6A03                    	push 3	; arg count
 10522 0000668E 488B0425[1C190000]      	mov rax, qword [free_var_94]	; free var fold-left
 10523 00006696 803805                  	cmp byte [rax], T_undefined
 10524 00006699 0F841AEA0000            	je L_error_fvar_undefined
 10525 0000669F 803804                  	cmp byte [rax], T_closure
 10526 000066A2 0F8595EA0000            	jne L_error_non_closure
 10527 000066A8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10528                                  
 10529                                  	; recycling the current frame
 10530 000066AB FF7508                  	push qword [rbp + 8 * 1]	; old return address
 10531 000066AE FF7500                  	push qword [rbp]	; old frame-pointer
 10532 000066B1 B907000000              	mov rcx, 7
 10533 000066B6 488B5D18                	mov rbx, COUNT
 10534 000066BA 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 10535 000066BF 488D55F8                	lea rdx, [rbp - 8]
 10536                                  .L_tc_recycle_frame_loop_04fe:
 10537 000066C3 4883F900                	cmp rcx, 0
 10538 000066C7 7413                    	je .L_tc_recycle_frame_done_04fe
 10539 000066C9 488B32                  	mov rsi, qword [rdx]
 10540 000066CC 488933                  	mov qword [rbx], rsi
 10541 000066CF 48FFC9                  	dec rcx
 10542 000066D2 4883EB08                	sub rbx, 8
 10543 000066D6 4883EA08                	sub rdx, 8
 10544 000066DA EBE7                    	jmp .L_tc_recycle_frame_loop_04fe
 10545                                  .L_tc_recycle_frame_done_04fe:
 10546 000066DC 488D6308                	lea rsp, [rbx + 8]
 10547 000066E0 5D                      	pop rbp
 10548 000066E1 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10549 000066E4 C9                      	leave
 10550 000066E5 C21800                  	ret AND_KILL_FRAME(1)
 10551                                  .L_lambda_opt_end_0083:	; new closure is in rax
 10552 000066E8 C9                      	leave
 10553 000066E9 C21800                  	ret AND_KILL_FRAME(1)
 10554                                  .L_lambda_simple_end_03da:	; new closure is in rax
 10555 000066EC 803804                  	cmp byte [rax], T_closure
 10556 000066EF 0F8548EA0000            	jne L_error_non_closure
 10557 000066F5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10558                                  
 10559                                  	; recycling the current frame
 10560 000066F8 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 10561 000066FB FF7500                  	push qword [rbp]	; old frame-pointer
 10562 000066FE B905000000              	mov rcx, 5
 10563 00006703 488B5D18                	mov rbx, COUNT
 10564 00006707 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 10565 0000670C 488D55F8                	lea rdx, [rbp - 8]
 10566                                  .L_tc_recycle_frame_loop_04ff:
 10567 00006710 4883F900                	cmp rcx, 0
 10568 00006714 7413                    	je .L_tc_recycle_frame_done_04ff
 10569 00006716 488B32                  	mov rsi, qword [rdx]
 10570 00006719 488933                  	mov qword [rbx], rsi
 10571 0000671C 48FFC9                  	dec rcx
 10572 0000671F 4883EB08                	sub rbx, 8
 10573 00006723 4883EA08                	sub rdx, 8
 10574 00006727 EBE7                    	jmp .L_tc_recycle_frame_loop_04ff
 10575                                  .L_tc_recycle_frame_done_04ff:
 10576 00006729 488D6308                	lea rsp, [rbx + 8]
 10577 0000672D 5D                      	pop rbp
 10578 0000672E FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10579 00006731 C9                      	leave
 10580 00006732 C21800                  	ret AND_KILL_FRAME(1)
 10581                                  .L_lambda_simple_end_03d8:	; new closure is in rax
 10582 00006735 803804                  	cmp byte [rax], T_closure
 10583 00006738 0F85FFE90000            	jne L_error_non_closure
 10584 0000673E FF7001                  	push SOB_CLOSURE_ENV(rax)
 10585 00006741 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10586 00006744 48890425[EF120000]      	mov qword [free_var_1], rax
 10587 0000674C 48B8-                   	mov rax, sob_void
 10587 0000674E [0000000000000000] 
 10588                                  
 10589 00006756 4889C7                  	mov rdi, rax
 10590 00006759 E8DDEC0000              	call print_sexpr_if_not_void
 10591                                  
 10592                                  	; preparing a non-tail-call
 10593 0000675E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 10594 00006763 E87EEA0000              	call malloc
 10595 00006768 50                      	push rax
 10596 00006769 BF00000000              	mov rdi, 8 * 0	; new rib
 10597 0000676E E873EA0000              	call malloc
 10598 00006773 50                      	push rax
 10599 00006774 BF08000000              	mov rdi, 8 * 1	; extended env
 10600 00006779 E868EA0000              	call malloc
 10601 0000677E 488B7D10                	mov rdi, ENV
 10602 00006782 BE00000000              	mov rsi, 0
 10603 00006787 BA01000000              	mov rdx, 1
 10604                                  .L_lambda_simple_env_loop_03db:	; ext_env[i + 1] <-- env[i]
 10605 0000678C 4883FE00                	cmp rsi, 0
 10606 00006790 7410                    	je .L_lambda_simple_env_end_03db
 10607 00006792 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 10608 00006796 48890CD0                	mov qword [rax + 8 * rdx], rcx
 10609 0000679A 48FFC6                  	inc rsi
 10610 0000679D 48FFC2                  	inc rdx
 10611 000067A0 EBEA                    	jmp .L_lambda_simple_env_loop_03db
 10612                                  .L_lambda_simple_env_end_03db:
 10613 000067A2 5B                      	pop rbx
 10614 000067A3 BE00000000              	mov rsi, 0
 10615                                  .L_lambda_simple_params_loop_03db:	; copy params
 10616 000067A8 4883FE00                	cmp rsi, 0
 10617 000067AC 740E                    	je .L_lambda_simple_params_end_03db
 10618 000067AE 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 10619 000067B3 488914F3                	mov qword [rbx + 8 * rsi], rdx
 10620 000067B7 48FFC6                  	inc rsi
 10621 000067BA EBEC                    	jmp .L_lambda_simple_params_loop_03db
 10622                                  .L_lambda_simple_params_end_03db:
 10623 000067BC 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 10624 000067BF 4889C3                  	mov rbx, rax
 10625 000067C2 58                      	pop rax
 10626 000067C3 C60004                  	mov byte [rax], T_closure
 10627 000067C6 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 10628 000067CA 48C74009[D7670000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03db
 10629 000067D2 E989000000              	jmp .L_lambda_simple_end_03db
 10630                                  .L_lambda_simple_code_03db:	; lambda-simple body
 10631 000067D7 48837C241000            	cmp qword [rsp + 8 * 2], 0
 10632 000067DD 740B                    	je .L_lambda_simple_arity_check_ok_03db
 10633 000067DF FF742410                	push qword [rsp + 8 * 2]
 10634 000067E3 6A00                    	push 0
 10635 000067E5 E9B5E90000              	jmp L_error_incorrect_arity_simple
 10636                                  .L_lambda_simple_arity_check_ok_03db:
 10637 000067EA C8000000                	enter 0, 0
 10638                                  	; preparing a tail-call
 10639 000067EE 48B8-                   	mov rax, L_constants + 2691
 10639 000067F0 [830A000000000000] 
 10640 000067F8 50                      	push rax
 10641 000067F9 48B8-                   	mov rax, L_constants + 2791
 10641 000067FB [E70A000000000000] 
 10642 00006803 50                      	push rax
 10643 00006804 6A02                    	push 2	; arg count
 10644 00006806 488B0425[D8180000]      	mov rax, qword [free_var_90]	; free var error
 10645 0000680E 803805                  	cmp byte [rax], T_undefined
 10646 00006811 0F84A2E80000            	je L_error_fvar_undefined
 10647 00006817 803804                  	cmp byte [rax], T_closure
 10648 0000681A 0F851DE90000            	jne L_error_non_closure
 10649 00006820 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10650                                  
 10651                                  	; recycling the current frame
 10652 00006823 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 10653 00006826 FF7500                  	push qword [rbp]	; old frame-pointer
 10654 00006829 B906000000              	mov rcx, 6
 10655 0000682E 488B5D18                	mov rbx, COUNT
 10656 00006832 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 10657 00006837 488D55F8                	lea rdx, [rbp - 8]
 10658                                  .L_tc_recycle_frame_loop_0500:
 10659 0000683B 4883F900                	cmp rcx, 0
 10660 0000683F 7413                    	je .L_tc_recycle_frame_done_0500
 10661 00006841 488B32                  	mov rsi, qword [rdx]
 10662 00006844 488933                  	mov qword [rbx], rsi
 10663 00006847 48FFC9                  	dec rcx
 10664 0000684A 4883EB08                	sub rbx, 8
 10665 0000684E 4883EA08                	sub rdx, 8
 10666 00006852 EBE7                    	jmp .L_tc_recycle_frame_loop_0500
 10667                                  .L_tc_recycle_frame_done_0500:
 10668 00006854 488D6308                	lea rsp, [rbx + 8]
 10669 00006858 5D                      	pop rbp
 10670 00006859 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10671 0000685C C9                      	leave
 10672 0000685D C21000                  	ret AND_KILL_FRAME(0)
 10673                                  .L_lambda_simple_end_03db:	; new closure is in rax
 10674 00006860 50                      	push rax
 10675 00006861 6A01                    	push 1	; arg count
 10676 00006863 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 10677 00006868 E879E90000              	call malloc
 10678 0000686D 50                      	push rax
 10679 0000686E BF00000000              	mov rdi, 8 * 0	; new rib
 10680 00006873 E86EE90000              	call malloc
 10681 00006878 50                      	push rax
 10682 00006879 BF08000000              	mov rdi, 8 * 1	; extended env
 10683 0000687E E863E90000              	call malloc
 10684 00006883 488B7D10                	mov rdi, ENV
 10685 00006887 BE00000000              	mov rsi, 0
 10686 0000688C BA01000000              	mov rdx, 1
 10687                                  .L_lambda_simple_env_loop_03dc:	; ext_env[i + 1] <-- env[i]
 10688 00006891 4883FE00                	cmp rsi, 0
 10689 00006895 7410                    	je .L_lambda_simple_env_end_03dc
 10690 00006897 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 10691 0000689B 48890CD0                	mov qword [rax + 8 * rdx], rcx
 10692 0000689F 48FFC6                  	inc rsi
 10693 000068A2 48FFC2                  	inc rdx
 10694 000068A5 EBEA                    	jmp .L_lambda_simple_env_loop_03dc
 10695                                  .L_lambda_simple_env_end_03dc:
 10696 000068A7 5B                      	pop rbx
 10697 000068A8 BE00000000              	mov rsi, 0
 10698                                  .L_lambda_simple_params_loop_03dc:	; copy params
 10699 000068AD 4883FE00                	cmp rsi, 0
 10700 000068B1 740E                    	je .L_lambda_simple_params_end_03dc
 10701 000068B3 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 10702 000068B8 488914F3                	mov qword [rbx + 8 * rsi], rdx
 10703 000068BC 48FFC6                  	inc rsi
 10704 000068BF EBEC                    	jmp .L_lambda_simple_params_loop_03dc
 10705                                  .L_lambda_simple_params_end_03dc:
 10706 000068C1 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 10707 000068C4 4889C3                  	mov rbx, rax
 10708 000068C7 58                      	pop rax
 10709 000068C8 C60004                  	mov byte [rax], T_closure
 10710 000068CB 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 10711 000068CF 48C74009[DC680000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03dc
 10712 000068D7 E9060D0000              	jmp .L_lambda_simple_end_03dc
 10713                                  .L_lambda_simple_code_03dc:	; lambda-simple body
 10714 000068DC 48837C241001            	cmp qword [rsp + 8 * 2], 1
 10715 000068E2 740B                    	je .L_lambda_simple_arity_check_ok_03dc
 10716 000068E4 FF742410                	push qword [rsp + 8 * 2]
 10717 000068E8 6A01                    	push 1
 10718 000068EA E9B0E80000              	jmp L_error_incorrect_arity_simple
 10719                                  .L_lambda_simple_arity_check_ok_03dc:
 10720 000068EF C8000000                	enter 0, 0
 10721                                  	; preparing a tail-call
 10722 000068F3 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 10723 000068F8 E8E9E80000              	call malloc
 10724 000068FD 50                      	push rax
 10725 000068FE BF08000000              	mov rdi, 8 * 1	; new rib
 10726 00006903 E8DEE80000              	call malloc
 10727 00006908 50                      	push rax
 10728 00006909 BF10000000              	mov rdi, 8 * 2	; extended env
 10729 0000690E E8D3E80000              	call malloc
 10730 00006913 488B7D10                	mov rdi, ENV
 10731 00006917 BE00000000              	mov rsi, 0
 10732 0000691C BA01000000              	mov rdx, 1
 10733                                  .L_lambda_simple_env_loop_03dd:	; ext_env[i + 1] <-- env[i]
 10734 00006921 4883FE01                	cmp rsi, 1
 10735 00006925 7410                    	je .L_lambda_simple_env_end_03dd
 10736 00006927 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 10737 0000692B 48890CD0                	mov qword [rax + 8 * rdx], rcx
 10738 0000692F 48FFC6                  	inc rsi
 10739 00006932 48FFC2                  	inc rdx
 10740 00006935 EBEA                    	jmp .L_lambda_simple_env_loop_03dd
 10741                                  .L_lambda_simple_env_end_03dd:
 10742 00006937 5B                      	pop rbx
 10743 00006938 BE00000000              	mov rsi, 0
 10744                                  .L_lambda_simple_params_loop_03dd:	; copy params
 10745 0000693D 4883FE01                	cmp rsi, 1
 10746 00006941 740E                    	je .L_lambda_simple_params_end_03dd
 10747 00006943 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 10748 00006948 488914F3                	mov qword [rbx + 8 * rsi], rdx
 10749 0000694C 48FFC6                  	inc rsi
 10750 0000694F EBEC                    	jmp .L_lambda_simple_params_loop_03dd
 10751                                  .L_lambda_simple_params_end_03dd:
 10752 00006951 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 10753 00006954 4889C3                  	mov rbx, rax
 10754 00006957 58                      	pop rax
 10755 00006958 C60004                  	mov byte [rax], T_closure
 10756 0000695B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 10757 0000695F 48C74009[6C690000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03dd
 10758 00006967 E92B080000              	jmp .L_lambda_simple_end_03dd
 10759                                  .L_lambda_simple_code_03dd:	; lambda-simple body
 10760 0000696C 48837C241002            	cmp qword [rsp + 8 * 2], 2
 10761 00006972 740B                    	je .L_lambda_simple_arity_check_ok_03dd
 10762 00006974 FF742410                	push qword [rsp + 8 * 2]
 10763 00006978 6A02                    	push 2
 10764 0000697A E920E80000              	jmp L_error_incorrect_arity_simple
 10765                                  .L_lambda_simple_arity_check_ok_03dd:
 10766 0000697F C8000000                	enter 0, 0
 10767                                  	; preparing a non-tail-call
 10768 00006983 488B4520                	mov rax, PARAM(0)	; param a
 10769 00006987 50                      	push rax
 10770 00006988 6A01                    	push 1	; arg count
 10771 0000698A 488B0425[B5190000]      	mov rax, qword [free_var_103]	; free var integer?
 10772 00006992 803805                  	cmp byte [rax], T_undefined
 10773 00006995 0F841EE70000            	je L_error_fvar_undefined
 10774 0000699B 803804                  	cmp byte [rax], T_closure
 10775 0000699E 0F8599E70000            	jne L_error_non_closure
 10776 000069A4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10777 000069A7 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10778 000069AA 483D[02000000]          	cmp rax, sob_boolean_false
 10779 000069B0 0F8463020000            	je .L_if_else_02d2
 10780                                  	; preparing a non-tail-call
 10781 000069B6 488B4528                	mov rax, PARAM(1)	; param b
 10782 000069BA 50                      	push rax
 10783 000069BB 6A01                    	push 1	; arg count
 10784 000069BD 488B0425[B5190000]      	mov rax, qword [free_var_103]	; free var integer?
 10785 000069C5 803805                  	cmp byte [rax], T_undefined
 10786 000069C8 0F84EBE60000            	je L_error_fvar_undefined
 10787 000069CE 803804                  	cmp byte [rax], T_closure
 10788 000069D1 0F8566E70000            	jne L_error_non_closure
 10789 000069D7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10790 000069DA FF5009                  	call SOB_CLOSURE_CODE(rax)
 10791 000069DD 483D[02000000]          	cmp rax, sob_boolean_false
 10792 000069E3 7467                    	je .L_if_else_02c9
 10793                                  	; preparing a tail-call
 10794 000069E5 488B4528                	mov rax, PARAM(1)	; param b
 10795 000069E9 50                      	push rax
 10796 000069EA 488B4520                	mov rax, PARAM(0)	; param a
 10797 000069EE 50                      	push rax
 10798 000069EF 6A02                    	push 2	; arg count
 10799 000069F1 488B0425[A9140000]      	mov rax, qword [free_var_27]	; free var __bin-sub-zz
 10800 000069F9 803805                  	cmp byte [rax], T_undefined
 10801 000069FC 0F84B7E60000            	je L_error_fvar_undefined
 10802 00006A02 803804                  	cmp byte [rax], T_closure
 10803 00006A05 0F8532E70000            	jne L_error_non_closure
 10804 00006A0B FF7001                  	push SOB_CLOSURE_ENV(rax)
 10805                                  
 10806                                  	; recycling the current frame
 10807 00006A0E FF7508                  	push qword [rbp + 8 * 1]	; old return address
 10808 00006A11 FF7500                  	push qword [rbp]	; old frame-pointer
 10809 00006A14 B906000000              	mov rcx, 6
 10810 00006A19 488B5D18                	mov rbx, COUNT
 10811 00006A1D 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 10812 00006A22 488D55F8                	lea rdx, [rbp - 8]
 10813                                  .L_tc_recycle_frame_loop_0501:
 10814 00006A26 4883F900                	cmp rcx, 0
 10815 00006A2A 7413                    	je .L_tc_recycle_frame_done_0501
 10816 00006A2C 488B32                  	mov rsi, qword [rdx]
 10817 00006A2F 488933                  	mov qword [rbx], rsi
 10818 00006A32 48FFC9                  	dec rcx
 10819 00006A35 4883EB08                	sub rbx, 8
 10820 00006A39 4883EA08                	sub rdx, 8
 10821 00006A3D EBE7                    	jmp .L_tc_recycle_frame_loop_0501
 10822                                  .L_tc_recycle_frame_done_0501:
 10823 00006A3F 488D6308                	lea rsp, [rbx + 8]
 10824 00006A43 5D                      	pop rbp
 10825 00006A44 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10826 00006A47 E9C8010000              	jmp .L_if_end_02c9
 10827                                  .L_if_else_02c9:
 10828                                  	; preparing a non-tail-call
 10829 00006A4C 488B4528                	mov rax, PARAM(1)	; param b
 10830 00006A50 50                      	push rax
 10831 00006A51 6A01                    	push 1	; arg count
 10832 00006A53 488B0425[4F190000]      	mov rax, qword [free_var_97]	; free var fraction?
 10833 00006A5B 803805                  	cmp byte [rax], T_undefined
 10834 00006A5E 0F8455E60000            	je L_error_fvar_undefined
 10835 00006A64 803804                  	cmp byte [rax], T_closure
 10836 00006A67 0F85D0E60000            	jne L_error_non_closure
 10837 00006A6D FF7001                  	push SOB_CLOSURE_ENV(rax)
 10838 00006A70 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10839 00006A73 483D[02000000]          	cmp rax, sob_boolean_false
 10840 00006A79 0F848A000000            	je .L_if_else_02c8
 10841                                  	; preparing a tail-call
 10842 00006A7F 488B4528                	mov rax, PARAM(1)	; param b
 10843 00006A83 50                      	push rax
 10844                                  	; preparing a non-tail-call
 10845 00006A84 488B4520                	mov rax, PARAM(0)	; param a
 10846 00006A88 50                      	push rax
 10847 00006A89 6A01                    	push 1	; arg count
 10848 00006A8B 488B0425[CB140000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
 10849 00006A93 803805                  	cmp byte [rax], T_undefined
 10850 00006A96 0F841DE60000            	je L_error_fvar_undefined
 10851 00006A9C 803804                  	cmp byte [rax], T_closure
 10852 00006A9F 0F8598E60000            	jne L_error_non_closure
 10853 00006AA5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10854 00006AA8 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10855 00006AAB 50                      	push rax
 10856 00006AAC 6A02                    	push 2	; arg count
 10857 00006AAE 488B0425[87140000]      	mov rax, qword [free_var_25]	; free var __bin-sub-qq
 10858 00006AB6 803805                  	cmp byte [rax], T_undefined
 10859 00006AB9 0F84FAE50000            	je L_error_fvar_undefined
 10860 00006ABF 803804                  	cmp byte [rax], T_closure
 10861 00006AC2 0F8575E60000            	jne L_error_non_closure
 10862 00006AC8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10863                                  
 10864                                  	; recycling the current frame
 10865 00006ACB FF7508                  	push qword [rbp + 8 * 1]	; old return address
 10866 00006ACE FF7500                  	push qword [rbp]	; old frame-pointer
 10867 00006AD1 B906000000              	mov rcx, 6
 10868 00006AD6 488B5D18                	mov rbx, COUNT
 10869 00006ADA 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 10870 00006ADF 488D55F8                	lea rdx, [rbp - 8]
 10871                                  .L_tc_recycle_frame_loop_0502:
 10872 00006AE3 4883F900                	cmp rcx, 0
 10873 00006AE7 7413                    	je .L_tc_recycle_frame_done_0502
 10874 00006AE9 488B32                  	mov rsi, qword [rdx]
 10875 00006AEC 488933                  	mov qword [rbx], rsi
 10876 00006AEF 48FFC9                  	dec rcx
 10877 00006AF2 4883EB08                	sub rbx, 8
 10878 00006AF6 4883EA08                	sub rdx, 8
 10879 00006AFA EBE7                    	jmp .L_tc_recycle_frame_loop_0502
 10880                                  .L_tc_recycle_frame_done_0502:
 10881 00006AFC 488D6308                	lea rsp, [rbx + 8]
 10882 00006B00 5D                      	pop rbp
 10883 00006B01 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10884 00006B04 E90B010000              	jmp .L_if_end_02c8
 10885                                  .L_if_else_02c8:
 10886                                  	; preparing a non-tail-call
 10887 00006B09 488B4528                	mov rax, PARAM(1)	; param b
 10888 00006B0D 50                      	push rax
 10889 00006B0E 6A01                    	push 1	; arg count
 10890 00006B10 488B0425[081C0000]      	mov rax, qword [free_var_138]	; free var real
 10891 00006B18 803805                  	cmp byte [rax], T_undefined
 10892 00006B1B 0F8498E50000            	je L_error_fvar_undefined
 10893 00006B21 803804                  	cmp byte [rax], T_closure
 10894 00006B24 0F8513E60000            	jne L_error_non_closure
 10895 00006B2A FF7001                  	push SOB_CLOSURE_ENV(rax)
 10896 00006B2D FF5009                  	call SOB_CLOSURE_CODE(rax)
 10897 00006B30 483D[02000000]          	cmp rax, sob_boolean_false
 10898 00006B36 0F8487000000            	je .L_if_else_02c7
 10899                                  	; preparing a tail-call
 10900 00006B3C 488B4528                	mov rax, PARAM(1)	; param b
 10901 00006B40 50                      	push rax
 10902                                  	; preparing a non-tail-call
 10903 00006B41 488B4520                	mov rax, PARAM(0)	; param a
 10904 00006B45 50                      	push rax
 10905 00006B46 6A01                    	push 1	; arg count
 10906 00006B48 488B0425[A4190000]      	mov rax, qword [free_var_102]	; free var integer->real
 10907 00006B50 803805                  	cmp byte [rax], T_undefined
 10908 00006B53 0F8460E50000            	je L_error_fvar_undefined
 10909 00006B59 803804                  	cmp byte [rax], T_closure
 10910 00006B5C 0F85DBE50000            	jne L_error_non_closure
 10911 00006B62 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10912 00006B65 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10913 00006B68 50                      	push rax
 10914 00006B69 6A02                    	push 2	; arg count
 10915 00006B6B 488B0425[98140000]      	mov rax, qword [free_var_26]	; free var __bin-sub-rr
 10916 00006B73 803805                  	cmp byte [rax], T_undefined
 10917 00006B76 0F843DE50000            	je L_error_fvar_undefined
 10918 00006B7C 803804                  	cmp byte [rax], T_closure
 10919 00006B7F 0F85B8E50000            	jne L_error_non_closure
 10920 00006B85 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10921                                  
 10922                                  	; recycling the current frame
 10923 00006B88 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 10924 00006B8B FF7500                  	push qword [rbp]	; old frame-pointer
 10925 00006B8E B906000000              	mov rcx, 6
 10926 00006B93 488B5D18                	mov rbx, COUNT
 10927 00006B97 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 10928 00006B9C 488D55F8                	lea rdx, [rbp - 8]
 10929                                  .L_tc_recycle_frame_loop_0503:
 10930 00006BA0 4883F900                	cmp rcx, 0
 10931 00006BA4 7413                    	je .L_tc_recycle_frame_done_0503
 10932 00006BA6 488B32                  	mov rsi, qword [rdx]
 10933 00006BA9 488933                  	mov qword [rbx], rsi
 10934 00006BAC 48FFC9                  	dec rcx
 10935 00006BAF 4883EB08                	sub rbx, 8
 10936 00006BB3 4883EA08                	sub rdx, 8
 10937 00006BB7 EBE7                    	jmp .L_tc_recycle_frame_loop_0503
 10938                                  .L_tc_recycle_frame_done_0503:
 10939 00006BB9 488D6308                	lea rsp, [rbx + 8]
 10940 00006BBD 5D                      	pop rbp
 10941 00006BBE FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10942 00006BC1 EB51                    	jmp .L_if_end_02c7
 10943                                  .L_if_else_02c7:
 10944                                  	; preparing a tail-call
 10945 00006BC3 6A00                    	push 0	; arg count
 10946 00006BC5 488B4510                	mov rax, ENV
 10947 00006BC9 488B00                  	mov rax, qword [rax + 8 * 0]
 10948 00006BCC 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 10949 00006BCF 803804                  	cmp byte [rax], T_closure
 10950 00006BD2 0F8565E50000            	jne L_error_non_closure
 10951 00006BD8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10952                                  
 10953                                  	; recycling the current frame
 10954 00006BDB FF7508                  	push qword [rbp + 8 * 1]	; old return address
 10955 00006BDE FF7500                  	push qword [rbp]	; old frame-pointer
 10956 00006BE1 B904000000              	mov rcx, 4
 10957 00006BE6 488B5D18                	mov rbx, COUNT
 10958 00006BEA 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 10959 00006BEF 488D55F8                	lea rdx, [rbp - 8]
 10960                                  .L_tc_recycle_frame_loop_0504:
 10961 00006BF3 4883F900                	cmp rcx, 0
 10962 00006BF7 7413                    	je .L_tc_recycle_frame_done_0504
 10963 00006BF9 488B32                  	mov rsi, qword [rdx]
 10964 00006BFC 488933                  	mov qword [rbx], rsi
 10965 00006BFF 48FFC9                  	dec rcx
 10966 00006C02 4883EB08                	sub rbx, 8
 10967 00006C06 4883EA08                	sub rdx, 8
 10968 00006C0A EBE7                    	jmp .L_tc_recycle_frame_loop_0504
 10969                                  .L_tc_recycle_frame_done_0504:
 10970 00006C0C 488D6308                	lea rsp, [rbx + 8]
 10971 00006C10 5D                      	pop rbp
 10972 00006C11 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10973                                  .L_if_end_02c7:
 10974                                  .L_if_end_02c8:
 10975                                  .L_if_end_02c9:
 10976 00006C14 E97A050000              	jmp .L_if_end_02d2
 10977                                  .L_if_else_02d2:
 10978                                  	; preparing a non-tail-call
 10979 00006C19 488B4520                	mov rax, PARAM(0)	; param a
 10980 00006C1D 50                      	push rax
 10981 00006C1E 6A01                    	push 1	; arg count
 10982 00006C20 488B0425[4F190000]      	mov rax, qword [free_var_97]	; free var fraction?
 10983 00006C28 803805                  	cmp byte [rax], T_undefined
 10984 00006C2B 0F8488E40000            	je L_error_fvar_undefined
 10985 00006C31 803804                  	cmp byte [rax], T_closure
 10986 00006C34 0F8503E50000            	jne L_error_non_closure
 10987 00006C3A FF7001                  	push SOB_CLOSURE_ENV(rax)
 10988 00006C3D FF5009                  	call SOB_CLOSURE_CODE(rax)
 10989 00006C40 483D[02000000]          	cmp rax, sob_boolean_false
 10990 00006C46 0F8463020000            	je .L_if_else_02d1
 10991                                  	; preparing a non-tail-call
 10992 00006C4C 488B4528                	mov rax, PARAM(1)	; param b
 10993 00006C50 50                      	push rax
 10994 00006C51 6A01                    	push 1	; arg count
 10995 00006C53 488B0425[B5190000]      	mov rax, qword [free_var_103]	; free var integer?
 10996 00006C5B 803805                  	cmp byte [rax], T_undefined
 10997 00006C5E 0F8455E40000            	je L_error_fvar_undefined
 10998 00006C64 803804                  	cmp byte [rax], T_closure
 10999 00006C67 0F85D0E40000            	jne L_error_non_closure
 11000 00006C6D FF7001                  	push SOB_CLOSURE_ENV(rax)
 11001 00006C70 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11002 00006C73 483D[02000000]          	cmp rax, sob_boolean_false
 11003 00006C79 0F848A000000            	je .L_if_else_02cc
 11004                                  	; preparing a tail-call
 11005                                  	; preparing a non-tail-call
 11006 00006C7F 488B4528                	mov rax, PARAM(1)	; param b
 11007 00006C83 50                      	push rax
 11008 00006C84 6A01                    	push 1	; arg count
 11009 00006C86 488B0425[CB140000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
 11010 00006C8E 803805                  	cmp byte [rax], T_undefined
 11011 00006C91 0F8422E40000            	je L_error_fvar_undefined
 11012 00006C97 803804                  	cmp byte [rax], T_closure
 11013 00006C9A 0F859DE40000            	jne L_error_non_closure
 11014 00006CA0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11015 00006CA3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11016 00006CA6 50                      	push rax
 11017 00006CA7 488B4520                	mov rax, PARAM(0)	; param a
 11018 00006CAB 50                      	push rax
 11019 00006CAC 6A02                    	push 2	; arg count
 11020 00006CAE 488B0425[87140000]      	mov rax, qword [free_var_25]	; free var __bin-sub-qq
 11021 00006CB6 803805                  	cmp byte [rax], T_undefined
 11022 00006CB9 0F84FAE30000            	je L_error_fvar_undefined
 11023 00006CBF 803804                  	cmp byte [rax], T_closure
 11024 00006CC2 0F8575E40000            	jne L_error_non_closure
 11025 00006CC8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11026                                  
 11027                                  	; recycling the current frame
 11028 00006CCB FF7508                  	push qword [rbp + 8 * 1]	; old return address
 11029 00006CCE FF7500                  	push qword [rbp]	; old frame-pointer
 11030 00006CD1 B906000000              	mov rcx, 6
 11031 00006CD6 488B5D18                	mov rbx, COUNT
 11032 00006CDA 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 11033 00006CDF 488D55F8                	lea rdx, [rbp - 8]
 11034                                  .L_tc_recycle_frame_loop_0505:
 11035 00006CE3 4883F900                	cmp rcx, 0
 11036 00006CE7 7413                    	je .L_tc_recycle_frame_done_0505
 11037 00006CE9 488B32                  	mov rsi, qword [rdx]
 11038 00006CEC 488933                  	mov qword [rbx], rsi
 11039 00006CEF 48FFC9                  	dec rcx
 11040 00006CF2 4883EB08                	sub rbx, 8
 11041 00006CF6 4883EA08                	sub rdx, 8
 11042 00006CFA EBE7                    	jmp .L_tc_recycle_frame_loop_0505
 11043                                  .L_tc_recycle_frame_done_0505:
 11044 00006CFC 488D6308                	lea rsp, [rbx + 8]
 11045 00006D00 5D                      	pop rbp
 11046 00006D01 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11047 00006D04 E9A1010000              	jmp .L_if_end_02cc
 11048                                  .L_if_else_02cc:
 11049                                  	; preparing a non-tail-call
 11050 00006D09 488B4528                	mov rax, PARAM(1)	; param b
 11051 00006D0D 50                      	push rax
 11052 00006D0E 6A01                    	push 1	; arg count
 11053 00006D10 488B0425[4F190000]      	mov rax, qword [free_var_97]	; free var fraction?
 11054 00006D18 803805                  	cmp byte [rax], T_undefined
 11055 00006D1B 0F8498E30000            	je L_error_fvar_undefined
 11056 00006D21 803804                  	cmp byte [rax], T_closure
 11057 00006D24 0F8513E40000            	jne L_error_non_closure
 11058 00006D2A FF7001                  	push SOB_CLOSURE_ENV(rax)
 11059 00006D2D FF5009                  	call SOB_CLOSURE_CODE(rax)
 11060 00006D30 483D[02000000]          	cmp rax, sob_boolean_false
 11061 00006D36 7467                    	je .L_if_else_02cb
 11062                                  	; preparing a tail-call
 11063 00006D38 488B4528                	mov rax, PARAM(1)	; param b
 11064 00006D3C 50                      	push rax
 11065 00006D3D 488B4520                	mov rax, PARAM(0)	; param a
 11066 00006D41 50                      	push rax
 11067 00006D42 6A02                    	push 2	; arg count
 11068 00006D44 488B0425[87140000]      	mov rax, qword [free_var_25]	; free var __bin-sub-qq
 11069 00006D4C 803805                  	cmp byte [rax], T_undefined
 11070 00006D4F 0F8464E30000            	je L_error_fvar_undefined
 11071 00006D55 803804                  	cmp byte [rax], T_closure
 11072 00006D58 0F85DFE30000            	jne L_error_non_closure
 11073 00006D5E FF7001                  	push SOB_CLOSURE_ENV(rax)
 11074                                  
 11075                                  	; recycling the current frame
 11076 00006D61 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 11077 00006D64 FF7500                  	push qword [rbp]	; old frame-pointer
 11078 00006D67 B906000000              	mov rcx, 6
 11079 00006D6C 488B5D18                	mov rbx, COUNT
 11080 00006D70 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 11081 00006D75 488D55F8                	lea rdx, [rbp - 8]
 11082                                  .L_tc_recycle_frame_loop_0506:
 11083 00006D79 4883F900                	cmp rcx, 0
 11084 00006D7D 7413                    	je .L_tc_recycle_frame_done_0506
 11085 00006D7F 488B32                  	mov rsi, qword [rdx]
 11086 00006D82 488933                  	mov qword [rbx], rsi
 11087 00006D85 48FFC9                  	dec rcx
 11088 00006D88 4883EB08                	sub rbx, 8
 11089 00006D8C 4883EA08                	sub rdx, 8
 11090 00006D90 EBE7                    	jmp .L_tc_recycle_frame_loop_0506
 11091                                  .L_tc_recycle_frame_done_0506:
 11092 00006D92 488D6308                	lea rsp, [rbx + 8]
 11093 00006D96 5D                      	pop rbp
 11094 00006D97 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11095 00006D9A E90B010000              	jmp .L_if_end_02cb
 11096                                  .L_if_else_02cb:
 11097                                  	; preparing a non-tail-call
 11098 00006D9F 488B4528                	mov rax, PARAM(1)	; param b
 11099 00006DA3 50                      	push rax
 11100 00006DA4 6A01                    	push 1	; arg count
 11101 00006DA6 488B0425[2A1C0000]      	mov rax, qword [free_var_140]	; free var real?
 11102 00006DAE 803805                  	cmp byte [rax], T_undefined
 11103 00006DB1 0F8402E30000            	je L_error_fvar_undefined
 11104 00006DB7 803804                  	cmp byte [rax], T_closure
 11105 00006DBA 0F857DE30000            	jne L_error_non_closure
 11106 00006DC0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11107 00006DC3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11108 00006DC6 483D[02000000]          	cmp rax, sob_boolean_false
 11109 00006DCC 0F8487000000            	je .L_if_else_02ca
 11110                                  	; preparing a tail-call
 11111 00006DD2 488B4528                	mov rax, PARAM(1)	; param b
 11112 00006DD6 50                      	push rax
 11113                                  	; preparing a non-tail-call
 11114 00006DD7 488B4520                	mov rax, PARAM(0)	; param a
 11115 00006DDB 50                      	push rax
 11116 00006DDC 6A01                    	push 1	; arg count
 11117 00006DDE 488B0425[3E190000]      	mov rax, qword [free_var_96]	; free var fraction->real
 11118 00006DE6 803805                  	cmp byte [rax], T_undefined
 11119 00006DE9 0F84CAE20000            	je L_error_fvar_undefined
 11120 00006DEF 803804                  	cmp byte [rax], T_closure
 11121 00006DF2 0F8545E30000            	jne L_error_non_closure
 11122 00006DF8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11123 00006DFB FF5009                  	call SOB_CLOSURE_CODE(rax)
 11124 00006DFE 50                      	push rax
 11125 00006DFF 6A02                    	push 2	; arg count
 11126 00006E01 488B0425[98140000]      	mov rax, qword [free_var_26]	; free var __bin-sub-rr
 11127 00006E09 803805                  	cmp byte [rax], T_undefined
 11128 00006E0C 0F84A7E20000            	je L_error_fvar_undefined
 11129 00006E12 803804                  	cmp byte [rax], T_closure
 11130 00006E15 0F8522E30000            	jne L_error_non_closure
 11131 00006E1B FF7001                  	push SOB_CLOSURE_ENV(rax)
 11132                                  
 11133                                  	; recycling the current frame
 11134 00006E1E FF7508                  	push qword [rbp + 8 * 1]	; old return address
 11135 00006E21 FF7500                  	push qword [rbp]	; old frame-pointer
 11136 00006E24 B906000000              	mov rcx, 6
 11137 00006E29 488B5D18                	mov rbx, COUNT
 11138 00006E2D 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 11139 00006E32 488D55F8                	lea rdx, [rbp - 8]
 11140                                  .L_tc_recycle_frame_loop_0507:
 11141 00006E36 4883F900                	cmp rcx, 0
 11142 00006E3A 7413                    	je .L_tc_recycle_frame_done_0507
 11143 00006E3C 488B32                  	mov rsi, qword [rdx]
 11144 00006E3F 488933                  	mov qword [rbx], rsi
 11145 00006E42 48FFC9                  	dec rcx
 11146 00006E45 4883EB08                	sub rbx, 8
 11147 00006E49 4883EA08                	sub rdx, 8
 11148 00006E4D EBE7                    	jmp .L_tc_recycle_frame_loop_0507
 11149                                  .L_tc_recycle_frame_done_0507:
 11150 00006E4F 488D6308                	lea rsp, [rbx + 8]
 11151 00006E53 5D                      	pop rbp
 11152 00006E54 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11153 00006E57 EB51                    	jmp .L_if_end_02ca
 11154                                  .L_if_else_02ca:
 11155                                  	; preparing a tail-call
 11156 00006E59 6A00                    	push 0	; arg count
 11157 00006E5B 488B4510                	mov rax, ENV
 11158 00006E5F 488B00                  	mov rax, qword [rax + 8 * 0]
 11159 00006E62 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 11160 00006E65 803804                  	cmp byte [rax], T_closure
 11161 00006E68 0F85CFE20000            	jne L_error_non_closure
 11162 00006E6E FF7001                  	push SOB_CLOSURE_ENV(rax)
 11163                                  
 11164                                  	; recycling the current frame
 11165 00006E71 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 11166 00006E74 FF7500                  	push qword [rbp]	; old frame-pointer
 11167 00006E77 B904000000              	mov rcx, 4
 11168 00006E7C 488B5D18                	mov rbx, COUNT
 11169 00006E80 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 11170 00006E85 488D55F8                	lea rdx, [rbp - 8]
 11171                                  .L_tc_recycle_frame_loop_0508:
 11172 00006E89 4883F900                	cmp rcx, 0
 11173 00006E8D 7413                    	je .L_tc_recycle_frame_done_0508
 11174 00006E8F 488B32                  	mov rsi, qword [rdx]
 11175 00006E92 488933                  	mov qword [rbx], rsi
 11176 00006E95 48FFC9                  	dec rcx
 11177 00006E98 4883EB08                	sub rbx, 8
 11178 00006E9C 4883EA08                	sub rdx, 8
 11179 00006EA0 EBE7                    	jmp .L_tc_recycle_frame_loop_0508
 11180                                  .L_tc_recycle_frame_done_0508:
 11181 00006EA2 488D6308                	lea rsp, [rbx + 8]
 11182 00006EA6 5D                      	pop rbp
 11183 00006EA7 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11184                                  .L_if_end_02ca:
 11185                                  .L_if_end_02cb:
 11186                                  .L_if_end_02cc:
 11187 00006EAA E9E4020000              	jmp .L_if_end_02d1
 11188                                  .L_if_else_02d1:
 11189                                  	; preparing a non-tail-call
 11190 00006EAF 488B4520                	mov rax, PARAM(0)	; param a
 11191 00006EB3 50                      	push rax
 11192 00006EB4 6A01                    	push 1	; arg count
 11193 00006EB6 488B0425[2A1C0000]      	mov rax, qword [free_var_140]	; free var real?
 11194 00006EBE 803805                  	cmp byte [rax], T_undefined
 11195 00006EC1 0F84F2E10000            	je L_error_fvar_undefined
 11196 00006EC7 803804                  	cmp byte [rax], T_closure
 11197 00006ECA 0F856DE20000            	jne L_error_non_closure
 11198 00006ED0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11199 00006ED3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11200 00006ED6 483D[02000000]          	cmp rax, sob_boolean_false
 11201 00006EDC 0F8460020000            	je .L_if_else_02d0
 11202                                  	; preparing a non-tail-call
 11203 00006EE2 488B4528                	mov rax, PARAM(1)	; param b
 11204 00006EE6 50                      	push rax
 11205 00006EE7 6A01                    	push 1	; arg count
 11206 00006EE9 488B0425[B5190000]      	mov rax, qword [free_var_103]	; free var integer?
 11207 00006EF1 803805                  	cmp byte [rax], T_undefined
 11208 00006EF4 0F84BFE10000            	je L_error_fvar_undefined
 11209 00006EFA 803804                  	cmp byte [rax], T_closure
 11210 00006EFD 0F853AE20000            	jne L_error_non_closure
 11211 00006F03 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11212 00006F06 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11213 00006F09 483D[02000000]          	cmp rax, sob_boolean_false
 11214 00006F0F 0F848A000000            	je .L_if_else_02cf
 11215                                  	; preparing a tail-call
 11216                                  	; preparing a non-tail-call
 11217 00006F15 488B4528                	mov rax, PARAM(1)	; param b
 11218 00006F19 50                      	push rax
 11219 00006F1A 6A01                    	push 1	; arg count
 11220 00006F1C 488B0425[A4190000]      	mov rax, qword [free_var_102]	; free var integer->real
 11221 00006F24 803805                  	cmp byte [rax], T_undefined
 11222 00006F27 0F848CE10000            	je L_error_fvar_undefined
 11223 00006F2D 803804                  	cmp byte [rax], T_closure
 11224 00006F30 0F8507E20000            	jne L_error_non_closure
 11225 00006F36 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11226 00006F39 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11227 00006F3C 50                      	push rax
 11228 00006F3D 488B4520                	mov rax, PARAM(0)	; param a
 11229 00006F41 50                      	push rax
 11230 00006F42 6A02                    	push 2	; arg count
 11231 00006F44 488B0425[98140000]      	mov rax, qword [free_var_26]	; free var __bin-sub-rr
 11232 00006F4C 803805                  	cmp byte [rax], T_undefined
 11233 00006F4F 0F8464E10000            	je L_error_fvar_undefined
 11234 00006F55 803804                  	cmp byte [rax], T_closure
 11235 00006F58 0F85DFE10000            	jne L_error_non_closure
 11236 00006F5E FF7001                  	push SOB_CLOSURE_ENV(rax)
 11237                                  
 11238                                  	; recycling the current frame
 11239 00006F61 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 11240 00006F64 FF7500                  	push qword [rbp]	; old frame-pointer
 11241 00006F67 B906000000              	mov rcx, 6
 11242 00006F6C 488B5D18                	mov rbx, COUNT
 11243 00006F70 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 11244 00006F75 488D55F8                	lea rdx, [rbp - 8]
 11245                                  .L_tc_recycle_frame_loop_0509:
 11246 00006F79 4883F900                	cmp rcx, 0
 11247 00006F7D 7413                    	je .L_tc_recycle_frame_done_0509
 11248 00006F7F 488B32                  	mov rsi, qword [rdx]
 11249 00006F82 488933                  	mov qword [rbx], rsi
 11250 00006F85 48FFC9                  	dec rcx
 11251 00006F88 4883EB08                	sub rbx, 8
 11252 00006F8C 4883EA08                	sub rdx, 8
 11253 00006F90 EBE7                    	jmp .L_tc_recycle_frame_loop_0509
 11254                                  .L_tc_recycle_frame_done_0509:
 11255 00006F92 488D6308                	lea rsp, [rbx + 8]
 11256 00006F96 5D                      	pop rbp
 11257 00006F97 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11258 00006F9A E9A1010000              	jmp .L_if_end_02cf
 11259                                  .L_if_else_02cf:
 11260                                  	; preparing a non-tail-call
 11261 00006F9F 488B4528                	mov rax, PARAM(1)	; param b
 11262 00006FA3 50                      	push rax
 11263 00006FA4 6A01                    	push 1	; arg count
 11264 00006FA6 488B0425[4F190000]      	mov rax, qword [free_var_97]	; free var fraction?
 11265 00006FAE 803805                  	cmp byte [rax], T_undefined
 11266 00006FB1 0F8402E10000            	je L_error_fvar_undefined
 11267 00006FB7 803804                  	cmp byte [rax], T_closure
 11268 00006FBA 0F857DE10000            	jne L_error_non_closure
 11269 00006FC0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11270 00006FC3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11271 00006FC6 483D[02000000]          	cmp rax, sob_boolean_false
 11272 00006FCC 0F848A000000            	je .L_if_else_02ce
 11273                                  	; preparing a tail-call
 11274                                  	; preparing a non-tail-call
 11275 00006FD2 488B4528                	mov rax, PARAM(1)	; param b
 11276 00006FD6 50                      	push rax
 11277 00006FD7 6A01                    	push 1	; arg count
 11278 00006FD9 488B0425[3E190000]      	mov rax, qword [free_var_96]	; free var fraction->real
 11279 00006FE1 803805                  	cmp byte [rax], T_undefined
 11280 00006FE4 0F84CFE00000            	je L_error_fvar_undefined
 11281 00006FEA 803804                  	cmp byte [rax], T_closure
 11282 00006FED 0F854AE10000            	jne L_error_non_closure
 11283 00006FF3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11284 00006FF6 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11285 00006FF9 50                      	push rax
 11286 00006FFA 488B4520                	mov rax, PARAM(0)	; param a
 11287 00006FFE 50                      	push rax
 11288 00006FFF 6A02                    	push 2	; arg count
 11289 00007001 488B0425[98140000]      	mov rax, qword [free_var_26]	; free var __bin-sub-rr
 11290 00007009 803805                  	cmp byte [rax], T_undefined
 11291 0000700C 0F84A7E00000            	je L_error_fvar_undefined
 11292 00007012 803804                  	cmp byte [rax], T_closure
 11293 00007015 0F8522E10000            	jne L_error_non_closure
 11294 0000701B FF7001                  	push SOB_CLOSURE_ENV(rax)
 11295                                  
 11296                                  	; recycling the current frame
 11297 0000701E FF7508                  	push qword [rbp + 8 * 1]	; old return address
 11298 00007021 FF7500                  	push qword [rbp]	; old frame-pointer
 11299 00007024 B906000000              	mov rcx, 6
 11300 00007029 488B5D18                	mov rbx, COUNT
 11301 0000702D 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 11302 00007032 488D55F8                	lea rdx, [rbp - 8]
 11303                                  .L_tc_recycle_frame_loop_050a:
 11304 00007036 4883F900                	cmp rcx, 0
 11305 0000703A 7413                    	je .L_tc_recycle_frame_done_050a
 11306 0000703C 488B32                  	mov rsi, qword [rdx]
 11307 0000703F 488933                  	mov qword [rbx], rsi
 11308 00007042 48FFC9                  	dec rcx
 11309 00007045 4883EB08                	sub rbx, 8
 11310 00007049 4883EA08                	sub rdx, 8
 11311 0000704D EBE7                    	jmp .L_tc_recycle_frame_loop_050a
 11312                                  .L_tc_recycle_frame_done_050a:
 11313 0000704F 488D6308                	lea rsp, [rbx + 8]
 11314 00007053 5D                      	pop rbp
 11315 00007054 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11316 00007057 E9E4000000              	jmp .L_if_end_02ce
 11317                                  .L_if_else_02ce:
 11318                                  	; preparing a non-tail-call
 11319 0000705C 488B4528                	mov rax, PARAM(1)	; param b
 11320 00007060 50                      	push rax
 11321 00007061 6A01                    	push 1	; arg count
 11322 00007063 488B0425[2A1C0000]      	mov rax, qword [free_var_140]	; free var real?
 11323 0000706B 803805                  	cmp byte [rax], T_undefined
 11324 0000706E 0F8445E00000            	je L_error_fvar_undefined
 11325 00007074 803804                  	cmp byte [rax], T_closure
 11326 00007077 0F85C0E00000            	jne L_error_non_closure
 11327 0000707D FF7001                  	push SOB_CLOSURE_ENV(rax)
 11328 00007080 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11329 00007083 483D[02000000]          	cmp rax, sob_boolean_false
 11330 00007089 7464                    	je .L_if_else_02cd
 11331                                  	; preparing a tail-call
 11332 0000708B 488B4528                	mov rax, PARAM(1)	; param b
 11333 0000708F 50                      	push rax
 11334 00007090 488B4520                	mov rax, PARAM(0)	; param a
 11335 00007094 50                      	push rax
 11336 00007095 6A02                    	push 2	; arg count
 11337 00007097 488B0425[98140000]      	mov rax, qword [free_var_26]	; free var __bin-sub-rr
 11338 0000709F 803805                  	cmp byte [rax], T_undefined
 11339 000070A2 0F8411E00000            	je L_error_fvar_undefined
 11340 000070A8 803804                  	cmp byte [rax], T_closure
 11341 000070AB 0F858CE00000            	jne L_error_non_closure
 11342 000070B1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11343                                  
 11344                                  	; recycling the current frame
 11345 000070B4 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 11346 000070B7 FF7500                  	push qword [rbp]	; old frame-pointer
 11347 000070BA B906000000              	mov rcx, 6
 11348 000070BF 488B5D18                	mov rbx, COUNT
 11349 000070C3 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 11350 000070C8 488D55F8                	lea rdx, [rbp - 8]
 11351                                  .L_tc_recycle_frame_loop_050b:
 11352 000070CC 4883F900                	cmp rcx, 0
 11353 000070D0 7413                    	je .L_tc_recycle_frame_done_050b
 11354 000070D2 488B32                  	mov rsi, qword [rdx]
 11355 000070D5 488933                  	mov qword [rbx], rsi
 11356 000070D8 48FFC9                  	dec rcx
 11357 000070DB 4883EB08                	sub rbx, 8
 11358 000070DF 4883EA08                	sub rdx, 8
 11359 000070E3 EBE7                    	jmp .L_tc_recycle_frame_loop_050b
 11360                                  .L_tc_recycle_frame_done_050b:
 11361 000070E5 488D6308                	lea rsp, [rbx + 8]
 11362 000070E9 5D                      	pop rbp
 11363 000070EA FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11364 000070ED EB51                    	jmp .L_if_end_02cd
 11365                                  .L_if_else_02cd:
 11366                                  	; preparing a tail-call
 11367 000070EF 6A00                    	push 0	; arg count
 11368 000070F1 488B4510                	mov rax, ENV
 11369 000070F5 488B00                  	mov rax, qword [rax + 8 * 0]
 11370 000070F8 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 11371 000070FB 803804                  	cmp byte [rax], T_closure
 11372 000070FE 0F8539E00000            	jne L_error_non_closure
 11373 00007104 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11374                                  
 11375                                  	; recycling the current frame
 11376 00007107 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 11377 0000710A FF7500                  	push qword [rbp]	; old frame-pointer
 11378 0000710D B904000000              	mov rcx, 4
 11379 00007112 488B5D18                	mov rbx, COUNT
 11380 00007116 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 11381 0000711B 488D55F8                	lea rdx, [rbp - 8]
 11382                                  .L_tc_recycle_frame_loop_050c:
 11383 0000711F 4883F900                	cmp rcx, 0
 11384 00007123 7413                    	je .L_tc_recycle_frame_done_050c
 11385 00007125 488B32                  	mov rsi, qword [rdx]
 11386 00007128 488933                  	mov qword [rbx], rsi
 11387 0000712B 48FFC9                  	dec rcx
 11388 0000712E 4883EB08                	sub rbx, 8
 11389 00007132 4883EA08                	sub rdx, 8
 11390 00007136 EBE7                    	jmp .L_tc_recycle_frame_loop_050c
 11391                                  .L_tc_recycle_frame_done_050c:
 11392 00007138 488D6308                	lea rsp, [rbx + 8]
 11393 0000713C 5D                      	pop rbp
 11394 0000713D FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11395                                  .L_if_end_02cd:
 11396                                  .L_if_end_02ce:
 11397                                  .L_if_end_02cf:
 11398 00007140 EB51                    	jmp .L_if_end_02d0
 11399                                  .L_if_else_02d0:
 11400                                  	; preparing a tail-call
 11401 00007142 6A00                    	push 0	; arg count
 11402 00007144 488B4510                	mov rax, ENV
 11403 00007148 488B00                  	mov rax, qword [rax + 8 * 0]
 11404 0000714B 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 11405 0000714E 803804                  	cmp byte [rax], T_closure
 11406 00007151 0F85E6DF0000            	jne L_error_non_closure
 11407 00007157 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11408                                  
 11409                                  	; recycling the current frame
 11410 0000715A FF7508                  	push qword [rbp + 8 * 1]	; old return address
 11411 0000715D FF7500                  	push qword [rbp]	; old frame-pointer
 11412 00007160 B904000000              	mov rcx, 4
 11413 00007165 488B5D18                	mov rbx, COUNT
 11414 00007169 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 11415 0000716E 488D55F8                	lea rdx, [rbp - 8]
 11416                                  .L_tc_recycle_frame_loop_050d:
 11417 00007172 4883F900                	cmp rcx, 0
 11418 00007176 7413                    	je .L_tc_recycle_frame_done_050d
 11419 00007178 488B32                  	mov rsi, qword [rdx]
 11420 0000717B 488933                  	mov qword [rbx], rsi
 11421 0000717E 48FFC9                  	dec rcx
 11422 00007181 4883EB08                	sub rbx, 8
 11423 00007185 4883EA08                	sub rdx, 8
 11424 00007189 EBE7                    	jmp .L_tc_recycle_frame_loop_050d
 11425                                  .L_tc_recycle_frame_done_050d:
 11426 0000718B 488D6308                	lea rsp, [rbx + 8]
 11427 0000718F 5D                      	pop rbp
 11428 00007190 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11429                                  .L_if_end_02d0:
 11430                                  .L_if_end_02d1:
 11431                                  .L_if_end_02d2:
 11432 00007193 C9                      	leave
 11433 00007194 C22000                  	ret AND_KILL_FRAME(2)
 11434                                  .L_lambda_simple_end_03dd:	; new closure is in rax
 11435 00007197 50                      	push rax
 11436 00007198 6A01                    	push 1	; arg count
 11437 0000719A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 11438 0000719F E842E00000              	call malloc
 11439 000071A4 50                      	push rax
 11440 000071A5 BF08000000              	mov rdi, 8 * 1	; new rib
 11441 000071AA E837E00000              	call malloc
 11442 000071AF 50                      	push rax
 11443 000071B0 BF10000000              	mov rdi, 8 * 2	; extended env
 11444 000071B5 E82CE00000              	call malloc
 11445 000071BA 488B7D10                	mov rdi, ENV
 11446 000071BE BE00000000              	mov rsi, 0
 11447 000071C3 BA01000000              	mov rdx, 1
 11448                                  .L_lambda_simple_env_loop_03de:	; ext_env[i + 1] <-- env[i]
 11449 000071C8 4883FE01                	cmp rsi, 1
 11450 000071CC 7410                    	je .L_lambda_simple_env_end_03de
 11451 000071CE 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 11452 000071D2 48890CD0                	mov qword [rax + 8 * rdx], rcx
 11453 000071D6 48FFC6                  	inc rsi
 11454 000071D9 48FFC2                  	inc rdx
 11455 000071DC EBEA                    	jmp .L_lambda_simple_env_loop_03de
 11456                                  .L_lambda_simple_env_end_03de:
 11457 000071DE 5B                      	pop rbx
 11458 000071DF BE00000000              	mov rsi, 0
 11459                                  .L_lambda_simple_params_loop_03de:	; copy params
 11460 000071E4 4883FE01                	cmp rsi, 1
 11461 000071E8 740E                    	je .L_lambda_simple_params_end_03de
 11462 000071EA 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 11463 000071EF 488914F3                	mov qword [rbx + 8 * rsi], rdx
 11464 000071F3 48FFC6                  	inc rsi
 11465 000071F6 EBEC                    	jmp .L_lambda_simple_params_loop_03de
 11466                                  .L_lambda_simple_params_end_03de:
 11467 000071F8 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 11468 000071FB 4889C3                  	mov rbx, rax
 11469 000071FE 58                      	pop rax
 11470 000071FF C60004                  	mov byte [rax], T_closure
 11471 00007202 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 11472 00007206 48C74009[13720000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03de
 11473 0000720E E986030000              	jmp .L_lambda_simple_end_03de
 11474                                  .L_lambda_simple_code_03de:	; lambda-simple body
 11475 00007213 48837C241001            	cmp qword [rsp + 8 * 2], 1
 11476 00007219 740B                    	je .L_lambda_simple_arity_check_ok_03de
 11477 0000721B FF742410                	push qword [rsp + 8 * 2]
 11478 0000721F 6A01                    	push 1
 11479 00007221 E979DF0000              	jmp L_error_incorrect_arity_simple
 11480                                  .L_lambda_simple_arity_check_ok_03de:
 11481 00007226 C8000000                	enter 0, 0
 11482 0000722A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 11483 0000722F E8B2DF0000              	call malloc
 11484 00007234 50                      	push rax
 11485 00007235 BF08000000              	mov rdi, 8 * 1	; new rib
 11486 0000723A E8A7DF0000              	call malloc
 11487 0000723F 50                      	push rax
 11488 00007240 BF18000000              	mov rdi, 8 * 3	; extended env
 11489 00007245 E89CDF0000              	call malloc
 11490 0000724A 488B7D10                	mov rdi, ENV
 11491 0000724E BE00000000              	mov rsi, 0
 11492 00007253 BA01000000              	mov rdx, 1
 11493                                  .L_lambda_opt_env_loop_0084:	; ext_env[i + 1] <-- env[i]
 11494 00007258 4883FE02                	cmp rsi, 2
 11495 0000725C 7410                    	je .L_lambda_opt_env_end_0084
 11496 0000725E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 11497 00007262 48890CD0                	mov qword [rax + 8 * rdx], rcx
 11498 00007266 48FFC6                  	inc rsi
 11499 00007269 48FFC2                  	inc rdx
 11500 0000726C EBEA                    	jmp .L_lambda_opt_env_loop_0084
 11501                                  .L_lambda_opt_env_end_0084:
 11502 0000726E 5B                      	pop rbx
 11503 0000726F BE00000000              	mov rsi, 0
 11504                                  .L_lambda_opt_params_loop_0084:	; copy params
 11505 00007274 4883FE01                	cmp rsi, 1
 11506 00007278 740E                    	je .L_lambda_opt_params_end_0084
 11507 0000727A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 11508 0000727F 488914F3                	mov qword [rbx + 8 * rsi], rdx
 11509 00007283 48FFC6                  	inc rsi
 11510 00007286 EBEC                    	jmp .L_lambda_opt_params_loop_0084
 11511                                  .L_lambda_opt_params_end_0084:
 11512 00007288 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 11513 0000728B 4889C3                  	mov rbx, rax
 11514 0000728E 58                      	pop rax
 11515 0000728F C60004                  	mov byte [rax], T_closure
 11516 00007292 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 11517 00007296 48C74009[A3720000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0084
 11518 0000729E E9F2020000              	jmp .L_lambda_opt_end_0084
 11519                                  .L_lambda_opt_code_0084:	; lambda-simple body
 11520 000072A3 48837C241001            	cmp qword [rsp + 8 * 2], 1 ;	 check num of args
 11521 000072A9 740D                    	je .L_lambda_opt_arity_check_exact_0084 ;	 if equal, go to exact arity
 11522 000072AB 7F42                    	jg .L_lambda_opt_arity_check_more_0084 ;	 if greater than, go to arity more
 11523 000072AD FF742410                	push qword [rsp + 8 * 2] ;	 else, throw opt arity error
 11524 000072B1 6A01                    	push 1
 11525 000072B3 E9FBDE0000              	jmp L_error_incorrect_arity_opt
 11526                                  .L_lambda_opt_arity_check_exact_0084:
 11527 000072B8 488B442410              	mov rax, qword [rsp + 8 * 2] ;	 number of args
 11528 000072BD 488D5CC410              	lea rbx, [rsp + 8 * (2 + rax)] ;	 address of last element
 11529 000072C2 4883EC08                	sub rsp, 8
 11530 000072C6 488D0C24                	lea rcx, [rsp + 0] ;	 new start
 11531                                  .L_lambda_opt_shift_entry_0084:
 11532 000072CA 488B5108                	mov rdx, [rcx + 8]
 11533 000072CE 488911                  	mov [rcx], rdx
 11534 000072D1 4883C108                	add rcx, 8
 11535 000072D5 4839CB                  	cmp rbx, rcx
 11536 000072D8 75F0                    	jne .L_lambda_opt_shift_entry_0084
 11537                                  .L_lambda_opt_shift_exit_0084:
 11538 000072DA 48C703[01000000]        	mov qword[rbx], sob_nil ;	 place nil
 11539 000072E1 4883C001                	add rax, 1
 11540 000072E5 4889442410              	mov qword [rsp + 8 * 2], rax
 11541 000072EA E987000000              	jmp .L_lambda_opt_stack_adjusted_0084
 11542                                  .L_lambda_opt_arity_check_more_0084:
 11543 000072EF 48BA-                   	mov rdx, sob_nil ;	 base cdr
 11543 000072F1 [0100000000000000] 
 11544 000072F9 48837C241002            	cmp qword [rsp + 8 * 2], 2
 11545 000072FF 7451                    	je .L_lambda_opt_stack_shrink_loop_exit_0084
 11546                                  .L_lambda_opt_stack_shrink_loop_0084:
 11547 00007301 BF11000000              	mov rdi, (1 + 8 + 8)
 11548 00007306 E8DBDE0000              	call malloc
 11549 0000730B C60021                  	mov byte[rax], T_pair
 11550 0000730E 48895009                	mov SOB_PAIR_CDR(rax), rdx
 11551 00007312 4889C2                  	mov rdx, rax
 11552 00007315 488B442410              	mov rax, qword [rsp + 8 * 2]
 11553 0000731A 488B5CC410              	mov rbx, qword [rsp + 8 * (2 + rax)]
 11554 0000731F 48895A01                	mov SOB_PAIR_CAR(rdx), rbx
 11555 00007323 488D5CC408              	lea rbx, [rsp + 8 * (2 + rax - 1)]
 11556                                  .L_lambda_opt_extra_shift_process_0084:
 11557 00007328 488B0B                  	mov rcx, [rbx]
 11558 0000732B 48894B08                	mov [rbx + 8], rcx
 11559 0000732F 4883EB08                	sub rbx, 8
 11560 00007333 4839DC                  	cmp rsp, rbx
 11561 00007336 7EF0                    	jle .L_lambda_opt_extra_shift_process_0084
 11562                                  .L_lambda_opt_extra_shift_process_end_0084:
 11563 00007338 4883C408                	add rsp, 8
 11564 0000733C 488B5C2410              	mov rbx, [rsp + 8 * 2]
 11565 00007341 4883EB01                	sub rbx, 1
 11566 00007345 48895C2410              	mov [rsp + 8 * 2], rbx
 11567 0000734A 48837C241002            	cmp qword [rsp + 8 * 2], 2
 11568 00007350 7FAF                    	jg .L_lambda_opt_stack_shrink_loop_0084
 11569                                  .L_lambda_opt_stack_shrink_loop_exit_0084:
 11570 00007352 488B4C2410              	mov rcx, [rsp + 8 * 2]
 11571 00007357 488B5CCC10              	mov rbx, qword [rsp + 8 * (2 + rcx)]
 11572 0000735C BF11000000              	mov rdi, (1 + 8 + 8)
 11573 00007361 E880DE0000              	call malloc
 11574 00007366 C60021                  	mov byte[rax], T_pair
 11575 00007369 48895009                	mov SOB_PAIR_CDR(rax), rdx
 11576 0000736D 48895801                	mov SOB_PAIR_CAR(rax), rbx
 11577 00007371 488944CC10              	mov [rsp + 8 * (2 + rcx)], rax
 11578                                  .L_lambda_opt_stack_adjusted_0084:
 11579 00007376 C8000000                	enter 0, 0
 11580                                  	; preparing a non-tail-call
 11581 0000737A 488B4528                	mov rax, PARAM(1)	; param s
 11582 0000737E 50                      	push rax
 11583 0000737F 6A01                    	push 1	; arg count
 11584 00007381 488B0425[3C1B0000]      	mov rax, qword [free_var_126]	; free var null?
 11585 00007389 803805                  	cmp byte [rax], T_undefined
 11586 0000738C 0F8427DD0000            	je L_error_fvar_undefined
 11587 00007392 803804                  	cmp byte [rax], T_closure
 11588 00007395 0F85A2DD0000            	jne L_error_non_closure
 11589 0000739B FF7001                  	push SOB_CLOSURE_ENV(rax)
 11590 0000739E FF5009                  	call SOB_CLOSURE_CODE(rax)
 11591 000073A1 483D[02000000]          	cmp rax, sob_boolean_false
 11592 000073A7 7466                    	je .L_if_else_02d3
 11593                                  	; preparing a tail-call
 11594 000073A9 488B4520                	mov rax, PARAM(0)	; param a
 11595 000073AD 50                      	push rax
 11596 000073AE 48B8-                   	mov rax, L_constants + 2558
 11596 000073B0 [FE09000000000000] 
 11597 000073B8 50                      	push rax
 11598 000073B9 6A02                    	push 2	; arg count
 11599 000073BB 488B4510                	mov rax, ENV
 11600 000073BF 488B00                  	mov rax, qword [rax + 8 * 0]
 11601 000073C2 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin-
 11602 000073C5 803804                  	cmp byte [rax], T_closure
 11603 000073C8 0F856FDD0000            	jne L_error_non_closure
 11604 000073CE FF7001                  	push SOB_CLOSURE_ENV(rax)
 11605                                  
 11606                                  	; recycling the current frame
 11607 000073D1 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 11608 000073D4 FF7500                  	push qword [rbp]	; old frame-pointer
 11609 000073D7 B906000000              	mov rcx, 6
 11610 000073DC 488B5D18                	mov rbx, COUNT
 11611 000073E0 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 11612 000073E5 488D55F8                	lea rdx, [rbp - 8]
 11613                                  .L_tc_recycle_frame_loop_050e:
 11614 000073E9 4883F900                	cmp rcx, 0
 11615 000073ED 7413                    	je .L_tc_recycle_frame_done_050e
 11616 000073EF 488B32                  	mov rsi, qword [rdx]
 11617 000073F2 488933                  	mov qword [rbx], rsi
 11618 000073F5 48FFC9                  	dec rcx
 11619 000073F8 4883EB08                	sub rbx, 8
 11620 000073FC 4883EA08                	sub rdx, 8
 11621 00007400 EBE7                    	jmp .L_tc_recycle_frame_loop_050e
 11622                                  .L_tc_recycle_frame_done_050e:
 11623 00007402 488D6308                	lea rsp, [rbx + 8]
 11624 00007406 5D                      	pop rbp
 11625 00007407 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11626 0000740A E982010000              	jmp .L_if_end_02d3
 11627                                  .L_if_else_02d3:
 11628                                  	; preparing a tail-call
 11629                                  	; preparing a non-tail-call
 11630 0000740F 488B4528                	mov rax, PARAM(1)	; param s
 11631 00007413 50                      	push rax
 11632 00007414 48B8-                   	mov rax, L_constants + 2558
 11632 00007416 [FE09000000000000] 
 11633 0000741E 50                      	push rax
 11634 0000741F 488B0425[EF120000]      	mov rax, qword [free_var_1]	; free var +
 11635 00007427 803805                  	cmp byte [rax], T_undefined
 11636 0000742A 0F8489DC0000            	je L_error_fvar_undefined
 11637 00007430 50                      	push rax
 11638 00007431 6A03                    	push 3	; arg count
 11639 00007433 488B0425[1C190000]      	mov rax, qword [free_var_94]	; free var fold-left
 11640 0000743B 803805                  	cmp byte [rax], T_undefined
 11641 0000743E 0F8475DC0000            	je L_error_fvar_undefined
 11642 00007444 803804                  	cmp byte [rax], T_closure
 11643 00007447 0F85F0DC0000            	jne L_error_non_closure
 11644 0000744D FF7001                  	push SOB_CLOSURE_ENV(rax)
 11645 00007450 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11646 00007453 50                      	push rax
 11647 00007454 6A01                    	push 1	; arg count
 11648 00007456 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 11649 0000745B E886DD0000              	call malloc
 11650 00007460 50                      	push rax
 11651 00007461 BF10000000              	mov rdi, 8 * 2	; new rib
 11652 00007466 E87BDD0000              	call malloc
 11653 0000746B 50                      	push rax
 11654 0000746C BF20000000              	mov rdi, 8 * 4	; extended env
 11655 00007471 E870DD0000              	call malloc
 11656 00007476 488B7D10                	mov rdi, ENV
 11657 0000747A BE00000000              	mov rsi, 0
 11658 0000747F BA01000000              	mov rdx, 1
 11659                                  .L_lambda_simple_env_loop_03df:	; ext_env[i + 1] <-- env[i]
 11660 00007484 4883FE03                	cmp rsi, 3
 11661 00007488 7410                    	je .L_lambda_simple_env_end_03df
 11662 0000748A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 11663 0000748E 48890CD0                	mov qword [rax + 8 * rdx], rcx
 11664 00007492 48FFC6                  	inc rsi
 11665 00007495 48FFC2                  	inc rdx
 11666 00007498 EBEA                    	jmp .L_lambda_simple_env_loop_03df
 11667                                  .L_lambda_simple_env_end_03df:
 11668 0000749A 5B                      	pop rbx
 11669 0000749B BE00000000              	mov rsi, 0
 11670                                  .L_lambda_simple_params_loop_03df:	; copy params
 11671 000074A0 4883FE02                	cmp rsi, 2
 11672 000074A4 740E                    	je .L_lambda_simple_params_end_03df
 11673 000074A6 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 11674 000074AB 488914F3                	mov qword [rbx + 8 * rsi], rdx
 11675 000074AF 48FFC6                  	inc rsi
 11676 000074B2 EBEC                    	jmp .L_lambda_simple_params_loop_03df
 11677                                  .L_lambda_simple_params_end_03df:
 11678 000074B4 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 11679 000074B7 4889C3                  	mov rbx, rax
 11680 000074BA 58                      	pop rax
 11681 000074BB C60004                  	mov byte [rax], T_closure
 11682 000074BE 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 11683 000074C2 48C74009[CF740000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03df
 11684 000074CA E97D000000              	jmp .L_lambda_simple_end_03df
 11685                                  .L_lambda_simple_code_03df:	; lambda-simple body
 11686 000074CF 48837C241001            	cmp qword [rsp + 8 * 2], 1
 11687 000074D5 740B                    	je .L_lambda_simple_arity_check_ok_03df
 11688 000074D7 FF742410                	push qword [rsp + 8 * 2]
 11689 000074DB 6A01                    	push 1
 11690 000074DD E9BDDC0000              	jmp L_error_incorrect_arity_simple
 11691                                  .L_lambda_simple_arity_check_ok_03df:
 11692 000074E2 C8000000                	enter 0, 0
 11693                                  	; preparing a tail-call
 11694 000074E6 488B4520                	mov rax, PARAM(0)	; param b
 11695 000074EA 50                      	push rax
 11696 000074EB 488B4510                	mov rax, ENV
 11697 000074EF 488B00                  	mov rax, qword [rax + 8 * 0]
 11698 000074F2 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var a
 11699 000074F5 50                      	push rax
 11700 000074F6 6A02                    	push 2	; arg count
 11701 000074F8 488B4510                	mov rax, ENV
 11702 000074FC 488B4008                	mov rax, qword [rax + 8 * 1]
 11703 00007500 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin-
 11704 00007503 803804                  	cmp byte [rax], T_closure
 11705 00007506 0F8531DC0000            	jne L_error_non_closure
 11706 0000750C FF7001                  	push SOB_CLOSURE_ENV(rax)
 11707                                  
 11708                                  	; recycling the current frame
 11709 0000750F FF7508                  	push qword [rbp + 8 * 1]	; old return address
 11710 00007512 FF7500                  	push qword [rbp]	; old frame-pointer
 11711 00007515 B906000000              	mov rcx, 6
 11712 0000751A 488B5D18                	mov rbx, COUNT
 11713 0000751E 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 11714 00007523 488D55F8                	lea rdx, [rbp - 8]
 11715                                  .L_tc_recycle_frame_loop_050f:
 11716 00007527 4883F900                	cmp rcx, 0
 11717 0000752B 7413                    	je .L_tc_recycle_frame_done_050f
 11718 0000752D 488B32                  	mov rsi, qword [rdx]
 11719 00007530 488933                  	mov qword [rbx], rsi
 11720 00007533 48FFC9                  	dec rcx
 11721 00007536 4883EB08                	sub rbx, 8
 11722 0000753A 4883EA08                	sub rdx, 8
 11723 0000753E EBE7                    	jmp .L_tc_recycle_frame_loop_050f
 11724                                  .L_tc_recycle_frame_done_050f:
 11725 00007540 488D6308                	lea rsp, [rbx + 8]
 11726 00007544 5D                      	pop rbp
 11727 00007545 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11728 00007548 C9                      	leave
 11729 00007549 C21800                  	ret AND_KILL_FRAME(1)
 11730                                  .L_lambda_simple_end_03df:	; new closure is in rax
 11731 0000754C 803804                  	cmp byte [rax], T_closure
 11732 0000754F 0F85E8DB0000            	jne L_error_non_closure
 11733 00007555 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11734                                  
 11735                                  	; recycling the current frame
 11736 00007558 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 11737 0000755B FF7500                  	push qword [rbp]	; old frame-pointer
 11738 0000755E B905000000              	mov rcx, 5
 11739 00007563 488B5D18                	mov rbx, COUNT
 11740 00007567 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 11741 0000756C 488D55F8                	lea rdx, [rbp - 8]
 11742                                  .L_tc_recycle_frame_loop_0510:
 11743 00007570 4883F900                	cmp rcx, 0
 11744 00007574 7413                    	je .L_tc_recycle_frame_done_0510
 11745 00007576 488B32                  	mov rsi, qword [rdx]
 11746 00007579 488933                  	mov qword [rbx], rsi
 11747 0000757C 48FFC9                  	dec rcx
 11748 0000757F 4883EB08                	sub rbx, 8
 11749 00007583 4883EA08                	sub rdx, 8
 11750 00007587 EBE7                    	jmp .L_tc_recycle_frame_loop_0510
 11751                                  .L_tc_recycle_frame_done_0510:
 11752 00007589 488D6308                	lea rsp, [rbx + 8]
 11753 0000758D 5D                      	pop rbp
 11754 0000758E FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11755                                  .L_if_end_02d3:
 11756 00007591 C9                      	leave
 11757 00007592 C22000                  	ret AND_KILL_FRAME(2)
 11758                                  .L_lambda_opt_end_0084:	; new closure is in rax
 11759 00007595 C9                      	leave
 11760 00007596 C21800                  	ret AND_KILL_FRAME(1)
 11761                                  .L_lambda_simple_end_03de:	; new closure is in rax
 11762 00007599 803804                  	cmp byte [rax], T_closure
 11763 0000759C 0F859BDB0000            	jne L_error_non_closure
 11764 000075A2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11765                                  
 11766                                  	; recycling the current frame
 11767 000075A5 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 11768 000075A8 FF7500                  	push qword [rbp]	; old frame-pointer
 11769 000075AB B905000000              	mov rcx, 5
 11770 000075B0 488B5D18                	mov rbx, COUNT
 11771 000075B4 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 11772 000075B9 488D55F8                	lea rdx, [rbp - 8]
 11773                                  .L_tc_recycle_frame_loop_0511:
 11774 000075BD 4883F900                	cmp rcx, 0
 11775 000075C1 7413                    	je .L_tc_recycle_frame_done_0511
 11776 000075C3 488B32                  	mov rsi, qword [rdx]
 11777 000075C6 488933                  	mov qword [rbx], rsi
 11778 000075C9 48FFC9                  	dec rcx
 11779 000075CC 4883EB08                	sub rbx, 8
 11780 000075D0 4883EA08                	sub rdx, 8
 11781 000075D4 EBE7                    	jmp .L_tc_recycle_frame_loop_0511
 11782                                  .L_tc_recycle_frame_done_0511:
 11783 000075D6 488D6308                	lea rsp, [rbx + 8]
 11784 000075DA 5D                      	pop rbp
 11785 000075DB FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11786 000075DE C9                      	leave
 11787 000075DF C21800                  	ret AND_KILL_FRAME(1)
 11788                                  .L_lambda_simple_end_03dc:	; new closure is in rax
 11789 000075E2 803804                  	cmp byte [rax], T_closure
 11790 000075E5 0F8552DB0000            	jne L_error_non_closure
 11791 000075EB FF7001                  	push SOB_CLOSURE_ENV(rax)
 11792 000075EE FF5009                  	call SOB_CLOSURE_CODE(rax)
 11793 000075F1 48890425[00130000]      	mov qword [free_var_2], rax
 11794 000075F9 48B8-                   	mov rax, sob_void
 11794 000075FB [0000000000000000] 
 11795                                  
 11796 00007603 4889C7                  	mov rdi, rax
 11797 00007606 E830DE0000              	call print_sexpr_if_not_void
 11798                                  
 11799                                  	; preparing a non-tail-call
 11800 0000760B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 11801 00007610 E8D1DB0000              	call malloc
 11802 00007615 50                      	push rax
 11803 00007616 BF00000000              	mov rdi, 8 * 0	; new rib
 11804 0000761B E8C6DB0000              	call malloc
 11805 00007620 50                      	push rax
 11806 00007621 BF08000000              	mov rdi, 8 * 1	; extended env
 11807 00007626 E8BBDB0000              	call malloc
 11808 0000762B 488B7D10                	mov rdi, ENV
 11809 0000762F BE00000000              	mov rsi, 0
 11810 00007634 BA01000000              	mov rdx, 1
 11811                                  .L_lambda_simple_env_loop_03e0:	; ext_env[i + 1] <-- env[i]
 11812 00007639 4883FE00                	cmp rsi, 0
 11813 0000763D 7410                    	je .L_lambda_simple_env_end_03e0
 11814 0000763F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 11815 00007643 48890CD0                	mov qword [rax + 8 * rdx], rcx
 11816 00007647 48FFC6                  	inc rsi
 11817 0000764A 48FFC2                  	inc rdx
 11818 0000764D EBEA                    	jmp .L_lambda_simple_env_loop_03e0
 11819                                  .L_lambda_simple_env_end_03e0:
 11820 0000764F 5B                      	pop rbx
 11821 00007650 BE00000000              	mov rsi, 0
 11822                                  .L_lambda_simple_params_loop_03e0:	; copy params
 11823 00007655 4883FE00                	cmp rsi, 0
 11824 00007659 740E                    	je .L_lambda_simple_params_end_03e0
 11825 0000765B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 11826 00007660 488914F3                	mov qword [rbx + 8 * rsi], rdx
 11827 00007664 48FFC6                  	inc rsi
 11828 00007667 EBEC                    	jmp .L_lambda_simple_params_loop_03e0
 11829                                  .L_lambda_simple_params_end_03e0:
 11830 00007669 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 11831 0000766C 4889C3                  	mov rbx, rax
 11832 0000766F 58                      	pop rax
 11833 00007670 C60004                  	mov byte [rax], T_closure
 11834 00007673 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 11835 00007677 48C74009[84760000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03e0
 11836 0000767F E989000000              	jmp .L_lambda_simple_end_03e0
 11837                                  .L_lambda_simple_code_03e0:	; lambda-simple body
 11838 00007684 48837C241000            	cmp qword [rsp + 8 * 2], 0
 11839 0000768A 740B                    	je .L_lambda_simple_arity_check_ok_03e0
 11840 0000768C FF742410                	push qword [rsp + 8 * 2]
 11841 00007690 6A00                    	push 0
 11842 00007692 E908DB0000              	jmp L_error_incorrect_arity_simple
 11843                                  .L_lambda_simple_arity_check_ok_03e0:
 11844 00007697 C8000000                	enter 0, 0
 11845                                  	; preparing a tail-call
 11846 0000769B 48B8-                   	mov rax, L_constants + 2691
 11846 0000769D [830A000000000000] 
 11847 000076A5 50                      	push rax
 11848 000076A6 48B8-                   	mov rax, L_constants + 2846
 11848 000076A8 [1E0B000000000000] 
 11849 000076B0 50                      	push rax
 11850 000076B1 6A02                    	push 2	; arg count
 11851 000076B3 488B0425[D8180000]      	mov rax, qword [free_var_90]	; free var error
 11852 000076BB 803805                  	cmp byte [rax], T_undefined
 11853 000076BE 0F84F5D90000            	je L_error_fvar_undefined
 11854 000076C4 803804                  	cmp byte [rax], T_closure
 11855 000076C7 0F8570DA0000            	jne L_error_non_closure
 11856 000076CD FF7001                  	push SOB_CLOSURE_ENV(rax)
 11857                                  
 11858                                  	; recycling the current frame
 11859 000076D0 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 11860 000076D3 FF7500                  	push qword [rbp]	; old frame-pointer
 11861 000076D6 B906000000              	mov rcx, 6
 11862 000076DB 488B5D18                	mov rbx, COUNT
 11863 000076DF 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 11864 000076E4 488D55F8                	lea rdx, [rbp - 8]
 11865                                  .L_tc_recycle_frame_loop_0512:
 11866 000076E8 4883F900                	cmp rcx, 0
 11867 000076EC 7413                    	je .L_tc_recycle_frame_done_0512
 11868 000076EE 488B32                  	mov rsi, qword [rdx]
 11869 000076F1 488933                  	mov qword [rbx], rsi
 11870 000076F4 48FFC9                  	dec rcx
 11871 000076F7 4883EB08                	sub rbx, 8
 11872 000076FB 4883EA08                	sub rdx, 8
 11873 000076FF EBE7                    	jmp .L_tc_recycle_frame_loop_0512
 11874                                  .L_tc_recycle_frame_done_0512:
 11875 00007701 488D6308                	lea rsp, [rbx + 8]
 11876 00007705 5D                      	pop rbp
 11877 00007706 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11878 00007709 C9                      	leave
 11879 0000770A C21000                  	ret AND_KILL_FRAME(0)
 11880                                  .L_lambda_simple_end_03e0:	; new closure is in rax
 11881 0000770D 50                      	push rax
 11882 0000770E 6A01                    	push 1	; arg count
 11883 00007710 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 11884 00007715 E8CCDA0000              	call malloc
 11885 0000771A 50                      	push rax
 11886 0000771B BF00000000              	mov rdi, 8 * 0	; new rib
 11887 00007720 E8C1DA0000              	call malloc
 11888 00007725 50                      	push rax
 11889 00007726 BF08000000              	mov rdi, 8 * 1	; extended env
 11890 0000772B E8B6DA0000              	call malloc
 11891 00007730 488B7D10                	mov rdi, ENV
 11892 00007734 BE00000000              	mov rsi, 0
 11893 00007739 BA01000000              	mov rdx, 1
 11894                                  .L_lambda_simple_env_loop_03e1:	; ext_env[i + 1] <-- env[i]
 11895 0000773E 4883FE00                	cmp rsi, 0
 11896 00007742 7410                    	je .L_lambda_simple_env_end_03e1
 11897 00007744 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 11898 00007748 48890CD0                	mov qword [rax + 8 * rdx], rcx
 11899 0000774C 48FFC6                  	inc rsi
 11900 0000774F 48FFC2                  	inc rdx
 11901 00007752 EBEA                    	jmp .L_lambda_simple_env_loop_03e1
 11902                                  .L_lambda_simple_env_end_03e1:
 11903 00007754 5B                      	pop rbx
 11904 00007755 BE00000000              	mov rsi, 0
 11905                                  .L_lambda_simple_params_loop_03e1:	; copy params
 11906 0000775A 4883FE00                	cmp rsi, 0
 11907 0000775E 740E                    	je .L_lambda_simple_params_end_03e1
 11908 00007760 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 11909 00007765 488914F3                	mov qword [rbx + 8 * rsi], rdx
 11910 00007769 48FFC6                  	inc rsi
 11911 0000776C EBEC                    	jmp .L_lambda_simple_params_loop_03e1
 11912                                  .L_lambda_simple_params_end_03e1:
 11913 0000776E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 11914 00007771 4889C3                  	mov rbx, rax
 11915 00007774 58                      	pop rax
 11916 00007775 C60004                  	mov byte [rax], T_closure
 11917 00007778 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 11918 0000777C 48C74009[89770000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03e1
 11919 00007784 E9620B0000              	jmp .L_lambda_simple_end_03e1
 11920                                  .L_lambda_simple_code_03e1:	; lambda-simple body
 11921 00007789 48837C241001            	cmp qword [rsp + 8 * 2], 1
 11922 0000778F 740B                    	je .L_lambda_simple_arity_check_ok_03e1
 11923 00007791 FF742410                	push qword [rsp + 8 * 2]
 11924 00007795 6A01                    	push 1
 11925 00007797 E903DA0000              	jmp L_error_incorrect_arity_simple
 11926                                  .L_lambda_simple_arity_check_ok_03e1:
 11927 0000779C C8000000                	enter 0, 0
 11928                                  	; preparing a tail-call
 11929 000077A0 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 11930 000077A5 E83CDA0000              	call malloc
 11931 000077AA 50                      	push rax
 11932 000077AB BF08000000              	mov rdi, 8 * 1	; new rib
 11933 000077B0 E831DA0000              	call malloc
 11934 000077B5 50                      	push rax
 11935 000077B6 BF10000000              	mov rdi, 8 * 2	; extended env
 11936 000077BB E826DA0000              	call malloc
 11937 000077C0 488B7D10                	mov rdi, ENV
 11938 000077C4 BE00000000              	mov rsi, 0
 11939 000077C9 BA01000000              	mov rdx, 1
 11940                                  .L_lambda_simple_env_loop_03e2:	; ext_env[i + 1] <-- env[i]
 11941 000077CE 4883FE01                	cmp rsi, 1
 11942 000077D2 7410                    	je .L_lambda_simple_env_end_03e2
 11943 000077D4 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 11944 000077D8 48890CD0                	mov qword [rax + 8 * rdx], rcx
 11945 000077DC 48FFC6                  	inc rsi
 11946 000077DF 48FFC2                  	inc rdx
 11947 000077E2 EBEA                    	jmp .L_lambda_simple_env_loop_03e2
 11948                                  .L_lambda_simple_env_end_03e2:
 11949 000077E4 5B                      	pop rbx
 11950 000077E5 BE00000000              	mov rsi, 0
 11951                                  .L_lambda_simple_params_loop_03e2:	; copy params
 11952 000077EA 4883FE01                	cmp rsi, 1
 11953 000077EE 740E                    	je .L_lambda_simple_params_end_03e2
 11954 000077F0 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 11955 000077F5 488914F3                	mov qword [rbx + 8 * rsi], rdx
 11956 000077F9 48FFC6                  	inc rsi
 11957 000077FC EBEC                    	jmp .L_lambda_simple_params_loop_03e2
 11958                                  .L_lambda_simple_params_end_03e2:
 11959 000077FE 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 11960 00007801 4889C3                  	mov rbx, rax
 11961 00007804 58                      	pop rax
 11962 00007805 C60004                  	mov byte [rax], T_closure
 11963 00007808 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 11964 0000780C 48C74009[19780000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03e2
 11965 00007814 E92B080000              	jmp .L_lambda_simple_end_03e2
 11966                                  .L_lambda_simple_code_03e2:	; lambda-simple body
 11967 00007819 48837C241002            	cmp qword [rsp + 8 * 2], 2
 11968 0000781F 740B                    	je .L_lambda_simple_arity_check_ok_03e2
 11969 00007821 FF742410                	push qword [rsp + 8 * 2]
 11970 00007825 6A02                    	push 2
 11971 00007827 E973D90000              	jmp L_error_incorrect_arity_simple
 11972                                  .L_lambda_simple_arity_check_ok_03e2:
 11973 0000782C C8000000                	enter 0, 0
 11974                                  	; preparing a non-tail-call
 11975 00007830 488B4520                	mov rax, PARAM(0)	; param a
 11976 00007834 50                      	push rax
 11977 00007835 6A01                    	push 1	; arg count
 11978 00007837 488B0425[B5190000]      	mov rax, qword [free_var_103]	; free var integer?
 11979 0000783F 803805                  	cmp byte [rax], T_undefined
 11980 00007842 0F8471D80000            	je L_error_fvar_undefined
 11981 00007848 803804                  	cmp byte [rax], T_closure
 11982 0000784B 0F85ECD80000            	jne L_error_non_closure
 11983 00007851 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11984 00007854 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11985 00007857 483D[02000000]          	cmp rax, sob_boolean_false
 11986 0000785D 0F8463020000            	je .L_if_else_02df
 11987                                  	; preparing a non-tail-call
 11988 00007863 488B4528                	mov rax, PARAM(1)	; param b
 11989 00007867 50                      	push rax
 11990 00007868 6A01                    	push 1	; arg count
 11991 0000786A 488B0425[B5190000]      	mov rax, qword [free_var_103]	; free var integer?
 11992 00007872 803805                  	cmp byte [rax], T_undefined
 11993 00007875 0F843ED80000            	je L_error_fvar_undefined
 11994 0000787B 803804                  	cmp byte [rax], T_closure
 11995 0000787E 0F85B9D80000            	jne L_error_non_closure
 11996 00007884 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11997 00007887 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11998 0000788A 483D[02000000]          	cmp rax, sob_boolean_false
 11999 00007890 7467                    	je .L_if_else_02d6
 12000                                  	; preparing a tail-call
 12001 00007892 488B4528                	mov rax, PARAM(1)	; param b
 12002 00007896 50                      	push rax
 12003 00007897 488B4520                	mov rax, PARAM(0)	; param a
 12004 0000789B 50                      	push rax
 12005 0000789C 6A02                    	push 2	; arg count
 12006 0000789E 488B0425[76140000]      	mov rax, qword [free_var_24]	; free var __bin-mul-zz
 12007 000078A6 803805                  	cmp byte [rax], T_undefined
 12008 000078A9 0F840AD80000            	je L_error_fvar_undefined
 12009 000078AF 803804                  	cmp byte [rax], T_closure
 12010 000078B2 0F8585D80000            	jne L_error_non_closure
 12011 000078B8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12012                                  
 12013                                  	; recycling the current frame
 12014 000078BB FF7508                  	push qword [rbp + 8 * 1]	; old return address
 12015 000078BE FF7500                  	push qword [rbp]	; old frame-pointer
 12016 000078C1 B906000000              	mov rcx, 6
 12017 000078C6 488B5D18                	mov rbx, COUNT
 12018 000078CA 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 12019 000078CF 488D55F8                	lea rdx, [rbp - 8]
 12020                                  .L_tc_recycle_frame_loop_0513:
 12021 000078D3 4883F900                	cmp rcx, 0
 12022 000078D7 7413                    	je .L_tc_recycle_frame_done_0513
 12023 000078D9 488B32                  	mov rsi, qword [rdx]
 12024 000078DC 488933                  	mov qword [rbx], rsi
 12025 000078DF 48FFC9                  	dec rcx
 12026 000078E2 4883EB08                	sub rbx, 8
 12027 000078E6 4883EA08                	sub rdx, 8
 12028 000078EA EBE7                    	jmp .L_tc_recycle_frame_loop_0513
 12029                                  .L_tc_recycle_frame_done_0513:
 12030 000078EC 488D6308                	lea rsp, [rbx + 8]
 12031 000078F0 5D                      	pop rbp
 12032 000078F1 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12033 000078F4 E9C8010000              	jmp .L_if_end_02d6
 12034                                  .L_if_else_02d6:
 12035                                  	; preparing a non-tail-call
 12036 000078F9 488B4528                	mov rax, PARAM(1)	; param b
 12037 000078FD 50                      	push rax
 12038 000078FE 6A01                    	push 1	; arg count
 12039 00007900 488B0425[4F190000]      	mov rax, qword [free_var_97]	; free var fraction?
 12040 00007908 803805                  	cmp byte [rax], T_undefined
 12041 0000790B 0F84A8D70000            	je L_error_fvar_undefined
 12042 00007911 803804                  	cmp byte [rax], T_closure
 12043 00007914 0F8523D80000            	jne L_error_non_closure
 12044 0000791A FF7001                  	push SOB_CLOSURE_ENV(rax)
 12045 0000791D FF5009                  	call SOB_CLOSURE_CODE(rax)
 12046 00007920 483D[02000000]          	cmp rax, sob_boolean_false
 12047 00007926 0F848A000000            	je .L_if_else_02d5
 12048                                  	; preparing a tail-call
 12049 0000792C 488B4528                	mov rax, PARAM(1)	; param b
 12050 00007930 50                      	push rax
 12051                                  	; preparing a non-tail-call
 12052 00007931 488B4520                	mov rax, PARAM(0)	; param a
 12053 00007935 50                      	push rax
 12054 00007936 6A01                    	push 1	; arg count
 12055 00007938 488B0425[CB140000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
 12056 00007940 803805                  	cmp byte [rax], T_undefined
 12057 00007943 0F8470D70000            	je L_error_fvar_undefined
 12058 00007949 803804                  	cmp byte [rax], T_closure
 12059 0000794C 0F85EBD70000            	jne L_error_non_closure
 12060 00007952 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12061 00007955 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12062 00007958 50                      	push rax
 12063 00007959 6A02                    	push 2	; arg count
 12064 0000795B 488B0425[54140000]      	mov rax, qword [free_var_22]	; free var __bin-mul-qq
 12065 00007963 803805                  	cmp byte [rax], T_undefined
 12066 00007966 0F844DD70000            	je L_error_fvar_undefined
 12067 0000796C 803804                  	cmp byte [rax], T_closure
 12068 0000796F 0F85C8D70000            	jne L_error_non_closure
 12069 00007975 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12070                                  
 12071                                  	; recycling the current frame
 12072 00007978 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 12073 0000797B FF7500                  	push qword [rbp]	; old frame-pointer
 12074 0000797E B906000000              	mov rcx, 6
 12075 00007983 488B5D18                	mov rbx, COUNT
 12076 00007987 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 12077 0000798C 488D55F8                	lea rdx, [rbp - 8]
 12078                                  .L_tc_recycle_frame_loop_0514:
 12079 00007990 4883F900                	cmp rcx, 0
 12080 00007994 7413                    	je .L_tc_recycle_frame_done_0514
 12081 00007996 488B32                  	mov rsi, qword [rdx]
 12082 00007999 488933                  	mov qword [rbx], rsi
 12083 0000799C 48FFC9                  	dec rcx
 12084 0000799F 4883EB08                	sub rbx, 8
 12085 000079A3 4883EA08                	sub rdx, 8
 12086 000079A7 EBE7                    	jmp .L_tc_recycle_frame_loop_0514
 12087                                  .L_tc_recycle_frame_done_0514:
 12088 000079A9 488D6308                	lea rsp, [rbx + 8]
 12089 000079AD 5D                      	pop rbp
 12090 000079AE FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12091 000079B1 E90B010000              	jmp .L_if_end_02d5
 12092                                  .L_if_else_02d5:
 12093                                  	; preparing a non-tail-call
 12094 000079B6 488B4528                	mov rax, PARAM(1)	; param b
 12095 000079BA 50                      	push rax
 12096 000079BB 6A01                    	push 1	; arg count
 12097 000079BD 488B0425[2A1C0000]      	mov rax, qword [free_var_140]	; free var real?
 12098 000079C5 803805                  	cmp byte [rax], T_undefined
 12099 000079C8 0F84EBD60000            	je L_error_fvar_undefined
 12100 000079CE 803804                  	cmp byte [rax], T_closure
 12101 000079D1 0F8566D70000            	jne L_error_non_closure
 12102 000079D7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12103 000079DA FF5009                  	call SOB_CLOSURE_CODE(rax)
 12104 000079DD 483D[02000000]          	cmp rax, sob_boolean_false
 12105 000079E3 0F8487000000            	je .L_if_else_02d4
 12106                                  	; preparing a tail-call
 12107 000079E9 488B4528                	mov rax, PARAM(1)	; param b
 12108 000079ED 50                      	push rax
 12109                                  	; preparing a non-tail-call
 12110 000079EE 488B4520                	mov rax, PARAM(0)	; param a
 12111 000079F2 50                      	push rax
 12112 000079F3 6A01                    	push 1	; arg count
 12113 000079F5 488B0425[A4190000]      	mov rax, qword [free_var_102]	; free var integer->real
 12114 000079FD 803805                  	cmp byte [rax], T_undefined
 12115 00007A00 0F84B3D60000            	je L_error_fvar_undefined
 12116 00007A06 803804                  	cmp byte [rax], T_closure
 12117 00007A09 0F852ED70000            	jne L_error_non_closure
 12118 00007A0F FF7001                  	push SOB_CLOSURE_ENV(rax)
 12119 00007A12 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12120 00007A15 50                      	push rax
 12121 00007A16 6A02                    	push 2	; arg count
 12122 00007A18 488B0425[65140000]      	mov rax, qword [free_var_23]	; free var __bin-mul-rr
 12123 00007A20 803805                  	cmp byte [rax], T_undefined
 12124 00007A23 0F8490D60000            	je L_error_fvar_undefined
 12125 00007A29 803804                  	cmp byte [rax], T_closure
 12126 00007A2C 0F850BD70000            	jne L_error_non_closure
 12127 00007A32 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12128                                  
 12129                                  	; recycling the current frame
 12130 00007A35 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 12131 00007A38 FF7500                  	push qword [rbp]	; old frame-pointer
 12132 00007A3B B906000000              	mov rcx, 6
 12133 00007A40 488B5D18                	mov rbx, COUNT
 12134 00007A44 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 12135 00007A49 488D55F8                	lea rdx, [rbp - 8]
 12136                                  .L_tc_recycle_frame_loop_0515:
 12137 00007A4D 4883F900                	cmp rcx, 0
 12138 00007A51 7413                    	je .L_tc_recycle_frame_done_0515
 12139 00007A53 488B32                  	mov rsi, qword [rdx]
 12140 00007A56 488933                  	mov qword [rbx], rsi
 12141 00007A59 48FFC9                  	dec rcx
 12142 00007A5C 4883EB08                	sub rbx, 8
 12143 00007A60 4883EA08                	sub rdx, 8
 12144 00007A64 EBE7                    	jmp .L_tc_recycle_frame_loop_0515
 12145                                  .L_tc_recycle_frame_done_0515:
 12146 00007A66 488D6308                	lea rsp, [rbx + 8]
 12147 00007A6A 5D                      	pop rbp
 12148 00007A6B FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12149 00007A6E EB51                    	jmp .L_if_end_02d4
 12150                                  .L_if_else_02d4:
 12151                                  	; preparing a tail-call
 12152 00007A70 6A00                    	push 0	; arg count
 12153 00007A72 488B4510                	mov rax, ENV
 12154 00007A76 488B00                  	mov rax, qword [rax + 8 * 0]
 12155 00007A79 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 12156 00007A7C 803804                  	cmp byte [rax], T_closure
 12157 00007A7F 0F85B8D60000            	jne L_error_non_closure
 12158 00007A85 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12159                                  
 12160                                  	; recycling the current frame
 12161 00007A88 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 12162 00007A8B FF7500                  	push qword [rbp]	; old frame-pointer
 12163 00007A8E B904000000              	mov rcx, 4
 12164 00007A93 488B5D18                	mov rbx, COUNT
 12165 00007A97 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 12166 00007A9C 488D55F8                	lea rdx, [rbp - 8]
 12167                                  .L_tc_recycle_frame_loop_0516:
 12168 00007AA0 4883F900                	cmp rcx, 0
 12169 00007AA4 7413                    	je .L_tc_recycle_frame_done_0516
 12170 00007AA6 488B32                  	mov rsi, qword [rdx]
 12171 00007AA9 488933                  	mov qword [rbx], rsi
 12172 00007AAC 48FFC9                  	dec rcx
 12173 00007AAF 4883EB08                	sub rbx, 8
 12174 00007AB3 4883EA08                	sub rdx, 8
 12175 00007AB7 EBE7                    	jmp .L_tc_recycle_frame_loop_0516
 12176                                  .L_tc_recycle_frame_done_0516:
 12177 00007AB9 488D6308                	lea rsp, [rbx + 8]
 12178 00007ABD 5D                      	pop rbp
 12179 00007ABE FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12180                                  .L_if_end_02d4:
 12181                                  .L_if_end_02d5:
 12182                                  .L_if_end_02d6:
 12183 00007AC1 E97A050000              	jmp .L_if_end_02df
 12184                                  .L_if_else_02df:
 12185                                  	; preparing a non-tail-call
 12186 00007AC6 488B4520                	mov rax, PARAM(0)	; param a
 12187 00007ACA 50                      	push rax
 12188 00007ACB 6A01                    	push 1	; arg count
 12189 00007ACD 488B0425[4F190000]      	mov rax, qword [free_var_97]	; free var fraction?
 12190 00007AD5 803805                  	cmp byte [rax], T_undefined
 12191 00007AD8 0F84DBD50000            	je L_error_fvar_undefined
 12192 00007ADE 803804                  	cmp byte [rax], T_closure
 12193 00007AE1 0F8556D60000            	jne L_error_non_closure
 12194 00007AE7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12195 00007AEA FF5009                  	call SOB_CLOSURE_CODE(rax)
 12196 00007AED 483D[02000000]          	cmp rax, sob_boolean_false
 12197 00007AF3 0F8463020000            	je .L_if_else_02de
 12198                                  	; preparing a non-tail-call
 12199 00007AF9 488B4528                	mov rax, PARAM(1)	; param b
 12200 00007AFD 50                      	push rax
 12201 00007AFE 6A01                    	push 1	; arg count
 12202 00007B00 488B0425[B5190000]      	mov rax, qword [free_var_103]	; free var integer?
 12203 00007B08 803805                  	cmp byte [rax], T_undefined
 12204 00007B0B 0F84A8D50000            	je L_error_fvar_undefined
 12205 00007B11 803804                  	cmp byte [rax], T_closure
 12206 00007B14 0F8523D60000            	jne L_error_non_closure
 12207 00007B1A FF7001                  	push SOB_CLOSURE_ENV(rax)
 12208 00007B1D FF5009                  	call SOB_CLOSURE_CODE(rax)
 12209 00007B20 483D[02000000]          	cmp rax, sob_boolean_false
 12210 00007B26 0F848A000000            	je .L_if_else_02d9
 12211                                  	; preparing a tail-call
 12212                                  	; preparing a non-tail-call
 12213 00007B2C 488B4528                	mov rax, PARAM(1)	; param b
 12214 00007B30 50                      	push rax
 12215 00007B31 6A01                    	push 1	; arg count
 12216 00007B33 488B0425[CB140000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
 12217 00007B3B 803805                  	cmp byte [rax], T_undefined
 12218 00007B3E 0F8475D50000            	je L_error_fvar_undefined
 12219 00007B44 803804                  	cmp byte [rax], T_closure
 12220 00007B47 0F85F0D50000            	jne L_error_non_closure
 12221 00007B4D FF7001                  	push SOB_CLOSURE_ENV(rax)
 12222 00007B50 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12223 00007B53 50                      	push rax
 12224 00007B54 488B4520                	mov rax, PARAM(0)	; param a
 12225 00007B58 50                      	push rax
 12226 00007B59 6A02                    	push 2	; arg count
 12227 00007B5B 488B0425[54140000]      	mov rax, qword [free_var_22]	; free var __bin-mul-qq
 12228 00007B63 803805                  	cmp byte [rax], T_undefined
 12229 00007B66 0F844DD50000            	je L_error_fvar_undefined
 12230 00007B6C 803804                  	cmp byte [rax], T_closure
 12231 00007B6F 0F85C8D50000            	jne L_error_non_closure
 12232 00007B75 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12233                                  
 12234                                  	; recycling the current frame
 12235 00007B78 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 12236 00007B7B FF7500                  	push qword [rbp]	; old frame-pointer
 12237 00007B7E B906000000              	mov rcx, 6
 12238 00007B83 488B5D18                	mov rbx, COUNT
 12239 00007B87 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 12240 00007B8C 488D55F8                	lea rdx, [rbp - 8]
 12241                                  .L_tc_recycle_frame_loop_0517:
 12242 00007B90 4883F900                	cmp rcx, 0
 12243 00007B94 7413                    	je .L_tc_recycle_frame_done_0517
 12244 00007B96 488B32                  	mov rsi, qword [rdx]
 12245 00007B99 488933                  	mov qword [rbx], rsi
 12246 00007B9C 48FFC9                  	dec rcx
 12247 00007B9F 4883EB08                	sub rbx, 8
 12248 00007BA3 4883EA08                	sub rdx, 8
 12249 00007BA7 EBE7                    	jmp .L_tc_recycle_frame_loop_0517
 12250                                  .L_tc_recycle_frame_done_0517:
 12251 00007BA9 488D6308                	lea rsp, [rbx + 8]
 12252 00007BAD 5D                      	pop rbp
 12253 00007BAE FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12254 00007BB1 E9A1010000              	jmp .L_if_end_02d9
 12255                                  .L_if_else_02d9:
 12256                                  	; preparing a non-tail-call
 12257 00007BB6 488B4528                	mov rax, PARAM(1)	; param b
 12258 00007BBA 50                      	push rax
 12259 00007BBB 6A01                    	push 1	; arg count
 12260 00007BBD 488B0425[4F190000]      	mov rax, qword [free_var_97]	; free var fraction?
 12261 00007BC5 803805                  	cmp byte [rax], T_undefined
 12262 00007BC8 0F84EBD40000            	je L_error_fvar_undefined
 12263 00007BCE 803804                  	cmp byte [rax], T_closure
 12264 00007BD1 0F8566D50000            	jne L_error_non_closure
 12265 00007BD7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12266 00007BDA FF5009                  	call SOB_CLOSURE_CODE(rax)
 12267 00007BDD 483D[02000000]          	cmp rax, sob_boolean_false
 12268 00007BE3 7467                    	je .L_if_else_02d8
 12269                                  	; preparing a tail-call
 12270 00007BE5 488B4528                	mov rax, PARAM(1)	; param b
 12271 00007BE9 50                      	push rax
 12272 00007BEA 488B4520                	mov rax, PARAM(0)	; param a
 12273 00007BEE 50                      	push rax
 12274 00007BEF 6A02                    	push 2	; arg count
 12275 00007BF1 488B0425[54140000]      	mov rax, qword [free_var_22]	; free var __bin-mul-qq
 12276 00007BF9 803805                  	cmp byte [rax], T_undefined
 12277 00007BFC 0F84B7D40000            	je L_error_fvar_undefined
 12278 00007C02 803804                  	cmp byte [rax], T_closure
 12279 00007C05 0F8532D50000            	jne L_error_non_closure
 12280 00007C0B FF7001                  	push SOB_CLOSURE_ENV(rax)
 12281                                  
 12282                                  	; recycling the current frame
 12283 00007C0E FF7508                  	push qword [rbp + 8 * 1]	; old return address
 12284 00007C11 FF7500                  	push qword [rbp]	; old frame-pointer
 12285 00007C14 B906000000              	mov rcx, 6
 12286 00007C19 488B5D18                	mov rbx, COUNT
 12287 00007C1D 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 12288 00007C22 488D55F8                	lea rdx, [rbp - 8]
 12289                                  .L_tc_recycle_frame_loop_0518:
 12290 00007C26 4883F900                	cmp rcx, 0
 12291 00007C2A 7413                    	je .L_tc_recycle_frame_done_0518
 12292 00007C2C 488B32                  	mov rsi, qword [rdx]
 12293 00007C2F 488933                  	mov qword [rbx], rsi
 12294 00007C32 48FFC9                  	dec rcx
 12295 00007C35 4883EB08                	sub rbx, 8
 12296 00007C39 4883EA08                	sub rdx, 8
 12297 00007C3D EBE7                    	jmp .L_tc_recycle_frame_loop_0518
 12298                                  .L_tc_recycle_frame_done_0518:
 12299 00007C3F 488D6308                	lea rsp, [rbx + 8]
 12300 00007C43 5D                      	pop rbp
 12301 00007C44 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12302 00007C47 E90B010000              	jmp .L_if_end_02d8
 12303                                  .L_if_else_02d8:
 12304                                  	; preparing a non-tail-call
 12305 00007C4C 488B4528                	mov rax, PARAM(1)	; param b
 12306 00007C50 50                      	push rax
 12307 00007C51 6A01                    	push 1	; arg count
 12308 00007C53 488B0425[2A1C0000]      	mov rax, qword [free_var_140]	; free var real?
 12309 00007C5B 803805                  	cmp byte [rax], T_undefined
 12310 00007C5E 0F8455D40000            	je L_error_fvar_undefined
 12311 00007C64 803804                  	cmp byte [rax], T_closure
 12312 00007C67 0F85D0D40000            	jne L_error_non_closure
 12313 00007C6D FF7001                  	push SOB_CLOSURE_ENV(rax)
 12314 00007C70 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12315 00007C73 483D[02000000]          	cmp rax, sob_boolean_false
 12316 00007C79 0F8487000000            	je .L_if_else_02d7
 12317                                  	; preparing a tail-call
 12318 00007C7F 488B4528                	mov rax, PARAM(1)	; param b
 12319 00007C83 50                      	push rax
 12320                                  	; preparing a non-tail-call
 12321 00007C84 488B4520                	mov rax, PARAM(0)	; param a
 12322 00007C88 50                      	push rax
 12323 00007C89 6A01                    	push 1	; arg count
 12324 00007C8B 488B0425[3E190000]      	mov rax, qword [free_var_96]	; free var fraction->real
 12325 00007C93 803805                  	cmp byte [rax], T_undefined
 12326 00007C96 0F841DD40000            	je L_error_fvar_undefined
 12327 00007C9C 803804                  	cmp byte [rax], T_closure
 12328 00007C9F 0F8598D40000            	jne L_error_non_closure
 12329 00007CA5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12330 00007CA8 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12331 00007CAB 50                      	push rax
 12332 00007CAC 6A02                    	push 2	; arg count
 12333 00007CAE 488B0425[65140000]      	mov rax, qword [free_var_23]	; free var __bin-mul-rr
 12334 00007CB6 803805                  	cmp byte [rax], T_undefined
 12335 00007CB9 0F84FAD30000            	je L_error_fvar_undefined
 12336 00007CBF 803804                  	cmp byte [rax], T_closure
 12337 00007CC2 0F8575D40000            	jne L_error_non_closure
 12338 00007CC8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12339                                  
 12340                                  	; recycling the current frame
 12341 00007CCB FF7508                  	push qword [rbp + 8 * 1]	; old return address
 12342 00007CCE FF7500                  	push qword [rbp]	; old frame-pointer
 12343 00007CD1 B906000000              	mov rcx, 6
 12344 00007CD6 488B5D18                	mov rbx, COUNT
 12345 00007CDA 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 12346 00007CDF 488D55F8                	lea rdx, [rbp - 8]
 12347                                  .L_tc_recycle_frame_loop_0519:
 12348 00007CE3 4883F900                	cmp rcx, 0
 12349 00007CE7 7413                    	je .L_tc_recycle_frame_done_0519
 12350 00007CE9 488B32                  	mov rsi, qword [rdx]
 12351 00007CEC 488933                  	mov qword [rbx], rsi
 12352 00007CEF 48FFC9                  	dec rcx
 12353 00007CF2 4883EB08                	sub rbx, 8
 12354 00007CF6 4883EA08                	sub rdx, 8
 12355 00007CFA EBE7                    	jmp .L_tc_recycle_frame_loop_0519
 12356                                  .L_tc_recycle_frame_done_0519:
 12357 00007CFC 488D6308                	lea rsp, [rbx + 8]
 12358 00007D00 5D                      	pop rbp
 12359 00007D01 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12360 00007D04 EB51                    	jmp .L_if_end_02d7
 12361                                  .L_if_else_02d7:
 12362                                  	; preparing a tail-call
 12363 00007D06 6A00                    	push 0	; arg count
 12364 00007D08 488B4510                	mov rax, ENV
 12365 00007D0C 488B00                  	mov rax, qword [rax + 8 * 0]
 12366 00007D0F 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 12367 00007D12 803804                  	cmp byte [rax], T_closure
 12368 00007D15 0F8522D40000            	jne L_error_non_closure
 12369 00007D1B FF7001                  	push SOB_CLOSURE_ENV(rax)
 12370                                  
 12371                                  	; recycling the current frame
 12372 00007D1E FF7508                  	push qword [rbp + 8 * 1]	; old return address
 12373 00007D21 FF7500                  	push qword [rbp]	; old frame-pointer
 12374 00007D24 B904000000              	mov rcx, 4
 12375 00007D29 488B5D18                	mov rbx, COUNT
 12376 00007D2D 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 12377 00007D32 488D55F8                	lea rdx, [rbp - 8]
 12378                                  .L_tc_recycle_frame_loop_051a:
 12379 00007D36 4883F900                	cmp rcx, 0
 12380 00007D3A 7413                    	je .L_tc_recycle_frame_done_051a
 12381 00007D3C 488B32                  	mov rsi, qword [rdx]
 12382 00007D3F 488933                  	mov qword [rbx], rsi
 12383 00007D42 48FFC9                  	dec rcx
 12384 00007D45 4883EB08                	sub rbx, 8
 12385 00007D49 4883EA08                	sub rdx, 8
 12386 00007D4D EBE7                    	jmp .L_tc_recycle_frame_loop_051a
 12387                                  .L_tc_recycle_frame_done_051a:
 12388 00007D4F 488D6308                	lea rsp, [rbx + 8]
 12389 00007D53 5D                      	pop rbp
 12390 00007D54 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12391                                  .L_if_end_02d7:
 12392                                  .L_if_end_02d8:
 12393                                  .L_if_end_02d9:
 12394 00007D57 E9E4020000              	jmp .L_if_end_02de
 12395                                  .L_if_else_02de:
 12396                                  	; preparing a non-tail-call
 12397 00007D5C 488B4520                	mov rax, PARAM(0)	; param a
 12398 00007D60 50                      	push rax
 12399 00007D61 6A01                    	push 1	; arg count
 12400 00007D63 488B0425[2A1C0000]      	mov rax, qword [free_var_140]	; free var real?
 12401 00007D6B 803805                  	cmp byte [rax], T_undefined
 12402 00007D6E 0F8445D30000            	je L_error_fvar_undefined
 12403 00007D74 803804                  	cmp byte [rax], T_closure
 12404 00007D77 0F85C0D30000            	jne L_error_non_closure
 12405 00007D7D FF7001                  	push SOB_CLOSURE_ENV(rax)
 12406 00007D80 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12407 00007D83 483D[02000000]          	cmp rax, sob_boolean_false
 12408 00007D89 0F8460020000            	je .L_if_else_02dd
 12409                                  	; preparing a non-tail-call
 12410 00007D8F 488B4528                	mov rax, PARAM(1)	; param b
 12411 00007D93 50                      	push rax
 12412 00007D94 6A01                    	push 1	; arg count
 12413 00007D96 488B0425[B5190000]      	mov rax, qword [free_var_103]	; free var integer?
 12414 00007D9E 803805                  	cmp byte [rax], T_undefined
 12415 00007DA1 0F8412D30000            	je L_error_fvar_undefined
 12416 00007DA7 803804                  	cmp byte [rax], T_closure
 12417 00007DAA 0F858DD30000            	jne L_error_non_closure
 12418 00007DB0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12419 00007DB3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12420 00007DB6 483D[02000000]          	cmp rax, sob_boolean_false
 12421 00007DBC 0F848A000000            	je .L_if_else_02dc
 12422                                  	; preparing a tail-call
 12423                                  	; preparing a non-tail-call
 12424 00007DC2 488B4528                	mov rax, PARAM(1)	; param b
 12425 00007DC6 50                      	push rax
 12426 00007DC7 6A01                    	push 1	; arg count
 12427 00007DC9 488B0425[A4190000]      	mov rax, qword [free_var_102]	; free var integer->real
 12428 00007DD1 803805                  	cmp byte [rax], T_undefined
 12429 00007DD4 0F84DFD20000            	je L_error_fvar_undefined
 12430 00007DDA 803804                  	cmp byte [rax], T_closure
 12431 00007DDD 0F855AD30000            	jne L_error_non_closure
 12432 00007DE3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12433 00007DE6 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12434 00007DE9 50                      	push rax
 12435 00007DEA 488B4520                	mov rax, PARAM(0)	; param a
 12436 00007DEE 50                      	push rax
 12437 00007DEF 6A02                    	push 2	; arg count
 12438 00007DF1 488B0425[65140000]      	mov rax, qword [free_var_23]	; free var __bin-mul-rr
 12439 00007DF9 803805                  	cmp byte [rax], T_undefined
 12440 00007DFC 0F84B7D20000            	je L_error_fvar_undefined
 12441 00007E02 803804                  	cmp byte [rax], T_closure
 12442 00007E05 0F8532D30000            	jne L_error_non_closure
 12443 00007E0B FF7001                  	push SOB_CLOSURE_ENV(rax)
 12444                                  
 12445                                  	; recycling the current frame
 12446 00007E0E FF7508                  	push qword [rbp + 8 * 1]	; old return address
 12447 00007E11 FF7500                  	push qword [rbp]	; old frame-pointer
 12448 00007E14 B906000000              	mov rcx, 6
 12449 00007E19 488B5D18                	mov rbx, COUNT
 12450 00007E1D 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 12451 00007E22 488D55F8                	lea rdx, [rbp - 8]
 12452                                  .L_tc_recycle_frame_loop_051b:
 12453 00007E26 4883F900                	cmp rcx, 0
 12454 00007E2A 7413                    	je .L_tc_recycle_frame_done_051b
 12455 00007E2C 488B32                  	mov rsi, qword [rdx]
 12456 00007E2F 488933                  	mov qword [rbx], rsi
 12457 00007E32 48FFC9                  	dec rcx
 12458 00007E35 4883EB08                	sub rbx, 8
 12459 00007E39 4883EA08                	sub rdx, 8
 12460 00007E3D EBE7                    	jmp .L_tc_recycle_frame_loop_051b
 12461                                  .L_tc_recycle_frame_done_051b:
 12462 00007E3F 488D6308                	lea rsp, [rbx + 8]
 12463 00007E43 5D                      	pop rbp
 12464 00007E44 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12465 00007E47 E9A1010000              	jmp .L_if_end_02dc
 12466                                  .L_if_else_02dc:
 12467                                  	; preparing a non-tail-call
 12468 00007E4C 488B4528                	mov rax, PARAM(1)	; param b
 12469 00007E50 50                      	push rax
 12470 00007E51 6A01                    	push 1	; arg count
 12471 00007E53 488B0425[4F190000]      	mov rax, qword [free_var_97]	; free var fraction?
 12472 00007E5B 803805                  	cmp byte [rax], T_undefined
 12473 00007E5E 0F8455D20000            	je L_error_fvar_undefined
 12474 00007E64 803804                  	cmp byte [rax], T_closure
 12475 00007E67 0F85D0D20000            	jne L_error_non_closure
 12476 00007E6D FF7001                  	push SOB_CLOSURE_ENV(rax)
 12477 00007E70 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12478 00007E73 483D[02000000]          	cmp rax, sob_boolean_false
 12479 00007E79 0F848A000000            	je .L_if_else_02db
 12480                                  	; preparing a tail-call
 12481                                  	; preparing a non-tail-call
 12482 00007E7F 488B4528                	mov rax, PARAM(1)	; param b
 12483 00007E83 50                      	push rax
 12484 00007E84 6A01                    	push 1	; arg count
 12485 00007E86 488B0425[3E190000]      	mov rax, qword [free_var_96]	; free var fraction->real
 12486 00007E8E 803805                  	cmp byte [rax], T_undefined
 12487 00007E91 0F8422D20000            	je L_error_fvar_undefined
 12488 00007E97 803804                  	cmp byte [rax], T_closure
 12489 00007E9A 0F859DD20000            	jne L_error_non_closure
 12490 00007EA0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12491 00007EA3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12492 00007EA6 50                      	push rax
 12493 00007EA7 488B4520                	mov rax, PARAM(0)	; param a
 12494 00007EAB 50                      	push rax
 12495 00007EAC 6A02                    	push 2	; arg count
 12496 00007EAE 488B0425[65140000]      	mov rax, qword [free_var_23]	; free var __bin-mul-rr
 12497 00007EB6 803805                  	cmp byte [rax], T_undefined
 12498 00007EB9 0F84FAD10000            	je L_error_fvar_undefined
 12499 00007EBF 803804                  	cmp byte [rax], T_closure
 12500 00007EC2 0F8575D20000            	jne L_error_non_closure
 12501 00007EC8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12502                                  
 12503                                  	; recycling the current frame
 12504 00007ECB FF7508                  	push qword [rbp + 8 * 1]	; old return address
 12505 00007ECE FF7500                  	push qword [rbp]	; old frame-pointer
 12506 00007ED1 B906000000              	mov rcx, 6
 12507 00007ED6 488B5D18                	mov rbx, COUNT
 12508 00007EDA 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 12509 00007EDF 488D55F8                	lea rdx, [rbp - 8]
 12510                                  .L_tc_recycle_frame_loop_051c:
 12511 00007EE3 4883F900                	cmp rcx, 0
 12512 00007EE7 7413                    	je .L_tc_recycle_frame_done_051c
 12513 00007EE9 488B32                  	mov rsi, qword [rdx]
 12514 00007EEC 488933                  	mov qword [rbx], rsi
 12515 00007EEF 48FFC9                  	dec rcx
 12516 00007EF2 4883EB08                	sub rbx, 8
 12517 00007EF6 4883EA08                	sub rdx, 8
 12518 00007EFA EBE7                    	jmp .L_tc_recycle_frame_loop_051c
 12519                                  .L_tc_recycle_frame_done_051c:
 12520 00007EFC 488D6308                	lea rsp, [rbx + 8]
 12521 00007F00 5D                      	pop rbp
 12522 00007F01 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12523 00007F04 E9E4000000              	jmp .L_if_end_02db
 12524                                  .L_if_else_02db:
 12525                                  	; preparing a non-tail-call
 12526 00007F09 488B4528                	mov rax, PARAM(1)	; param b
 12527 00007F0D 50                      	push rax
 12528 00007F0E 6A01                    	push 1	; arg count
 12529 00007F10 488B0425[2A1C0000]      	mov rax, qword [free_var_140]	; free var real?
 12530 00007F18 803805                  	cmp byte [rax], T_undefined
 12531 00007F1B 0F8498D10000            	je L_error_fvar_undefined
 12532 00007F21 803804                  	cmp byte [rax], T_closure
 12533 00007F24 0F8513D20000            	jne L_error_non_closure
 12534 00007F2A FF7001                  	push SOB_CLOSURE_ENV(rax)
 12535 00007F2D FF5009                  	call SOB_CLOSURE_CODE(rax)
 12536 00007F30 483D[02000000]          	cmp rax, sob_boolean_false
 12537 00007F36 7464                    	je .L_if_else_02da
 12538                                  	; preparing a tail-call
 12539 00007F38 488B4528                	mov rax, PARAM(1)	; param b
 12540 00007F3C 50                      	push rax
 12541 00007F3D 488B4520                	mov rax, PARAM(0)	; param a
 12542 00007F41 50                      	push rax
 12543 00007F42 6A02                    	push 2	; arg count
 12544 00007F44 488B0425[65140000]      	mov rax, qword [free_var_23]	; free var __bin-mul-rr
 12545 00007F4C 803805                  	cmp byte [rax], T_undefined
 12546 00007F4F 0F8464D10000            	je L_error_fvar_undefined
 12547 00007F55 803804                  	cmp byte [rax], T_closure
 12548 00007F58 0F85DFD10000            	jne L_error_non_closure
 12549 00007F5E FF7001                  	push SOB_CLOSURE_ENV(rax)
 12550                                  
 12551                                  	; recycling the current frame
 12552 00007F61 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 12553 00007F64 FF7500                  	push qword [rbp]	; old frame-pointer
 12554 00007F67 B906000000              	mov rcx, 6
 12555 00007F6C 488B5D18                	mov rbx, COUNT
 12556 00007F70 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 12557 00007F75 488D55F8                	lea rdx, [rbp - 8]
 12558                                  .L_tc_recycle_frame_loop_051d:
 12559 00007F79 4883F900                	cmp rcx, 0
 12560 00007F7D 7413                    	je .L_tc_recycle_frame_done_051d
 12561 00007F7F 488B32                  	mov rsi, qword [rdx]
 12562 00007F82 488933                  	mov qword [rbx], rsi
 12563 00007F85 48FFC9                  	dec rcx
 12564 00007F88 4883EB08                	sub rbx, 8
 12565 00007F8C 4883EA08                	sub rdx, 8
 12566 00007F90 EBE7                    	jmp .L_tc_recycle_frame_loop_051d
 12567                                  .L_tc_recycle_frame_done_051d:
 12568 00007F92 488D6308                	lea rsp, [rbx + 8]
 12569 00007F96 5D                      	pop rbp
 12570 00007F97 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12571 00007F9A EB51                    	jmp .L_if_end_02da
 12572                                  .L_if_else_02da:
 12573                                  	; preparing a tail-call
 12574 00007F9C 6A00                    	push 0	; arg count
 12575 00007F9E 488B4510                	mov rax, ENV
 12576 00007FA2 488B00                  	mov rax, qword [rax + 8 * 0]
 12577 00007FA5 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 12578 00007FA8 803804                  	cmp byte [rax], T_closure
 12579 00007FAB 0F858CD10000            	jne L_error_non_closure
 12580 00007FB1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12581                                  
 12582                                  	; recycling the current frame
 12583 00007FB4 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 12584 00007FB7 FF7500                  	push qword [rbp]	; old frame-pointer
 12585 00007FBA B904000000              	mov rcx, 4
 12586 00007FBF 488B5D18                	mov rbx, COUNT
 12587 00007FC3 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 12588 00007FC8 488D55F8                	lea rdx, [rbp - 8]
 12589                                  .L_tc_recycle_frame_loop_051e:
 12590 00007FCC 4883F900                	cmp rcx, 0
 12591 00007FD0 7413                    	je .L_tc_recycle_frame_done_051e
 12592 00007FD2 488B32                  	mov rsi, qword [rdx]
 12593 00007FD5 488933                  	mov qword [rbx], rsi
 12594 00007FD8 48FFC9                  	dec rcx
 12595 00007FDB 4883EB08                	sub rbx, 8
 12596 00007FDF 4883EA08                	sub rdx, 8
 12597 00007FE3 EBE7                    	jmp .L_tc_recycle_frame_loop_051e
 12598                                  .L_tc_recycle_frame_done_051e:
 12599 00007FE5 488D6308                	lea rsp, [rbx + 8]
 12600 00007FE9 5D                      	pop rbp
 12601 00007FEA FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12602                                  .L_if_end_02da:
 12603                                  .L_if_end_02db:
 12604                                  .L_if_end_02dc:
 12605 00007FED EB51                    	jmp .L_if_end_02dd
 12606                                  .L_if_else_02dd:
 12607                                  	; preparing a tail-call
 12608 00007FEF 6A00                    	push 0	; arg count
 12609 00007FF1 488B4510                	mov rax, ENV
 12610 00007FF5 488B00                  	mov rax, qword [rax + 8 * 0]
 12611 00007FF8 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 12612 00007FFB 803804                  	cmp byte [rax], T_closure
 12613 00007FFE 0F8539D10000            	jne L_error_non_closure
 12614 00008004 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12615                                  
 12616                                  	; recycling the current frame
 12617 00008007 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 12618 0000800A FF7500                  	push qword [rbp]	; old frame-pointer
 12619 0000800D B904000000              	mov rcx, 4
 12620 00008012 488B5D18                	mov rbx, COUNT
 12621 00008016 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 12622 0000801B 488D55F8                	lea rdx, [rbp - 8]
 12623                                  .L_tc_recycle_frame_loop_051f:
 12624 0000801F 4883F900                	cmp rcx, 0
 12625 00008023 7413                    	je .L_tc_recycle_frame_done_051f
 12626 00008025 488B32                  	mov rsi, qword [rdx]
 12627 00008028 488933                  	mov qword [rbx], rsi
 12628 0000802B 48FFC9                  	dec rcx
 12629 0000802E 4883EB08                	sub rbx, 8
 12630 00008032 4883EA08                	sub rdx, 8
 12631 00008036 EBE7                    	jmp .L_tc_recycle_frame_loop_051f
 12632                                  .L_tc_recycle_frame_done_051f:
 12633 00008038 488D6308                	lea rsp, [rbx + 8]
 12634 0000803C 5D                      	pop rbp
 12635 0000803D FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12636                                  .L_if_end_02dd:
 12637                                  .L_if_end_02de:
 12638                                  .L_if_end_02df:
 12639 00008040 C9                      	leave
 12640 00008041 C22000                  	ret AND_KILL_FRAME(2)
 12641                                  .L_lambda_simple_end_03e2:	; new closure is in rax
 12642 00008044 50                      	push rax
 12643 00008045 6A01                    	push 1	; arg count
 12644 00008047 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 12645 0000804C E895D10000              	call malloc
 12646 00008051 50                      	push rax
 12647 00008052 BF08000000              	mov rdi, 8 * 1	; new rib
 12648 00008057 E88AD10000              	call malloc
 12649 0000805C 50                      	push rax
 12650 0000805D BF10000000              	mov rdi, 8 * 2	; extended env
 12651 00008062 E87FD10000              	call malloc
 12652 00008067 488B7D10                	mov rdi, ENV
 12653 0000806B BE00000000              	mov rsi, 0
 12654 00008070 BA01000000              	mov rdx, 1
 12655                                  .L_lambda_simple_env_loop_03e3:	; ext_env[i + 1] <-- env[i]
 12656 00008075 4883FE01                	cmp rsi, 1
 12657 00008079 7410                    	je .L_lambda_simple_env_end_03e3
 12658 0000807B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 12659 0000807F 48890CD0                	mov qword [rax + 8 * rdx], rcx
 12660 00008083 48FFC6                  	inc rsi
 12661 00008086 48FFC2                  	inc rdx
 12662 00008089 EBEA                    	jmp .L_lambda_simple_env_loop_03e3
 12663                                  .L_lambda_simple_env_end_03e3:
 12664 0000808B 5B                      	pop rbx
 12665 0000808C BE00000000              	mov rsi, 0
 12666                                  .L_lambda_simple_params_loop_03e3:	; copy params
 12667 00008091 4883FE01                	cmp rsi, 1
 12668 00008095 740E                    	je .L_lambda_simple_params_end_03e3
 12669 00008097 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 12670 0000809C 488914F3                	mov qword [rbx + 8 * rsi], rdx
 12671 000080A0 48FFC6                  	inc rsi
 12672 000080A3 EBEC                    	jmp .L_lambda_simple_params_loop_03e3
 12673                                  .L_lambda_simple_params_end_03e3:
 12674 000080A5 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 12675 000080A8 4889C3                  	mov rbx, rax
 12676 000080AB 58                      	pop rax
 12677 000080AC C60004                  	mov byte [rax], T_closure
 12678 000080AF 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 12679 000080B3 48C74009[C0800000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03e3
 12680 000080BB E9E2010000              	jmp .L_lambda_simple_end_03e3
 12681                                  .L_lambda_simple_code_03e3:	; lambda-simple body
 12682 000080C0 48837C241001            	cmp qword [rsp + 8 * 2], 1
 12683 000080C6 740B                    	je .L_lambda_simple_arity_check_ok_03e3
 12684 000080C8 FF742410                	push qword [rsp + 8 * 2]
 12685 000080CC 6A01                    	push 1
 12686 000080CE E9CCD00000              	jmp L_error_incorrect_arity_simple
 12687                                  .L_lambda_simple_arity_check_ok_03e3:
 12688 000080D3 C8000000                	enter 0, 0
 12689 000080D7 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 12690 000080DC E805D10000              	call malloc
 12691 000080E1 50                      	push rax
 12692 000080E2 BF08000000              	mov rdi, 8 * 1	; new rib
 12693 000080E7 E8FAD00000              	call malloc
 12694 000080EC 50                      	push rax
 12695 000080ED BF18000000              	mov rdi, 8 * 3	; extended env
 12696 000080F2 E8EFD00000              	call malloc
 12697 000080F7 488B7D10                	mov rdi, ENV
 12698 000080FB BE00000000              	mov rsi, 0
 12699 00008100 BA01000000              	mov rdx, 1
 12700                                  .L_lambda_opt_env_loop_0085:	; ext_env[i + 1] <-- env[i]
 12701 00008105 4883FE02                	cmp rsi, 2
 12702 00008109 7410                    	je .L_lambda_opt_env_end_0085
 12703 0000810B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 12704 0000810F 48890CD0                	mov qword [rax + 8 * rdx], rcx
 12705 00008113 48FFC6                  	inc rsi
 12706 00008116 48FFC2                  	inc rdx
 12707 00008119 EBEA                    	jmp .L_lambda_opt_env_loop_0085
 12708                                  .L_lambda_opt_env_end_0085:
 12709 0000811B 5B                      	pop rbx
 12710 0000811C BE00000000              	mov rsi, 0
 12711                                  .L_lambda_opt_params_loop_0085:	; copy params
 12712 00008121 4883FE01                	cmp rsi, 1
 12713 00008125 740E                    	je .L_lambda_opt_params_end_0085
 12714 00008127 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 12715 0000812C 488914F3                	mov qword [rbx + 8 * rsi], rdx
 12716 00008130 48FFC6                  	inc rsi
 12717 00008133 EBEC                    	jmp .L_lambda_opt_params_loop_0085
 12718                                  .L_lambda_opt_params_end_0085:
 12719 00008135 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 12720 00008138 4889C3                  	mov rbx, rax
 12721 0000813B 58                      	pop rax
 12722 0000813C C60004                  	mov byte [rax], T_closure
 12723 0000813F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 12724 00008143 48C74009[50810000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0085
 12725 0000814B E94E010000              	jmp .L_lambda_opt_end_0085
 12726                                  .L_lambda_opt_code_0085:	; lambda-simple body
 12727 00008150 48837C241000            	cmp qword [rsp + 8 * 2], 0 ;	 check num of args
 12728 00008156 740D                    	je .L_lambda_opt_arity_check_exact_0085 ;	 if equal, go to exact arity
 12729 00008158 7F42                    	jg .L_lambda_opt_arity_check_more_0085 ;	 if greater than, go to arity more
 12730 0000815A FF742410                	push qword [rsp + 8 * 2] ;	 else, throw opt arity error
 12731 0000815E 6A00                    	push 0
 12732 00008160 E94ED00000              	jmp L_error_incorrect_arity_opt
 12733                                  .L_lambda_opt_arity_check_exact_0085:
 12734 00008165 488B442410              	mov rax, qword [rsp + 8 * 2] ;	 number of args
 12735 0000816A 488D5CC410              	lea rbx, [rsp + 8 * (2 + rax)] ;	 address of last element
 12736 0000816F 4883EC08                	sub rsp, 8
 12737 00008173 488D0C24                	lea rcx, [rsp + 0] ;	 new start
 12738                                  .L_lambda_opt_shift_entry_0085:
 12739 00008177 488B5108                	mov rdx, [rcx + 8]
 12740 0000817B 488911                  	mov [rcx], rdx
 12741 0000817E 4883C108                	add rcx, 8
 12742 00008182 4839CB                  	cmp rbx, rcx
 12743 00008185 75F0                    	jne .L_lambda_opt_shift_entry_0085
 12744                                  .L_lambda_opt_shift_exit_0085:
 12745 00008187 48C703[01000000]        	mov qword[rbx], sob_nil ;	 place nil
 12746 0000818E 4883C001                	add rax, 1
 12747 00008192 4889442410              	mov qword [rsp + 8 * 2], rax
 12748 00008197 E987000000              	jmp .L_lambda_opt_stack_adjusted_0085
 12749                                  .L_lambda_opt_arity_check_more_0085:
 12750 0000819C 48BA-                   	mov rdx, sob_nil ;	 base cdr
 12750 0000819E [0100000000000000] 
 12751 000081A6 48837C241001            	cmp qword [rsp + 8 * 2], 1
 12752 000081AC 7451                    	je .L_lambda_opt_stack_shrink_loop_exit_0085
 12753                                  .L_lambda_opt_stack_shrink_loop_0085:
 12754 000081AE BF11000000              	mov rdi, (1 + 8 + 8)
 12755 000081B3 E82ED00000              	call malloc
 12756 000081B8 C60021                  	mov byte[rax], T_pair
 12757 000081BB 48895009                	mov SOB_PAIR_CDR(rax), rdx
 12758 000081BF 4889C2                  	mov rdx, rax
 12759 000081C2 488B442410              	mov rax, qword [rsp + 8 * 2]
 12760 000081C7 488B5CC410              	mov rbx, qword [rsp + 8 * (2 + rax)]
 12761 000081CC 48895A01                	mov SOB_PAIR_CAR(rdx), rbx
 12762 000081D0 488D5CC408              	lea rbx, [rsp + 8 * (2 + rax - 1)]
 12763                                  .L_lambda_opt_extra_shift_process_0085:
 12764 000081D5 488B0B                  	mov rcx, [rbx]
 12765 000081D8 48894B08                	mov [rbx + 8], rcx
 12766 000081DC 4883EB08                	sub rbx, 8
 12767 000081E0 4839DC                  	cmp rsp, rbx
 12768 000081E3 7EF0                    	jle .L_lambda_opt_extra_shift_process_0085
 12769                                  .L_lambda_opt_extra_shift_process_end_0085:
 12770 000081E5 4883C408                	add rsp, 8
 12771 000081E9 488B5C2410              	mov rbx, [rsp + 8 * 2]
 12772 000081EE 4883EB01                	sub rbx, 1
 12773 000081F2 48895C2410              	mov [rsp + 8 * 2], rbx
 12774 000081F7 48837C241001            	cmp qword [rsp + 8 * 2], 1
 12775 000081FD 7FAF                    	jg .L_lambda_opt_stack_shrink_loop_0085
 12776                                  .L_lambda_opt_stack_shrink_loop_exit_0085:
 12777 000081FF 488B4C2410              	mov rcx, [rsp + 8 * 2]
 12778 00008204 488B5CCC10              	mov rbx, qword [rsp + 8 * (2 + rcx)]
 12779 00008209 BF11000000              	mov rdi, (1 + 8 + 8)
 12780 0000820E E8D3CF0000              	call malloc
 12781 00008213 C60021                  	mov byte[rax], T_pair
 12782 00008216 48895009                	mov SOB_PAIR_CDR(rax), rdx
 12783 0000821A 48895801                	mov SOB_PAIR_CAR(rax), rbx
 12784 0000821E 488944CC10              	mov [rsp + 8 * (2 + rcx)], rax
 12785                                  .L_lambda_opt_stack_adjusted_0085:
 12786 00008223 C8000000                	enter 0, 0
 12787                                  	; preparing a tail-call
 12788 00008227 488B4520                	mov rax, PARAM(0)	; param s
 12789 0000822B 50                      	push rax
 12790 0000822C 48B8-                   	mov rax, L_constants + 2810
 12790 0000822E [FA0A000000000000] 
 12791 00008236 50                      	push rax
 12792 00008237 488B4510                	mov rax, ENV
 12793 0000823B 488B00                  	mov rax, qword [rax + 8 * 0]
 12794 0000823E 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin*
 12795 00008241 50                      	push rax
 12796 00008242 6A03                    	push 3	; arg count
 12797 00008244 488B0425[1C190000]      	mov rax, qword [free_var_94]	; free var fold-left
 12798 0000824C 803805                  	cmp byte [rax], T_undefined
 12799 0000824F 0F8464CE0000            	je L_error_fvar_undefined
 12800 00008255 803804                  	cmp byte [rax], T_closure
 12801 00008258 0F85DFCE0000            	jne L_error_non_closure
 12802 0000825E FF7001                  	push SOB_CLOSURE_ENV(rax)
 12803                                  
 12804                                  	; recycling the current frame
 12805 00008261 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 12806 00008264 FF7500                  	push qword [rbp]	; old frame-pointer
 12807 00008267 B907000000              	mov rcx, 7
 12808 0000826C 488B5D18                	mov rbx, COUNT
 12809 00008270 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 12810 00008275 488D55F8                	lea rdx, [rbp - 8]
 12811                                  .L_tc_recycle_frame_loop_0520:
 12812 00008279 4883F900                	cmp rcx, 0
 12813 0000827D 7413                    	je .L_tc_recycle_frame_done_0520
 12814 0000827F 488B32                  	mov rsi, qword [rdx]
 12815 00008282 488933                  	mov qword [rbx], rsi
 12816 00008285 48FFC9                  	dec rcx
 12817 00008288 4883EB08                	sub rbx, 8
 12818 0000828C 4883EA08                	sub rdx, 8
 12819 00008290 EBE7                    	jmp .L_tc_recycle_frame_loop_0520
 12820                                  .L_tc_recycle_frame_done_0520:
 12821 00008292 488D6308                	lea rsp, [rbx + 8]
 12822 00008296 5D                      	pop rbp
 12823 00008297 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12824 0000829A C9                      	leave
 12825 0000829B C21800                  	ret AND_KILL_FRAME(1)
 12826                                  .L_lambda_opt_end_0085:	; new closure is in rax
 12827 0000829E C9                      	leave
 12828 0000829F C21800                  	ret AND_KILL_FRAME(1)
 12829                                  .L_lambda_simple_end_03e3:	; new closure is in rax
 12830 000082A2 803804                  	cmp byte [rax], T_closure
 12831 000082A5 0F8592CE0000            	jne L_error_non_closure
 12832 000082AB FF7001                  	push SOB_CLOSURE_ENV(rax)
 12833                                  
 12834                                  	; recycling the current frame
 12835 000082AE FF7508                  	push qword [rbp + 8 * 1]	; old return address
 12836 000082B1 FF7500                  	push qword [rbp]	; old frame-pointer
 12837 000082B4 B905000000              	mov rcx, 5
 12838 000082B9 488B5D18                	mov rbx, COUNT
 12839 000082BD 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 12840 000082C2 488D55F8                	lea rdx, [rbp - 8]
 12841                                  .L_tc_recycle_frame_loop_0521:
 12842 000082C6 4883F900                	cmp rcx, 0
 12843 000082CA 7413                    	je .L_tc_recycle_frame_done_0521
 12844 000082CC 488B32                  	mov rsi, qword [rdx]
 12845 000082CF 488933                  	mov qword [rbx], rsi
 12846 000082D2 48FFC9                  	dec rcx
 12847 000082D5 4883EB08                	sub rbx, 8
 12848 000082D9 4883EA08                	sub rdx, 8
 12849 000082DD EBE7                    	jmp .L_tc_recycle_frame_loop_0521
 12850                                  .L_tc_recycle_frame_done_0521:
 12851 000082DF 488D6308                	lea rsp, [rbx + 8]
 12852 000082E3 5D                      	pop rbp
 12853 000082E4 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12854 000082E7 C9                      	leave
 12855 000082E8 C21800                  	ret AND_KILL_FRAME(1)
 12856                                  .L_lambda_simple_end_03e1:	; new closure is in rax
 12857 000082EB 803804                  	cmp byte [rax], T_closure
 12858 000082EE 0F8549CE0000            	jne L_error_non_closure
 12859 000082F4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12860 000082F7 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12861 000082FA 48890425[DE120000]      	mov qword [free_var_0], rax
 12862 00008302 48B8-                   	mov rax, sob_void
 12862 00008304 [0000000000000000] 
 12863                                  
 12864 0000830C 4889C7                  	mov rdi, rax
 12865 0000830F E827D10000              	call print_sexpr_if_not_void
 12866                                  
 12867                                  	; preparing a non-tail-call
 12868 00008314 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 12869 00008319 E8C8CE0000              	call malloc
 12870 0000831E 50                      	push rax
 12871 0000831F BF00000000              	mov rdi, 8 * 0	; new rib
 12872 00008324 E8BDCE0000              	call malloc
 12873 00008329 50                      	push rax
 12874 0000832A BF08000000              	mov rdi, 8 * 1	; extended env
 12875 0000832F E8B2CE0000              	call malloc
 12876 00008334 488B7D10                	mov rdi, ENV
 12877 00008338 BE00000000              	mov rsi, 0
 12878 0000833D BA01000000              	mov rdx, 1
 12879                                  .L_lambda_simple_env_loop_03e4:	; ext_env[i + 1] <-- env[i]
 12880 00008342 4883FE00                	cmp rsi, 0
 12881 00008346 7410                    	je .L_lambda_simple_env_end_03e4
 12882 00008348 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 12883 0000834C 48890CD0                	mov qword [rax + 8 * rdx], rcx
 12884 00008350 48FFC6                  	inc rsi
 12885 00008353 48FFC2                  	inc rdx
 12886 00008356 EBEA                    	jmp .L_lambda_simple_env_loop_03e4
 12887                                  .L_lambda_simple_env_end_03e4:
 12888 00008358 5B                      	pop rbx
 12889 00008359 BE00000000              	mov rsi, 0
 12890                                  .L_lambda_simple_params_loop_03e4:	; copy params
 12891 0000835E 4883FE00                	cmp rsi, 0
 12892 00008362 740E                    	je .L_lambda_simple_params_end_03e4
 12893 00008364 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 12894 00008369 488914F3                	mov qword [rbx + 8 * rsi], rdx
 12895 0000836D 48FFC6                  	inc rsi
 12896 00008370 EBEC                    	jmp .L_lambda_simple_params_loop_03e4
 12897                                  .L_lambda_simple_params_end_03e4:
 12898 00008372 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 12899 00008375 4889C3                  	mov rbx, rax
 12900 00008378 58                      	pop rax
 12901 00008379 C60004                  	mov byte [rax], T_closure
 12902 0000837C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 12903 00008380 48C74009[8D830000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03e4
 12904 00008388 E989000000              	jmp .L_lambda_simple_end_03e4
 12905                                  .L_lambda_simple_code_03e4:	; lambda-simple body
 12906 0000838D 48837C241000            	cmp qword [rsp + 8 * 2], 0
 12907 00008393 740B                    	je .L_lambda_simple_arity_check_ok_03e4
 12908 00008395 FF742410                	push qword [rsp + 8 * 2]
 12909 00008399 6A00                    	push 0
 12910 0000839B E9FFCD0000              	jmp L_error_incorrect_arity_simple
 12911                                  .L_lambda_simple_arity_check_ok_03e4:
 12912 000083A0 C8000000                	enter 0, 0
 12913                                  	; preparing a tail-call
 12914 000083A4 48B8-                   	mov rax, L_constants + 2691
 12914 000083A6 [830A000000000000] 
 12915 000083AE 50                      	push rax
 12916 000083AF 48B8-                   	mov rax, L_constants + 2892
 12916 000083B1 [4C0B000000000000] 
 12917 000083B9 50                      	push rax
 12918 000083BA 6A02                    	push 2	; arg count
 12919 000083BC 488B0425[D8180000]      	mov rax, qword [free_var_90]	; free var error
 12920 000083C4 803805                  	cmp byte [rax], T_undefined
 12921 000083C7 0F84ECCC0000            	je L_error_fvar_undefined
 12922 000083CD 803804                  	cmp byte [rax], T_closure
 12923 000083D0 0F8567CD0000            	jne L_error_non_closure
 12924 000083D6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12925                                  
 12926                                  	; recycling the current frame
 12927 000083D9 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 12928 000083DC FF7500                  	push qword [rbp]	; old frame-pointer
 12929 000083DF B906000000              	mov rcx, 6
 12930 000083E4 488B5D18                	mov rbx, COUNT
 12931 000083E8 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 12932 000083ED 488D55F8                	lea rdx, [rbp - 8]
 12933                                  .L_tc_recycle_frame_loop_0522:
 12934 000083F1 4883F900                	cmp rcx, 0
 12935 000083F5 7413                    	je .L_tc_recycle_frame_done_0522
 12936 000083F7 488B32                  	mov rsi, qword [rdx]
 12937 000083FA 488933                  	mov qword [rbx], rsi
 12938 000083FD 48FFC9                  	dec rcx
 12939 00008400 4883EB08                	sub rbx, 8
 12940 00008404 4883EA08                	sub rdx, 8
 12941 00008408 EBE7                    	jmp .L_tc_recycle_frame_loop_0522
 12942                                  .L_tc_recycle_frame_done_0522:
 12943 0000840A 488D6308                	lea rsp, [rbx + 8]
 12944 0000840E 5D                      	pop rbp
 12945 0000840F FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12946 00008412 C9                      	leave
 12947 00008413 C21000                  	ret AND_KILL_FRAME(0)
 12948                                  .L_lambda_simple_end_03e4:	; new closure is in rax
 12949 00008416 50                      	push rax
 12950 00008417 6A01                    	push 1	; arg count
 12951 00008419 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 12952 0000841E E8C3CD0000              	call malloc
 12953 00008423 50                      	push rax
 12954 00008424 BF00000000              	mov rdi, 8 * 0	; new rib
 12955 00008429 E8B8CD0000              	call malloc
 12956 0000842E 50                      	push rax
 12957 0000842F BF08000000              	mov rdi, 8 * 1	; extended env
 12958 00008434 E8ADCD0000              	call malloc
 12959 00008439 488B7D10                	mov rdi, ENV
 12960 0000843D BE00000000              	mov rsi, 0
 12961 00008442 BA01000000              	mov rdx, 1
 12962                                  .L_lambda_simple_env_loop_03e5:	; ext_env[i + 1] <-- env[i]
 12963 00008447 4883FE00                	cmp rsi, 0
 12964 0000844B 7410                    	je .L_lambda_simple_env_end_03e5
 12965 0000844D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 12966 00008451 48890CD0                	mov qword [rax + 8 * rdx], rcx
 12967 00008455 48FFC6                  	inc rsi
 12968 00008458 48FFC2                  	inc rdx
 12969 0000845B EBEA                    	jmp .L_lambda_simple_env_loop_03e5
 12970                                  .L_lambda_simple_env_end_03e5:
 12971 0000845D 5B                      	pop rbx
 12972 0000845E BE00000000              	mov rsi, 0
 12973                                  .L_lambda_simple_params_loop_03e5:	; copy params
 12974 00008463 4883FE00                	cmp rsi, 0
 12975 00008467 740E                    	je .L_lambda_simple_params_end_03e5
 12976 00008469 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 12977 0000846E 488914F3                	mov qword [rbx + 8 * rsi], rdx
 12978 00008472 48FFC6                  	inc rsi
 12979 00008475 EBEC                    	jmp .L_lambda_simple_params_loop_03e5
 12980                                  .L_lambda_simple_params_end_03e5:
 12981 00008477 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 12982 0000847A 4889C3                  	mov rbx, rax
 12983 0000847D 58                      	pop rax
 12984 0000847E C60004                  	mov byte [rax], T_closure
 12985 00008481 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 12986 00008485 48C74009[92840000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03e5
 12987 0000848D E9060D0000              	jmp .L_lambda_simple_end_03e5
 12988                                  .L_lambda_simple_code_03e5:	; lambda-simple body
 12989 00008492 48837C241001            	cmp qword [rsp + 8 * 2], 1
 12990 00008498 740B                    	je .L_lambda_simple_arity_check_ok_03e5
 12991 0000849A FF742410                	push qword [rsp + 8 * 2]
 12992 0000849E 6A01                    	push 1
 12993 000084A0 E9FACC0000              	jmp L_error_incorrect_arity_simple
 12994                                  .L_lambda_simple_arity_check_ok_03e5:
 12995 000084A5 C8000000                	enter 0, 0
 12996                                  	; preparing a tail-call
 12997 000084A9 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 12998 000084AE E833CD0000              	call malloc
 12999 000084B3 50                      	push rax
 13000 000084B4 BF08000000              	mov rdi, 8 * 1	; new rib
 13001 000084B9 E828CD0000              	call malloc
 13002 000084BE 50                      	push rax
 13003 000084BF BF10000000              	mov rdi, 8 * 2	; extended env
 13004 000084C4 E81DCD0000              	call malloc
 13005 000084C9 488B7D10                	mov rdi, ENV
 13006 000084CD BE00000000              	mov rsi, 0
 13007 000084D2 BA01000000              	mov rdx, 1
 13008                                  .L_lambda_simple_env_loop_03e6:	; ext_env[i + 1] <-- env[i]
 13009 000084D7 4883FE01                	cmp rsi, 1
 13010 000084DB 7410                    	je .L_lambda_simple_env_end_03e6
 13011 000084DD 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 13012 000084E1 48890CD0                	mov qword [rax + 8 * rdx], rcx
 13013 000084E5 48FFC6                  	inc rsi
 13014 000084E8 48FFC2                  	inc rdx
 13015 000084EB EBEA                    	jmp .L_lambda_simple_env_loop_03e6
 13016                                  .L_lambda_simple_env_end_03e6:
 13017 000084ED 5B                      	pop rbx
 13018 000084EE BE00000000              	mov rsi, 0
 13019                                  .L_lambda_simple_params_loop_03e6:	; copy params
 13020 000084F3 4883FE01                	cmp rsi, 1
 13021 000084F7 740E                    	je .L_lambda_simple_params_end_03e6
 13022 000084F9 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 13023 000084FE 488914F3                	mov qword [rbx + 8 * rsi], rdx
 13024 00008502 48FFC6                  	inc rsi
 13025 00008505 EBEC                    	jmp .L_lambda_simple_params_loop_03e6
 13026                                  .L_lambda_simple_params_end_03e6:
 13027 00008507 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 13028 0000850A 4889C3                  	mov rbx, rax
 13029 0000850D 58                      	pop rax
 13030 0000850E C60004                  	mov byte [rax], T_closure
 13031 00008511 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 13032 00008515 48C74009[22850000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03e6
 13033 0000851D E92B080000              	jmp .L_lambda_simple_end_03e6
 13034                                  .L_lambda_simple_code_03e6:	; lambda-simple body
 13035 00008522 48837C241002            	cmp qword [rsp + 8 * 2], 2
 13036 00008528 740B                    	je .L_lambda_simple_arity_check_ok_03e6
 13037 0000852A FF742410                	push qword [rsp + 8 * 2]
 13038 0000852E 6A02                    	push 2
 13039 00008530 E96ACC0000              	jmp L_error_incorrect_arity_simple
 13040                                  .L_lambda_simple_arity_check_ok_03e6:
 13041 00008535 C8000000                	enter 0, 0
 13042                                  	; preparing a non-tail-call
 13043 00008539 488B4520                	mov rax, PARAM(0)	; param a
 13044 0000853D 50                      	push rax
 13045 0000853E 6A01                    	push 1	; arg count
 13046 00008540 488B0425[B5190000]      	mov rax, qword [free_var_103]	; free var integer?
 13047 00008548 803805                  	cmp byte [rax], T_undefined
 13048 0000854B 0F8468CB0000            	je L_error_fvar_undefined
 13049 00008551 803804                  	cmp byte [rax], T_closure
 13050 00008554 0F85E3CB0000            	jne L_error_non_closure
 13051 0000855A FF7001                  	push SOB_CLOSURE_ENV(rax)
 13052 0000855D FF5009                  	call SOB_CLOSURE_CODE(rax)
 13053 00008560 483D[02000000]          	cmp rax, sob_boolean_false
 13054 00008566 0F8463020000            	je .L_if_else_02eb
 13055                                  	; preparing a non-tail-call
 13056 0000856C 488B4528                	mov rax, PARAM(1)	; param b
 13057 00008570 50                      	push rax
 13058 00008571 6A01                    	push 1	; arg count
 13059 00008573 488B0425[B5190000]      	mov rax, qword [free_var_103]	; free var integer?
 13060 0000857B 803805                  	cmp byte [rax], T_undefined
 13061 0000857E 0F8435CB0000            	je L_error_fvar_undefined
 13062 00008584 803804                  	cmp byte [rax], T_closure
 13063 00008587 0F85B0CB0000            	jne L_error_non_closure
 13064 0000858D FF7001                  	push SOB_CLOSURE_ENV(rax)
 13065 00008590 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13066 00008593 483D[02000000]          	cmp rax, sob_boolean_false
 13067 00008599 7467                    	je .L_if_else_02e2
 13068                                  	; preparing a tail-call
 13069 0000859B 488B4528                	mov rax, PARAM(1)	; param b
 13070 0000859F 50                      	push rax
 13071 000085A0 488B4520                	mov rax, PARAM(0)	; param a
 13072 000085A4 50                      	push rax
 13073 000085A5 6A02                    	push 2	; arg count
 13074 000085A7 488B0425[DD130000]      	mov rax, qword [free_var_15]	; free var __bin-div-zz
 13075 000085AF 803805                  	cmp byte [rax], T_undefined
 13076 000085B2 0F8401CB0000            	je L_error_fvar_undefined
 13077 000085B8 803804                  	cmp byte [rax], T_closure
 13078 000085BB 0F857CCB0000            	jne L_error_non_closure
 13079 000085C1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13080                                  
 13081                                  	; recycling the current frame
 13082 000085C4 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 13083 000085C7 FF7500                  	push qword [rbp]	; old frame-pointer
 13084 000085CA B906000000              	mov rcx, 6
 13085 000085CF 488B5D18                	mov rbx, COUNT
 13086 000085D3 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 13087 000085D8 488D55F8                	lea rdx, [rbp - 8]
 13088                                  .L_tc_recycle_frame_loop_0523:
 13089 000085DC 4883F900                	cmp rcx, 0
 13090 000085E0 7413                    	je .L_tc_recycle_frame_done_0523
 13091 000085E2 488B32                  	mov rsi, qword [rdx]
 13092 000085E5 488933                  	mov qword [rbx], rsi
 13093 000085E8 48FFC9                  	dec rcx
 13094 000085EB 4883EB08                	sub rbx, 8
 13095 000085EF 4883EA08                	sub rdx, 8
 13096 000085F3 EBE7                    	jmp .L_tc_recycle_frame_loop_0523
 13097                                  .L_tc_recycle_frame_done_0523:
 13098 000085F5 488D6308                	lea rsp, [rbx + 8]
 13099 000085F9 5D                      	pop rbp
 13100 000085FA FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13101 000085FD E9C8010000              	jmp .L_if_end_02e2
 13102                                  .L_if_else_02e2:
 13103                                  	; preparing a non-tail-call
 13104 00008602 488B4528                	mov rax, PARAM(1)	; param b
 13105 00008606 50                      	push rax
 13106 00008607 6A01                    	push 1	; arg count
 13107 00008609 488B0425[4F190000]      	mov rax, qword [free_var_97]	; free var fraction?
 13108 00008611 803805                  	cmp byte [rax], T_undefined
 13109 00008614 0F849FCA0000            	je L_error_fvar_undefined
 13110 0000861A 803804                  	cmp byte [rax], T_closure
 13111 0000861D 0F851ACB0000            	jne L_error_non_closure
 13112 00008623 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13113 00008626 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13114 00008629 483D[02000000]          	cmp rax, sob_boolean_false
 13115 0000862F 0F848A000000            	je .L_if_else_02e1
 13116                                  	; preparing a tail-call
 13117 00008635 488B4528                	mov rax, PARAM(1)	; param b
 13118 00008639 50                      	push rax
 13119                                  	; preparing a non-tail-call
 13120 0000863A 488B4520                	mov rax, PARAM(0)	; param a
 13121 0000863E 50                      	push rax
 13122 0000863F 6A01                    	push 1	; arg count
 13123 00008641 488B0425[CB140000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
 13124 00008649 803805                  	cmp byte [rax], T_undefined
 13125 0000864C 0F8467CA0000            	je L_error_fvar_undefined
 13126 00008652 803804                  	cmp byte [rax], T_closure
 13127 00008655 0F85E2CA0000            	jne L_error_non_closure
 13128 0000865B FF7001                  	push SOB_CLOSURE_ENV(rax)
 13129 0000865E FF5009                  	call SOB_CLOSURE_CODE(rax)
 13130 00008661 50                      	push rax
 13131 00008662 6A02                    	push 2	; arg count
 13132 00008664 488B0425[BB130000]      	mov rax, qword [free_var_13]	; free var __bin-div-qq
 13133 0000866C 803805                  	cmp byte [rax], T_undefined
 13134 0000866F 0F8444CA0000            	je L_error_fvar_undefined
 13135 00008675 803804                  	cmp byte [rax], T_closure
 13136 00008678 0F85BFCA0000            	jne L_error_non_closure
 13137 0000867E FF7001                  	push SOB_CLOSURE_ENV(rax)
 13138                                  
 13139                                  	; recycling the current frame
 13140 00008681 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 13141 00008684 FF7500                  	push qword [rbp]	; old frame-pointer
 13142 00008687 B906000000              	mov rcx, 6
 13143 0000868C 488B5D18                	mov rbx, COUNT
 13144 00008690 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 13145 00008695 488D55F8                	lea rdx, [rbp - 8]
 13146                                  .L_tc_recycle_frame_loop_0524:
 13147 00008699 4883F900                	cmp rcx, 0
 13148 0000869D 7413                    	je .L_tc_recycle_frame_done_0524
 13149 0000869F 488B32                  	mov rsi, qword [rdx]
 13150 000086A2 488933                  	mov qword [rbx], rsi
 13151 000086A5 48FFC9                  	dec rcx
 13152 000086A8 4883EB08                	sub rbx, 8
 13153 000086AC 4883EA08                	sub rdx, 8
 13154 000086B0 EBE7                    	jmp .L_tc_recycle_frame_loop_0524
 13155                                  .L_tc_recycle_frame_done_0524:
 13156 000086B2 488D6308                	lea rsp, [rbx + 8]
 13157 000086B6 5D                      	pop rbp
 13158 000086B7 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13159 000086BA E90B010000              	jmp .L_if_end_02e1
 13160                                  .L_if_else_02e1:
 13161                                  	; preparing a non-tail-call
 13162 000086BF 488B4528                	mov rax, PARAM(1)	; param b
 13163 000086C3 50                      	push rax
 13164 000086C4 6A01                    	push 1	; arg count
 13165 000086C6 488B0425[2A1C0000]      	mov rax, qword [free_var_140]	; free var real?
 13166 000086CE 803805                  	cmp byte [rax], T_undefined
 13167 000086D1 0F84E2C90000            	je L_error_fvar_undefined
 13168 000086D7 803804                  	cmp byte [rax], T_closure
 13169 000086DA 0F855DCA0000            	jne L_error_non_closure
 13170 000086E0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13171 000086E3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13172 000086E6 483D[02000000]          	cmp rax, sob_boolean_false
 13173 000086EC 0F8487000000            	je .L_if_else_02e0
 13174                                  	; preparing a tail-call
 13175 000086F2 488B4528                	mov rax, PARAM(1)	; param b
 13176 000086F6 50                      	push rax
 13177                                  	; preparing a non-tail-call
 13178 000086F7 488B4520                	mov rax, PARAM(0)	; param a
 13179 000086FB 50                      	push rax
 13180 000086FC 6A01                    	push 1	; arg count
 13181 000086FE 488B0425[A4190000]      	mov rax, qword [free_var_102]	; free var integer->real
 13182 00008706 803805                  	cmp byte [rax], T_undefined
 13183 00008709 0F84AAC90000            	je L_error_fvar_undefined
 13184 0000870F 803804                  	cmp byte [rax], T_closure
 13185 00008712 0F8525CA0000            	jne L_error_non_closure
 13186 00008718 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13187 0000871B FF5009                  	call SOB_CLOSURE_CODE(rax)
 13188 0000871E 50                      	push rax
 13189 0000871F 6A02                    	push 2	; arg count
 13190 00008721 488B0425[CC130000]      	mov rax, qword [free_var_14]	; free var __bin-div-rr
 13191 00008729 803805                  	cmp byte [rax], T_undefined
 13192 0000872C 0F8487C90000            	je L_error_fvar_undefined
 13193 00008732 803804                  	cmp byte [rax], T_closure
 13194 00008735 0F8502CA0000            	jne L_error_non_closure
 13195 0000873B FF7001                  	push SOB_CLOSURE_ENV(rax)
 13196                                  
 13197                                  	; recycling the current frame
 13198 0000873E FF7508                  	push qword [rbp + 8 * 1]	; old return address
 13199 00008741 FF7500                  	push qword [rbp]	; old frame-pointer
 13200 00008744 B906000000              	mov rcx, 6
 13201 00008749 488B5D18                	mov rbx, COUNT
 13202 0000874D 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 13203 00008752 488D55F8                	lea rdx, [rbp - 8]
 13204                                  .L_tc_recycle_frame_loop_0525:
 13205 00008756 4883F900                	cmp rcx, 0
 13206 0000875A 7413                    	je .L_tc_recycle_frame_done_0525
 13207 0000875C 488B32                  	mov rsi, qword [rdx]
 13208 0000875F 488933                  	mov qword [rbx], rsi
 13209 00008762 48FFC9                  	dec rcx
 13210 00008765 4883EB08                	sub rbx, 8
 13211 00008769 4883EA08                	sub rdx, 8
 13212 0000876D EBE7                    	jmp .L_tc_recycle_frame_loop_0525
 13213                                  .L_tc_recycle_frame_done_0525:
 13214 0000876F 488D6308                	lea rsp, [rbx + 8]
 13215 00008773 5D                      	pop rbp
 13216 00008774 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13217 00008777 EB51                    	jmp .L_if_end_02e0
 13218                                  .L_if_else_02e0:
 13219                                  	; preparing a tail-call
 13220 00008779 6A00                    	push 0	; arg count
 13221 0000877B 488B4510                	mov rax, ENV
 13222 0000877F 488B00                  	mov rax, qword [rax + 8 * 0]
 13223 00008782 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 13224 00008785 803804                  	cmp byte [rax], T_closure
 13225 00008788 0F85AFC90000            	jne L_error_non_closure
 13226 0000878E FF7001                  	push SOB_CLOSURE_ENV(rax)
 13227                                  
 13228                                  	; recycling the current frame
 13229 00008791 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 13230 00008794 FF7500                  	push qword [rbp]	; old frame-pointer
 13231 00008797 B904000000              	mov rcx, 4
 13232 0000879C 488B5D18                	mov rbx, COUNT
 13233 000087A0 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 13234 000087A5 488D55F8                	lea rdx, [rbp - 8]
 13235                                  .L_tc_recycle_frame_loop_0526:
 13236 000087A9 4883F900                	cmp rcx, 0
 13237 000087AD 7413                    	je .L_tc_recycle_frame_done_0526
 13238 000087AF 488B32                  	mov rsi, qword [rdx]
 13239 000087B2 488933                  	mov qword [rbx], rsi
 13240 000087B5 48FFC9                  	dec rcx
 13241 000087B8 4883EB08                	sub rbx, 8
 13242 000087BC 4883EA08                	sub rdx, 8
 13243 000087C0 EBE7                    	jmp .L_tc_recycle_frame_loop_0526
 13244                                  .L_tc_recycle_frame_done_0526:
 13245 000087C2 488D6308                	lea rsp, [rbx + 8]
 13246 000087C6 5D                      	pop rbp
 13247 000087C7 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13248                                  .L_if_end_02e0:
 13249                                  .L_if_end_02e1:
 13250                                  .L_if_end_02e2:
 13251 000087CA E97A050000              	jmp .L_if_end_02eb
 13252                                  .L_if_else_02eb:
 13253                                  	; preparing a non-tail-call
 13254 000087CF 488B4520                	mov rax, PARAM(0)	; param a
 13255 000087D3 50                      	push rax
 13256 000087D4 6A01                    	push 1	; arg count
 13257 000087D6 488B0425[4F190000]      	mov rax, qword [free_var_97]	; free var fraction?
 13258 000087DE 803805                  	cmp byte [rax], T_undefined
 13259 000087E1 0F84D2C80000            	je L_error_fvar_undefined
 13260 000087E7 803804                  	cmp byte [rax], T_closure
 13261 000087EA 0F854DC90000            	jne L_error_non_closure
 13262 000087F0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13263 000087F3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13264 000087F6 483D[02000000]          	cmp rax, sob_boolean_false
 13265 000087FC 0F8463020000            	je .L_if_else_02ea
 13266                                  	; preparing a non-tail-call
 13267 00008802 488B4528                	mov rax, PARAM(1)	; param b
 13268 00008806 50                      	push rax
 13269 00008807 6A01                    	push 1	; arg count
 13270 00008809 488B0425[B5190000]      	mov rax, qword [free_var_103]	; free var integer?
 13271 00008811 803805                  	cmp byte [rax], T_undefined
 13272 00008814 0F849FC80000            	je L_error_fvar_undefined
 13273 0000881A 803804                  	cmp byte [rax], T_closure
 13274 0000881D 0F851AC90000            	jne L_error_non_closure
 13275 00008823 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13276 00008826 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13277 00008829 483D[02000000]          	cmp rax, sob_boolean_false
 13278 0000882F 0F848A000000            	je .L_if_else_02e5
 13279                                  	; preparing a tail-call
 13280                                  	; preparing a non-tail-call
 13281 00008835 488B4528                	mov rax, PARAM(1)	; param b
 13282 00008839 50                      	push rax
 13283 0000883A 6A01                    	push 1	; arg count
 13284 0000883C 488B0425[CB140000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
 13285 00008844 803805                  	cmp byte [rax], T_undefined
 13286 00008847 0F846CC80000            	je L_error_fvar_undefined
 13287 0000884D 803804                  	cmp byte [rax], T_closure
 13288 00008850 0F85E7C80000            	jne L_error_non_closure
 13289 00008856 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13290 00008859 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13291 0000885C 50                      	push rax
 13292 0000885D 488B4520                	mov rax, PARAM(0)	; param a
 13293 00008861 50                      	push rax
 13294 00008862 6A02                    	push 2	; arg count
 13295 00008864 488B0425[BB130000]      	mov rax, qword [free_var_13]	; free var __bin-div-qq
 13296 0000886C 803805                  	cmp byte [rax], T_undefined
 13297 0000886F 0F8444C80000            	je L_error_fvar_undefined
 13298 00008875 803804                  	cmp byte [rax], T_closure
 13299 00008878 0F85BFC80000            	jne L_error_non_closure
 13300 0000887E FF7001                  	push SOB_CLOSURE_ENV(rax)
 13301                                  
 13302                                  	; recycling the current frame
 13303 00008881 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 13304 00008884 FF7500                  	push qword [rbp]	; old frame-pointer
 13305 00008887 B906000000              	mov rcx, 6
 13306 0000888C 488B5D18                	mov rbx, COUNT
 13307 00008890 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 13308 00008895 488D55F8                	lea rdx, [rbp - 8]
 13309                                  .L_tc_recycle_frame_loop_0527:
 13310 00008899 4883F900                	cmp rcx, 0
 13311 0000889D 7413                    	je .L_tc_recycle_frame_done_0527
 13312 0000889F 488B32                  	mov rsi, qword [rdx]
 13313 000088A2 488933                  	mov qword [rbx], rsi
 13314 000088A5 48FFC9                  	dec rcx
 13315 000088A8 4883EB08                	sub rbx, 8
 13316 000088AC 4883EA08                	sub rdx, 8
 13317 000088B0 EBE7                    	jmp .L_tc_recycle_frame_loop_0527
 13318                                  .L_tc_recycle_frame_done_0527:
 13319 000088B2 488D6308                	lea rsp, [rbx + 8]
 13320 000088B6 5D                      	pop rbp
 13321 000088B7 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13322 000088BA E9A1010000              	jmp .L_if_end_02e5
 13323                                  .L_if_else_02e5:
 13324                                  	; preparing a non-tail-call
 13325 000088BF 488B4528                	mov rax, PARAM(1)	; param b
 13326 000088C3 50                      	push rax
 13327 000088C4 6A01                    	push 1	; arg count
 13328 000088C6 488B0425[4F190000]      	mov rax, qword [free_var_97]	; free var fraction?
 13329 000088CE 803805                  	cmp byte [rax], T_undefined
 13330 000088D1 0F84E2C70000            	je L_error_fvar_undefined
 13331 000088D7 803804                  	cmp byte [rax], T_closure
 13332 000088DA 0F855DC80000            	jne L_error_non_closure
 13333 000088E0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13334 000088E3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13335 000088E6 483D[02000000]          	cmp rax, sob_boolean_false
 13336 000088EC 7467                    	je .L_if_else_02e4
 13337                                  	; preparing a tail-call
 13338 000088EE 488B4528                	mov rax, PARAM(1)	; param b
 13339 000088F2 50                      	push rax
 13340 000088F3 488B4520                	mov rax, PARAM(0)	; param a
 13341 000088F7 50                      	push rax
 13342 000088F8 6A02                    	push 2	; arg count
 13343 000088FA 488B0425[BB130000]      	mov rax, qword [free_var_13]	; free var __bin-div-qq
 13344 00008902 803805                  	cmp byte [rax], T_undefined
 13345 00008905 0F84AEC70000            	je L_error_fvar_undefined
 13346 0000890B 803804                  	cmp byte [rax], T_closure
 13347 0000890E 0F8529C80000            	jne L_error_non_closure
 13348 00008914 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13349                                  
 13350                                  	; recycling the current frame
 13351 00008917 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 13352 0000891A FF7500                  	push qword [rbp]	; old frame-pointer
 13353 0000891D B906000000              	mov rcx, 6
 13354 00008922 488B5D18                	mov rbx, COUNT
 13355 00008926 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 13356 0000892B 488D55F8                	lea rdx, [rbp - 8]
 13357                                  .L_tc_recycle_frame_loop_0528:
 13358 0000892F 4883F900                	cmp rcx, 0
 13359 00008933 7413                    	je .L_tc_recycle_frame_done_0528
 13360 00008935 488B32                  	mov rsi, qword [rdx]
 13361 00008938 488933                  	mov qword [rbx], rsi
 13362 0000893B 48FFC9                  	dec rcx
 13363 0000893E 4883EB08                	sub rbx, 8
 13364 00008942 4883EA08                	sub rdx, 8
 13365 00008946 EBE7                    	jmp .L_tc_recycle_frame_loop_0528
 13366                                  .L_tc_recycle_frame_done_0528:
 13367 00008948 488D6308                	lea rsp, [rbx + 8]
 13368 0000894C 5D                      	pop rbp
 13369 0000894D FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13370 00008950 E90B010000              	jmp .L_if_end_02e4
 13371                                  .L_if_else_02e4:
 13372                                  	; preparing a non-tail-call
 13373 00008955 488B4528                	mov rax, PARAM(1)	; param b
 13374 00008959 50                      	push rax
 13375 0000895A 6A01                    	push 1	; arg count
 13376 0000895C 488B0425[2A1C0000]      	mov rax, qword [free_var_140]	; free var real?
 13377 00008964 803805                  	cmp byte [rax], T_undefined
 13378 00008967 0F844CC70000            	je L_error_fvar_undefined
 13379 0000896D 803804                  	cmp byte [rax], T_closure
 13380 00008970 0F85C7C70000            	jne L_error_non_closure
 13381 00008976 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13382 00008979 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13383 0000897C 483D[02000000]          	cmp rax, sob_boolean_false
 13384 00008982 0F8487000000            	je .L_if_else_02e3
 13385                                  	; preparing a tail-call
 13386 00008988 488B4528                	mov rax, PARAM(1)	; param b
 13387 0000898C 50                      	push rax
 13388                                  	; preparing a non-tail-call
 13389 0000898D 488B4520                	mov rax, PARAM(0)	; param a
 13390 00008991 50                      	push rax
 13391 00008992 6A01                    	push 1	; arg count
 13392 00008994 488B0425[3E190000]      	mov rax, qword [free_var_96]	; free var fraction->real
 13393 0000899C 803805                  	cmp byte [rax], T_undefined
 13394 0000899F 0F8414C70000            	je L_error_fvar_undefined
 13395 000089A5 803804                  	cmp byte [rax], T_closure
 13396 000089A8 0F858FC70000            	jne L_error_non_closure
 13397 000089AE FF7001                  	push SOB_CLOSURE_ENV(rax)
 13398 000089B1 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13399 000089B4 50                      	push rax
 13400 000089B5 6A02                    	push 2	; arg count
 13401 000089B7 488B0425[CC130000]      	mov rax, qword [free_var_14]	; free var __bin-div-rr
 13402 000089BF 803805                  	cmp byte [rax], T_undefined
 13403 000089C2 0F84F1C60000            	je L_error_fvar_undefined
 13404 000089C8 803804                  	cmp byte [rax], T_closure
 13405 000089CB 0F856CC70000            	jne L_error_non_closure
 13406 000089D1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13407                                  
 13408                                  	; recycling the current frame
 13409 000089D4 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 13410 000089D7 FF7500                  	push qword [rbp]	; old frame-pointer
 13411 000089DA B906000000              	mov rcx, 6
 13412 000089DF 488B5D18                	mov rbx, COUNT
 13413 000089E3 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 13414 000089E8 488D55F8                	lea rdx, [rbp - 8]
 13415                                  .L_tc_recycle_frame_loop_0529:
 13416 000089EC 4883F900                	cmp rcx, 0
 13417 000089F0 7413                    	je .L_tc_recycle_frame_done_0529
 13418 000089F2 488B32                  	mov rsi, qword [rdx]
 13419 000089F5 488933                  	mov qword [rbx], rsi
 13420 000089F8 48FFC9                  	dec rcx
 13421 000089FB 4883EB08                	sub rbx, 8
 13422 000089FF 4883EA08                	sub rdx, 8
 13423 00008A03 EBE7                    	jmp .L_tc_recycle_frame_loop_0529
 13424                                  .L_tc_recycle_frame_done_0529:
 13425 00008A05 488D6308                	lea rsp, [rbx + 8]
 13426 00008A09 5D                      	pop rbp
 13427 00008A0A FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13428 00008A0D EB51                    	jmp .L_if_end_02e3
 13429                                  .L_if_else_02e3:
 13430                                  	; preparing a tail-call
 13431 00008A0F 6A00                    	push 0	; arg count
 13432 00008A11 488B4510                	mov rax, ENV
 13433 00008A15 488B00                  	mov rax, qword [rax + 8 * 0]
 13434 00008A18 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 13435 00008A1B 803804                  	cmp byte [rax], T_closure
 13436 00008A1E 0F8519C70000            	jne L_error_non_closure
 13437 00008A24 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13438                                  
 13439                                  	; recycling the current frame
 13440 00008A27 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 13441 00008A2A FF7500                  	push qword [rbp]	; old frame-pointer
 13442 00008A2D B904000000              	mov rcx, 4
 13443 00008A32 488B5D18                	mov rbx, COUNT
 13444 00008A36 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 13445 00008A3B 488D55F8                	lea rdx, [rbp - 8]
 13446                                  .L_tc_recycle_frame_loop_052a:
 13447 00008A3F 4883F900                	cmp rcx, 0
 13448 00008A43 7413                    	je .L_tc_recycle_frame_done_052a
 13449 00008A45 488B32                  	mov rsi, qword [rdx]
 13450 00008A48 488933                  	mov qword [rbx], rsi
 13451 00008A4B 48FFC9                  	dec rcx
 13452 00008A4E 4883EB08                	sub rbx, 8
 13453 00008A52 4883EA08                	sub rdx, 8
 13454 00008A56 EBE7                    	jmp .L_tc_recycle_frame_loop_052a
 13455                                  .L_tc_recycle_frame_done_052a:
 13456 00008A58 488D6308                	lea rsp, [rbx + 8]
 13457 00008A5C 5D                      	pop rbp
 13458 00008A5D FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13459                                  .L_if_end_02e3:
 13460                                  .L_if_end_02e4:
 13461                                  .L_if_end_02e5:
 13462 00008A60 E9E4020000              	jmp .L_if_end_02ea
 13463                                  .L_if_else_02ea:
 13464                                  	; preparing a non-tail-call
 13465 00008A65 488B4520                	mov rax, PARAM(0)	; param a
 13466 00008A69 50                      	push rax
 13467 00008A6A 6A01                    	push 1	; arg count
 13468 00008A6C 488B0425[2A1C0000]      	mov rax, qword [free_var_140]	; free var real?
 13469 00008A74 803805                  	cmp byte [rax], T_undefined
 13470 00008A77 0F843CC60000            	je L_error_fvar_undefined
 13471 00008A7D 803804                  	cmp byte [rax], T_closure
 13472 00008A80 0F85B7C60000            	jne L_error_non_closure
 13473 00008A86 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13474 00008A89 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13475 00008A8C 483D[02000000]          	cmp rax, sob_boolean_false
 13476 00008A92 0F8460020000            	je .L_if_else_02e9
 13477                                  	; preparing a non-tail-call
 13478 00008A98 488B4528                	mov rax, PARAM(1)	; param b
 13479 00008A9C 50                      	push rax
 13480 00008A9D 6A01                    	push 1	; arg count
 13481 00008A9F 488B0425[B5190000]      	mov rax, qword [free_var_103]	; free var integer?
 13482 00008AA7 803805                  	cmp byte [rax], T_undefined
 13483 00008AAA 0F8409C60000            	je L_error_fvar_undefined
 13484 00008AB0 803804                  	cmp byte [rax], T_closure
 13485 00008AB3 0F8584C60000            	jne L_error_non_closure
 13486 00008AB9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13487 00008ABC FF5009                  	call SOB_CLOSURE_CODE(rax)
 13488 00008ABF 483D[02000000]          	cmp rax, sob_boolean_false
 13489 00008AC5 0F848A000000            	je .L_if_else_02e8
 13490                                  	; preparing a tail-call
 13491                                  	; preparing a non-tail-call
 13492 00008ACB 488B4528                	mov rax, PARAM(1)	; param b
 13493 00008ACF 50                      	push rax
 13494 00008AD0 6A01                    	push 1	; arg count
 13495 00008AD2 488B0425[A4190000]      	mov rax, qword [free_var_102]	; free var integer->real
 13496 00008ADA 803805                  	cmp byte [rax], T_undefined
 13497 00008ADD 0F84D6C50000            	je L_error_fvar_undefined
 13498 00008AE3 803804                  	cmp byte [rax], T_closure
 13499 00008AE6 0F8551C60000            	jne L_error_non_closure
 13500 00008AEC FF7001                  	push SOB_CLOSURE_ENV(rax)
 13501 00008AEF FF5009                  	call SOB_CLOSURE_CODE(rax)
 13502 00008AF2 50                      	push rax
 13503 00008AF3 488B4520                	mov rax, PARAM(0)	; param a
 13504 00008AF7 50                      	push rax
 13505 00008AF8 6A02                    	push 2	; arg count
 13506 00008AFA 488B0425[CC130000]      	mov rax, qword [free_var_14]	; free var __bin-div-rr
 13507 00008B02 803805                  	cmp byte [rax], T_undefined
 13508 00008B05 0F84AEC50000            	je L_error_fvar_undefined
 13509 00008B0B 803804                  	cmp byte [rax], T_closure
 13510 00008B0E 0F8529C60000            	jne L_error_non_closure
 13511 00008B14 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13512                                  
 13513                                  	; recycling the current frame
 13514 00008B17 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 13515 00008B1A FF7500                  	push qword [rbp]	; old frame-pointer
 13516 00008B1D B906000000              	mov rcx, 6
 13517 00008B22 488B5D18                	mov rbx, COUNT
 13518 00008B26 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 13519 00008B2B 488D55F8                	lea rdx, [rbp - 8]
 13520                                  .L_tc_recycle_frame_loop_052b:
 13521 00008B2F 4883F900                	cmp rcx, 0
 13522 00008B33 7413                    	je .L_tc_recycle_frame_done_052b
 13523 00008B35 488B32                  	mov rsi, qword [rdx]
 13524 00008B38 488933                  	mov qword [rbx], rsi
 13525 00008B3B 48FFC9                  	dec rcx
 13526 00008B3E 4883EB08                	sub rbx, 8
 13527 00008B42 4883EA08                	sub rdx, 8
 13528 00008B46 EBE7                    	jmp .L_tc_recycle_frame_loop_052b
 13529                                  .L_tc_recycle_frame_done_052b:
 13530 00008B48 488D6308                	lea rsp, [rbx + 8]
 13531 00008B4C 5D                      	pop rbp
 13532 00008B4D FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13533 00008B50 E9A1010000              	jmp .L_if_end_02e8
 13534                                  .L_if_else_02e8:
 13535                                  	; preparing a non-tail-call
 13536 00008B55 488B4528                	mov rax, PARAM(1)	; param b
 13537 00008B59 50                      	push rax
 13538 00008B5A 6A01                    	push 1	; arg count
 13539 00008B5C 488B0425[4F190000]      	mov rax, qword [free_var_97]	; free var fraction?
 13540 00008B64 803805                  	cmp byte [rax], T_undefined
 13541 00008B67 0F844CC50000            	je L_error_fvar_undefined
 13542 00008B6D 803804                  	cmp byte [rax], T_closure
 13543 00008B70 0F85C7C50000            	jne L_error_non_closure
 13544 00008B76 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13545 00008B79 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13546 00008B7C 483D[02000000]          	cmp rax, sob_boolean_false
 13547 00008B82 0F848A000000            	je .L_if_else_02e7
 13548                                  	; preparing a tail-call
 13549                                  	; preparing a non-tail-call
 13550 00008B88 488B4528                	mov rax, PARAM(1)	; param b
 13551 00008B8C 50                      	push rax
 13552 00008B8D 6A01                    	push 1	; arg count
 13553 00008B8F 488B0425[3E190000]      	mov rax, qword [free_var_96]	; free var fraction->real
 13554 00008B97 803805                  	cmp byte [rax], T_undefined
 13555 00008B9A 0F8419C50000            	je L_error_fvar_undefined
 13556 00008BA0 803804                  	cmp byte [rax], T_closure
 13557 00008BA3 0F8594C50000            	jne L_error_non_closure
 13558 00008BA9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13559 00008BAC FF5009                  	call SOB_CLOSURE_CODE(rax)
 13560 00008BAF 50                      	push rax
 13561 00008BB0 488B4520                	mov rax, PARAM(0)	; param a
 13562 00008BB4 50                      	push rax
 13563 00008BB5 6A02                    	push 2	; arg count
 13564 00008BB7 488B0425[CC130000]      	mov rax, qword [free_var_14]	; free var __bin-div-rr
 13565 00008BBF 803805                  	cmp byte [rax], T_undefined
 13566 00008BC2 0F84F1C40000            	je L_error_fvar_undefined
 13567 00008BC8 803804                  	cmp byte [rax], T_closure
 13568 00008BCB 0F856CC50000            	jne L_error_non_closure
 13569 00008BD1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13570                                  
 13571                                  	; recycling the current frame
 13572 00008BD4 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 13573 00008BD7 FF7500                  	push qword [rbp]	; old frame-pointer
 13574 00008BDA B906000000              	mov rcx, 6
 13575 00008BDF 488B5D18                	mov rbx, COUNT
 13576 00008BE3 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 13577 00008BE8 488D55F8                	lea rdx, [rbp - 8]
 13578                                  .L_tc_recycle_frame_loop_052c:
 13579 00008BEC 4883F900                	cmp rcx, 0
 13580 00008BF0 7413                    	je .L_tc_recycle_frame_done_052c
 13581 00008BF2 488B32                  	mov rsi, qword [rdx]
 13582 00008BF5 488933                  	mov qword [rbx], rsi
 13583 00008BF8 48FFC9                  	dec rcx
 13584 00008BFB 4883EB08                	sub rbx, 8
 13585 00008BFF 4883EA08                	sub rdx, 8
 13586 00008C03 EBE7                    	jmp .L_tc_recycle_frame_loop_052c
 13587                                  .L_tc_recycle_frame_done_052c:
 13588 00008C05 488D6308                	lea rsp, [rbx + 8]
 13589 00008C09 5D                      	pop rbp
 13590 00008C0A FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13591 00008C0D E9E4000000              	jmp .L_if_end_02e7
 13592                                  .L_if_else_02e7:
 13593                                  	; preparing a non-tail-call
 13594 00008C12 488B4528                	mov rax, PARAM(1)	; param b
 13595 00008C16 50                      	push rax
 13596 00008C17 6A01                    	push 1	; arg count
 13597 00008C19 488B0425[2A1C0000]      	mov rax, qword [free_var_140]	; free var real?
 13598 00008C21 803805                  	cmp byte [rax], T_undefined
 13599 00008C24 0F848FC40000            	je L_error_fvar_undefined
 13600 00008C2A 803804                  	cmp byte [rax], T_closure
 13601 00008C2D 0F850AC50000            	jne L_error_non_closure
 13602 00008C33 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13603 00008C36 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13604 00008C39 483D[02000000]          	cmp rax, sob_boolean_false
 13605 00008C3F 7464                    	je .L_if_else_02e6
 13606                                  	; preparing a tail-call
 13607 00008C41 488B4528                	mov rax, PARAM(1)	; param b
 13608 00008C45 50                      	push rax
 13609 00008C46 488B4520                	mov rax, PARAM(0)	; param a
 13610 00008C4A 50                      	push rax
 13611 00008C4B 6A02                    	push 2	; arg count
 13612 00008C4D 488B0425[CC130000]      	mov rax, qword [free_var_14]	; free var __bin-div-rr
 13613 00008C55 803805                  	cmp byte [rax], T_undefined
 13614 00008C58 0F845BC40000            	je L_error_fvar_undefined
 13615 00008C5E 803804                  	cmp byte [rax], T_closure
 13616 00008C61 0F85D6C40000            	jne L_error_non_closure
 13617 00008C67 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13618                                  
 13619                                  	; recycling the current frame
 13620 00008C6A FF7508                  	push qword [rbp + 8 * 1]	; old return address
 13621 00008C6D FF7500                  	push qword [rbp]	; old frame-pointer
 13622 00008C70 B906000000              	mov rcx, 6
 13623 00008C75 488B5D18                	mov rbx, COUNT
 13624 00008C79 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 13625 00008C7E 488D55F8                	lea rdx, [rbp - 8]
 13626                                  .L_tc_recycle_frame_loop_052d:
 13627 00008C82 4883F900                	cmp rcx, 0
 13628 00008C86 7413                    	je .L_tc_recycle_frame_done_052d
 13629 00008C88 488B32                  	mov rsi, qword [rdx]
 13630 00008C8B 488933                  	mov qword [rbx], rsi
 13631 00008C8E 48FFC9                  	dec rcx
 13632 00008C91 4883EB08                	sub rbx, 8
 13633 00008C95 4883EA08                	sub rdx, 8
 13634 00008C99 EBE7                    	jmp .L_tc_recycle_frame_loop_052d
 13635                                  .L_tc_recycle_frame_done_052d:
 13636 00008C9B 488D6308                	lea rsp, [rbx + 8]
 13637 00008C9F 5D                      	pop rbp
 13638 00008CA0 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13639 00008CA3 EB51                    	jmp .L_if_end_02e6
 13640                                  .L_if_else_02e6:
 13641                                  	; preparing a tail-call
 13642 00008CA5 6A00                    	push 0	; arg count
 13643 00008CA7 488B4510                	mov rax, ENV
 13644 00008CAB 488B00                  	mov rax, qword [rax + 8 * 0]
 13645 00008CAE 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 13646 00008CB1 803804                  	cmp byte [rax], T_closure
 13647 00008CB4 0F8583C40000            	jne L_error_non_closure
 13648 00008CBA FF7001                  	push SOB_CLOSURE_ENV(rax)
 13649                                  
 13650                                  	; recycling the current frame
 13651 00008CBD FF7508                  	push qword [rbp + 8 * 1]	; old return address
 13652 00008CC0 FF7500                  	push qword [rbp]	; old frame-pointer
 13653 00008CC3 B904000000              	mov rcx, 4
 13654 00008CC8 488B5D18                	mov rbx, COUNT
 13655 00008CCC 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 13656 00008CD1 488D55F8                	lea rdx, [rbp - 8]
 13657                                  .L_tc_recycle_frame_loop_052e:
 13658 00008CD5 4883F900                	cmp rcx, 0
 13659 00008CD9 7413                    	je .L_tc_recycle_frame_done_052e
 13660 00008CDB 488B32                  	mov rsi, qword [rdx]
 13661 00008CDE 488933                  	mov qword [rbx], rsi
 13662 00008CE1 48FFC9                  	dec rcx
 13663 00008CE4 4883EB08                	sub rbx, 8
 13664 00008CE8 4883EA08                	sub rdx, 8
 13665 00008CEC EBE7                    	jmp .L_tc_recycle_frame_loop_052e
 13666                                  .L_tc_recycle_frame_done_052e:
 13667 00008CEE 488D6308                	lea rsp, [rbx + 8]
 13668 00008CF2 5D                      	pop rbp
 13669 00008CF3 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13670                                  .L_if_end_02e6:
 13671                                  .L_if_end_02e7:
 13672                                  .L_if_end_02e8:
 13673 00008CF6 EB51                    	jmp .L_if_end_02e9
 13674                                  .L_if_else_02e9:
 13675                                  	; preparing a tail-call
 13676 00008CF8 6A00                    	push 0	; arg count
 13677 00008CFA 488B4510                	mov rax, ENV
 13678 00008CFE 488B00                  	mov rax, qword [rax + 8 * 0]
 13679 00008D01 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 13680 00008D04 803804                  	cmp byte [rax], T_closure
 13681 00008D07 0F8530C40000            	jne L_error_non_closure
 13682 00008D0D FF7001                  	push SOB_CLOSURE_ENV(rax)
 13683                                  
 13684                                  	; recycling the current frame
 13685 00008D10 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 13686 00008D13 FF7500                  	push qword [rbp]	; old frame-pointer
 13687 00008D16 B904000000              	mov rcx, 4
 13688 00008D1B 488B5D18                	mov rbx, COUNT
 13689 00008D1F 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 13690 00008D24 488D55F8                	lea rdx, [rbp - 8]
 13691                                  .L_tc_recycle_frame_loop_052f:
 13692 00008D28 4883F900                	cmp rcx, 0
 13693 00008D2C 7413                    	je .L_tc_recycle_frame_done_052f
 13694 00008D2E 488B32                  	mov rsi, qword [rdx]
 13695 00008D31 488933                  	mov qword [rbx], rsi
 13696 00008D34 48FFC9                  	dec rcx
 13697 00008D37 4883EB08                	sub rbx, 8
 13698 00008D3B 4883EA08                	sub rdx, 8
 13699 00008D3F EBE7                    	jmp .L_tc_recycle_frame_loop_052f
 13700                                  .L_tc_recycle_frame_done_052f:
 13701 00008D41 488D6308                	lea rsp, [rbx + 8]
 13702 00008D45 5D                      	pop rbp
 13703 00008D46 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13704                                  .L_if_end_02e9:
 13705                                  .L_if_end_02ea:
 13706                                  .L_if_end_02eb:
 13707 00008D49 C9                      	leave
 13708 00008D4A C22000                  	ret AND_KILL_FRAME(2)
 13709                                  .L_lambda_simple_end_03e6:	; new closure is in rax
 13710 00008D4D 50                      	push rax
 13711 00008D4E 6A01                    	push 1	; arg count
 13712 00008D50 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 13713 00008D55 E88CC40000              	call malloc
 13714 00008D5A 50                      	push rax
 13715 00008D5B BF08000000              	mov rdi, 8 * 1	; new rib
 13716 00008D60 E881C40000              	call malloc
 13717 00008D65 50                      	push rax
 13718 00008D66 BF10000000              	mov rdi, 8 * 2	; extended env
 13719 00008D6B E876C40000              	call malloc
 13720 00008D70 488B7D10                	mov rdi, ENV
 13721 00008D74 BE00000000              	mov rsi, 0
 13722 00008D79 BA01000000              	mov rdx, 1
 13723                                  .L_lambda_simple_env_loop_03e7:	; ext_env[i + 1] <-- env[i]
 13724 00008D7E 4883FE01                	cmp rsi, 1
 13725 00008D82 7410                    	je .L_lambda_simple_env_end_03e7
 13726 00008D84 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 13727 00008D88 48890CD0                	mov qword [rax + 8 * rdx], rcx
 13728 00008D8C 48FFC6                  	inc rsi
 13729 00008D8F 48FFC2                  	inc rdx
 13730 00008D92 EBEA                    	jmp .L_lambda_simple_env_loop_03e7
 13731                                  .L_lambda_simple_env_end_03e7:
 13732 00008D94 5B                      	pop rbx
 13733 00008D95 BE00000000              	mov rsi, 0
 13734                                  .L_lambda_simple_params_loop_03e7:	; copy params
 13735 00008D9A 4883FE01                	cmp rsi, 1
 13736 00008D9E 740E                    	je .L_lambda_simple_params_end_03e7
 13737 00008DA0 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 13738 00008DA5 488914F3                	mov qword [rbx + 8 * rsi], rdx
 13739 00008DA9 48FFC6                  	inc rsi
 13740 00008DAC EBEC                    	jmp .L_lambda_simple_params_loop_03e7
 13741                                  .L_lambda_simple_params_end_03e7:
 13742 00008DAE 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 13743 00008DB1 4889C3                  	mov rbx, rax
 13744 00008DB4 58                      	pop rax
 13745 00008DB5 C60004                  	mov byte [rax], T_closure
 13746 00008DB8 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 13747 00008DBC 48C74009[C98D0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03e7
 13748 00008DC4 E986030000              	jmp .L_lambda_simple_end_03e7
 13749                                  .L_lambda_simple_code_03e7:	; lambda-simple body
 13750 00008DC9 48837C241001            	cmp qword [rsp + 8 * 2], 1
 13751 00008DCF 740B                    	je .L_lambda_simple_arity_check_ok_03e7
 13752 00008DD1 FF742410                	push qword [rsp + 8 * 2]
 13753 00008DD5 6A01                    	push 1
 13754 00008DD7 E9C3C30000              	jmp L_error_incorrect_arity_simple
 13755                                  .L_lambda_simple_arity_check_ok_03e7:
 13756 00008DDC C8000000                	enter 0, 0
 13757 00008DE0 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 13758 00008DE5 E8FCC30000              	call malloc
 13759 00008DEA 50                      	push rax
 13760 00008DEB BF08000000              	mov rdi, 8 * 1	; new rib
 13761 00008DF0 E8F1C30000              	call malloc
 13762 00008DF5 50                      	push rax
 13763 00008DF6 BF18000000              	mov rdi, 8 * 3	; extended env
 13764 00008DFB E8E6C30000              	call malloc
 13765 00008E00 488B7D10                	mov rdi, ENV
 13766 00008E04 BE00000000              	mov rsi, 0
 13767 00008E09 BA01000000              	mov rdx, 1
 13768                                  .L_lambda_opt_env_loop_0086:	; ext_env[i + 1] <-- env[i]
 13769 00008E0E 4883FE02                	cmp rsi, 2
 13770 00008E12 7410                    	je .L_lambda_opt_env_end_0086
 13771 00008E14 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 13772 00008E18 48890CD0                	mov qword [rax + 8 * rdx], rcx
 13773 00008E1C 48FFC6                  	inc rsi
 13774 00008E1F 48FFC2                  	inc rdx
 13775 00008E22 EBEA                    	jmp .L_lambda_opt_env_loop_0086
 13776                                  .L_lambda_opt_env_end_0086:
 13777 00008E24 5B                      	pop rbx
 13778 00008E25 BE00000000              	mov rsi, 0
 13779                                  .L_lambda_opt_params_loop_0086:	; copy params
 13780 00008E2A 4883FE01                	cmp rsi, 1
 13781 00008E2E 740E                    	je .L_lambda_opt_params_end_0086
 13782 00008E30 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 13783 00008E35 488914F3                	mov qword [rbx + 8 * rsi], rdx
 13784 00008E39 48FFC6                  	inc rsi
 13785 00008E3C EBEC                    	jmp .L_lambda_opt_params_loop_0086
 13786                                  .L_lambda_opt_params_end_0086:
 13787 00008E3E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 13788 00008E41 4889C3                  	mov rbx, rax
 13789 00008E44 58                      	pop rax
 13790 00008E45 C60004                  	mov byte [rax], T_closure
 13791 00008E48 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 13792 00008E4C 48C74009[598E0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0086
 13793 00008E54 E9F2020000              	jmp .L_lambda_opt_end_0086
 13794                                  .L_lambda_opt_code_0086:	; lambda-simple body
 13795 00008E59 48837C241001            	cmp qword [rsp + 8 * 2], 1 ;	 check num of args
 13796 00008E5F 740D                    	je .L_lambda_opt_arity_check_exact_0086 ;	 if equal, go to exact arity
 13797 00008E61 7F42                    	jg .L_lambda_opt_arity_check_more_0086 ;	 if greater than, go to arity more
 13798 00008E63 FF742410                	push qword [rsp + 8 * 2] ;	 else, throw opt arity error
 13799 00008E67 6A01                    	push 1
 13800 00008E69 E945C30000              	jmp L_error_incorrect_arity_opt
 13801                                  .L_lambda_opt_arity_check_exact_0086:
 13802 00008E6E 488B442410              	mov rax, qword [rsp + 8 * 2] ;	 number of args
 13803 00008E73 488D5CC410              	lea rbx, [rsp + 8 * (2 + rax)] ;	 address of last element
 13804 00008E78 4883EC08                	sub rsp, 8
 13805 00008E7C 488D0C24                	lea rcx, [rsp + 0] ;	 new start
 13806                                  .L_lambda_opt_shift_entry_0086:
 13807 00008E80 488B5108                	mov rdx, [rcx + 8]
 13808 00008E84 488911                  	mov [rcx], rdx
 13809 00008E87 4883C108                	add rcx, 8
 13810 00008E8B 4839CB                  	cmp rbx, rcx
 13811 00008E8E 75F0                    	jne .L_lambda_opt_shift_entry_0086
 13812                                  .L_lambda_opt_shift_exit_0086:
 13813 00008E90 48C703[01000000]        	mov qword[rbx], sob_nil ;	 place nil
 13814 00008E97 4883C001                	add rax, 1
 13815 00008E9B 4889442410              	mov qword [rsp + 8 * 2], rax
 13816 00008EA0 E987000000              	jmp .L_lambda_opt_stack_adjusted_0086
 13817                                  .L_lambda_opt_arity_check_more_0086:
 13818 00008EA5 48BA-                   	mov rdx, sob_nil ;	 base cdr
 13818 00008EA7 [0100000000000000] 
 13819 00008EAF 48837C241002            	cmp qword [rsp + 8 * 2], 2
 13820 00008EB5 7451                    	je .L_lambda_opt_stack_shrink_loop_exit_0086
 13821                                  .L_lambda_opt_stack_shrink_loop_0086:
 13822 00008EB7 BF11000000              	mov rdi, (1 + 8 + 8)
 13823 00008EBC E825C30000              	call malloc
 13824 00008EC1 C60021                  	mov byte[rax], T_pair
 13825 00008EC4 48895009                	mov SOB_PAIR_CDR(rax), rdx
 13826 00008EC8 4889C2                  	mov rdx, rax
 13827 00008ECB 488B442410              	mov rax, qword [rsp + 8 * 2]
 13828 00008ED0 488B5CC410              	mov rbx, qword [rsp + 8 * (2 + rax)]
 13829 00008ED5 48895A01                	mov SOB_PAIR_CAR(rdx), rbx
 13830 00008ED9 488D5CC408              	lea rbx, [rsp + 8 * (2 + rax - 1)]
 13831                                  .L_lambda_opt_extra_shift_process_0086:
 13832 00008EDE 488B0B                  	mov rcx, [rbx]
 13833 00008EE1 48894B08                	mov [rbx + 8], rcx
 13834 00008EE5 4883EB08                	sub rbx, 8
 13835 00008EE9 4839DC                  	cmp rsp, rbx
 13836 00008EEC 7EF0                    	jle .L_lambda_opt_extra_shift_process_0086
 13837                                  .L_lambda_opt_extra_shift_process_end_0086:
 13838 00008EEE 4883C408                	add rsp, 8
 13839 00008EF2 488B5C2410              	mov rbx, [rsp + 8 * 2]
 13840 00008EF7 4883EB01                	sub rbx, 1
 13841 00008EFB 48895C2410              	mov [rsp + 8 * 2], rbx
 13842 00008F00 48837C241002            	cmp qword [rsp + 8 * 2], 2
 13843 00008F06 7FAF                    	jg .L_lambda_opt_stack_shrink_loop_0086
 13844                                  .L_lambda_opt_stack_shrink_loop_exit_0086:
 13845 00008F08 488B4C2410              	mov rcx, [rsp + 8 * 2]
 13846 00008F0D 488B5CCC10              	mov rbx, qword [rsp + 8 * (2 + rcx)]
 13847 00008F12 BF11000000              	mov rdi, (1 + 8 + 8)
 13848 00008F17 E8CAC20000              	call malloc
 13849 00008F1C C60021                  	mov byte[rax], T_pair
 13850 00008F1F 48895009                	mov SOB_PAIR_CDR(rax), rdx
 13851 00008F23 48895801                	mov SOB_PAIR_CAR(rax), rbx
 13852 00008F27 488944CC10              	mov [rsp + 8 * (2 + rcx)], rax
 13853                                  .L_lambda_opt_stack_adjusted_0086:
 13854 00008F2C C8000000                	enter 0, 0
 13855                                  	; preparing a non-tail-call
 13856 00008F30 488B4528                	mov rax, PARAM(1)	; param s
 13857 00008F34 50                      	push rax
 13858 00008F35 6A01                    	push 1	; arg count
 13859 00008F37 488B0425[3C1B0000]      	mov rax, qword [free_var_126]	; free var null?
 13860 00008F3F 803805                  	cmp byte [rax], T_undefined
 13861 00008F42 0F8471C10000            	je L_error_fvar_undefined
 13862 00008F48 803804                  	cmp byte [rax], T_closure
 13863 00008F4B 0F85ECC10000            	jne L_error_non_closure
 13864 00008F51 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13865 00008F54 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13866 00008F57 483D[02000000]          	cmp rax, sob_boolean_false
 13867 00008F5D 7466                    	je .L_if_else_02ec
 13868                                  	; preparing a tail-call
 13869 00008F5F 488B4520                	mov rax, PARAM(0)	; param a
 13870 00008F63 50                      	push rax
 13871 00008F64 48B8-                   	mov rax, L_constants + 2810
 13871 00008F66 [FA0A000000000000] 
 13872 00008F6E 50                      	push rax
 13873 00008F6F 6A02                    	push 2	; arg count
 13874 00008F71 488B4510                	mov rax, ENV
 13875 00008F75 488B00                  	mov rax, qword [rax + 8 * 0]
 13876 00008F78 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin/
 13877 00008F7B 803804                  	cmp byte [rax], T_closure
 13878 00008F7E 0F85B9C10000            	jne L_error_non_closure
 13879 00008F84 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13880                                  
 13881                                  	; recycling the current frame
 13882 00008F87 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 13883 00008F8A FF7500                  	push qword [rbp]	; old frame-pointer
 13884 00008F8D B906000000              	mov rcx, 6
 13885 00008F92 488B5D18                	mov rbx, COUNT
 13886 00008F96 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 13887 00008F9B 488D55F8                	lea rdx, [rbp - 8]
 13888                                  .L_tc_recycle_frame_loop_0530:
 13889 00008F9F 4883F900                	cmp rcx, 0
 13890 00008FA3 7413                    	je .L_tc_recycle_frame_done_0530
 13891 00008FA5 488B32                  	mov rsi, qword [rdx]
 13892 00008FA8 488933                  	mov qword [rbx], rsi
 13893 00008FAB 48FFC9                  	dec rcx
 13894 00008FAE 4883EB08                	sub rbx, 8
 13895 00008FB2 4883EA08                	sub rdx, 8
 13896 00008FB6 EBE7                    	jmp .L_tc_recycle_frame_loop_0530
 13897                                  .L_tc_recycle_frame_done_0530:
 13898 00008FB8 488D6308                	lea rsp, [rbx + 8]
 13899 00008FBC 5D                      	pop rbp
 13900 00008FBD FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13901 00008FC0 E982010000              	jmp .L_if_end_02ec
 13902                                  .L_if_else_02ec:
 13903                                  	; preparing a tail-call
 13904                                  	; preparing a non-tail-call
 13905 00008FC5 488B4528                	mov rax, PARAM(1)	; param s
 13906 00008FC9 50                      	push rax
 13907 00008FCA 48B8-                   	mov rax, L_constants + 2810
 13907 00008FCC [FA0A000000000000] 
 13908 00008FD4 50                      	push rax
 13909 00008FD5 488B0425[DE120000]      	mov rax, qword [free_var_0]	; free var *
 13910 00008FDD 803805                  	cmp byte [rax], T_undefined
 13911 00008FE0 0F84D3C00000            	je L_error_fvar_undefined
 13912 00008FE6 50                      	push rax
 13913 00008FE7 6A03                    	push 3	; arg count
 13914 00008FE9 488B0425[1C190000]      	mov rax, qword [free_var_94]	; free var fold-left
 13915 00008FF1 803805                  	cmp byte [rax], T_undefined
 13916 00008FF4 0F84BFC00000            	je L_error_fvar_undefined
 13917 00008FFA 803804                  	cmp byte [rax], T_closure
 13918 00008FFD 0F853AC10000            	jne L_error_non_closure
 13919 00009003 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13920 00009006 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13921 00009009 50                      	push rax
 13922 0000900A 6A01                    	push 1	; arg count
 13923 0000900C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 13924 00009011 E8D0C10000              	call malloc
 13925 00009016 50                      	push rax
 13926 00009017 BF10000000              	mov rdi, 8 * 2	; new rib
 13927 0000901C E8C5C10000              	call malloc
 13928 00009021 50                      	push rax
 13929 00009022 BF20000000              	mov rdi, 8 * 4	; extended env
 13930 00009027 E8BAC10000              	call malloc
 13931 0000902C 488B7D10                	mov rdi, ENV
 13932 00009030 BE00000000              	mov rsi, 0
 13933 00009035 BA01000000              	mov rdx, 1
 13934                                  .L_lambda_simple_env_loop_03e8:	; ext_env[i + 1] <-- env[i]
 13935 0000903A 4883FE03                	cmp rsi, 3
 13936 0000903E 7410                    	je .L_lambda_simple_env_end_03e8
 13937 00009040 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 13938 00009044 48890CD0                	mov qword [rax + 8 * rdx], rcx
 13939 00009048 48FFC6                  	inc rsi
 13940 0000904B 48FFC2                  	inc rdx
 13941 0000904E EBEA                    	jmp .L_lambda_simple_env_loop_03e8
 13942                                  .L_lambda_simple_env_end_03e8:
 13943 00009050 5B                      	pop rbx
 13944 00009051 BE00000000              	mov rsi, 0
 13945                                  .L_lambda_simple_params_loop_03e8:	; copy params
 13946 00009056 4883FE02                	cmp rsi, 2
 13947 0000905A 740E                    	je .L_lambda_simple_params_end_03e8
 13948 0000905C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 13949 00009061 488914F3                	mov qword [rbx + 8 * rsi], rdx
 13950 00009065 48FFC6                  	inc rsi
 13951 00009068 EBEC                    	jmp .L_lambda_simple_params_loop_03e8
 13952                                  .L_lambda_simple_params_end_03e8:
 13953 0000906A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 13954 0000906D 4889C3                  	mov rbx, rax
 13955 00009070 58                      	pop rax
 13956 00009071 C60004                  	mov byte [rax], T_closure
 13957 00009074 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 13958 00009078 48C74009[85900000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03e8
 13959 00009080 E97D000000              	jmp .L_lambda_simple_end_03e8
 13960                                  .L_lambda_simple_code_03e8:	; lambda-simple body
 13961 00009085 48837C241001            	cmp qword [rsp + 8 * 2], 1
 13962 0000908B 740B                    	je .L_lambda_simple_arity_check_ok_03e8
 13963 0000908D FF742410                	push qword [rsp + 8 * 2]
 13964 00009091 6A01                    	push 1
 13965 00009093 E907C10000              	jmp L_error_incorrect_arity_simple
 13966                                  .L_lambda_simple_arity_check_ok_03e8:
 13967 00009098 C8000000                	enter 0, 0
 13968                                  	; preparing a tail-call
 13969 0000909C 488B4520                	mov rax, PARAM(0)	; param b
 13970 000090A0 50                      	push rax
 13971 000090A1 488B4510                	mov rax, ENV
 13972 000090A5 488B00                  	mov rax, qword [rax + 8 * 0]
 13973 000090A8 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var a
 13974 000090AB 50                      	push rax
 13975 000090AC 6A02                    	push 2	; arg count
 13976 000090AE 488B4510                	mov rax, ENV
 13977 000090B2 488B4008                	mov rax, qword [rax + 8 * 1]
 13978 000090B6 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin/
 13979 000090B9 803804                  	cmp byte [rax], T_closure
 13980 000090BC 0F857BC00000            	jne L_error_non_closure
 13981 000090C2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13982                                  
 13983                                  	; recycling the current frame
 13984 000090C5 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 13985 000090C8 FF7500                  	push qword [rbp]	; old frame-pointer
 13986 000090CB B906000000              	mov rcx, 6
 13987 000090D0 488B5D18                	mov rbx, COUNT
 13988 000090D4 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 13989 000090D9 488D55F8                	lea rdx, [rbp - 8]
 13990                                  .L_tc_recycle_frame_loop_0531:
 13991 000090DD 4883F900                	cmp rcx, 0
 13992 000090E1 7413                    	je .L_tc_recycle_frame_done_0531
 13993 000090E3 488B32                  	mov rsi, qword [rdx]
 13994 000090E6 488933                  	mov qword [rbx], rsi
 13995 000090E9 48FFC9                  	dec rcx
 13996 000090EC 4883EB08                	sub rbx, 8
 13997 000090F0 4883EA08                	sub rdx, 8
 13998 000090F4 EBE7                    	jmp .L_tc_recycle_frame_loop_0531
 13999                                  .L_tc_recycle_frame_done_0531:
 14000 000090F6 488D6308                	lea rsp, [rbx + 8]
 14001 000090FA 5D                      	pop rbp
 14002 000090FB FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14003 000090FE C9                      	leave
 14004 000090FF C21800                  	ret AND_KILL_FRAME(1)
 14005                                  .L_lambda_simple_end_03e8:	; new closure is in rax
 14006 00009102 803804                  	cmp byte [rax], T_closure
 14007 00009105 0F8532C00000            	jne L_error_non_closure
 14008 0000910B FF7001                  	push SOB_CLOSURE_ENV(rax)
 14009                                  
 14010                                  	; recycling the current frame
 14011 0000910E FF7508                  	push qword [rbp + 8 * 1]	; old return address
 14012 00009111 FF7500                  	push qword [rbp]	; old frame-pointer
 14013 00009114 B905000000              	mov rcx, 5
 14014 00009119 488B5D18                	mov rbx, COUNT
 14015 0000911D 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 14016 00009122 488D55F8                	lea rdx, [rbp - 8]
 14017                                  .L_tc_recycle_frame_loop_0532:
 14018 00009126 4883F900                	cmp rcx, 0
 14019 0000912A 7413                    	je .L_tc_recycle_frame_done_0532
 14020 0000912C 488B32                  	mov rsi, qword [rdx]
 14021 0000912F 488933                  	mov qword [rbx], rsi
 14022 00009132 48FFC9                  	dec rcx
 14023 00009135 4883EB08                	sub rbx, 8
 14024 00009139 4883EA08                	sub rdx, 8
 14025 0000913D EBE7                    	jmp .L_tc_recycle_frame_loop_0532
 14026                                  .L_tc_recycle_frame_done_0532:
 14027 0000913F 488D6308                	lea rsp, [rbx + 8]
 14028 00009143 5D                      	pop rbp
 14029 00009144 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14030                                  .L_if_end_02ec:
 14031 00009147 C9                      	leave
 14032 00009148 C22000                  	ret AND_KILL_FRAME(2)
 14033                                  .L_lambda_opt_end_0086:	; new closure is in rax
 14034 0000914B C9                      	leave
 14035 0000914C C21800                  	ret AND_KILL_FRAME(1)
 14036                                  .L_lambda_simple_end_03e7:	; new closure is in rax
 14037 0000914F 803804                  	cmp byte [rax], T_closure
 14038 00009152 0F85E5BF0000            	jne L_error_non_closure
 14039 00009158 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14040                                  
 14041                                  	; recycling the current frame
 14042 0000915B FF7508                  	push qword [rbp + 8 * 1]	; old return address
 14043 0000915E FF7500                  	push qword [rbp]	; old frame-pointer
 14044 00009161 B905000000              	mov rcx, 5
 14045 00009166 488B5D18                	mov rbx, COUNT
 14046 0000916A 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 14047 0000916F 488D55F8                	lea rdx, [rbp - 8]
 14048                                  .L_tc_recycle_frame_loop_0533:
 14049 00009173 4883F900                	cmp rcx, 0
 14050 00009177 7413                    	je .L_tc_recycle_frame_done_0533
 14051 00009179 488B32                  	mov rsi, qword [rdx]
 14052 0000917C 488933                  	mov qword [rbx], rsi
 14053 0000917F 48FFC9                  	dec rcx
 14054 00009182 4883EB08                	sub rbx, 8
 14055 00009186 4883EA08                	sub rdx, 8
 14056 0000918A EBE7                    	jmp .L_tc_recycle_frame_loop_0533
 14057                                  .L_tc_recycle_frame_done_0533:
 14058 0000918C 488D6308                	lea rsp, [rbx + 8]
 14059 00009190 5D                      	pop rbp
 14060 00009191 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14061 00009194 C9                      	leave
 14062 00009195 C21800                  	ret AND_KILL_FRAME(1)
 14063                                  .L_lambda_simple_end_03e5:	; new closure is in rax
 14064 00009198 803804                  	cmp byte [rax], T_closure
 14065 0000919B 0F859CBF0000            	jne L_error_non_closure
 14066 000091A1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14067 000091A4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14068 000091A7 48890425[11130000]      	mov qword [free_var_3], rax
 14069 000091AF 48B8-                   	mov rax, sob_void
 14069 000091B1 [0000000000000000] 
 14070                                  
 14071 000091B9 4889C7                  	mov rdi, rax
 14072 000091BC E87AC20000              	call print_sexpr_if_not_void
 14073                                  
 14074 000091C1 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 14075 000091C6 E81BC00000              	call malloc
 14076 000091CB 50                      	push rax
 14077 000091CC BF00000000              	mov rdi, 8 * 0	; new rib
 14078 000091D1 E810C00000              	call malloc
 14079 000091D6 50                      	push rax
 14080 000091D7 BF08000000              	mov rdi, 8 * 1	; extended env
 14081 000091DC E805C00000              	call malloc
 14082 000091E1 488B7D10                	mov rdi, ENV
 14083 000091E5 BE00000000              	mov rsi, 0
 14084 000091EA BA01000000              	mov rdx, 1
 14085                                  .L_lambda_simple_env_loop_03e9:	; ext_env[i + 1] <-- env[i]
 14086 000091EF 4883FE00                	cmp rsi, 0
 14087 000091F3 7410                    	je .L_lambda_simple_env_end_03e9
 14088 000091F5 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 14089 000091F9 48890CD0                	mov qword [rax + 8 * rdx], rcx
 14090 000091FD 48FFC6                  	inc rsi
 14091 00009200 48FFC2                  	inc rdx
 14092 00009203 EBEA                    	jmp .L_lambda_simple_env_loop_03e9
 14093                                  .L_lambda_simple_env_end_03e9:
 14094 00009205 5B                      	pop rbx
 14095 00009206 BE00000000              	mov rsi, 0
 14096                                  .L_lambda_simple_params_loop_03e9:	; copy params
 14097 0000920B 4883FE00                	cmp rsi, 0
 14098 0000920F 740E                    	je .L_lambda_simple_params_end_03e9
 14099 00009211 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 14100 00009216 488914F3                	mov qword [rbx + 8 * rsi], rdx
 14101 0000921A 48FFC6                  	inc rsi
 14102 0000921D EBEC                    	jmp .L_lambda_simple_params_loop_03e9
 14103                                  .L_lambda_simple_params_end_03e9:
 14104 0000921F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 14105 00009222 4889C3                  	mov rbx, rax
 14106 00009225 58                      	pop rax
 14107 00009226 C60004                  	mov byte [rax], T_closure
 14108 00009229 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 14109 0000922D 48C74009[3A920000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03e9
 14110 00009235 E90C010000              	jmp .L_lambda_simple_end_03e9
 14111                                  .L_lambda_simple_code_03e9:	; lambda-simple body
 14112 0000923A 48837C241001            	cmp qword [rsp + 8 * 2], 1
 14113 00009240 740B                    	je .L_lambda_simple_arity_check_ok_03e9
 14114 00009242 FF742410                	push qword [rsp + 8 * 2]
 14115 00009246 6A01                    	push 1
 14116 00009248 E952BF0000              	jmp L_error_incorrect_arity_simple
 14117                                  .L_lambda_simple_arity_check_ok_03e9:
 14118 0000924D C8000000                	enter 0, 0
 14119                                  	; preparing a non-tail-call
 14120 00009251 488B4520                	mov rax, PARAM(0)	; param n
 14121 00009255 50                      	push rax
 14122 00009256 6A01                    	push 1	; arg count
 14123 00009258 488B0425[E31E0000]      	mov rax, qword [free_var_181]	; free var zero?
 14124 00009260 803805                  	cmp byte [rax], T_undefined
 14125 00009263 0F8450BE0000            	je L_error_fvar_undefined
 14126 00009269 803804                  	cmp byte [rax], T_closure
 14127 0000926C 0F85CBBE0000            	jne L_error_non_closure
 14128 00009272 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14129 00009275 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14130 00009278 483D[02000000]          	cmp rax, sob_boolean_false
 14131 0000927E 740F                    	je .L_if_else_02ed
 14132 00009280 48B8-                   	mov rax, L_constants + 2810
 14132 00009282 [FA0A000000000000] 
 14133 0000928A E9B3000000              	jmp .L_if_end_02ed
 14134                                  .L_if_else_02ed:
 14135                                  	; preparing a tail-call
 14136                                  	; preparing a non-tail-call
 14137                                  	; preparing a non-tail-call
 14138 0000928F 48B8-                   	mov rax, L_constants + 2810
 14138 00009291 [FA0A000000000000] 
 14139 00009299 50                      	push rax
 14140 0000929A 488B4520                	mov rax, PARAM(0)	; param n
 14141 0000929E 50                      	push rax
 14142 0000929F 6A02                    	push 2	; arg count
 14143 000092A1 488B0425[00130000]      	mov rax, qword [free_var_2]	; free var -
 14144 000092A9 803805                  	cmp byte [rax], T_undefined
 14145 000092AC 0F8407BE0000            	je L_error_fvar_undefined
 14146 000092B2 803804                  	cmp byte [rax], T_closure
 14147 000092B5 0F8582BE0000            	jne L_error_non_closure
 14148 000092BB FF7001                  	push SOB_CLOSURE_ENV(rax)
 14149 000092BE FF5009                  	call SOB_CLOSURE_CODE(rax)
 14150 000092C1 50                      	push rax
 14151 000092C2 6A01                    	push 1	; arg count
 14152 000092C4 488B0425[0B190000]      	mov rax, qword [free_var_93]	; free var fact
 14153 000092CC 803805                  	cmp byte [rax], T_undefined
 14154 000092CF 0F84E4BD0000            	je L_error_fvar_undefined
 14155 000092D5 803804                  	cmp byte [rax], T_closure
 14156 000092D8 0F855FBE0000            	jne L_error_non_closure
 14157 000092DE FF7001                  	push SOB_CLOSURE_ENV(rax)
 14158 000092E1 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14159 000092E4 50                      	push rax
 14160 000092E5 488B4520                	mov rax, PARAM(0)	; param n
 14161 000092E9 50                      	push rax
 14162 000092EA 6A02                    	push 2	; arg count
 14163 000092EC 488B0425[DE120000]      	mov rax, qword [free_var_0]	; free var *
 14164 000092F4 803805                  	cmp byte [rax], T_undefined
 14165 000092F7 0F84BCBD0000            	je L_error_fvar_undefined
 14166 000092FD 803804                  	cmp byte [rax], T_closure
 14167 00009300 0F8537BE0000            	jne L_error_non_closure
 14168 00009306 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14169                                  
 14170                                  	; recycling the current frame
 14171 00009309 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 14172 0000930C FF7500                  	push qword [rbp]	; old frame-pointer
 14173 0000930F B906000000              	mov rcx, 6
 14174 00009314 488B5D18                	mov rbx, COUNT
 14175 00009318 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 14176 0000931D 488D55F8                	lea rdx, [rbp - 8]
 14177                                  .L_tc_recycle_frame_loop_0534:
 14178 00009321 4883F900                	cmp rcx, 0
 14179 00009325 7413                    	je .L_tc_recycle_frame_done_0534
 14180 00009327 488B32                  	mov rsi, qword [rdx]
 14181 0000932A 488933                  	mov qword [rbx], rsi
 14182 0000932D 48FFC9                  	dec rcx
 14183 00009330 4883EB08                	sub rbx, 8
 14184 00009334 4883EA08                	sub rdx, 8
 14185 00009338 EBE7                    	jmp .L_tc_recycle_frame_loop_0534
 14186                                  .L_tc_recycle_frame_done_0534:
 14187 0000933A 488D6308                	lea rsp, [rbx + 8]
 14188 0000933E 5D                      	pop rbp
 14189 0000933F FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14190                                  .L_if_end_02ed:
 14191 00009342 C9                      	leave
 14192 00009343 C21800                  	ret AND_KILL_FRAME(1)
 14193                                  .L_lambda_simple_end_03e9:	; new closure is in rax
 14194 00009346 48890425[0B190000]      	mov qword [free_var_93], rax
 14195 0000934E 48B8-                   	mov rax, sob_void
 14195 00009350 [0000000000000000] 
 14196                                  
 14197 00009358 4889C7                  	mov rdi, rax
 14198 0000935B E8DBC00000              	call print_sexpr_if_not_void
 14199                                  
 14200 00009360 48B8-                   	mov rax, L_constants + 0
 14200 00009362 [0000000000000000] 
 14201 0000936A 48890425[22130000]      	mov qword [free_var_4], rax
 14202 00009372 48B8-                   	mov rax, sob_void
 14202 00009374 [0000000000000000] 
 14203                                  
 14204 0000937C 4889C7                  	mov rdi, rax
 14205 0000937F E8B7C00000              	call print_sexpr_if_not_void
 14206                                  
 14207 00009384 48B8-                   	mov rax, L_constants + 0
 14207 00009386 [0000000000000000] 
 14208 0000938E 48890425[33130000]      	mov qword [free_var_5], rax
 14209 00009396 48B8-                   	mov rax, sob_void
 14209 00009398 [0000000000000000] 
 14210                                  
 14211 000093A0 4889C7                  	mov rdi, rax
 14212 000093A3 E893C00000              	call print_sexpr_if_not_void
 14213                                  
 14214 000093A8 48B8-                   	mov rax, L_constants + 0
 14214 000093AA [0000000000000000] 
 14215 000093B2 48890425[55130000]      	mov qword [free_var_7], rax
 14216 000093BA 48B8-                   	mov rax, sob_void
 14216 000093BC [0000000000000000] 
 14217                                  
 14218 000093C4 4889C7                  	mov rdi, rax
 14219 000093C7 E86FC00000              	call print_sexpr_if_not_void
 14220                                  
 14221 000093CC 48B8-                   	mov rax, L_constants + 0
 14221 000093CE [0000000000000000] 
 14222 000093D6 48890425[66130000]      	mov qword [free_var_8], rax
 14223 000093DE 48B8-                   	mov rax, sob_void
 14223 000093E0 [0000000000000000] 
 14224                                  
 14225 000093E8 4889C7                  	mov rdi, rax
 14226 000093EB E84BC00000              	call print_sexpr_if_not_void
 14227                                  
 14228 000093F0 48B8-                   	mov rax, L_constants + 0
 14228 000093F2 [0000000000000000] 
 14229 000093FA 48890425[44130000]      	mov qword [free_var_6], rax
 14230 00009402 48B8-                   	mov rax, sob_void
 14230 00009404 [0000000000000000] 
 14231                                  
 14232 0000940C 4889C7                  	mov rdi, rax
 14233 0000940F E827C00000              	call print_sexpr_if_not_void
 14234                                  
 14235                                  	; preparing a non-tail-call
 14236 00009414 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 14237 00009419 E8C8BD0000              	call malloc
 14238 0000941E 50                      	push rax
 14239 0000941F BF00000000              	mov rdi, 8 * 0	; new rib
 14240 00009424 E8BDBD0000              	call malloc
 14241 00009429 50                      	push rax
 14242 0000942A BF08000000              	mov rdi, 8 * 1	; extended env
 14243 0000942F E8B2BD0000              	call malloc
 14244 00009434 488B7D10                	mov rdi, ENV
 14245 00009438 BE00000000              	mov rsi, 0
 14246 0000943D BA01000000              	mov rdx, 1
 14247                                  .L_lambda_simple_env_loop_03ea:	; ext_env[i + 1] <-- env[i]
 14248 00009442 4883FE00                	cmp rsi, 0
 14249 00009446 7410                    	je .L_lambda_simple_env_end_03ea
 14250 00009448 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 14251 0000944C 48890CD0                	mov qword [rax + 8 * rdx], rcx
 14252 00009450 48FFC6                  	inc rsi
 14253 00009453 48FFC2                  	inc rdx
 14254 00009456 EBEA                    	jmp .L_lambda_simple_env_loop_03ea
 14255                                  .L_lambda_simple_env_end_03ea:
 14256 00009458 5B                      	pop rbx
 14257 00009459 BE00000000              	mov rsi, 0
 14258                                  .L_lambda_simple_params_loop_03ea:	; copy params
 14259 0000945E 4883FE00                	cmp rsi, 0
 14260 00009462 740E                    	je .L_lambda_simple_params_end_03ea
 14261 00009464 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 14262 00009469 488914F3                	mov qword [rbx + 8 * rsi], rdx
 14263 0000946D 48FFC6                  	inc rsi
 14264 00009470 EBEC                    	jmp .L_lambda_simple_params_loop_03ea
 14265                                  .L_lambda_simple_params_end_03ea:
 14266 00009472 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 14267 00009475 4889C3                  	mov rbx, rax
 14268 00009478 58                      	pop rax
 14269 00009479 C60004                  	mov byte [rax], T_closure
 14270 0000947C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 14271 00009480 48C74009[8D940000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03ea
 14272 00009488 E989000000              	jmp .L_lambda_simple_end_03ea
 14273                                  .L_lambda_simple_code_03ea:	; lambda-simple body
 14274 0000948D 48837C241000            	cmp qword [rsp + 8 * 2], 0
 14275 00009493 740B                    	je .L_lambda_simple_arity_check_ok_03ea
 14276 00009495 FF742410                	push qword [rsp + 8 * 2]
 14277 00009499 6A00                    	push 0
 14278 0000949B E9FFBC0000              	jmp L_error_incorrect_arity_simple
 14279                                  .L_lambda_simple_arity_check_ok_03ea:
 14280 000094A0 C8000000                	enter 0, 0
 14281                                  	; preparing a tail-call
 14282 000094A4 48B8-                   	mov rax, L_constants + 3119
 14282 000094A6 [2F0C000000000000] 
 14283 000094AE 50                      	push rax
 14284 000094AF 48B8-                   	mov rax, L_constants + 3110
 14284 000094B1 [260C000000000000] 
 14285 000094B9 50                      	push rax
 14286 000094BA 6A02                    	push 2	; arg count
 14287 000094BC 488B0425[D8180000]      	mov rax, qword [free_var_90]	; free var error
 14288 000094C4 803805                  	cmp byte [rax], T_undefined
 14289 000094C7 0F84ECBB0000            	je L_error_fvar_undefined
 14290 000094CD 803804                  	cmp byte [rax], T_closure
 14291 000094D0 0F8567BC0000            	jne L_error_non_closure
 14292 000094D6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14293                                  
 14294                                  	; recycling the current frame
 14295 000094D9 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 14296 000094DC FF7500                  	push qword [rbp]	; old frame-pointer
 14297 000094DF B906000000              	mov rcx, 6
 14298 000094E4 488B5D18                	mov rbx, COUNT
 14299 000094E8 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 14300 000094ED 488D55F8                	lea rdx, [rbp - 8]
 14301                                  .L_tc_recycle_frame_loop_0535:
 14302 000094F1 4883F900                	cmp rcx, 0
 14303 000094F5 7413                    	je .L_tc_recycle_frame_done_0535
 14304 000094F7 488B32                  	mov rsi, qword [rdx]
 14305 000094FA 488933                  	mov qword [rbx], rsi
 14306 000094FD 48FFC9                  	dec rcx
 14307 00009500 4883EB08                	sub rbx, 8
 14308 00009504 4883EA08                	sub rdx, 8
 14309 00009508 EBE7                    	jmp .L_tc_recycle_frame_loop_0535
 14310                                  .L_tc_recycle_frame_done_0535:
 14311 0000950A 488D6308                	lea rsp, [rbx + 8]
 14312 0000950E 5D                      	pop rbp
 14313 0000950F FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14314 00009512 C9                      	leave
 14315 00009513 C21000                  	ret AND_KILL_FRAME(0)
 14316                                  .L_lambda_simple_end_03ea:	; new closure is in rax
 14317 00009516 50                      	push rax
 14318 00009517 6A01                    	push 1	; arg count
 14319 00009519 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 14320 0000951E E8C3BC0000              	call malloc
 14321 00009523 50                      	push rax
 14322 00009524 BF00000000              	mov rdi, 8 * 0	; new rib
 14323 00009529 E8B8BC0000              	call malloc
 14324 0000952E 50                      	push rax
 14325 0000952F BF08000000              	mov rdi, 8 * 1	; extended env
 14326 00009534 E8ADBC0000              	call malloc
 14327 00009539 488B7D10                	mov rdi, ENV
 14328 0000953D BE00000000              	mov rsi, 0
 14329 00009542 BA01000000              	mov rdx, 1
 14330                                  .L_lambda_simple_env_loop_03eb:	; ext_env[i + 1] <-- env[i]
 14331 00009547 4883FE00                	cmp rsi, 0
 14332 0000954B 7410                    	je .L_lambda_simple_env_end_03eb
 14333 0000954D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 14334 00009551 48890CD0                	mov qword [rax + 8 * rdx], rcx
 14335 00009555 48FFC6                  	inc rsi
 14336 00009558 48FFC2                  	inc rdx
 14337 0000955B EBEA                    	jmp .L_lambda_simple_env_loop_03eb
 14338                                  .L_lambda_simple_env_end_03eb:
 14339 0000955D 5B                      	pop rbx
 14340 0000955E BE00000000              	mov rsi, 0
 14341                                  .L_lambda_simple_params_loop_03eb:	; copy params
 14342 00009563 4883FE00                	cmp rsi, 0
 14343 00009567 740E                    	je .L_lambda_simple_params_end_03eb
 14344 00009569 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 14345 0000956E 488914F3                	mov qword [rbx + 8 * rsi], rdx
 14346 00009572 48FFC6                  	inc rsi
 14347 00009575 EBEC                    	jmp .L_lambda_simple_params_loop_03eb
 14348                                  .L_lambda_simple_params_end_03eb:
 14349 00009577 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 14350 0000957A 4889C3                  	mov rbx, rax
 14351 0000957D 58                      	pop rax
 14352 0000957E C60004                  	mov byte [rax], T_closure
 14353 00009581 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 14354 00009585 48C74009[92950000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03eb
 14355 0000958D E925190000              	jmp .L_lambda_simple_end_03eb
 14356                                  .L_lambda_simple_code_03eb:	; lambda-simple body
 14357 00009592 48837C241001            	cmp qword [rsp + 8 * 2], 1
 14358 00009598 740B                    	je .L_lambda_simple_arity_check_ok_03eb
 14359 0000959A FF742410                	push qword [rsp + 8 * 2]
 14360 0000959E 6A01                    	push 1
 14361 000095A0 E9FABB0000              	jmp L_error_incorrect_arity_simple
 14362                                  .L_lambda_simple_arity_check_ok_03eb:
 14363 000095A5 C8000000                	enter 0, 0
 14364                                  	; preparing a tail-call
 14365 000095A9 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 14366 000095AE E833BC0000              	call malloc
 14367 000095B3 50                      	push rax
 14368 000095B4 BF08000000              	mov rdi, 8 * 1	; new rib
 14369 000095B9 E828BC0000              	call malloc
 14370 000095BE 50                      	push rax
 14371 000095BF BF10000000              	mov rdi, 8 * 2	; extended env
 14372 000095C4 E81DBC0000              	call malloc
 14373 000095C9 488B7D10                	mov rdi, ENV
 14374 000095CD BE00000000              	mov rsi, 0
 14375 000095D2 BA01000000              	mov rdx, 1
 14376                                  .L_lambda_simple_env_loop_03ec:	; ext_env[i + 1] <-- env[i]
 14377 000095D7 4883FE01                	cmp rsi, 1
 14378 000095DB 7410                    	je .L_lambda_simple_env_end_03ec
 14379 000095DD 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 14380 000095E1 48890CD0                	mov qword [rax + 8 * rdx], rcx
 14381 000095E5 48FFC6                  	inc rsi
 14382 000095E8 48FFC2                  	inc rdx
 14383 000095EB EBEA                    	jmp .L_lambda_simple_env_loop_03ec
 14384                                  .L_lambda_simple_env_end_03ec:
 14385 000095ED 5B                      	pop rbx
 14386 000095EE BE00000000              	mov rsi, 0
 14387                                  .L_lambda_simple_params_loop_03ec:	; copy params
 14388 000095F3 4883FE01                	cmp rsi, 1
 14389 000095F7 740E                    	je .L_lambda_simple_params_end_03ec
 14390 000095F9 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 14391 000095FE 488914F3                	mov qword [rbx + 8 * rsi], rdx
 14392 00009602 48FFC6                  	inc rsi
 14393 00009605 EBEC                    	jmp .L_lambda_simple_params_loop_03ec
 14394                                  .L_lambda_simple_params_end_03ec:
 14395 00009607 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 14396 0000960A 4889C3                  	mov rbx, rax
 14397 0000960D 58                      	pop rax
 14398 0000960E C60004                  	mov byte [rax], T_closure
 14399 00009611 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 14400 00009615 48C74009[22960000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03ec
 14401 0000961D E98C080000              	jmp .L_lambda_simple_end_03ec
 14402                                  .L_lambda_simple_code_03ec:	; lambda-simple body
 14403 00009622 48837C241003            	cmp qword [rsp + 8 * 2], 3
 14404 00009628 740B                    	je .L_lambda_simple_arity_check_ok_03ec
 14405 0000962A FF742410                	push qword [rsp + 8 * 2]
 14406 0000962E 6A03                    	push 3
 14407 00009630 E96ABB0000              	jmp L_error_incorrect_arity_simple
 14408                                  .L_lambda_simple_arity_check_ok_03ec:
 14409 00009635 C8000000                	enter 0, 0
 14410 00009639 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 14411 0000963E E8A3BB0000              	call malloc
 14412 00009643 50                      	push rax
 14413 00009644 BF18000000              	mov rdi, 8 * 3	; new rib
 14414 00009649 E898BB0000              	call malloc
 14415 0000964E 50                      	push rax
 14416 0000964F BF18000000              	mov rdi, 8 * 3	; extended env
 14417 00009654 E88DBB0000              	call malloc
 14418 00009659 488B7D10                	mov rdi, ENV
 14419 0000965D BE00000000              	mov rsi, 0
 14420 00009662 BA01000000              	mov rdx, 1
 14421                                  .L_lambda_simple_env_loop_03ed:	; ext_env[i + 1] <-- env[i]
 14422 00009667 4883FE02                	cmp rsi, 2
 14423 0000966B 7410                    	je .L_lambda_simple_env_end_03ed
 14424 0000966D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 14425 00009671 48890CD0                	mov qword [rax + 8 * rdx], rcx
 14426 00009675 48FFC6                  	inc rsi
 14427 00009678 48FFC2                  	inc rdx
 14428 0000967B EBEA                    	jmp .L_lambda_simple_env_loop_03ed
 14429                                  .L_lambda_simple_env_end_03ed:
 14430 0000967D 5B                      	pop rbx
 14431 0000967E BE00000000              	mov rsi, 0
 14432                                  .L_lambda_simple_params_loop_03ed:	; copy params
 14433 00009683 4883FE03                	cmp rsi, 3
 14434 00009687 740E                    	je .L_lambda_simple_params_end_03ed
 14435 00009689 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 14436 0000968E 488914F3                	mov qword [rbx + 8 * rsi], rdx
 14437 00009692 48FFC6                  	inc rsi
 14438 00009695 EBEC                    	jmp .L_lambda_simple_params_loop_03ed
 14439                                  .L_lambda_simple_params_end_03ed:
 14440 00009697 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 14441 0000969A 4889C3                  	mov rbx, rax
 14442 0000969D 58                      	pop rax
 14443 0000969E C60004                  	mov byte [rax], T_closure
 14444 000096A1 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 14445 000096A5 48C74009[B2960000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03ed
 14446 000096AD E9F8070000              	jmp .L_lambda_simple_end_03ed
 14447                                  .L_lambda_simple_code_03ed:	; lambda-simple body
 14448 000096B2 48837C241002            	cmp qword [rsp + 8 * 2], 2
 14449 000096B8 740B                    	je .L_lambda_simple_arity_check_ok_03ed
 14450 000096BA FF742410                	push qword [rsp + 8 * 2]
 14451 000096BE 6A02                    	push 2
 14452 000096C0 E9DABA0000              	jmp L_error_incorrect_arity_simple
 14453                                  .L_lambda_simple_arity_check_ok_03ed:
 14454 000096C5 C8000000                	enter 0, 0
 14455                                  	; preparing a non-tail-call
 14456 000096C9 488B4520                	mov rax, PARAM(0)	; param a
 14457 000096CD 50                      	push rax
 14458 000096CE 6A01                    	push 1	; arg count
 14459 000096D0 488B0425[B5190000]      	mov rax, qword [free_var_103]	; free var integer?
 14460 000096D8 803805                  	cmp byte [rax], T_undefined
 14461 000096DB 0F84D8B90000            	je L_error_fvar_undefined
 14462 000096E1 803804                  	cmp byte [rax], T_closure
 14463 000096E4 0F8553BA0000            	jne L_error_non_closure
 14464 000096EA FF7001                  	push SOB_CLOSURE_ENV(rax)
 14465 000096ED FF5009                  	call SOB_CLOSURE_CODE(rax)
 14466 000096F0 483D[02000000]          	cmp rax, sob_boolean_false
 14467 000096F6 0F8451020000            	je .L_if_else_02f9
 14468                                  	; preparing a non-tail-call
 14469 000096FC 488B4528                	mov rax, PARAM(1)	; param b
 14470 00009700 50                      	push rax
 14471 00009701 6A01                    	push 1	; arg count
 14472 00009703 488B0425[B5190000]      	mov rax, qword [free_var_103]	; free var integer?
 14473 0000970B 803805                  	cmp byte [rax], T_undefined
 14474 0000970E 0F84A5B90000            	je L_error_fvar_undefined
 14475 00009714 803804                  	cmp byte [rax], T_closure
 14476 00009717 0F8520BA0000            	jne L_error_non_closure
 14477 0000971D FF7001                  	push SOB_CLOSURE_ENV(rax)
 14478 00009720 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14479 00009723 483D[02000000]          	cmp rax, sob_boolean_false
 14480 00009729 7460                    	je .L_if_else_02f0
 14481                                  	; preparing a tail-call
 14482 0000972B 488B4528                	mov rax, PARAM(1)	; param b
 14483 0000972F 50                      	push rax
 14484 00009730 488B4520                	mov rax, PARAM(0)	; param a
 14485 00009734 50                      	push rax
 14486 00009735 6A02                    	push 2	; arg count
 14487 00009737 488B4510                	mov rax, ENV
 14488 0000973B 488B00                  	mov rax, qword [rax + 8 * 0]
 14489 0000973E 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var comparator-zz
 14490 00009741 803804                  	cmp byte [rax], T_closure
 14491 00009744 0F85F3B90000            	jne L_error_non_closure
 14492 0000974A FF7001                  	push SOB_CLOSURE_ENV(rax)
 14493                                  
 14494                                  	; recycling the current frame
 14495 0000974D FF7508                  	push qword [rbp + 8 * 1]	; old return address
 14496 00009750 FF7500                  	push qword [rbp]	; old frame-pointer
 14497 00009753 B906000000              	mov rcx, 6
 14498 00009758 488B5D18                	mov rbx, COUNT
 14499 0000975C 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 14500 00009761 488D55F8                	lea rdx, [rbp - 8]
 14501                                  .L_tc_recycle_frame_loop_0536:
 14502 00009765 4883F900                	cmp rcx, 0
 14503 00009769 7413                    	je .L_tc_recycle_frame_done_0536
 14504 0000976B 488B32                  	mov rsi, qword [rdx]
 14505 0000976E 488933                  	mov qword [rbx], rsi
 14506 00009771 48FFC9                  	dec rcx
 14507 00009774 4883EB08                	sub rbx, 8
 14508 00009778 4883EA08                	sub rdx, 8
 14509 0000977C EBE7                    	jmp .L_tc_recycle_frame_loop_0536
 14510                                  .L_tc_recycle_frame_done_0536:
 14511 0000977E 488D6308                	lea rsp, [rbx + 8]
 14512 00009782 5D                      	pop rbp
 14513 00009783 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14514 00009786 E9BD010000              	jmp .L_if_end_02f0
 14515                                  .L_if_else_02f0:
 14516                                  	; preparing a non-tail-call
 14517 0000978B 488B4528                	mov rax, PARAM(1)	; param b
 14518 0000978F 50                      	push rax
 14519 00009790 6A01                    	push 1	; arg count
 14520 00009792 488B0425[4F190000]      	mov rax, qword [free_var_97]	; free var fraction?
 14521 0000979A 803805                  	cmp byte [rax], T_undefined
 14522 0000979D 0F8416B90000            	je L_error_fvar_undefined
 14523 000097A3 803804                  	cmp byte [rax], T_closure
 14524 000097A6 0F8591B90000            	jne L_error_non_closure
 14525 000097AC FF7001                  	push SOB_CLOSURE_ENV(rax)
 14526 000097AF FF5009                  	call SOB_CLOSURE_CODE(rax)
 14527 000097B2 483D[02000000]          	cmp rax, sob_boolean_false
 14528 000097B8 0F8484000000            	je .L_if_else_02ef
 14529                                  	; preparing a tail-call
 14530 000097BE 488B4528                	mov rax, PARAM(1)	; param b
 14531 000097C2 50                      	push rax
 14532                                  	; preparing a non-tail-call
 14533 000097C3 488B4520                	mov rax, PARAM(0)	; param a
 14534 000097C7 50                      	push rax
 14535 000097C8 6A01                    	push 1	; arg count
 14536 000097CA 488B0425[CB140000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
 14537 000097D2 803805                  	cmp byte [rax], T_undefined
 14538 000097D5 0F84DEB80000            	je L_error_fvar_undefined
 14539 000097DB 803804                  	cmp byte [rax], T_closure
 14540 000097DE 0F8559B90000            	jne L_error_non_closure
 14541 000097E4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14542 000097E7 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14543 000097EA 50                      	push rax
 14544 000097EB 6A02                    	push 2	; arg count
 14545 000097ED 488B4510                	mov rax, ENV
 14546 000097F1 488B00                  	mov rax, qword [rax + 8 * 0]
 14547 000097F4 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var comparator-qq
 14548 000097F8 803804                  	cmp byte [rax], T_closure
 14549 000097FB 0F853CB90000            	jne L_error_non_closure
 14550 00009801 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14551                                  
 14552                                  	; recycling the current frame
 14553 00009804 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 14554 00009807 FF7500                  	push qword [rbp]	; old frame-pointer
 14555 0000980A B906000000              	mov rcx, 6
 14556 0000980F 488B5D18                	mov rbx, COUNT
 14557 00009813 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 14558 00009818 488D55F8                	lea rdx, [rbp - 8]
 14559                                  .L_tc_recycle_frame_loop_0537:
 14560 0000981C 4883F900                	cmp rcx, 0
 14561 00009820 7413                    	je .L_tc_recycle_frame_done_0537
 14562 00009822 488B32                  	mov rsi, qword [rdx]
 14563 00009825 488933                  	mov qword [rbx], rsi
 14564 00009828 48FFC9                  	dec rcx
 14565 0000982B 4883EB08                	sub rbx, 8
 14566 0000982F 4883EA08                	sub rdx, 8
 14567 00009833 EBE7                    	jmp .L_tc_recycle_frame_loop_0537
 14568                                  .L_tc_recycle_frame_done_0537:
 14569 00009835 488D6308                	lea rsp, [rbx + 8]
 14570 00009839 5D                      	pop rbp
 14571 0000983A FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14572 0000983D E906010000              	jmp .L_if_end_02ef
 14573                                  .L_if_else_02ef:
 14574                                  	; preparing a non-tail-call
 14575 00009842 488B4528                	mov rax, PARAM(1)	; param b
 14576 00009846 50                      	push rax
 14577 00009847 6A01                    	push 1	; arg count
 14578 00009849 488B0425[2A1C0000]      	mov rax, qword [free_var_140]	; free var real?
 14579 00009851 803805                  	cmp byte [rax], T_undefined
 14580 00009854 0F845FB80000            	je L_error_fvar_undefined
 14581 0000985A 803804                  	cmp byte [rax], T_closure
 14582 0000985D 0F85DAB80000            	jne L_error_non_closure
 14583 00009863 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14584 00009866 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14585 00009869 483D[02000000]          	cmp rax, sob_boolean_false
 14586 0000986F 0F8481000000            	je .L_if_else_02ee
 14587                                  	; preparing a tail-call
 14588 00009875 488B4528                	mov rax, PARAM(1)	; param b
 14589 00009879 50                      	push rax
 14590                                  	; preparing a non-tail-call
 14591 0000987A 488B4520                	mov rax, PARAM(0)	; param a
 14592 0000987E 50                      	push rax
 14593 0000987F 6A01                    	push 1	; arg count
 14594 00009881 488B0425[A4190000]      	mov rax, qword [free_var_102]	; free var integer->real
 14595 00009889 803805                  	cmp byte [rax], T_undefined
 14596 0000988C 0F8427B80000            	je L_error_fvar_undefined
 14597 00009892 803804                  	cmp byte [rax], T_closure
 14598 00009895 0F85A2B80000            	jne L_error_non_closure
 14599 0000989B FF7001                  	push SOB_CLOSURE_ENV(rax)
 14600 0000989E FF5009                  	call SOB_CLOSURE_CODE(rax)
 14601 000098A1 50                      	push rax
 14602 000098A2 6A02                    	push 2	; arg count
 14603 000098A4 488B4510                	mov rax, ENV
 14604 000098A8 488B00                  	mov rax, qword [rax + 8 * 0]
 14605 000098AB 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var comparator-rr
 14606 000098AF 803804                  	cmp byte [rax], T_closure
 14607 000098B2 0F8585B80000            	jne L_error_non_closure
 14608 000098B8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14609                                  
 14610                                  	; recycling the current frame
 14611 000098BB FF7508                  	push qword [rbp + 8 * 1]	; old return address
 14612 000098BE FF7500                  	push qword [rbp]	; old frame-pointer
 14613 000098C1 B906000000              	mov rcx, 6
 14614 000098C6 488B5D18                	mov rbx, COUNT
 14615 000098CA 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 14616 000098CF 488D55F8                	lea rdx, [rbp - 8]
 14617                                  .L_tc_recycle_frame_loop_0538:
 14618 000098D3 4883F900                	cmp rcx, 0
 14619 000098D7 7413                    	je .L_tc_recycle_frame_done_0538
 14620 000098D9 488B32                  	mov rsi, qword [rdx]
 14621 000098DC 488933                  	mov qword [rbx], rsi
 14622 000098DF 48FFC9                  	dec rcx
 14623 000098E2 4883EB08                	sub rbx, 8
 14624 000098E6 4883EA08                	sub rdx, 8
 14625 000098EA EBE7                    	jmp .L_tc_recycle_frame_loop_0538
 14626                                  .L_tc_recycle_frame_done_0538:
 14627 000098EC 488D6308                	lea rsp, [rbx + 8]
 14628 000098F0 5D                      	pop rbp
 14629 000098F1 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14630 000098F4 EB52                    	jmp .L_if_end_02ee
 14631                                  .L_if_else_02ee:
 14632                                  	; preparing a tail-call
 14633 000098F6 6A00                    	push 0	; arg count
 14634 000098F8 488B4510                	mov rax, ENV
 14635 000098FC 488B4008                	mov rax, qword [rax + 8 * 1]
 14636 00009900 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var exit
 14637 00009903 803804                  	cmp byte [rax], T_closure
 14638 00009906 0F8531B80000            	jne L_error_non_closure
 14639 0000990C FF7001                  	push SOB_CLOSURE_ENV(rax)
 14640                                  
 14641                                  	; recycling the current frame
 14642 0000990F FF7508                  	push qword [rbp + 8 * 1]	; old return address
 14643 00009912 FF7500                  	push qword [rbp]	; old frame-pointer
 14644 00009915 B904000000              	mov rcx, 4
 14645 0000991A 488B5D18                	mov rbx, COUNT
 14646 0000991E 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 14647 00009923 488D55F8                	lea rdx, [rbp - 8]
 14648                                  .L_tc_recycle_frame_loop_0539:
 14649 00009927 4883F900                	cmp rcx, 0
 14650 0000992B 7413                    	je .L_tc_recycle_frame_done_0539
 14651 0000992D 488B32                  	mov rsi, qword [rdx]
 14652 00009930 488933                  	mov qword [rbx], rsi
 14653 00009933 48FFC9                  	dec rcx
 14654 00009936 4883EB08                	sub rbx, 8
 14655 0000993A 4883EA08                	sub rdx, 8
 14656 0000993E EBE7                    	jmp .L_tc_recycle_frame_loop_0539
 14657                                  .L_tc_recycle_frame_done_0539:
 14658 00009940 488D6308                	lea rsp, [rbx + 8]
 14659 00009944 5D                      	pop rbp
 14660 00009945 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14661                                  .L_if_end_02ee:
 14662                                  .L_if_end_02ef:
 14663                                  .L_if_end_02f0:
 14664 00009948 E959050000              	jmp .L_if_end_02f9
 14665                                  .L_if_else_02f9:
 14666                                  	; preparing a non-tail-call
 14667 0000994D 488B4520                	mov rax, PARAM(0)	; param a
 14668 00009951 50                      	push rax
 14669 00009952 6A01                    	push 1	; arg count
 14670 00009954 488B0425[4F190000]      	mov rax, qword [free_var_97]	; free var fraction?
 14671 0000995C 803805                  	cmp byte [rax], T_undefined
 14672 0000995F 0F8454B70000            	je L_error_fvar_undefined
 14673 00009965 803804                  	cmp byte [rax], T_closure
 14674 00009968 0F85CFB70000            	jne L_error_non_closure
 14675 0000996E FF7001                  	push SOB_CLOSURE_ENV(rax)
 14676 00009971 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14677 00009974 483D[02000000]          	cmp rax, sob_boolean_false
 14678 0000997A 0F8452020000            	je .L_if_else_02f8
 14679                                  	; preparing a non-tail-call
 14680 00009980 488B4528                	mov rax, PARAM(1)	; param b
 14681 00009984 50                      	push rax
 14682 00009985 6A01                    	push 1	; arg count
 14683 00009987 488B0425[B5190000]      	mov rax, qword [free_var_103]	; free var integer?
 14684 0000998F 803805                  	cmp byte [rax], T_undefined
 14685 00009992 0F8421B70000            	je L_error_fvar_undefined
 14686 00009998 803804                  	cmp byte [rax], T_closure
 14687 0000999B 0F859CB70000            	jne L_error_non_closure
 14688 000099A1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14689 000099A4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14690 000099A7 483D[02000000]          	cmp rax, sob_boolean_false
 14691 000099AD 0F8484000000            	je .L_if_else_02f3
 14692                                  	; preparing a tail-call
 14693                                  	; preparing a non-tail-call
 14694 000099B3 488B4528                	mov rax, PARAM(1)	; param b
 14695 000099B7 50                      	push rax
 14696 000099B8 6A01                    	push 1	; arg count
 14697 000099BA 488B0425[CB140000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
 14698 000099C2 803805                  	cmp byte [rax], T_undefined
 14699 000099C5 0F84EEB60000            	je L_error_fvar_undefined
 14700 000099CB 803804                  	cmp byte [rax], T_closure
 14701 000099CE 0F8569B70000            	jne L_error_non_closure
 14702 000099D4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14703 000099D7 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14704 000099DA 50                      	push rax
 14705 000099DB 488B4520                	mov rax, PARAM(0)	; param a
 14706 000099DF 50                      	push rax
 14707 000099E0 6A02                    	push 2	; arg count
 14708 000099E2 488B4510                	mov rax, ENV
 14709 000099E6 488B00                  	mov rax, qword [rax + 8 * 0]
 14710 000099E9 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var comparator-qq
 14711 000099ED 803804                  	cmp byte [rax], T_closure
 14712 000099F0 0F8547B70000            	jne L_error_non_closure
 14713 000099F6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14714                                  
 14715                                  	; recycling the current frame
 14716 000099F9 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 14717 000099FC FF7500                  	push qword [rbp]	; old frame-pointer
 14718 000099FF B906000000              	mov rcx, 6
 14719 00009A04 488B5D18                	mov rbx, COUNT
 14720 00009A08 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 14721 00009A0D 488D55F8                	lea rdx, [rbp - 8]
 14722                                  .L_tc_recycle_frame_loop_053a:
 14723 00009A11 4883F900                	cmp rcx, 0
 14724 00009A15 7413                    	je .L_tc_recycle_frame_done_053a
 14725 00009A17 488B32                  	mov rsi, qword [rdx]
 14726 00009A1A 488933                  	mov qword [rbx], rsi
 14727 00009A1D 48FFC9                  	dec rcx
 14728 00009A20 4883EB08                	sub rbx, 8
 14729 00009A24 4883EA08                	sub rdx, 8
 14730 00009A28 EBE7                    	jmp .L_tc_recycle_frame_loop_053a
 14731                                  .L_tc_recycle_frame_done_053a:
 14732 00009A2A 488D6308                	lea rsp, [rbx + 8]
 14733 00009A2E 5D                      	pop rbp
 14734 00009A2F FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14735 00009A32 E996010000              	jmp .L_if_end_02f3
 14736                                  .L_if_else_02f3:
 14737                                  	; preparing a non-tail-call
 14738 00009A37 488B4528                	mov rax, PARAM(1)	; param b
 14739 00009A3B 50                      	push rax
 14740 00009A3C 6A01                    	push 1	; arg count
 14741 00009A3E 488B0425[4F190000]      	mov rax, qword [free_var_97]	; free var fraction?
 14742 00009A46 803805                  	cmp byte [rax], T_undefined
 14743 00009A49 0F846AB60000            	je L_error_fvar_undefined
 14744 00009A4F 803804                  	cmp byte [rax], T_closure
 14745 00009A52 0F85E5B60000            	jne L_error_non_closure
 14746 00009A58 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14747 00009A5B FF5009                  	call SOB_CLOSURE_CODE(rax)
 14748 00009A5E 483D[02000000]          	cmp rax, sob_boolean_false
 14749 00009A64 7461                    	je .L_if_else_02f2
 14750                                  	; preparing a tail-call
 14751 00009A66 488B4528                	mov rax, PARAM(1)	; param b
 14752 00009A6A 50                      	push rax
 14753 00009A6B 488B4520                	mov rax, PARAM(0)	; param a
 14754 00009A6F 50                      	push rax
 14755 00009A70 6A02                    	push 2	; arg count
 14756 00009A72 488B4510                	mov rax, ENV
 14757 00009A76 488B00                  	mov rax, qword [rax + 8 * 0]
 14758 00009A79 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var comparator-qq
 14759 00009A7D 803804                  	cmp byte [rax], T_closure
 14760 00009A80 0F85B7B60000            	jne L_error_non_closure
 14761 00009A86 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14762                                  
 14763                                  	; recycling the current frame
 14764 00009A89 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 14765 00009A8C FF7500                  	push qword [rbp]	; old frame-pointer
 14766 00009A8F B906000000              	mov rcx, 6
 14767 00009A94 488B5D18                	mov rbx, COUNT
 14768 00009A98 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 14769 00009A9D 488D55F8                	lea rdx, [rbp - 8]
 14770                                  .L_tc_recycle_frame_loop_053b:
 14771 00009AA1 4883F900                	cmp rcx, 0
 14772 00009AA5 7413                    	je .L_tc_recycle_frame_done_053b
 14773 00009AA7 488B32                  	mov rsi, qword [rdx]
 14774 00009AAA 488933                  	mov qword [rbx], rsi
 14775 00009AAD 48FFC9                  	dec rcx
 14776 00009AB0 4883EB08                	sub rbx, 8
 14777 00009AB4 4883EA08                	sub rdx, 8
 14778 00009AB8 EBE7                    	jmp .L_tc_recycle_frame_loop_053b
 14779                                  .L_tc_recycle_frame_done_053b:
 14780 00009ABA 488D6308                	lea rsp, [rbx + 8]
 14781 00009ABE 5D                      	pop rbp
 14782 00009ABF FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14783 00009AC2 E906010000              	jmp .L_if_end_02f2
 14784                                  .L_if_else_02f2:
 14785                                  	; preparing a non-tail-call
 14786 00009AC7 488B4528                	mov rax, PARAM(1)	; param b
 14787 00009ACB 50                      	push rax
 14788 00009ACC 6A01                    	push 1	; arg count
 14789 00009ACE 488B0425[2A1C0000]      	mov rax, qword [free_var_140]	; free var real?
 14790 00009AD6 803805                  	cmp byte [rax], T_undefined
 14791 00009AD9 0F84DAB50000            	je L_error_fvar_undefined
 14792 00009ADF 803804                  	cmp byte [rax], T_closure
 14793 00009AE2 0F8555B60000            	jne L_error_non_closure
 14794 00009AE8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14795 00009AEB FF5009                  	call SOB_CLOSURE_CODE(rax)
 14796 00009AEE 483D[02000000]          	cmp rax, sob_boolean_false
 14797 00009AF4 0F8481000000            	je .L_if_else_02f1
 14798                                  	; preparing a tail-call
 14799 00009AFA 488B4528                	mov rax, PARAM(1)	; param b
 14800 00009AFE 50                      	push rax
 14801                                  	; preparing a non-tail-call
 14802 00009AFF 488B4520                	mov rax, PARAM(0)	; param a
 14803 00009B03 50                      	push rax
 14804 00009B04 6A01                    	push 1	; arg count
 14805 00009B06 488B0425[3E190000]      	mov rax, qword [free_var_96]	; free var fraction->real
 14806 00009B0E 803805                  	cmp byte [rax], T_undefined
 14807 00009B11 0F84A2B50000            	je L_error_fvar_undefined
 14808 00009B17 803804                  	cmp byte [rax], T_closure
 14809 00009B1A 0F851DB60000            	jne L_error_non_closure
 14810 00009B20 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14811 00009B23 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14812 00009B26 50                      	push rax
 14813 00009B27 6A02                    	push 2	; arg count
 14814 00009B29 488B4510                	mov rax, ENV
 14815 00009B2D 488B00                  	mov rax, qword [rax + 8 * 0]
 14816 00009B30 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var comparator-rr
 14817 00009B34 803804                  	cmp byte [rax], T_closure
 14818 00009B37 0F8500B60000            	jne L_error_non_closure
 14819 00009B3D FF7001                  	push SOB_CLOSURE_ENV(rax)
 14820                                  
 14821                                  	; recycling the current frame
 14822 00009B40 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 14823 00009B43 FF7500                  	push qword [rbp]	; old frame-pointer
 14824 00009B46 B906000000              	mov rcx, 6
 14825 00009B4B 488B5D18                	mov rbx, COUNT
 14826 00009B4F 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 14827 00009B54 488D55F8                	lea rdx, [rbp - 8]
 14828                                  .L_tc_recycle_frame_loop_053c:
 14829 00009B58 4883F900                	cmp rcx, 0
 14830 00009B5C 7413                    	je .L_tc_recycle_frame_done_053c
 14831 00009B5E 488B32                  	mov rsi, qword [rdx]
 14832 00009B61 488933                  	mov qword [rbx], rsi
 14833 00009B64 48FFC9                  	dec rcx
 14834 00009B67 4883EB08                	sub rbx, 8
 14835 00009B6B 4883EA08                	sub rdx, 8
 14836 00009B6F EBE7                    	jmp .L_tc_recycle_frame_loop_053c
 14837                                  .L_tc_recycle_frame_done_053c:
 14838 00009B71 488D6308                	lea rsp, [rbx + 8]
 14839 00009B75 5D                      	pop rbp
 14840 00009B76 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14841 00009B79 EB52                    	jmp .L_if_end_02f1
 14842                                  .L_if_else_02f1:
 14843                                  	; preparing a tail-call
 14844 00009B7B 6A00                    	push 0	; arg count
 14845 00009B7D 488B4510                	mov rax, ENV
 14846 00009B81 488B4008                	mov rax, qword [rax + 8 * 1]
 14847 00009B85 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var exit
 14848 00009B88 803804                  	cmp byte [rax], T_closure
 14849 00009B8B 0F85ACB50000            	jne L_error_non_closure
 14850 00009B91 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14851                                  
 14852                                  	; recycling the current frame
 14853 00009B94 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 14854 00009B97 FF7500                  	push qword [rbp]	; old frame-pointer
 14855 00009B9A B904000000              	mov rcx, 4
 14856 00009B9F 488B5D18                	mov rbx, COUNT
 14857 00009BA3 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 14858 00009BA8 488D55F8                	lea rdx, [rbp - 8]
 14859                                  .L_tc_recycle_frame_loop_053d:
 14860 00009BAC 4883F900                	cmp rcx, 0
 14861 00009BB0 7413                    	je .L_tc_recycle_frame_done_053d
 14862 00009BB2 488B32                  	mov rsi, qword [rdx]
 14863 00009BB5 488933                  	mov qword [rbx], rsi
 14864 00009BB8 48FFC9                  	dec rcx
 14865 00009BBB 4883EB08                	sub rbx, 8
 14866 00009BBF 4883EA08                	sub rdx, 8
 14867 00009BC3 EBE7                    	jmp .L_tc_recycle_frame_loop_053d
 14868                                  .L_tc_recycle_frame_done_053d:
 14869 00009BC5 488D6308                	lea rsp, [rbx + 8]
 14870 00009BC9 5D                      	pop rbp
 14871 00009BCA FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14872                                  .L_if_end_02f1:
 14873                                  .L_if_end_02f2:
 14874                                  .L_if_end_02f3:
 14875 00009BCD E9D4020000              	jmp .L_if_end_02f8
 14876                                  .L_if_else_02f8:
 14877                                  	; preparing a non-tail-call
 14878 00009BD2 488B4520                	mov rax, PARAM(0)	; param a
 14879 00009BD6 50                      	push rax
 14880 00009BD7 6A01                    	push 1	; arg count
 14881 00009BD9 488B0425[2A1C0000]      	mov rax, qword [free_var_140]	; free var real?
 14882 00009BE1 803805                  	cmp byte [rax], T_undefined
 14883 00009BE4 0F84CFB40000            	je L_error_fvar_undefined
 14884 00009BEA 803804                  	cmp byte [rax], T_closure
 14885 00009BED 0F854AB50000            	jne L_error_non_closure
 14886 00009BF3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14887 00009BF6 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14888 00009BF9 483D[02000000]          	cmp rax, sob_boolean_false
 14889 00009BFF 0F844F020000            	je .L_if_else_02f7
 14890                                  	; preparing a non-tail-call
 14891 00009C05 488B4528                	mov rax, PARAM(1)	; param b
 14892 00009C09 50                      	push rax
 14893 00009C0A 6A01                    	push 1	; arg count
 14894 00009C0C 488B0425[B5190000]      	mov rax, qword [free_var_103]	; free var integer?
 14895 00009C14 803805                  	cmp byte [rax], T_undefined
 14896 00009C17 0F849CB40000            	je L_error_fvar_undefined
 14897 00009C1D 803804                  	cmp byte [rax], T_closure
 14898 00009C20 0F8517B50000            	jne L_error_non_closure
 14899 00009C26 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14900 00009C29 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14901 00009C2C 483D[02000000]          	cmp rax, sob_boolean_false
 14902 00009C32 0F8484000000            	je .L_if_else_02f6
 14903                                  	; preparing a tail-call
 14904                                  	; preparing a non-tail-call
 14905 00009C38 488B4528                	mov rax, PARAM(1)	; param b
 14906 00009C3C 50                      	push rax
 14907 00009C3D 6A01                    	push 1	; arg count
 14908 00009C3F 488B0425[A4190000]      	mov rax, qword [free_var_102]	; free var integer->real
 14909 00009C47 803805                  	cmp byte [rax], T_undefined
 14910 00009C4A 0F8469B40000            	je L_error_fvar_undefined
 14911 00009C50 803804                  	cmp byte [rax], T_closure
 14912 00009C53 0F85E4B40000            	jne L_error_non_closure
 14913 00009C59 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14914 00009C5C FF5009                  	call SOB_CLOSURE_CODE(rax)
 14915 00009C5F 50                      	push rax
 14916 00009C60 488B4520                	mov rax, PARAM(0)	; param a
 14917 00009C64 50                      	push rax
 14918 00009C65 6A02                    	push 2	; arg count
 14919 00009C67 488B4510                	mov rax, ENV
 14920 00009C6B 488B00                  	mov rax, qword [rax + 8 * 0]
 14921 00009C6E 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var comparator-rr
 14922 00009C72 803804                  	cmp byte [rax], T_closure
 14923 00009C75 0F85C2B40000            	jne L_error_non_closure
 14924 00009C7B FF7001                  	push SOB_CLOSURE_ENV(rax)
 14925                                  
 14926                                  	; recycling the current frame
 14927 00009C7E FF7508                  	push qword [rbp + 8 * 1]	; old return address
 14928 00009C81 FF7500                  	push qword [rbp]	; old frame-pointer
 14929 00009C84 B906000000              	mov rcx, 6
 14930 00009C89 488B5D18                	mov rbx, COUNT
 14931 00009C8D 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 14932 00009C92 488D55F8                	lea rdx, [rbp - 8]
 14933                                  .L_tc_recycle_frame_loop_053e:
 14934 00009C96 4883F900                	cmp rcx, 0
 14935 00009C9A 7413                    	je .L_tc_recycle_frame_done_053e
 14936 00009C9C 488B32                  	mov rsi, qword [rdx]
 14937 00009C9F 488933                  	mov qword [rbx], rsi
 14938 00009CA2 48FFC9                  	dec rcx
 14939 00009CA5 4883EB08                	sub rbx, 8
 14940 00009CA9 4883EA08                	sub rdx, 8
 14941 00009CAD EBE7                    	jmp .L_tc_recycle_frame_loop_053e
 14942                                  .L_tc_recycle_frame_done_053e:
 14943 00009CAF 488D6308                	lea rsp, [rbx + 8]
 14944 00009CB3 5D                      	pop rbp
 14945 00009CB4 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14946 00009CB7 E996010000              	jmp .L_if_end_02f6
 14947                                  .L_if_else_02f6:
 14948                                  	; preparing a non-tail-call
 14949 00009CBC 488B4528                	mov rax, PARAM(1)	; param b
 14950 00009CC0 50                      	push rax
 14951 00009CC1 6A01                    	push 1	; arg count
 14952 00009CC3 488B0425[4F190000]      	mov rax, qword [free_var_97]	; free var fraction?
 14953 00009CCB 803805                  	cmp byte [rax], T_undefined
 14954 00009CCE 0F84E5B30000            	je L_error_fvar_undefined
 14955 00009CD4 803804                  	cmp byte [rax], T_closure
 14956 00009CD7 0F8560B40000            	jne L_error_non_closure
 14957 00009CDD FF7001                  	push SOB_CLOSURE_ENV(rax)
 14958 00009CE0 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14959 00009CE3 483D[02000000]          	cmp rax, sob_boolean_false
 14960 00009CE9 0F8484000000            	je .L_if_else_02f5
 14961                                  	; preparing a tail-call
 14962                                  	; preparing a non-tail-call
 14963 00009CEF 488B4528                	mov rax, PARAM(1)	; param b
 14964 00009CF3 50                      	push rax
 14965 00009CF4 6A01                    	push 1	; arg count
 14966 00009CF6 488B0425[3E190000]      	mov rax, qword [free_var_96]	; free var fraction->real
 14967 00009CFE 803805                  	cmp byte [rax], T_undefined
 14968 00009D01 0F84B2B30000            	je L_error_fvar_undefined
 14969 00009D07 803804                  	cmp byte [rax], T_closure
 14970 00009D0A 0F852DB40000            	jne L_error_non_closure
 14971 00009D10 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14972 00009D13 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14973 00009D16 50                      	push rax
 14974 00009D17 488B4520                	mov rax, PARAM(0)	; param a
 14975 00009D1B 50                      	push rax
 14976 00009D1C 6A02                    	push 2	; arg count
 14977 00009D1E 488B4510                	mov rax, ENV
 14978 00009D22 488B00                  	mov rax, qword [rax + 8 * 0]
 14979 00009D25 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var comparator-rr
 14980 00009D29 803804                  	cmp byte [rax], T_closure
 14981 00009D2C 0F850BB40000            	jne L_error_non_closure
 14982 00009D32 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14983                                  
 14984                                  	; recycling the current frame
 14985 00009D35 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 14986 00009D38 FF7500                  	push qword [rbp]	; old frame-pointer
 14987 00009D3B B906000000              	mov rcx, 6
 14988 00009D40 488B5D18                	mov rbx, COUNT
 14989 00009D44 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 14990 00009D49 488D55F8                	lea rdx, [rbp - 8]
 14991                                  .L_tc_recycle_frame_loop_053f:
 14992 00009D4D 4883F900                	cmp rcx, 0
 14993 00009D51 7413                    	je .L_tc_recycle_frame_done_053f
 14994 00009D53 488B32                  	mov rsi, qword [rdx]
 14995 00009D56 488933                  	mov qword [rbx], rsi
 14996 00009D59 48FFC9                  	dec rcx
 14997 00009D5C 4883EB08                	sub rbx, 8
 14998 00009D60 4883EA08                	sub rdx, 8
 14999 00009D64 EBE7                    	jmp .L_tc_recycle_frame_loop_053f
 15000                                  .L_tc_recycle_frame_done_053f:
 15001 00009D66 488D6308                	lea rsp, [rbx + 8]
 15002 00009D6A 5D                      	pop rbp
 15003 00009D6B FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 15004 00009D6E E9DF000000              	jmp .L_if_end_02f5
 15005                                  .L_if_else_02f5:
 15006                                  	; preparing a non-tail-call
 15007 00009D73 488B4528                	mov rax, PARAM(1)	; param b
 15008 00009D77 50                      	push rax
 15009 00009D78 6A01                    	push 1	; arg count
 15010 00009D7A 488B0425[2A1C0000]      	mov rax, qword [free_var_140]	; free var real?
 15011 00009D82 803805                  	cmp byte [rax], T_undefined
 15012 00009D85 0F842EB30000            	je L_error_fvar_undefined
 15013 00009D8B 803804                  	cmp byte [rax], T_closure
 15014 00009D8E 0F85A9B30000            	jne L_error_non_closure
 15015 00009D94 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15016 00009D97 FF5009                  	call SOB_CLOSURE_CODE(rax)
 15017 00009D9A 483D[02000000]          	cmp rax, sob_boolean_false
 15018 00009DA0 745E                    	je .L_if_else_02f4
 15019                                  	; preparing a tail-call
 15020 00009DA2 488B4528                	mov rax, PARAM(1)	; param b
 15021 00009DA6 50                      	push rax
 15022 00009DA7 488B4520                	mov rax, PARAM(0)	; param a
 15023 00009DAB 50                      	push rax
 15024 00009DAC 6A02                    	push 2	; arg count
 15025 00009DAE 488B4510                	mov rax, ENV
 15026 00009DB2 488B00                  	mov rax, qword [rax + 8 * 0]
 15027 00009DB5 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var comparator-rr
 15028 00009DB9 803804                  	cmp byte [rax], T_closure
 15029 00009DBC 0F857BB30000            	jne L_error_non_closure
 15030 00009DC2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15031                                  
 15032                                  	; recycling the current frame
 15033 00009DC5 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 15034 00009DC8 FF7500                  	push qword [rbp]	; old frame-pointer
 15035 00009DCB B906000000              	mov rcx, 6
 15036 00009DD0 488B5D18                	mov rbx, COUNT
 15037 00009DD4 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 15038 00009DD9 488D55F8                	lea rdx, [rbp - 8]
 15039                                  .L_tc_recycle_frame_loop_0540:
 15040 00009DDD 4883F900                	cmp rcx, 0
 15041 00009DE1 7413                    	je .L_tc_recycle_frame_done_0540
 15042 00009DE3 488B32                  	mov rsi, qword [rdx]
 15043 00009DE6 488933                  	mov qword [rbx], rsi
 15044 00009DE9 48FFC9                  	dec rcx
 15045 00009DEC 4883EB08                	sub rbx, 8
 15046 00009DF0 4883EA08                	sub rdx, 8
 15047 00009DF4 EBE7                    	jmp .L_tc_recycle_frame_loop_0540
 15048                                  .L_tc_recycle_frame_done_0540:
 15049 00009DF6 488D6308                	lea rsp, [rbx + 8]
 15050 00009DFA 5D                      	pop rbp
 15051 00009DFB FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 15052 00009DFE EB52                    	jmp .L_if_end_02f4
 15053                                  .L_if_else_02f4:
 15054                                  	; preparing a tail-call
 15055 00009E00 6A00                    	push 0	; arg count
 15056 00009E02 488B4510                	mov rax, ENV
 15057 00009E06 488B4008                	mov rax, qword [rax + 8 * 1]
 15058 00009E0A 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var exit
 15059 00009E0D 803804                  	cmp byte [rax], T_closure
 15060 00009E10 0F8527B30000            	jne L_error_non_closure
 15061 00009E16 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15062                                  
 15063                                  	; recycling the current frame
 15064 00009E19 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 15065 00009E1C FF7500                  	push qword [rbp]	; old frame-pointer
 15066 00009E1F B904000000              	mov rcx, 4
 15067 00009E24 488B5D18                	mov rbx, COUNT
 15068 00009E28 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 15069 00009E2D 488D55F8                	lea rdx, [rbp - 8]
 15070                                  .L_tc_recycle_frame_loop_0541:
 15071 00009E31 4883F900                	cmp rcx, 0
 15072 00009E35 7413                    	je .L_tc_recycle_frame_done_0541
 15073 00009E37 488B32                  	mov rsi, qword [rdx]
 15074 00009E3A 488933                  	mov qword [rbx], rsi
 15075 00009E3D 48FFC9                  	dec rcx
 15076 00009E40 4883EB08                	sub rbx, 8
 15077 00009E44 4883EA08                	sub rdx, 8
 15078 00009E48 EBE7                    	jmp .L_tc_recycle_frame_loop_0541
 15079                                  .L_tc_recycle_frame_done_0541:
 15080 00009E4A 488D6308                	lea rsp, [rbx + 8]
 15081 00009E4E 5D                      	pop rbp
 15082 00009E4F FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 15083                                  .L_if_end_02f4:
 15084                                  .L_if_end_02f5:
 15085                                  .L_if_end_02f6:
 15086 00009E52 EB52                    	jmp .L_if_end_02f7
 15087                                  .L_if_else_02f7:
 15088                                  	; preparing a tail-call
 15089 00009E54 6A00                    	push 0	; arg count
 15090 00009E56 488B4510                	mov rax, ENV
 15091 00009E5A 488B4008                	mov rax, qword [rax + 8 * 1]
 15092 00009E5E 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var exit
 15093 00009E61 803804                  	cmp byte [rax], T_closure
 15094 00009E64 0F85D3B20000            	jne L_error_non_closure
 15095 00009E6A FF7001                  	push SOB_CLOSURE_ENV(rax)
 15096                                  
 15097                                  	; recycling the current frame
 15098 00009E6D FF7508                  	push qword [rbp + 8 * 1]	; old return address
 15099 00009E70 FF7500                  	push qword [rbp]	; old frame-pointer
 15100 00009E73 B904000000              	mov rcx, 4
 15101 00009E78 488B5D18                	mov rbx, COUNT
 15102 00009E7C 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 15103 00009E81 488D55F8                	lea rdx, [rbp - 8]
 15104                                  .L_tc_recycle_frame_loop_0542:
 15105 00009E85 4883F900                	cmp rcx, 0
 15106 00009E89 7413                    	je .L_tc_recycle_frame_done_0542
 15107 00009E8B 488B32                  	mov rsi, qword [rdx]
 15108 00009E8E 488933                  	mov qword [rbx], rsi
 15109 00009E91 48FFC9                  	dec rcx
 15110 00009E94 4883EB08                	sub rbx, 8
 15111 00009E98 4883EA08                	sub rdx, 8
 15112 00009E9C EBE7                    	jmp .L_tc_recycle_frame_loop_0542
 15113                                  .L_tc_recycle_frame_done_0542:
 15114 00009E9E 488D6308                	lea rsp, [rbx + 8]
 15115 00009EA2 5D                      	pop rbp
 15116 00009EA3 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 15117                                  .L_if_end_02f7:
 15118                                  .L_if_end_02f8:
 15119                                  .L_if_end_02f9:
 15120 00009EA6 C9                      	leave
 15121 00009EA7 C22000                  	ret AND_KILL_FRAME(2)
 15122                                  .L_lambda_simple_end_03ed:	; new closure is in rax
 15123 00009EAA C9                      	leave
 15124 00009EAB C22800                  	ret AND_KILL_FRAME(3)
 15125                                  .L_lambda_simple_end_03ec:	; new closure is in rax
 15126 00009EAE 50                      	push rax
 15127 00009EAF 6A01                    	push 1	; arg count
 15128 00009EB1 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15129 00009EB6 E82BB30000              	call malloc
 15130 00009EBB 50                      	push rax
 15131 00009EBC BF08000000              	mov rdi, 8 * 1	; new rib
 15132 00009EC1 E820B30000              	call malloc
 15133 00009EC6 50                      	push rax
 15134 00009EC7 BF10000000              	mov rdi, 8 * 2	; extended env
 15135 00009ECC E815B30000              	call malloc
 15136 00009ED1 488B7D10                	mov rdi, ENV
 15137 00009ED5 BE00000000              	mov rsi, 0
 15138 00009EDA BA01000000              	mov rdx, 1
 15139                                  .L_lambda_simple_env_loop_03ee:	; ext_env[i + 1] <-- env[i]
 15140 00009EDF 4883FE01                	cmp rsi, 1
 15141 00009EE3 7410                    	je .L_lambda_simple_env_end_03ee
 15142 00009EE5 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15143 00009EE9 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15144 00009EED 48FFC6                  	inc rsi
 15145 00009EF0 48FFC2                  	inc rdx
 15146 00009EF3 EBEA                    	jmp .L_lambda_simple_env_loop_03ee
 15147                                  .L_lambda_simple_env_end_03ee:
 15148 00009EF5 5B                      	pop rbx
 15149 00009EF6 BE00000000              	mov rsi, 0
 15150                                  .L_lambda_simple_params_loop_03ee:	; copy params
 15151 00009EFB 4883FE01                	cmp rsi, 1
 15152 00009EFF 740E                    	je .L_lambda_simple_params_end_03ee
 15153 00009F01 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15154 00009F06 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15155 00009F0A 48FFC6                  	inc rsi
 15156 00009F0D EBEC                    	jmp .L_lambda_simple_params_loop_03ee
 15157                                  .L_lambda_simple_params_end_03ee:
 15158 00009F0F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 15159 00009F12 4889C3                  	mov rbx, rax
 15160 00009F15 58                      	pop rax
 15161 00009F16 C60004                  	mov byte [rax], T_closure
 15162 00009F19 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15163 00009F1D 48C74009[2A9F0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03ee
 15164 00009F25 E9440F0000              	jmp .L_lambda_simple_end_03ee
 15165                                  .L_lambda_simple_code_03ee:	; lambda-simple body
 15166 00009F2A 48837C241001            	cmp qword [rsp + 8 * 2], 1
 15167 00009F30 740B                    	je .L_lambda_simple_arity_check_ok_03ee
 15168 00009F32 FF742410                	push qword [rsp + 8 * 2]
 15169 00009F36 6A01                    	push 1
 15170 00009F38 E962B20000              	jmp L_error_incorrect_arity_simple
 15171                                  .L_lambda_simple_arity_check_ok_03ee:
 15172 00009F3D C8000000                	enter 0, 0
 15173                                  	; preparing a tail-call
 15174                                  	; preparing a non-tail-call
 15175 00009F41 488B0425[32140000]      	mov rax, qword [free_var_20]	; free var __bin-less-than-rr
 15176 00009F49 803805                  	cmp byte [rax], T_undefined
 15177 00009F4C 0F8467B10000            	je L_error_fvar_undefined
 15178 00009F52 50                      	push rax
 15179 00009F53 488B0425[21140000]      	mov rax, qword [free_var_19]	; free var __bin-less-than-qq
 15180 00009F5B 803805                  	cmp byte [rax], T_undefined
 15181 00009F5E 0F8455B10000            	je L_error_fvar_undefined
 15182 00009F64 50                      	push rax
 15183 00009F65 488B0425[43140000]      	mov rax, qword [free_var_21]	; free var __bin-less-than-zz
 15184 00009F6D 803805                  	cmp byte [rax], T_undefined
 15185 00009F70 0F8443B10000            	je L_error_fvar_undefined
 15186 00009F76 50                      	push rax
 15187 00009F77 6A03                    	push 3	; arg count
 15188 00009F79 488B4520                	mov rax, PARAM(0)	; param make-bin-comparator
 15189 00009F7D 803804                  	cmp byte [rax], T_closure
 15190 00009F80 0F85B7B10000            	jne L_error_non_closure
 15191 00009F86 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15192 00009F89 FF5009                  	call SOB_CLOSURE_CODE(rax)
 15193 00009F8C 50                      	push rax
 15194 00009F8D 6A01                    	push 1	; arg count
 15195 00009F8F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15196 00009F94 E84DB20000              	call malloc
 15197 00009F99 50                      	push rax
 15198 00009F9A BF08000000              	mov rdi, 8 * 1	; new rib
 15199 00009F9F E842B20000              	call malloc
 15200 00009FA4 50                      	push rax
 15201 00009FA5 BF18000000              	mov rdi, 8 * 3	; extended env
 15202 00009FAA E837B20000              	call malloc
 15203 00009FAF 488B7D10                	mov rdi, ENV
 15204 00009FB3 BE00000000              	mov rsi, 0
 15205 00009FB8 BA01000000              	mov rdx, 1
 15206                                  .L_lambda_simple_env_loop_03ef:	; ext_env[i + 1] <-- env[i]
 15207 00009FBD 4883FE02                	cmp rsi, 2
 15208 00009FC1 7410                    	je .L_lambda_simple_env_end_03ef
 15209 00009FC3 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15210 00009FC7 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15211 00009FCB 48FFC6                  	inc rsi
 15212 00009FCE 48FFC2                  	inc rdx
 15213 00009FD1 EBEA                    	jmp .L_lambda_simple_env_loop_03ef
 15214                                  .L_lambda_simple_env_end_03ef:
 15215 00009FD3 5B                      	pop rbx
 15216 00009FD4 BE00000000              	mov rsi, 0
 15217                                  .L_lambda_simple_params_loop_03ef:	; copy params
 15218 00009FD9 4883FE01                	cmp rsi, 1
 15219 00009FDD 740E                    	je .L_lambda_simple_params_end_03ef
 15220 00009FDF 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15221 00009FE4 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15222 00009FE8 48FFC6                  	inc rsi
 15223 00009FEB EBEC                    	jmp .L_lambda_simple_params_loop_03ef
 15224                                  .L_lambda_simple_params_end_03ef:
 15225 00009FED 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 15226 00009FF0 4889C3                  	mov rbx, rax
 15227 00009FF3 58                      	pop rax
 15228 00009FF4 C60004                  	mov byte [rax], T_closure
 15229 00009FF7 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15230 00009FFB 48C74009[08A00000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03ef
 15231 0000A003 E91D0E0000              	jmp .L_lambda_simple_end_03ef
 15232                                  .L_lambda_simple_code_03ef:	; lambda-simple body
 15233 0000A008 48837C241001            	cmp qword [rsp + 8 * 2], 1
 15234 0000A00E 740B                    	je .L_lambda_simple_arity_check_ok_03ef
 15235 0000A010 FF742410                	push qword [rsp + 8 * 2]
 15236 0000A014 6A01                    	push 1
 15237 0000A016 E984B10000              	jmp L_error_incorrect_arity_simple
 15238                                  .L_lambda_simple_arity_check_ok_03ef:
 15239 0000A01B C8000000                	enter 0, 0
 15240                                  	; preparing a tail-call
 15241                                  	; preparing a non-tail-call
 15242 0000A01F 488B0425[FF130000]      	mov rax, qword [free_var_17]	; free var __bin-equal-rr
 15243 0000A027 803805                  	cmp byte [rax], T_undefined
 15244 0000A02A 0F8489B00000            	je L_error_fvar_undefined
 15245 0000A030 50                      	push rax
 15246 0000A031 488B0425[EE130000]      	mov rax, qword [free_var_16]	; free var __bin-equal-qq
 15247 0000A039 803805                  	cmp byte [rax], T_undefined
 15248 0000A03C 0F8477B00000            	je L_error_fvar_undefined
 15249 0000A042 50                      	push rax
 15250 0000A043 488B0425[10140000]      	mov rax, qword [free_var_18]	; free var __bin-equal-zz
 15251 0000A04B 803805                  	cmp byte [rax], T_undefined
 15252 0000A04E 0F8465B00000            	je L_error_fvar_undefined
 15253 0000A054 50                      	push rax
 15254 0000A055 6A03                    	push 3	; arg count
 15255 0000A057 488B4510                	mov rax, ENV
 15256 0000A05B 488B00                  	mov rax, qword [rax + 8 * 0]
 15257 0000A05E 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var make-bin-comparator
 15258 0000A061 803804                  	cmp byte [rax], T_closure
 15259 0000A064 0F85D3B00000            	jne L_error_non_closure
 15260 0000A06A FF7001                  	push SOB_CLOSURE_ENV(rax)
 15261 0000A06D FF5009                  	call SOB_CLOSURE_CODE(rax)
 15262 0000A070 50                      	push rax
 15263 0000A071 6A01                    	push 1	; arg count
 15264 0000A073 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15265 0000A078 E869B10000              	call malloc
 15266 0000A07D 50                      	push rax
 15267 0000A07E BF08000000              	mov rdi, 8 * 1	; new rib
 15268 0000A083 E85EB10000              	call malloc
 15269 0000A088 50                      	push rax
 15270 0000A089 BF20000000              	mov rdi, 8 * 4	; extended env
 15271 0000A08E E853B10000              	call malloc
 15272 0000A093 488B7D10                	mov rdi, ENV
 15273 0000A097 BE00000000              	mov rsi, 0
 15274 0000A09C BA01000000              	mov rdx, 1
 15275                                  .L_lambda_simple_env_loop_03f0:	; ext_env[i + 1] <-- env[i]
 15276 0000A0A1 4883FE03                	cmp rsi, 3
 15277 0000A0A5 7410                    	je .L_lambda_simple_env_end_03f0
 15278 0000A0A7 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15279 0000A0AB 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15280 0000A0AF 48FFC6                  	inc rsi
 15281 0000A0B2 48FFC2                  	inc rdx
 15282 0000A0B5 EBEA                    	jmp .L_lambda_simple_env_loop_03f0
 15283                                  .L_lambda_simple_env_end_03f0:
 15284 0000A0B7 5B                      	pop rbx
 15285 0000A0B8 BE00000000              	mov rsi, 0
 15286                                  .L_lambda_simple_params_loop_03f0:	; copy params
 15287 0000A0BD 4883FE01                	cmp rsi, 1
 15288 0000A0C1 740E                    	je .L_lambda_simple_params_end_03f0
 15289 0000A0C3 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15290 0000A0C8 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15291 0000A0CC 48FFC6                  	inc rsi
 15292 0000A0CF EBEC                    	jmp .L_lambda_simple_params_loop_03f0
 15293                                  .L_lambda_simple_params_end_03f0:
 15294 0000A0D1 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 15295 0000A0D4 4889C3                  	mov rbx, rax
 15296 0000A0D7 58                      	pop rax
 15297 0000A0D8 C60004                  	mov byte [rax], T_closure
 15298 0000A0DB 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15299 0000A0DF 48C74009[ECA00000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03f0
 15300 0000A0E7 E9F00C0000              	jmp .L_lambda_simple_end_03f0
 15301                                  .L_lambda_simple_code_03f0:	; lambda-simple body
 15302 0000A0EC 48837C241001            	cmp qword [rsp + 8 * 2], 1
 15303 0000A0F2 740B                    	je .L_lambda_simple_arity_check_ok_03f0
 15304 0000A0F4 FF742410                	push qword [rsp + 8 * 2]
 15305 0000A0F8 6A01                    	push 1
 15306 0000A0FA E9A0B00000              	jmp L_error_incorrect_arity_simple
 15307                                  .L_lambda_simple_arity_check_ok_03f0:
 15308 0000A0FF C8000000                	enter 0, 0
 15309                                  	; preparing a tail-call
 15310 0000A103 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15311 0000A108 E8D9B00000              	call malloc
 15312 0000A10D 50                      	push rax
 15313 0000A10E BF08000000              	mov rdi, 8 * 1	; new rib
 15314 0000A113 E8CEB00000              	call malloc
 15315 0000A118 50                      	push rax
 15316 0000A119 BF28000000              	mov rdi, 8 * 5	; extended env
 15317 0000A11E E8C3B00000              	call malloc
 15318 0000A123 488B7D10                	mov rdi, ENV
 15319 0000A127 BE00000000              	mov rsi, 0
 15320 0000A12C BA01000000              	mov rdx, 1
 15321                                  .L_lambda_simple_env_loop_03f1:	; ext_env[i + 1] <-- env[i]
 15322 0000A131 4883FE04                	cmp rsi, 4
 15323 0000A135 7410                    	je .L_lambda_simple_env_end_03f1
 15324 0000A137 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15325 0000A13B 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15326 0000A13F 48FFC6                  	inc rsi
 15327 0000A142 48FFC2                  	inc rdx
 15328 0000A145 EBEA                    	jmp .L_lambda_simple_env_loop_03f1
 15329                                  .L_lambda_simple_env_end_03f1:
 15330 0000A147 5B                      	pop rbx
 15331 0000A148 BE00000000              	mov rsi, 0
 15332                                  .L_lambda_simple_params_loop_03f1:	; copy params
 15333 0000A14D 4883FE01                	cmp rsi, 1
 15334 0000A151 740E                    	je .L_lambda_simple_params_end_03f1
 15335 0000A153 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15336 0000A158 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15337 0000A15C 48FFC6                  	inc rsi
 15338 0000A15F EBEC                    	jmp .L_lambda_simple_params_loop_03f1
 15339                                  .L_lambda_simple_params_end_03f1:
 15340 0000A161 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 15341 0000A164 4889C3                  	mov rbx, rax
 15342 0000A167 58                      	pop rax
 15343 0000A168 C60004                  	mov byte [rax], T_closure
 15344 0000A16B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15345 0000A16F 48C74009[7CA10000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03f1
 15346 0000A177 E99A000000              	jmp .L_lambda_simple_end_03f1
 15347                                  .L_lambda_simple_code_03f1:	; lambda-simple body
 15348 0000A17C 48837C241002            	cmp qword [rsp + 8 * 2], 2
 15349 0000A182 740B                    	je .L_lambda_simple_arity_check_ok_03f1
 15350 0000A184 FF742410                	push qword [rsp + 8 * 2]
 15351 0000A188 6A02                    	push 2
 15352 0000A18A E910B00000              	jmp L_error_incorrect_arity_simple
 15353                                  .L_lambda_simple_arity_check_ok_03f1:
 15354 0000A18F C8000000                	enter 0, 0
 15355                                  	; preparing a tail-call
 15356                                  	; preparing a non-tail-call
 15357 0000A193 488B4528                	mov rax, PARAM(1)	; param b
 15358 0000A197 50                      	push rax
 15359 0000A198 488B4520                	mov rax, PARAM(0)	; param a
 15360 0000A19C 50                      	push rax
 15361 0000A19D 6A02                    	push 2	; arg count
 15362 0000A19F 488B4510                	mov rax, ENV
 15363 0000A1A3 488B4008                	mov rax, qword [rax + 8 * 1]
 15364 0000A1A7 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin<?
 15365 0000A1AA 803804                  	cmp byte [rax], T_closure
 15366 0000A1AD 0F858AAF0000            	jne L_error_non_closure
 15367 0000A1B3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15368 0000A1B6 FF5009                  	call SOB_CLOSURE_CODE(rax)
 15369 0000A1B9 50                      	push rax
 15370 0000A1BA 6A01                    	push 1	; arg count
 15371 0000A1BC 488B0425[2B1B0000]      	mov rax, qword [free_var_125]	; free var not
 15372 0000A1C4 803805                  	cmp byte [rax], T_undefined
 15373 0000A1C7 0F84ECAE0000            	je L_error_fvar_undefined
 15374 0000A1CD 803804                  	cmp byte [rax], T_closure
 15375 0000A1D0 0F8567AF0000            	jne L_error_non_closure
 15376 0000A1D6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15377                                  
 15378                                  	; recycling the current frame
 15379 0000A1D9 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 15380 0000A1DC FF7500                  	push qword [rbp]	; old frame-pointer
 15381 0000A1DF B905000000              	mov rcx, 5
 15382 0000A1E4 488B5D18                	mov rbx, COUNT
 15383 0000A1E8 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 15384 0000A1ED 488D55F8                	lea rdx, [rbp - 8]
 15385                                  .L_tc_recycle_frame_loop_0543:
 15386 0000A1F1 4883F900                	cmp rcx, 0
 15387 0000A1F5 7413                    	je .L_tc_recycle_frame_done_0543
 15388 0000A1F7 488B32                  	mov rsi, qword [rdx]
 15389 0000A1FA 488933                  	mov qword [rbx], rsi
 15390 0000A1FD 48FFC9                  	dec rcx
 15391 0000A200 4883EB08                	sub rbx, 8
 15392 0000A204 4883EA08                	sub rdx, 8
 15393 0000A208 EBE7                    	jmp .L_tc_recycle_frame_loop_0543
 15394                                  .L_tc_recycle_frame_done_0543:
 15395 0000A20A 488D6308                	lea rsp, [rbx + 8]
 15396 0000A20E 5D                      	pop rbp
 15397 0000A20F FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 15398 0000A212 C9                      	leave
 15399 0000A213 C22000                  	ret AND_KILL_FRAME(2)
 15400                                  .L_lambda_simple_end_03f1:	; new closure is in rax
 15401 0000A216 50                      	push rax
 15402 0000A217 6A01                    	push 1	; arg count
 15403 0000A219 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15404 0000A21E E8C3AF0000              	call malloc
 15405 0000A223 50                      	push rax
 15406 0000A224 BF08000000              	mov rdi, 8 * 1	; new rib
 15407 0000A229 E8B8AF0000              	call malloc
 15408 0000A22E 50                      	push rax
 15409 0000A22F BF28000000              	mov rdi, 8 * 5	; extended env
 15410 0000A234 E8ADAF0000              	call malloc
 15411 0000A239 488B7D10                	mov rdi, ENV
 15412 0000A23D BE00000000              	mov rsi, 0
 15413 0000A242 BA01000000              	mov rdx, 1
 15414                                  .L_lambda_simple_env_loop_03f2:	; ext_env[i + 1] <-- env[i]
 15415 0000A247 4883FE04                	cmp rsi, 4
 15416 0000A24B 7410                    	je .L_lambda_simple_env_end_03f2
 15417 0000A24D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15418 0000A251 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15419 0000A255 48FFC6                  	inc rsi
 15420 0000A258 48FFC2                  	inc rdx
 15421 0000A25B EBEA                    	jmp .L_lambda_simple_env_loop_03f2
 15422                                  .L_lambda_simple_env_end_03f2:
 15423 0000A25D 5B                      	pop rbx
 15424 0000A25E BE00000000              	mov rsi, 0
 15425                                  .L_lambda_simple_params_loop_03f2:	; copy params
 15426 0000A263 4883FE01                	cmp rsi, 1
 15427 0000A267 740E                    	je .L_lambda_simple_params_end_03f2
 15428 0000A269 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15429 0000A26E 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15430 0000A272 48FFC6                  	inc rsi
 15431 0000A275 EBEC                    	jmp .L_lambda_simple_params_loop_03f2
 15432                                  .L_lambda_simple_params_end_03f2:
 15433 0000A277 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 15434 0000A27A 4889C3                  	mov rbx, rax
 15435 0000A27D 58                      	pop rax
 15436 0000A27E C60004                  	mov byte [rax], T_closure
 15437 0000A281 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15438 0000A285 48C74009[92A20000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03f2
 15439 0000A28D E9010B0000              	jmp .L_lambda_simple_end_03f2
 15440                                  .L_lambda_simple_code_03f2:	; lambda-simple body
 15441 0000A292 48837C241001            	cmp qword [rsp + 8 * 2], 1
 15442 0000A298 740B                    	je .L_lambda_simple_arity_check_ok_03f2
 15443 0000A29A FF742410                	push qword [rsp + 8 * 2]
 15444 0000A29E 6A01                    	push 1
 15445 0000A2A0 E9FAAE0000              	jmp L_error_incorrect_arity_simple
 15446                                  .L_lambda_simple_arity_check_ok_03f2:
 15447 0000A2A5 C8000000                	enter 0, 0
 15448                                  	; preparing a tail-call
 15449 0000A2A9 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15450 0000A2AE E833AF0000              	call malloc
 15451 0000A2B3 50                      	push rax
 15452 0000A2B4 BF08000000              	mov rdi, 8 * 1	; new rib
 15453 0000A2B9 E828AF0000              	call malloc
 15454 0000A2BE 50                      	push rax
 15455 0000A2BF BF30000000              	mov rdi, 8 * 6	; extended env
 15456 0000A2C4 E81DAF0000              	call malloc
 15457 0000A2C9 488B7D10                	mov rdi, ENV
 15458 0000A2CD BE00000000              	mov rsi, 0
 15459 0000A2D2 BA01000000              	mov rdx, 1
 15460                                  .L_lambda_simple_env_loop_03f3:	; ext_env[i + 1] <-- env[i]
 15461 0000A2D7 4883FE05                	cmp rsi, 5
 15462 0000A2DB 7410                    	je .L_lambda_simple_env_end_03f3
 15463 0000A2DD 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15464 0000A2E1 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15465 0000A2E5 48FFC6                  	inc rsi
 15466 0000A2E8 48FFC2                  	inc rdx
 15467 0000A2EB EBEA                    	jmp .L_lambda_simple_env_loop_03f3
 15468                                  .L_lambda_simple_env_end_03f3:
 15469 0000A2ED 5B                      	pop rbx
 15470 0000A2EE BE00000000              	mov rsi, 0
 15471                                  .L_lambda_simple_params_loop_03f3:	; copy params
 15472 0000A2F3 4883FE01                	cmp rsi, 1
 15473 0000A2F7 740E                    	je .L_lambda_simple_params_end_03f3
 15474 0000A2F9 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15475 0000A2FE 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15476 0000A302 48FFC6                  	inc rsi
 15477 0000A305 EBEC                    	jmp .L_lambda_simple_params_loop_03f3
 15478                                  .L_lambda_simple_params_end_03f3:
 15479 0000A307 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 15480 0000A30A 4889C3                  	mov rbx, rax
 15481 0000A30D 58                      	pop rax
 15482 0000A30E C60004                  	mov byte [rax], T_closure
 15483 0000A311 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15484 0000A315 48C74009[1FA30000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03f3
 15485 0000A31D EB77                    	jmp .L_lambda_simple_end_03f3
 15486                                  .L_lambda_simple_code_03f3:	; lambda-simple body
 15487 0000A31F 48837C241002            	cmp qword [rsp + 8 * 2], 2
 15488 0000A325 740B                    	je .L_lambda_simple_arity_check_ok_03f3
 15489 0000A327 FF742410                	push qword [rsp + 8 * 2]
 15490 0000A32B 6A02                    	push 2
 15491 0000A32D E96DAE0000              	jmp L_error_incorrect_arity_simple
 15492                                  .L_lambda_simple_arity_check_ok_03f3:
 15493 0000A332 C8000000                	enter 0, 0
 15494                                  	; preparing a tail-call
 15495 0000A336 488B4520                	mov rax, PARAM(0)	; param a
 15496 0000A33A 50                      	push rax
 15497 0000A33B 488B4528                	mov rax, PARAM(1)	; param b
 15498 0000A33F 50                      	push rax
 15499 0000A340 6A02                    	push 2	; arg count
 15500 0000A342 488B4510                	mov rax, ENV
 15501 0000A346 488B4010                	mov rax, qword [rax + 8 * 2]
 15502 0000A34A 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin<?
 15503 0000A34D 803804                  	cmp byte [rax], T_closure
 15504 0000A350 0F85E7AD0000            	jne L_error_non_closure
 15505 0000A356 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15506                                  
 15507                                  	; recycling the current frame
 15508 0000A359 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 15509 0000A35C FF7500                  	push qword [rbp]	; old frame-pointer
 15510 0000A35F B906000000              	mov rcx, 6
 15511 0000A364 488B5D18                	mov rbx, COUNT
 15512 0000A368 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 15513 0000A36D 488D55F8                	lea rdx, [rbp - 8]
 15514                                  .L_tc_recycle_frame_loop_0544:
 15515 0000A371 4883F900                	cmp rcx, 0
 15516 0000A375 7413                    	je .L_tc_recycle_frame_done_0544
 15517 0000A377 488B32                  	mov rsi, qword [rdx]
 15518 0000A37A 488933                  	mov qword [rbx], rsi
 15519 0000A37D 48FFC9                  	dec rcx
 15520 0000A380 4883EB08                	sub rbx, 8
 15521 0000A384 4883EA08                	sub rdx, 8
 15522 0000A388 EBE7                    	jmp .L_tc_recycle_frame_loop_0544
 15523                                  .L_tc_recycle_frame_done_0544:
 15524 0000A38A 488D6308                	lea rsp, [rbx + 8]
 15525 0000A38E 5D                      	pop rbp
 15526 0000A38F FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 15527 0000A392 C9                      	leave
 15528 0000A393 C22000                  	ret AND_KILL_FRAME(2)
 15529                                  .L_lambda_simple_end_03f3:	; new closure is in rax
 15530 0000A396 50                      	push rax
 15531 0000A397 6A01                    	push 1	; arg count
 15532 0000A399 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15533 0000A39E E843AE0000              	call malloc
 15534 0000A3A3 50                      	push rax
 15535 0000A3A4 BF08000000              	mov rdi, 8 * 1	; new rib
 15536 0000A3A9 E838AE0000              	call malloc
 15537 0000A3AE 50                      	push rax
 15538 0000A3AF BF30000000              	mov rdi, 8 * 6	; extended env
 15539 0000A3B4 E82DAE0000              	call malloc
 15540 0000A3B9 488B7D10                	mov rdi, ENV
 15541 0000A3BD BE00000000              	mov rsi, 0
 15542 0000A3C2 BA01000000              	mov rdx, 1
 15543                                  .L_lambda_simple_env_loop_03f4:	; ext_env[i + 1] <-- env[i]
 15544 0000A3C7 4883FE05                	cmp rsi, 5
 15545 0000A3CB 7410                    	je .L_lambda_simple_env_end_03f4
 15546 0000A3CD 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15547 0000A3D1 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15548 0000A3D5 48FFC6                  	inc rsi
 15549 0000A3D8 48FFC2                  	inc rdx
 15550 0000A3DB EBEA                    	jmp .L_lambda_simple_env_loop_03f4
 15551                                  .L_lambda_simple_env_end_03f4:
 15552 0000A3DD 5B                      	pop rbx
 15553 0000A3DE BE00000000              	mov rsi, 0
 15554                                  .L_lambda_simple_params_loop_03f4:	; copy params
 15555 0000A3E3 4883FE01                	cmp rsi, 1
 15556 0000A3E7 740E                    	je .L_lambda_simple_params_end_03f4
 15557 0000A3E9 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15558 0000A3EE 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15559 0000A3F2 48FFC6                  	inc rsi
 15560 0000A3F5 EBEC                    	jmp .L_lambda_simple_params_loop_03f4
 15561                                  .L_lambda_simple_params_end_03f4:
 15562 0000A3F7 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 15563 0000A3FA 4889C3                  	mov rbx, rax
 15564 0000A3FD 58                      	pop rax
 15565 0000A3FE C60004                  	mov byte [rax], T_closure
 15566 0000A401 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15567 0000A405 48C74009[12A40000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03f4
 15568 0000A40D E938090000              	jmp .L_lambda_simple_end_03f4
 15569                                  .L_lambda_simple_code_03f4:	; lambda-simple body
 15570 0000A412 48837C241001            	cmp qword [rsp + 8 * 2], 1
 15571 0000A418 740B                    	je .L_lambda_simple_arity_check_ok_03f4
 15572 0000A41A FF742410                	push qword [rsp + 8 * 2]
 15573 0000A41E 6A01                    	push 1
 15574 0000A420 E97AAD0000              	jmp L_error_incorrect_arity_simple
 15575                                  .L_lambda_simple_arity_check_ok_03f4:
 15576 0000A425 C8000000                	enter 0, 0
 15577                                  	; preparing a tail-call
 15578 0000A429 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15579 0000A42E E8B3AD0000              	call malloc
 15580 0000A433 50                      	push rax
 15581 0000A434 BF08000000              	mov rdi, 8 * 1	; new rib
 15582 0000A439 E8A8AD0000              	call malloc
 15583 0000A43E 50                      	push rax
 15584 0000A43F BF38000000              	mov rdi, 8 * 7	; extended env
 15585 0000A444 E89DAD0000              	call malloc
 15586 0000A449 488B7D10                	mov rdi, ENV
 15587 0000A44D BE00000000              	mov rsi, 0
 15588 0000A452 BA01000000              	mov rdx, 1
 15589                                  .L_lambda_simple_env_loop_03f5:	; ext_env[i + 1] <-- env[i]
 15590 0000A457 4883FE06                	cmp rsi, 6
 15591 0000A45B 7410                    	je .L_lambda_simple_env_end_03f5
 15592 0000A45D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15593 0000A461 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15594 0000A465 48FFC6                  	inc rsi
 15595 0000A468 48FFC2                  	inc rdx
 15596 0000A46B EBEA                    	jmp .L_lambda_simple_env_loop_03f5
 15597                                  .L_lambda_simple_env_end_03f5:
 15598 0000A46D 5B                      	pop rbx
 15599 0000A46E BE00000000              	mov rsi, 0
 15600                                  .L_lambda_simple_params_loop_03f5:	; copy params
 15601 0000A473 4883FE01                	cmp rsi, 1
 15602 0000A477 740E                    	je .L_lambda_simple_params_end_03f5
 15603 0000A479 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15604 0000A47E 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15605 0000A482 48FFC6                  	inc rsi
 15606 0000A485 EBEC                    	jmp .L_lambda_simple_params_loop_03f5
 15607                                  .L_lambda_simple_params_end_03f5:
 15608 0000A487 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 15609 0000A48A 4889C3                  	mov rbx, rax
 15610 0000A48D 58                      	pop rax
 15611 0000A48E C60004                  	mov byte [rax], T_closure
 15612 0000A491 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15613 0000A495 48C74009[A2A40000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03f5
 15614 0000A49D E999000000              	jmp .L_lambda_simple_end_03f5
 15615                                  .L_lambda_simple_code_03f5:	; lambda-simple body
 15616 0000A4A2 48837C241002            	cmp qword [rsp + 8 * 2], 2
 15617 0000A4A8 740B                    	je .L_lambda_simple_arity_check_ok_03f5
 15618 0000A4AA FF742410                	push qword [rsp + 8 * 2]
 15619 0000A4AE 6A02                    	push 2
 15620 0000A4B0 E9EAAC0000              	jmp L_error_incorrect_arity_simple
 15621                                  .L_lambda_simple_arity_check_ok_03f5:
 15622 0000A4B5 C8000000                	enter 0, 0
 15623                                  	; preparing a tail-call
 15624                                  	; preparing a non-tail-call
 15625 0000A4B9 488B4528                	mov rax, PARAM(1)	; param b
 15626 0000A4BD 50                      	push rax
 15627 0000A4BE 488B4520                	mov rax, PARAM(0)	; param a
 15628 0000A4C2 50                      	push rax
 15629 0000A4C3 6A02                    	push 2	; arg count
 15630 0000A4C5 488B4510                	mov rax, ENV
 15631 0000A4C9 488B00                  	mov rax, qword [rax + 8 * 0]
 15632 0000A4CC 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin>?
 15633 0000A4CF 803804                  	cmp byte [rax], T_closure
 15634 0000A4D2 0F8565AC0000            	jne L_error_non_closure
 15635 0000A4D8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15636 0000A4DB FF5009                  	call SOB_CLOSURE_CODE(rax)
 15637 0000A4DE 50                      	push rax
 15638 0000A4DF 6A01                    	push 1	; arg count
 15639 0000A4E1 488B0425[2B1B0000]      	mov rax, qword [free_var_125]	; free var not
 15640 0000A4E9 803805                  	cmp byte [rax], T_undefined
 15641 0000A4EC 0F84C7AB0000            	je L_error_fvar_undefined
 15642 0000A4F2 803804                  	cmp byte [rax], T_closure
 15643 0000A4F5 0F8542AC0000            	jne L_error_non_closure
 15644 0000A4FB FF7001                  	push SOB_CLOSURE_ENV(rax)
 15645                                  
 15646                                  	; recycling the current frame
 15647 0000A4FE FF7508                  	push qword [rbp + 8 * 1]	; old return address
 15648 0000A501 FF7500                  	push qword [rbp]	; old frame-pointer
 15649 0000A504 B905000000              	mov rcx, 5
 15650 0000A509 488B5D18                	mov rbx, COUNT
 15651 0000A50D 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 15652 0000A512 488D55F8                	lea rdx, [rbp - 8]
 15653                                  .L_tc_recycle_frame_loop_0545:
 15654 0000A516 4883F900                	cmp rcx, 0
 15655 0000A51A 7413                    	je .L_tc_recycle_frame_done_0545
 15656 0000A51C 488B32                  	mov rsi, qword [rdx]
 15657 0000A51F 488933                  	mov qword [rbx], rsi
 15658 0000A522 48FFC9                  	dec rcx
 15659 0000A525 4883EB08                	sub rbx, 8
 15660 0000A529 4883EA08                	sub rdx, 8
 15661 0000A52D EBE7                    	jmp .L_tc_recycle_frame_loop_0545
 15662                                  .L_tc_recycle_frame_done_0545:
 15663 0000A52F 488D6308                	lea rsp, [rbx + 8]
 15664 0000A533 5D                      	pop rbp
 15665 0000A534 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 15666 0000A537 C9                      	leave
 15667 0000A538 C22000                  	ret AND_KILL_FRAME(2)
 15668                                  .L_lambda_simple_end_03f5:	; new closure is in rax
 15669 0000A53B 50                      	push rax
 15670 0000A53C 6A01                    	push 1	; arg count
 15671 0000A53E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15672 0000A543 E89EAC0000              	call malloc
 15673 0000A548 50                      	push rax
 15674 0000A549 BF08000000              	mov rdi, 8 * 1	; new rib
 15675 0000A54E E893AC0000              	call malloc
 15676 0000A553 50                      	push rax
 15677 0000A554 BF38000000              	mov rdi, 8 * 7	; extended env
 15678 0000A559 E888AC0000              	call malloc
 15679 0000A55E 488B7D10                	mov rdi, ENV
 15680 0000A562 BE00000000              	mov rsi, 0
 15681 0000A567 BA01000000              	mov rdx, 1
 15682                                  .L_lambda_simple_env_loop_03f6:	; ext_env[i + 1] <-- env[i]
 15683 0000A56C 4883FE06                	cmp rsi, 6
 15684 0000A570 7410                    	je .L_lambda_simple_env_end_03f6
 15685 0000A572 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15686 0000A576 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15687 0000A57A 48FFC6                  	inc rsi
 15688 0000A57D 48FFC2                  	inc rdx
 15689 0000A580 EBEA                    	jmp .L_lambda_simple_env_loop_03f6
 15690                                  .L_lambda_simple_env_end_03f6:
 15691 0000A582 5B                      	pop rbx
 15692 0000A583 BE00000000              	mov rsi, 0
 15693                                  .L_lambda_simple_params_loop_03f6:	; copy params
 15694 0000A588 4883FE01                	cmp rsi, 1
 15695 0000A58C 740E                    	je .L_lambda_simple_params_end_03f6
 15696 0000A58E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15697 0000A593 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15698 0000A597 48FFC6                  	inc rsi
 15699 0000A59A EBEC                    	jmp .L_lambda_simple_params_loop_03f6
 15700                                  .L_lambda_simple_params_end_03f6:
 15701 0000A59C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 15702 0000A59F 4889C3                  	mov rbx, rax
 15703 0000A5A2 58                      	pop rax
 15704 0000A5A3 C60004                  	mov byte [rax], T_closure
 15705 0000A5A6 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15706 0000A5AA 48C74009[B7A50000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03f6
 15707 0000A5B2 E94A070000              	jmp .L_lambda_simple_end_03f6
 15708                                  .L_lambda_simple_code_03f6:	; lambda-simple body
 15709 0000A5B7 48837C241001            	cmp qword [rsp + 8 * 2], 1
 15710 0000A5BD 740B                    	je .L_lambda_simple_arity_check_ok_03f6
 15711 0000A5BF FF742410                	push qword [rsp + 8 * 2]
 15712 0000A5C3 6A01                    	push 1
 15713 0000A5C5 E9D5AB0000              	jmp L_error_incorrect_arity_simple
 15714                                  .L_lambda_simple_arity_check_ok_03f6:
 15715 0000A5CA C8000000                	enter 0, 0
 15716                                  	; preparing a tail-call
 15717 0000A5CE BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15718 0000A5D3 E80EAC0000              	call malloc
 15719 0000A5D8 50                      	push rax
 15720 0000A5D9 BF08000000              	mov rdi, 8 * 1	; new rib
 15721 0000A5DE E803AC0000              	call malloc
 15722 0000A5E3 50                      	push rax
 15723 0000A5E4 BF40000000              	mov rdi, 8 * 8	; extended env
 15724 0000A5E9 E8F8AB0000              	call malloc
 15725 0000A5EE 488B7D10                	mov rdi, ENV
 15726 0000A5F2 BE00000000              	mov rsi, 0
 15727 0000A5F7 BA01000000              	mov rdx, 1
 15728                                  .L_lambda_simple_env_loop_03f7:	; ext_env[i + 1] <-- env[i]
 15729 0000A5FC 4883FE07                	cmp rsi, 7
 15730 0000A600 7410                    	je .L_lambda_simple_env_end_03f7
 15731 0000A602 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15732 0000A606 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15733 0000A60A 48FFC6                  	inc rsi
 15734 0000A60D 48FFC2                  	inc rdx
 15735 0000A610 EBEA                    	jmp .L_lambda_simple_env_loop_03f7
 15736                                  .L_lambda_simple_env_end_03f7:
 15737 0000A612 5B                      	pop rbx
 15738 0000A613 BE00000000              	mov rsi, 0
 15739                                  .L_lambda_simple_params_loop_03f7:	; copy params
 15740 0000A618 4883FE01                	cmp rsi, 1
 15741 0000A61C 740E                    	je .L_lambda_simple_params_end_03f7
 15742 0000A61E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15743 0000A623 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15744 0000A627 48FFC6                  	inc rsi
 15745 0000A62A EBEC                    	jmp .L_lambda_simple_params_loop_03f7
 15746                                  .L_lambda_simple_params_end_03f7:
 15747 0000A62C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 15748 0000A62F 4889C3                  	mov rbx, rax
 15749 0000A632 58                      	pop rax
 15750 0000A633 C60004                  	mov byte [rax], T_closure
 15751 0000A636 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15752 0000A63A 48C74009[47A60000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03f7
 15753 0000A642 E9AF040000              	jmp .L_lambda_simple_end_03f7
 15754                                  .L_lambda_simple_code_03f7:	; lambda-simple body
 15755 0000A647 48837C241001            	cmp qword [rsp + 8 * 2], 1
 15756 0000A64D 740B                    	je .L_lambda_simple_arity_check_ok_03f7
 15757 0000A64F FF742410                	push qword [rsp + 8 * 2]
 15758 0000A653 6A01                    	push 1
 15759 0000A655 E945AB0000              	jmp L_error_incorrect_arity_simple
 15760                                  .L_lambda_simple_arity_check_ok_03f7:
 15761 0000A65A C8000000                	enter 0, 0
 15762                                  	; preparing a tail-call
 15763 0000A65E 48B8-                   	mov rax, L_constants + 2335
 15763 0000A660 [1F09000000000000] 
 15764 0000A668 50                      	push rax
 15765 0000A669 6A01                    	push 1	; arg count
 15766 0000A66B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15767 0000A670 E871AB0000              	call malloc
 15768 0000A675 50                      	push rax
 15769 0000A676 BF08000000              	mov rdi, 8 * 1	; new rib
 15770 0000A67B E866AB0000              	call malloc
 15771 0000A680 50                      	push rax
 15772 0000A681 BF48000000              	mov rdi, 8 * 9	; extended env
 15773 0000A686 E85BAB0000              	call malloc
 15774 0000A68B 488B7D10                	mov rdi, ENV
 15775 0000A68F BE00000000              	mov rsi, 0
 15776 0000A694 BA01000000              	mov rdx, 1
 15777                                  .L_lambda_simple_env_loop_03f8:	; ext_env[i + 1] <-- env[i]
 15778 0000A699 4883FE08                	cmp rsi, 8
 15779 0000A69D 7410                    	je .L_lambda_simple_env_end_03f8
 15780 0000A69F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15781 0000A6A3 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15782 0000A6A7 48FFC6                  	inc rsi
 15783 0000A6AA 48FFC2                  	inc rdx
 15784 0000A6AD EBEA                    	jmp .L_lambda_simple_env_loop_03f8
 15785                                  .L_lambda_simple_env_end_03f8:
 15786 0000A6AF 5B                      	pop rbx
 15787 0000A6B0 BE00000000              	mov rsi, 0
 15788                                  .L_lambda_simple_params_loop_03f8:	; copy params
 15789 0000A6B5 4883FE01                	cmp rsi, 1
 15790 0000A6B9 740E                    	je .L_lambda_simple_params_end_03f8
 15791 0000A6BB 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15792 0000A6C0 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15793 0000A6C4 48FFC6                  	inc rsi
 15794 0000A6C7 EBEC                    	jmp .L_lambda_simple_params_loop_03f8
 15795                                  .L_lambda_simple_params_end_03f8:
 15796 0000A6C9 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 15797 0000A6CC 4889C3                  	mov rbx, rax
 15798 0000A6CF 58                      	pop rax
 15799 0000A6D0 C60004                  	mov byte [rax], T_closure
 15800 0000A6D3 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15801 0000A6D7 48C74009[E4A60000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03f8
 15802 0000A6DF E9C9030000              	jmp .L_lambda_simple_end_03f8
 15803                                  .L_lambda_simple_code_03f8:	; lambda-simple body
 15804 0000A6E4 48837C241001            	cmp qword [rsp + 8 * 2], 1
 15805 0000A6EA 740B                    	je .L_lambda_simple_arity_check_ok_03f8
 15806 0000A6EC FF742410                	push qword [rsp + 8 * 2]
 15807 0000A6F0 6A01                    	push 1
 15808 0000A6F2 E9A8AA0000              	jmp L_error_incorrect_arity_simple
 15809                                  .L_lambda_simple_arity_check_ok_03f8:
 15810 0000A6F7 C8000000                	enter 0, 0
 15811                                  
 15812 0000A6FB BF08000000              	mov rdi, 8
 15813 0000A700 E8E1AA0000              	call malloc
 15814 0000A705 488B5D20                	mov rbx, PARAM(0)	; param run
 15815 0000A709 488918                  	mov [rax], rbx	; box run
 15816 0000A70C 48894520                	mov PARAM(0), rax	; replace param with box
 15817 0000A710 48B8-                   	mov rax, sob_void
 15817 0000A712 [0000000000000000] 
 15818                                  
 15819 0000A71A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15820 0000A71F E8C2AA0000              	call malloc
 15821 0000A724 50                      	push rax
 15822 0000A725 BF08000000              	mov rdi, 8 * 1	; new rib
 15823 0000A72A E8B7AA0000              	call malloc
 15824 0000A72F 50                      	push rax
 15825 0000A730 BF50000000              	mov rdi, 8 * 10	; extended env
 15826 0000A735 E8ACAA0000              	call malloc
 15827 0000A73A 488B7D10                	mov rdi, ENV
 15828 0000A73E BE00000000              	mov rsi, 0
 15829 0000A743 BA01000000              	mov rdx, 1
 15830                                  .L_lambda_simple_env_loop_03f9:	; ext_env[i + 1] <-- env[i]
 15831 0000A748 4883FE09                	cmp rsi, 9
 15832 0000A74C 7410                    	je .L_lambda_simple_env_end_03f9
 15833 0000A74E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15834 0000A752 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15835 0000A756 48FFC6                  	inc rsi
 15836 0000A759 48FFC2                  	inc rdx
 15837 0000A75C EBEA                    	jmp .L_lambda_simple_env_loop_03f9
 15838                                  .L_lambda_simple_env_end_03f9:
 15839 0000A75E 5B                      	pop rbx
 15840 0000A75F BE00000000              	mov rsi, 0
 15841                                  .L_lambda_simple_params_loop_03f9:	; copy params
 15842 0000A764 4883FE01                	cmp rsi, 1
 15843 0000A768 740E                    	je .L_lambda_simple_params_end_03f9
 15844 0000A76A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15845 0000A76F 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15846 0000A773 48FFC6                  	inc rsi
 15847 0000A776 EBEC                    	jmp .L_lambda_simple_params_loop_03f9
 15848                                  .L_lambda_simple_params_end_03f9:
 15849 0000A778 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 15850 0000A77B 4889C3                  	mov rbx, rax
 15851 0000A77E 58                      	pop rax
 15852 0000A77F C60004                  	mov byte [rax], T_closure
 15853 0000A782 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15854 0000A786 48C74009[93A70000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03f9
 15855 0000A78E E953010000              	jmp .L_lambda_simple_end_03f9
 15856                                  .L_lambda_simple_code_03f9:	; lambda-simple body
 15857 0000A793 48837C241002            	cmp qword [rsp + 8 * 2], 2
 15858 0000A799 740B                    	je .L_lambda_simple_arity_check_ok_03f9
 15859 0000A79B FF742410                	push qword [rsp + 8 * 2]
 15860 0000A79F 6A02                    	push 2
 15861 0000A7A1 E9F9A90000              	jmp L_error_incorrect_arity_simple
 15862                                  .L_lambda_simple_arity_check_ok_03f9:
 15863 0000A7A6 C8000000                	enter 0, 0
 15864                                  	; preparing a non-tail-call
 15865 0000A7AA 488B4528                	mov rax, PARAM(1)	; param s
 15866 0000A7AE 50                      	push rax
 15867 0000A7AF 6A01                    	push 1	; arg count
 15868 0000A7B1 488B0425[3C1B0000]      	mov rax, qword [free_var_126]	; free var null?
 15869 0000A7B9 803805                  	cmp byte [rax], T_undefined
 15870 0000A7BC 0F84F7A80000            	je L_error_fvar_undefined
 15871 0000A7C2 803804                  	cmp byte [rax], T_closure
 15872 0000A7C5 0F8572A90000            	jne L_error_non_closure
 15873 0000A7CB FF7001                  	push SOB_CLOSURE_ENV(rax)
 15874 0000A7CE FF5009                  	call SOB_CLOSURE_CODE(rax)
 15875 0000A7D1 483D[02000000]          	cmp rax, sob_boolean_false
 15876 0000A7D7 0F8505010000            	jne .L_or_end_004c
 15877                                  	; preparing a non-tail-call
 15878                                  	; preparing a non-tail-call
 15879 0000A7DD 488B4528                	mov rax, PARAM(1)	; param s
 15880 0000A7E1 50                      	push rax
 15881 0000A7E2 6A01                    	push 1	; arg count
 15882 0000A7E4 488B0425[74160000]      	mov rax, qword [free_var_54]	; free var car
 15883 0000A7EC 803805                  	cmp byte [rax], T_undefined
 15884 0000A7EF 0F84C4A80000            	je L_error_fvar_undefined
 15885 0000A7F5 803804                  	cmp byte [rax], T_closure
 15886 0000A7F8 0F853FA90000            	jne L_error_non_closure
 15887 0000A7FE FF7001                  	push SOB_CLOSURE_ENV(rax)
 15888 0000A801 FF5009                  	call SOB_CLOSURE_CODE(rax)
 15889 0000A804 50                      	push rax
 15890 0000A805 488B4520                	mov rax, PARAM(0)	; param a
 15891 0000A809 50                      	push rax
 15892 0000A80A 6A02                    	push 2	; arg count
 15893 0000A80C 488B4510                	mov rax, ENV
 15894 0000A810 488B4008                	mov rax, qword [rax + 8 * 1]
 15895 0000A814 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin-ordering
 15896 0000A817 803804                  	cmp byte [rax], T_closure
 15897 0000A81A 0F851DA90000            	jne L_error_non_closure
 15898 0000A820 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15899 0000A823 FF5009                  	call SOB_CLOSURE_CODE(rax)
 15900 0000A826 483D[02000000]          	cmp rax, sob_boolean_false
 15901 0000A82C 0F84A6000000            	je .L_if_else_02fa
 15902                                  	; preparing a tail-call
 15903                                  	; preparing a non-tail-call
 15904 0000A832 488B4528                	mov rax, PARAM(1)	; param s
 15905 0000A836 50                      	push rax
 15906 0000A837 6A01                    	push 1	; arg count
 15907 0000A839 488B0425[73170000]      	mov rax, qword [free_var_69]	; free var cdr
 15908 0000A841 803805                  	cmp byte [rax], T_undefined
 15909 0000A844 0F846FA80000            	je L_error_fvar_undefined
 15910 0000A84A 803804                  	cmp byte [rax], T_closure
 15911 0000A84D 0F85EAA80000            	jne L_error_non_closure
 15912 0000A853 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15913 0000A856 FF5009                  	call SOB_CLOSURE_CODE(rax)
 15914 0000A859 50                      	push rax
 15915                                  	; preparing a non-tail-call
 15916 0000A85A 488B4528                	mov rax, PARAM(1)	; param s
 15917 0000A85E 50                      	push rax
 15918 0000A85F 6A01                    	push 1	; arg count
 15919 0000A861 488B0425[74160000]      	mov rax, qword [free_var_54]	; free var car
 15920 0000A869 803805                  	cmp byte [rax], T_undefined
 15921 0000A86C 0F8447A80000            	je L_error_fvar_undefined
 15922 0000A872 803804                  	cmp byte [rax], T_closure
 15923 0000A875 0F85C2A80000            	jne L_error_non_closure
 15924 0000A87B FF7001                  	push SOB_CLOSURE_ENV(rax)
 15925 0000A87E FF5009                  	call SOB_CLOSURE_CODE(rax)
 15926 0000A881 50                      	push rax
 15927 0000A882 6A02                    	push 2	; arg count
 15928 0000A884 488B4510                	mov rax, ENV
 15929 0000A888 488B00                  	mov rax, qword [rax + 8 * 0]
 15930 0000A88B 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 15931 0000A88E 488B00                  	mov rax, qword [rax]
 15932 0000A891 803804                  	cmp byte [rax], T_closure
 15933 0000A894 0F85A3A80000            	jne L_error_non_closure
 15934 0000A89A FF7001                  	push SOB_CLOSURE_ENV(rax)
 15935                                  
 15936                                  	; recycling the current frame
 15937 0000A89D FF7508                  	push qword [rbp + 8 * 1]	; old return address
 15938 0000A8A0 FF7500                  	push qword [rbp]	; old frame-pointer
 15939 0000A8A3 B906000000              	mov rcx, 6
 15940 0000A8A8 488B5D18                	mov rbx, COUNT
 15941 0000A8AC 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 15942 0000A8B1 488D55F8                	lea rdx, [rbp - 8]
 15943                                  .L_tc_recycle_frame_loop_0546:
 15944 0000A8B5 4883F900                	cmp rcx, 0
 15945 0000A8B9 7413                    	je .L_tc_recycle_frame_done_0546
 15946 0000A8BB 488B32                  	mov rsi, qword [rdx]
 15947 0000A8BE 488933                  	mov qword [rbx], rsi
 15948 0000A8C1 48FFC9                  	dec rcx
 15949 0000A8C4 4883EB08                	sub rbx, 8
 15950 0000A8C8 4883EA08                	sub rdx, 8
 15951 0000A8CC EBE7                    	jmp .L_tc_recycle_frame_loop_0546
 15952                                  .L_tc_recycle_frame_done_0546:
 15953 0000A8CE 488D6308                	lea rsp, [rbx + 8]
 15954 0000A8D2 5D                      	pop rbp
 15955 0000A8D3 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 15956 0000A8D6 EB0A                    	jmp .L_if_end_02fa
 15957                                  .L_if_else_02fa:
 15958 0000A8D8 48B8-                   	mov rax, L_constants + 2
 15958 0000A8DA [0200000000000000] 
 15959                                  .L_if_end_02fa:
 15960                                  .L_or_end_004c:
 15961 0000A8E2 C9                      	leave
 15962 0000A8E3 C22000                  	ret AND_KILL_FRAME(2)
 15963                                  .L_lambda_simple_end_03f9:	; new closure is in rax
 15964                                  
 15965 0000A8E6 50                      	push rax
 15966 0000A8E7 488B4520                	mov rax, PARAM(0)	; param run
 15967                                  
 15968 0000A8EB 8F00                    	pop qword[rax]
 15969 0000A8ED 48B8-                   	mov rax, sob_void
 15969 0000A8EF [0000000000000000] 
 15970                                  
 15971 0000A8F7 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15972 0000A8FC E8E5A80000              	call malloc
 15973 0000A901 50                      	push rax
 15974 0000A902 BF08000000              	mov rdi, 8 * 1	; new rib
 15975 0000A907 E8DAA80000              	call malloc
 15976 0000A90C 50                      	push rax
 15977 0000A90D BF50000000              	mov rdi, 8 * 10	; extended env
 15978 0000A912 E8CFA80000              	call malloc
 15979 0000A917 488B7D10                	mov rdi, ENV
 15980 0000A91B BE00000000              	mov rsi, 0
 15981 0000A920 BA01000000              	mov rdx, 1
 15982                                  .L_lambda_opt_env_loop_0087:	; ext_env[i + 1] <-- env[i]
 15983 0000A925 4883FE09                	cmp rsi, 9
 15984 0000A929 7410                    	je .L_lambda_opt_env_end_0087
 15985 0000A92B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15986 0000A92F 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15987 0000A933 48FFC6                  	inc rsi
 15988 0000A936 48FFC2                  	inc rdx
 15989 0000A939 EBEA                    	jmp .L_lambda_opt_env_loop_0087
 15990                                  .L_lambda_opt_env_end_0087:
 15991 0000A93B 5B                      	pop rbx
 15992 0000A93C BE00000000              	mov rsi, 0
 15993                                  .L_lambda_opt_params_loop_0087:	; copy params
 15994 0000A941 4883FE01                	cmp rsi, 1
 15995 0000A945 740E                    	je .L_lambda_opt_params_end_0087
 15996 0000A947 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15997 0000A94C 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15998 0000A950 48FFC6                  	inc rsi
 15999 0000A953 EBEC                    	jmp .L_lambda_opt_params_loop_0087
 16000                                  .L_lambda_opt_params_end_0087:
 16001 0000A955 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 16002 0000A958 4889C3                  	mov rbx, rax
 16003 0000A95B 58                      	pop rax
 16004 0000A95C C60004                  	mov byte [rax], T_closure
 16005 0000A95F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16006 0000A963 48C74009[70A90000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0087
 16007 0000A96B E939010000              	jmp .L_lambda_opt_end_0087
 16008                                  .L_lambda_opt_code_0087:	; lambda-simple body
 16009 0000A970 48837C241001            	cmp qword [rsp + 8 * 2], 1 ;	 check num of args
 16010 0000A976 740D                    	je .L_lambda_opt_arity_check_exact_0087 ;	 if equal, go to exact arity
 16011 0000A978 7F42                    	jg .L_lambda_opt_arity_check_more_0087 ;	 if greater than, go to arity more
 16012 0000A97A FF742410                	push qword [rsp + 8 * 2] ;	 else, throw opt arity error
 16013 0000A97E 6A01                    	push 1
 16014 0000A980 E92EA80000              	jmp L_error_incorrect_arity_opt
 16015                                  .L_lambda_opt_arity_check_exact_0087:
 16016 0000A985 488B442410              	mov rax, qword [rsp + 8 * 2] ;	 number of args
 16017 0000A98A 488D5CC410              	lea rbx, [rsp + 8 * (2 + rax)] ;	 address of last element
 16018 0000A98F 4883EC08                	sub rsp, 8
 16019 0000A993 488D0C24                	lea rcx, [rsp + 0] ;	 new start
 16020                                  .L_lambda_opt_shift_entry_0087:
 16021 0000A997 488B5108                	mov rdx, [rcx + 8]
 16022 0000A99B 488911                  	mov [rcx], rdx
 16023 0000A99E 4883C108                	add rcx, 8
 16024 0000A9A2 4839CB                  	cmp rbx, rcx
 16025 0000A9A5 75F0                    	jne .L_lambda_opt_shift_entry_0087
 16026                                  .L_lambda_opt_shift_exit_0087:
 16027 0000A9A7 48C703[01000000]        	mov qword[rbx], sob_nil ;	 place nil
 16028 0000A9AE 4883C001                	add rax, 1
 16029 0000A9B2 4889442410              	mov qword [rsp + 8 * 2], rax
 16030 0000A9B7 E987000000              	jmp .L_lambda_opt_stack_adjusted_0087
 16031                                  .L_lambda_opt_arity_check_more_0087:
 16032 0000A9BC 48BA-                   	mov rdx, sob_nil ;	 base cdr
 16032 0000A9BE [0100000000000000] 
 16033 0000A9C6 48837C241002            	cmp qword [rsp + 8 * 2], 2
 16034 0000A9CC 7451                    	je .L_lambda_opt_stack_shrink_loop_exit_0087
 16035                                  .L_lambda_opt_stack_shrink_loop_0087:
 16036 0000A9CE BF11000000              	mov rdi, (1 + 8 + 8)
 16037 0000A9D3 E80EA80000              	call malloc
 16038 0000A9D8 C60021                  	mov byte[rax], T_pair
 16039 0000A9DB 48895009                	mov SOB_PAIR_CDR(rax), rdx
 16040 0000A9DF 4889C2                  	mov rdx, rax
 16041 0000A9E2 488B442410              	mov rax, qword [rsp + 8 * 2]
 16042 0000A9E7 488B5CC410              	mov rbx, qword [rsp + 8 * (2 + rax)]
 16043 0000A9EC 48895A01                	mov SOB_PAIR_CAR(rdx), rbx
 16044 0000A9F0 488D5CC408              	lea rbx, [rsp + 8 * (2 + rax - 1)]
 16045                                  .L_lambda_opt_extra_shift_process_0087:
 16046 0000A9F5 488B0B                  	mov rcx, [rbx]
 16047 0000A9F8 48894B08                	mov [rbx + 8], rcx
 16048 0000A9FC 4883EB08                	sub rbx, 8
 16049 0000AA00 4839DC                  	cmp rsp, rbx
 16050 0000AA03 7EF0                    	jle .L_lambda_opt_extra_shift_process_0087
 16051                                  .L_lambda_opt_extra_shift_process_end_0087:
 16052 0000AA05 4883C408                	add rsp, 8
 16053 0000AA09 488B5C2410              	mov rbx, [rsp + 8 * 2]
 16054 0000AA0E 4883EB01                	sub rbx, 1
 16055 0000AA12 48895C2410              	mov [rsp + 8 * 2], rbx
 16056 0000AA17 48837C241002            	cmp qword [rsp + 8 * 2], 2
 16057 0000AA1D 7FAF                    	jg .L_lambda_opt_stack_shrink_loop_0087
 16058                                  .L_lambda_opt_stack_shrink_loop_exit_0087:
 16059 0000AA1F 488B4C2410              	mov rcx, [rsp + 8 * 2]
 16060 0000AA24 488B5CCC10              	mov rbx, qword [rsp + 8 * (2 + rcx)]
 16061 0000AA29 BF11000000              	mov rdi, (1 + 8 + 8)
 16062 0000AA2E E8B3A70000              	call malloc
 16063 0000AA33 C60021                  	mov byte[rax], T_pair
 16064 0000AA36 48895009                	mov SOB_PAIR_CDR(rax), rdx
 16065 0000AA3A 48895801                	mov SOB_PAIR_CAR(rax), rbx
 16066 0000AA3E 488944CC10              	mov [rsp + 8 * (2 + rcx)], rax
 16067                                  .L_lambda_opt_stack_adjusted_0087:
 16068 0000AA43 C8000000                	enter 0, 0
 16069                                  	; preparing a tail-call
 16070 0000AA47 488B4528                	mov rax, PARAM(1)	; param s
 16071 0000AA4B 50                      	push rax
 16072 0000AA4C 488B4520                	mov rax, PARAM(0)	; param a
 16073 0000AA50 50                      	push rax
 16074 0000AA51 6A02                    	push 2	; arg count
 16075 0000AA53 488B4510                	mov rax, ENV
 16076 0000AA57 488B00                  	mov rax, qword [rax + 8 * 0]
 16077 0000AA5A 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 16078 0000AA5D 488B00                  	mov rax, qword [rax]
 16079 0000AA60 803804                  	cmp byte [rax], T_closure
 16080 0000AA63 0F85D4A60000            	jne L_error_non_closure
 16081 0000AA69 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16082                                  
 16083                                  	; recycling the current frame
 16084 0000AA6C FF7508                  	push qword [rbp + 8 * 1]	; old return address
 16085 0000AA6F FF7500                  	push qword [rbp]	; old frame-pointer
 16086 0000AA72 B906000000              	mov rcx, 6
 16087 0000AA77 488B5D18                	mov rbx, COUNT
 16088 0000AA7B 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 16089 0000AA80 488D55F8                	lea rdx, [rbp - 8]
 16090                                  .L_tc_recycle_frame_loop_0547:
 16091 0000AA84 4883F900                	cmp rcx, 0
 16092 0000AA88 7413                    	je .L_tc_recycle_frame_done_0547
 16093 0000AA8A 488B32                  	mov rsi, qword [rdx]
 16094 0000AA8D 488933                  	mov qword [rbx], rsi
 16095 0000AA90 48FFC9                  	dec rcx
 16096 0000AA93 4883EB08                	sub rbx, 8
 16097 0000AA97 4883EA08                	sub rdx, 8
 16098 0000AA9B EBE7                    	jmp .L_tc_recycle_frame_loop_0547
 16099                                  .L_tc_recycle_frame_done_0547:
 16100 0000AA9D 488D6308                	lea rsp, [rbx + 8]
 16101 0000AAA1 5D                      	pop rbp
 16102 0000AAA2 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 16103 0000AAA5 C9                      	leave
 16104 0000AAA6 C22000                  	ret AND_KILL_FRAME(2)
 16105                                  .L_lambda_opt_end_0087:	; new closure is in rax
 16106 0000AAA9 C9                      	leave
 16107 0000AAAA C21800                  	ret AND_KILL_FRAME(1)
 16108                                  .L_lambda_simple_end_03f8:	; new closure is in rax
 16109 0000AAAD 803804                  	cmp byte [rax], T_closure
 16110 0000AAB0 0F8587A60000            	jne L_error_non_closure
 16111 0000AAB6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16112                                  
 16113                                  	; recycling the current frame
 16114 0000AAB9 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 16115 0000AABC FF7500                  	push qword [rbp]	; old frame-pointer
 16116 0000AABF B905000000              	mov rcx, 5
 16117 0000AAC4 488B5D18                	mov rbx, COUNT
 16118 0000AAC8 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 16119 0000AACD 488D55F8                	lea rdx, [rbp - 8]
 16120                                  .L_tc_recycle_frame_loop_0548:
 16121 0000AAD1 4883F900                	cmp rcx, 0
 16122 0000AAD5 7413                    	je .L_tc_recycle_frame_done_0548
 16123 0000AAD7 488B32                  	mov rsi, qword [rdx]
 16124 0000AADA 488933                  	mov qword [rbx], rsi
 16125 0000AADD 48FFC9                  	dec rcx
 16126 0000AAE0 4883EB08                	sub rbx, 8
 16127 0000AAE4 4883EA08                	sub rdx, 8
 16128 0000AAE8 EBE7                    	jmp .L_tc_recycle_frame_loop_0548
 16129                                  .L_tc_recycle_frame_done_0548:
 16130 0000AAEA 488D6308                	lea rsp, [rbx + 8]
 16131 0000AAEE 5D                      	pop rbp
 16132 0000AAEF FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 16133 0000AAF2 C9                      	leave
 16134 0000AAF3 C21800                  	ret AND_KILL_FRAME(1)
 16135                                  .L_lambda_simple_end_03f7:	; new closure is in rax
 16136 0000AAF6 50                      	push rax
 16137 0000AAF7 6A01                    	push 1	; arg count
 16138 0000AAF9 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16139 0000AAFE E8E3A60000              	call malloc
 16140 0000AB03 50                      	push rax
 16141 0000AB04 BF08000000              	mov rdi, 8 * 1	; new rib
 16142 0000AB09 E8D8A60000              	call malloc
 16143 0000AB0E 50                      	push rax
 16144 0000AB0F BF40000000              	mov rdi, 8 * 8	; extended env
 16145 0000AB14 E8CDA60000              	call malloc
 16146 0000AB19 488B7D10                	mov rdi, ENV
 16147 0000AB1D BE00000000              	mov rsi, 0
 16148 0000AB22 BA01000000              	mov rdx, 1
 16149                                  .L_lambda_simple_env_loop_03fa:	; ext_env[i + 1] <-- env[i]
 16150 0000AB27 4883FE07                	cmp rsi, 7
 16151 0000AB2B 7410                    	je .L_lambda_simple_env_end_03fa
 16152 0000AB2D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16153 0000AB31 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16154 0000AB35 48FFC6                  	inc rsi
 16155 0000AB38 48FFC2                  	inc rdx
 16156 0000AB3B EBEA                    	jmp .L_lambda_simple_env_loop_03fa
 16157                                  .L_lambda_simple_env_end_03fa:
 16158 0000AB3D 5B                      	pop rbx
 16159 0000AB3E BE00000000              	mov rsi, 0
 16160                                  .L_lambda_simple_params_loop_03fa:	; copy params
 16161 0000AB43 4883FE01                	cmp rsi, 1
 16162 0000AB47 740E                    	je .L_lambda_simple_params_end_03fa
 16163 0000AB49 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16164 0000AB4E 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16165 0000AB52 48FFC6                  	inc rsi
 16166 0000AB55 EBEC                    	jmp .L_lambda_simple_params_loop_03fa
 16167                                  .L_lambda_simple_params_end_03fa:
 16168 0000AB57 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 16169 0000AB5A 4889C3                  	mov rbx, rax
 16170 0000AB5D 58                      	pop rax
 16171 0000AB5E C60004                  	mov byte [rax], T_closure
 16172 0000AB61 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16173 0000AB65 48C74009[72AB0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03fa
 16174 0000AB6D E946010000              	jmp .L_lambda_simple_end_03fa
 16175                                  .L_lambda_simple_code_03fa:	; lambda-simple body
 16176 0000AB72 48837C241001            	cmp qword [rsp + 8 * 2], 1
 16177 0000AB78 740B                    	je .L_lambda_simple_arity_check_ok_03fa
 16178 0000AB7A FF742410                	push qword [rsp + 8 * 2]
 16179 0000AB7E 6A01                    	push 1
 16180 0000AB80 E91AA60000              	jmp L_error_incorrect_arity_simple
 16181                                  .L_lambda_simple_arity_check_ok_03fa:
 16182 0000AB85 C8000000                	enter 0, 0
 16183                                  	; preparing a non-tail-call
 16184 0000AB89 488B4510                	mov rax, ENV
 16185 0000AB8D 488B4020                	mov rax, qword [rax + 8 * 4]
 16186 0000AB91 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin<?
 16187 0000AB94 50                      	push rax
 16188 0000AB95 6A01                    	push 1	; arg count
 16189 0000AB97 488B4520                	mov rax, PARAM(0)	; param make-run
 16190 0000AB9B 803804                  	cmp byte [rax], T_closure
 16191 0000AB9E 0F8599A50000            	jne L_error_non_closure
 16192 0000ABA4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16193 0000ABA7 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16194 0000ABAA 48890425[22130000]      	mov qword [free_var_4], rax	; free var <
 16195 0000ABB2 803805                  	cmp byte [rax], T_undefined
 16196 0000ABB5 0F84FEA40000            	je L_error_fvar_undefined
 16197 0000ABBB 48B8-                   	mov rax, sob_void
 16197 0000ABBD [0000000000000000] 
 16198                                  
 16199                                  	; preparing a non-tail-call
 16200 0000ABC5 488B4510                	mov rax, ENV
 16201 0000ABC9 488B00                  	mov rax, qword [rax + 8 * 0]
 16202 0000ABCC 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin<=?
 16203 0000ABCF 50                      	push rax
 16204 0000ABD0 6A01                    	push 1	; arg count
 16205 0000ABD2 488B4520                	mov rax, PARAM(0)	; param make-run
 16206 0000ABD6 803804                  	cmp byte [rax], T_closure
 16207 0000ABD9 0F855EA50000            	jne L_error_non_closure
 16208 0000ABDF FF7001                  	push SOB_CLOSURE_ENV(rax)
 16209 0000ABE2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16210 0000ABE5 48890425[33130000]      	mov qword [free_var_5], rax	; free var <=
 16211 0000ABED 803805                  	cmp byte [rax], T_undefined
 16212 0000ABF0 0F84C3A40000            	je L_error_fvar_undefined
 16213 0000ABF6 48B8-                   	mov rax, sob_void
 16213 0000ABF8 [0000000000000000] 
 16214                                  
 16215                                  	; preparing a non-tail-call
 16216 0000AC00 488B4510                	mov rax, ENV
 16217 0000AC04 488B4008                	mov rax, qword [rax + 8 * 1]
 16218 0000AC08 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin>?
 16219 0000AC0B 50                      	push rax
 16220 0000AC0C 6A01                    	push 1	; arg count
 16221 0000AC0E 488B4520                	mov rax, PARAM(0)	; param make-run
 16222 0000AC12 803804                  	cmp byte [rax], T_closure
 16223 0000AC15 0F8522A50000            	jne L_error_non_closure
 16224 0000AC1B FF7001                  	push SOB_CLOSURE_ENV(rax)
 16225 0000AC1E FF5009                  	call SOB_CLOSURE_CODE(rax)
 16226 0000AC21 48890425[55130000]      	mov qword [free_var_7], rax	; free var >
 16227 0000AC29 803805                  	cmp byte [rax], T_undefined
 16228 0000AC2C 0F8487A40000            	je L_error_fvar_undefined
 16229 0000AC32 48B8-                   	mov rax, sob_void
 16229 0000AC34 [0000000000000000] 
 16230                                  
 16231                                  	; preparing a non-tail-call
 16232 0000AC3C 488B4510                	mov rax, ENV
 16233 0000AC40 488B4010                	mov rax, qword [rax + 8 * 2]
 16234 0000AC44 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin>=?
 16235 0000AC47 50                      	push rax
 16236 0000AC48 6A01                    	push 1	; arg count
 16237 0000AC4A 488B4520                	mov rax, PARAM(0)	; param make-run
 16238 0000AC4E 803804                  	cmp byte [rax], T_closure
 16239 0000AC51 0F85E6A40000            	jne L_error_non_closure
 16240 0000AC57 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16241 0000AC5A FF5009                  	call SOB_CLOSURE_CODE(rax)
 16242 0000AC5D 48890425[66130000]      	mov qword [free_var_8], rax	; free var >=
 16243 0000AC65 803805                  	cmp byte [rax], T_undefined
 16244 0000AC68 0F844BA40000            	je L_error_fvar_undefined
 16245 0000AC6E 48B8-                   	mov rax, sob_void
 16245 0000AC70 [0000000000000000] 
 16246                                  
 16247                                  	; preparing a non-tail-call
 16248 0000AC78 488B4510                	mov rax, ENV
 16249 0000AC7C 488B4018                	mov rax, qword [rax + 8 * 3]
 16250 0000AC80 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin=?
 16251 0000AC83 50                      	push rax
 16252 0000AC84 6A01                    	push 1	; arg count
 16253 0000AC86 488B4520                	mov rax, PARAM(0)	; param make-run
 16254 0000AC8A 803804                  	cmp byte [rax], T_closure
 16255 0000AC8D 0F85AAA40000            	jne L_error_non_closure
 16256 0000AC93 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16257 0000AC96 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16258 0000AC99 48890425[44130000]      	mov qword [free_var_6], rax	; free var =
 16259 0000ACA1 803805                  	cmp byte [rax], T_undefined
 16260 0000ACA4 0F840FA40000            	je L_error_fvar_undefined
 16261 0000ACAA 48B8-                   	mov rax, sob_void
 16261 0000ACAC [0000000000000000] 
 16262 0000ACB4 C9                      	leave
 16263 0000ACB5 C21800                  	ret AND_KILL_FRAME(1)
 16264                                  .L_lambda_simple_end_03fa:	; new closure is in rax
 16265 0000ACB8 803804                  	cmp byte [rax], T_closure
 16266 0000ACBB 0F857CA40000            	jne L_error_non_closure
 16267 0000ACC1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16268                                  
 16269                                  	; recycling the current frame
 16270 0000ACC4 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 16271 0000ACC7 FF7500                  	push qword [rbp]	; old frame-pointer
 16272 0000ACCA B905000000              	mov rcx, 5
 16273 0000ACCF 488B5D18                	mov rbx, COUNT
 16274 0000ACD3 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 16275 0000ACD8 488D55F8                	lea rdx, [rbp - 8]
 16276                                  .L_tc_recycle_frame_loop_0549:
 16277 0000ACDC 4883F900                	cmp rcx, 0
 16278 0000ACE0 7413                    	je .L_tc_recycle_frame_done_0549
 16279 0000ACE2 488B32                  	mov rsi, qword [rdx]
 16280 0000ACE5 488933                  	mov qword [rbx], rsi
 16281 0000ACE8 48FFC9                  	dec rcx
 16282 0000ACEB 4883EB08                	sub rbx, 8
 16283 0000ACEF 4883EA08                	sub rdx, 8
 16284 0000ACF3 EBE7                    	jmp .L_tc_recycle_frame_loop_0549
 16285                                  .L_tc_recycle_frame_done_0549:
 16286 0000ACF5 488D6308                	lea rsp, [rbx + 8]
 16287 0000ACF9 5D                      	pop rbp
 16288 0000ACFA FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 16289 0000ACFD C9                      	leave
 16290 0000ACFE C21800                  	ret AND_KILL_FRAME(1)
 16291                                  .L_lambda_simple_end_03f6:	; new closure is in rax
 16292 0000AD01 803804                  	cmp byte [rax], T_closure
 16293 0000AD04 0F8533A40000            	jne L_error_non_closure
 16294 0000AD0A FF7001                  	push SOB_CLOSURE_ENV(rax)
 16295                                  
 16296                                  	; recycling the current frame
 16297 0000AD0D FF7508                  	push qword [rbp + 8 * 1]	; old return address
 16298 0000AD10 FF7500                  	push qword [rbp]	; old frame-pointer
 16299 0000AD13 B905000000              	mov rcx, 5
 16300 0000AD18 488B5D18                	mov rbx, COUNT
 16301 0000AD1C 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 16302 0000AD21 488D55F8                	lea rdx, [rbp - 8]
 16303                                  .L_tc_recycle_frame_loop_054a:
 16304 0000AD25 4883F900                	cmp rcx, 0
 16305 0000AD29 7413                    	je .L_tc_recycle_frame_done_054a
 16306 0000AD2B 488B32                  	mov rsi, qword [rdx]
 16307 0000AD2E 488933                  	mov qword [rbx], rsi
 16308 0000AD31 48FFC9                  	dec rcx
 16309 0000AD34 4883EB08                	sub rbx, 8
 16310 0000AD38 4883EA08                	sub rdx, 8
 16311 0000AD3C EBE7                    	jmp .L_tc_recycle_frame_loop_054a
 16312                                  .L_tc_recycle_frame_done_054a:
 16313 0000AD3E 488D6308                	lea rsp, [rbx + 8]
 16314 0000AD42 5D                      	pop rbp
 16315 0000AD43 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 16316 0000AD46 C9                      	leave
 16317 0000AD47 C21800                  	ret AND_KILL_FRAME(1)
 16318                                  .L_lambda_simple_end_03f4:	; new closure is in rax
 16319 0000AD4A 803804                  	cmp byte [rax], T_closure
 16320 0000AD4D 0F85EAA30000            	jne L_error_non_closure
 16321 0000AD53 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16322                                  
 16323                                  	; recycling the current frame
 16324 0000AD56 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 16325 0000AD59 FF7500                  	push qword [rbp]	; old frame-pointer
 16326 0000AD5C B905000000              	mov rcx, 5
 16327 0000AD61 488B5D18                	mov rbx, COUNT
 16328 0000AD65 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 16329 0000AD6A 488D55F8                	lea rdx, [rbp - 8]
 16330                                  .L_tc_recycle_frame_loop_054b:
 16331 0000AD6E 4883F900                	cmp rcx, 0
 16332 0000AD72 7413                    	je .L_tc_recycle_frame_done_054b
 16333 0000AD74 488B32                  	mov rsi, qword [rdx]
 16334 0000AD77 488933                  	mov qword [rbx], rsi
 16335 0000AD7A 48FFC9                  	dec rcx
 16336 0000AD7D 4883EB08                	sub rbx, 8
 16337 0000AD81 4883EA08                	sub rdx, 8
 16338 0000AD85 EBE7                    	jmp .L_tc_recycle_frame_loop_054b
 16339                                  .L_tc_recycle_frame_done_054b:
 16340 0000AD87 488D6308                	lea rsp, [rbx + 8]
 16341 0000AD8B 5D                      	pop rbp
 16342 0000AD8C FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 16343 0000AD8F C9                      	leave
 16344 0000AD90 C21800                  	ret AND_KILL_FRAME(1)
 16345                                  .L_lambda_simple_end_03f2:	; new closure is in rax
 16346 0000AD93 803804                  	cmp byte [rax], T_closure
 16347 0000AD96 0F85A1A30000            	jne L_error_non_closure
 16348 0000AD9C FF7001                  	push SOB_CLOSURE_ENV(rax)
 16349                                  
 16350                                  	; recycling the current frame
 16351 0000AD9F FF7508                  	push qword [rbp + 8 * 1]	; old return address
 16352 0000ADA2 FF7500                  	push qword [rbp]	; old frame-pointer
 16353 0000ADA5 B905000000              	mov rcx, 5
 16354 0000ADAA 488B5D18                	mov rbx, COUNT
 16355 0000ADAE 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 16356 0000ADB3 488D55F8                	lea rdx, [rbp - 8]
 16357                                  .L_tc_recycle_frame_loop_054c:
 16358 0000ADB7 4883F900                	cmp rcx, 0
 16359 0000ADBB 7413                    	je .L_tc_recycle_frame_done_054c
 16360 0000ADBD 488B32                  	mov rsi, qword [rdx]
 16361 0000ADC0 488933                  	mov qword [rbx], rsi
 16362 0000ADC3 48FFC9                  	dec rcx
 16363 0000ADC6 4883EB08                	sub rbx, 8
 16364 0000ADCA 4883EA08                	sub rdx, 8
 16365 0000ADCE EBE7                    	jmp .L_tc_recycle_frame_loop_054c
 16366                                  .L_tc_recycle_frame_done_054c:
 16367 0000ADD0 488D6308                	lea rsp, [rbx + 8]
 16368 0000ADD4 5D                      	pop rbp
 16369 0000ADD5 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 16370 0000ADD8 C9                      	leave
 16371 0000ADD9 C21800                  	ret AND_KILL_FRAME(1)
 16372                                  .L_lambda_simple_end_03f0:	; new closure is in rax
 16373 0000ADDC 803804                  	cmp byte [rax], T_closure
 16374 0000ADDF 0F8558A30000            	jne L_error_non_closure
 16375 0000ADE5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16376                                  
 16377                                  	; recycling the current frame
 16378 0000ADE8 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 16379 0000ADEB FF7500                  	push qword [rbp]	; old frame-pointer
 16380 0000ADEE B905000000              	mov rcx, 5
 16381 0000ADF3 488B5D18                	mov rbx, COUNT
 16382 0000ADF7 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 16383 0000ADFC 488D55F8                	lea rdx, [rbp - 8]
 16384                                  .L_tc_recycle_frame_loop_054d:
 16385 0000AE00 4883F900                	cmp rcx, 0
 16386 0000AE04 7413                    	je .L_tc_recycle_frame_done_054d
 16387 0000AE06 488B32                  	mov rsi, qword [rdx]
 16388 0000AE09 488933                  	mov qword [rbx], rsi
 16389 0000AE0C 48FFC9                  	dec rcx
 16390 0000AE0F 4883EB08                	sub rbx, 8
 16391 0000AE13 4883EA08                	sub rdx, 8
 16392 0000AE17 EBE7                    	jmp .L_tc_recycle_frame_loop_054d
 16393                                  .L_tc_recycle_frame_done_054d:
 16394 0000AE19 488D6308                	lea rsp, [rbx + 8]
 16395 0000AE1D 5D                      	pop rbp
 16396 0000AE1E FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 16397 0000AE21 C9                      	leave
 16398 0000AE22 C21800                  	ret AND_KILL_FRAME(1)
 16399                                  .L_lambda_simple_end_03ef:	; new closure is in rax
 16400 0000AE25 803804                  	cmp byte [rax], T_closure
 16401 0000AE28 0F850FA30000            	jne L_error_non_closure
 16402 0000AE2E FF7001                  	push SOB_CLOSURE_ENV(rax)
 16403                                  
 16404                                  	; recycling the current frame
 16405 0000AE31 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 16406 0000AE34 FF7500                  	push qword [rbp]	; old frame-pointer
 16407 0000AE37 B905000000              	mov rcx, 5
 16408 0000AE3C 488B5D18                	mov rbx, COUNT
 16409 0000AE40 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 16410 0000AE45 488D55F8                	lea rdx, [rbp - 8]
 16411                                  .L_tc_recycle_frame_loop_054e:
 16412 0000AE49 4883F900                	cmp rcx, 0
 16413 0000AE4D 7413                    	je .L_tc_recycle_frame_done_054e
 16414 0000AE4F 488B32                  	mov rsi, qword [rdx]
 16415 0000AE52 488933                  	mov qword [rbx], rsi
 16416 0000AE55 48FFC9                  	dec rcx
 16417 0000AE58 4883EB08                	sub rbx, 8
 16418 0000AE5C 4883EA08                	sub rdx, 8
 16419 0000AE60 EBE7                    	jmp .L_tc_recycle_frame_loop_054e
 16420                                  .L_tc_recycle_frame_done_054e:
 16421 0000AE62 488D6308                	lea rsp, [rbx + 8]
 16422 0000AE66 5D                      	pop rbp
 16423 0000AE67 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 16424 0000AE6A C9                      	leave
 16425 0000AE6B C21800                  	ret AND_KILL_FRAME(1)
 16426                                  .L_lambda_simple_end_03ee:	; new closure is in rax
 16427 0000AE6E 803804                  	cmp byte [rax], T_closure
 16428 0000AE71 0F85C6A20000            	jne L_error_non_closure
 16429 0000AE77 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16430                                  
 16431                                  	; recycling the current frame
 16432 0000AE7A FF7508                  	push qword [rbp + 8 * 1]	; old return address
 16433 0000AE7D FF7500                  	push qword [rbp]	; old frame-pointer
 16434 0000AE80 B905000000              	mov rcx, 5
 16435 0000AE85 488B5D18                	mov rbx, COUNT
 16436 0000AE89 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 16437 0000AE8E 488D55F8                	lea rdx, [rbp - 8]
 16438                                  .L_tc_recycle_frame_loop_054f:
 16439 0000AE92 4883F900                	cmp rcx, 0
 16440 0000AE96 7413                    	je .L_tc_recycle_frame_done_054f
 16441 0000AE98 488B32                  	mov rsi, qword [rdx]
 16442 0000AE9B 488933                  	mov qword [rbx], rsi
 16443 0000AE9E 48FFC9                  	dec rcx
 16444 0000AEA1 4883EB08                	sub rbx, 8
 16445 0000AEA5 4883EA08                	sub rdx, 8
 16446 0000AEA9 EBE7                    	jmp .L_tc_recycle_frame_loop_054f
 16447                                  .L_tc_recycle_frame_done_054f:
 16448 0000AEAB 488D6308                	lea rsp, [rbx + 8]
 16449 0000AEAF 5D                      	pop rbp
 16450 0000AEB0 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 16451 0000AEB3 C9                      	leave
 16452 0000AEB4 C21800                  	ret AND_KILL_FRAME(1)
 16453                                  .L_lambda_simple_end_03eb:	; new closure is in rax
 16454 0000AEB7 803804                  	cmp byte [rax], T_closure
 16455 0000AEBA 0F857DA20000            	jne L_error_non_closure
 16456 0000AEC0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16457 0000AEC3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16458                                  
 16459 0000AEC6 4889C7                  	mov rdi, rax
 16460 0000AEC9 E86DA50000              	call print_sexpr_if_not_void
 16461                                  
 16462 0000AECE 48B8-                   	mov rax, L_constants + 0
 16462 0000AED0 [0000000000000000] 
 16463 0000AED8 48890425[1D180000]      	mov qword [free_var_79], rax
 16464 0000AEE0 48B8-                   	mov rax, sob_void
 16464 0000AEE2 [0000000000000000] 
 16465                                  
 16466 0000AEEA 4889C7                  	mov rdi, rax
 16467 0000AEED E849A50000              	call print_sexpr_if_not_void
 16468                                  
 16469 0000AEF2 48B8-                   	mov rax, L_constants + 0
 16469 0000AEF4 [0000000000000000] 
 16470 0000AEFC 48890425[0C180000]      	mov qword [free_var_78], rax
 16471 0000AF04 48B8-                   	mov rax, sob_void
 16471 0000AF06 [0000000000000000] 
 16472                                  
 16473 0000AF0E 4889C7                  	mov rdi, rax
 16474 0000AF11 E825A50000              	call print_sexpr_if_not_void
 16475                                  
 16476 0000AF16 48B8-                   	mov rax, L_constants + 0
 16476 0000AF18 [0000000000000000] 
 16477 0000AF20 48890425[2E180000]      	mov qword [free_var_80], rax
 16478 0000AF28 48B8-                   	mov rax, sob_void
 16478 0000AF2A [0000000000000000] 
 16479                                  
 16480 0000AF32 4889C7                  	mov rdi, rax
 16481 0000AF35 E801A50000              	call print_sexpr_if_not_void
 16482                                  
 16483 0000AF3A 48B8-                   	mov rax, L_constants + 0
 16483 0000AF3C [0000000000000000] 
 16484 0000AF44 48890425[50180000]      	mov qword [free_var_82], rax
 16485 0000AF4C 48B8-                   	mov rax, sob_void
 16485 0000AF4E [0000000000000000] 
 16486                                  
 16487 0000AF56 4889C7                  	mov rdi, rax
 16488 0000AF59 E8DDA40000              	call print_sexpr_if_not_void
 16489                                  
 16490 0000AF5E 48B8-                   	mov rax, L_constants + 0
 16490 0000AF60 [0000000000000000] 
 16491 0000AF68 48890425[3F180000]      	mov qword [free_var_81], rax
 16492 0000AF70 48B8-                   	mov rax, sob_void
 16492 0000AF72 [0000000000000000] 
 16493                                  
 16494 0000AF7A 4889C7                  	mov rdi, rax
 16495 0000AF7D E8B9A40000              	call print_sexpr_if_not_void
 16496                                  
 16497                                  	; preparing a non-tail-call
 16498 0000AF82 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16499 0000AF87 E85AA20000              	call malloc
 16500 0000AF8C 50                      	push rax
 16501 0000AF8D BF00000000              	mov rdi, 8 * 0	; new rib
 16502 0000AF92 E84FA20000              	call malloc
 16503 0000AF97 50                      	push rax
 16504 0000AF98 BF08000000              	mov rdi, 8 * 1	; extended env
 16505 0000AF9D E844A20000              	call malloc
 16506 0000AFA2 488B7D10                	mov rdi, ENV
 16507 0000AFA6 BE00000000              	mov rsi, 0
 16508 0000AFAB BA01000000              	mov rdx, 1
 16509                                  .L_lambda_simple_env_loop_03fb:	; ext_env[i + 1] <-- env[i]
 16510 0000AFB0 4883FE00                	cmp rsi, 0
 16511 0000AFB4 7410                    	je .L_lambda_simple_env_end_03fb
 16512 0000AFB6 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16513 0000AFBA 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16514 0000AFBE 48FFC6                  	inc rsi
 16515 0000AFC1 48FFC2                  	inc rdx
 16516 0000AFC4 EBEA                    	jmp .L_lambda_simple_env_loop_03fb
 16517                                  .L_lambda_simple_env_end_03fb:
 16518 0000AFC6 5B                      	pop rbx
 16519 0000AFC7 BE00000000              	mov rsi, 0
 16520                                  .L_lambda_simple_params_loop_03fb:	; copy params
 16521 0000AFCC 4883FE00                	cmp rsi, 0
 16522 0000AFD0 740E                    	je .L_lambda_simple_params_end_03fb
 16523 0000AFD2 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16524 0000AFD7 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16525 0000AFDB 48FFC6                  	inc rsi
 16526 0000AFDE EBEC                    	jmp .L_lambda_simple_params_loop_03fb
 16527                                  .L_lambda_simple_params_end_03fb:
 16528 0000AFE0 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 16529 0000AFE3 4889C3                  	mov rbx, rax
 16530 0000AFE6 58                      	pop rax
 16531 0000AFE7 C60004                  	mov byte [rax], T_closure
 16532 0000AFEA 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16533 0000AFEE 48C74009[FBAF0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03fb
 16534 0000AFF6 E90C020000              	jmp .L_lambda_simple_end_03fb
 16535                                  .L_lambda_simple_code_03fb:	; lambda-simple body
 16536 0000AFFB 48837C241001            	cmp qword [rsp + 8 * 2], 1
 16537 0000B001 740B                    	je .L_lambda_simple_arity_check_ok_03fb
 16538 0000B003 FF742410                	push qword [rsp + 8 * 2]
 16539 0000B007 6A01                    	push 1
 16540 0000B009 E991A10000              	jmp L_error_incorrect_arity_simple
 16541                                  .L_lambda_simple_arity_check_ok_03fb:
 16542 0000B00E C8000000                	enter 0, 0
 16543 0000B012 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16544 0000B017 E8CAA10000              	call malloc
 16545 0000B01C 50                      	push rax
 16546 0000B01D BF08000000              	mov rdi, 8 * 1	; new rib
 16547 0000B022 E8BFA10000              	call malloc
 16548 0000B027 50                      	push rax
 16549 0000B028 BF10000000              	mov rdi, 8 * 2	; extended env
 16550 0000B02D E8B4A10000              	call malloc
 16551 0000B032 488B7D10                	mov rdi, ENV
 16552 0000B036 BE00000000              	mov rsi, 0
 16553 0000B03B BA01000000              	mov rdx, 1
 16554                                  .L_lambda_opt_env_loop_0088:	; ext_env[i + 1] <-- env[i]
 16555 0000B040 4883FE01                	cmp rsi, 1
 16556 0000B044 7410                    	je .L_lambda_opt_env_end_0088
 16557 0000B046 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16558 0000B04A 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16559 0000B04E 48FFC6                  	inc rsi
 16560 0000B051 48FFC2                  	inc rdx
 16561 0000B054 EBEA                    	jmp .L_lambda_opt_env_loop_0088
 16562                                  .L_lambda_opt_env_end_0088:
 16563 0000B056 5B                      	pop rbx
 16564 0000B057 BE00000000              	mov rsi, 0
 16565                                  .L_lambda_opt_params_loop_0088:	; copy params
 16566 0000B05C 4883FE01                	cmp rsi, 1
 16567 0000B060 740E                    	je .L_lambda_opt_params_end_0088
 16568 0000B062 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16569 0000B067 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16570 0000B06B 48FFC6                  	inc rsi
 16571 0000B06E EBEC                    	jmp .L_lambda_opt_params_loop_0088
 16572                                  .L_lambda_opt_params_end_0088:
 16573 0000B070 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 16574 0000B073 4889C3                  	mov rbx, rax
 16575 0000B076 58                      	pop rax
 16576 0000B077 C60004                  	mov byte [rax], T_closure
 16577 0000B07A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16578 0000B07E 48C74009[8BB00000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0088
 16579 0000B086 E978010000              	jmp .L_lambda_opt_end_0088
 16580                                  .L_lambda_opt_code_0088:	; lambda-simple body
 16581 0000B08B 48837C241000            	cmp qword [rsp + 8 * 2], 0 ;	 check num of args
 16582 0000B091 740D                    	je .L_lambda_opt_arity_check_exact_0088 ;	 if equal, go to exact arity
 16583 0000B093 7F42                    	jg .L_lambda_opt_arity_check_more_0088 ;	 if greater than, go to arity more
 16584 0000B095 FF742410                	push qword [rsp + 8 * 2] ;	 else, throw opt arity error
 16585 0000B099 6A00                    	push 0
 16586 0000B09B E913A10000              	jmp L_error_incorrect_arity_opt
 16587                                  .L_lambda_opt_arity_check_exact_0088:
 16588 0000B0A0 488B442410              	mov rax, qword [rsp + 8 * 2] ;	 number of args
 16589 0000B0A5 488D5CC410              	lea rbx, [rsp + 8 * (2 + rax)] ;	 address of last element
 16590 0000B0AA 4883EC08                	sub rsp, 8
 16591 0000B0AE 488D0C24                	lea rcx, [rsp + 0] ;	 new start
 16592                                  .L_lambda_opt_shift_entry_0088:
 16593 0000B0B2 488B5108                	mov rdx, [rcx + 8]
 16594 0000B0B6 488911                  	mov [rcx], rdx
 16595 0000B0B9 4883C108                	add rcx, 8
 16596 0000B0BD 4839CB                  	cmp rbx, rcx
 16597 0000B0C0 75F0                    	jne .L_lambda_opt_shift_entry_0088
 16598                                  .L_lambda_opt_shift_exit_0088:
 16599 0000B0C2 48C703[01000000]        	mov qword[rbx], sob_nil ;	 place nil
 16600 0000B0C9 4883C001                	add rax, 1
 16601 0000B0CD 4889442410              	mov qword [rsp + 8 * 2], rax
 16602 0000B0D2 E987000000              	jmp .L_lambda_opt_stack_adjusted_0088
 16603                                  .L_lambda_opt_arity_check_more_0088:
 16604 0000B0D7 48BA-                   	mov rdx, sob_nil ;	 base cdr
 16604 0000B0D9 [0100000000000000] 
 16605 0000B0E1 48837C241001            	cmp qword [rsp + 8 * 2], 1
 16606 0000B0E7 7451                    	je .L_lambda_opt_stack_shrink_loop_exit_0088
 16607                                  .L_lambda_opt_stack_shrink_loop_0088:
 16608 0000B0E9 BF11000000              	mov rdi, (1 + 8 + 8)
 16609 0000B0EE E8F3A00000              	call malloc
 16610 0000B0F3 C60021                  	mov byte[rax], T_pair
 16611 0000B0F6 48895009                	mov SOB_PAIR_CDR(rax), rdx
 16612 0000B0FA 4889C2                  	mov rdx, rax
 16613 0000B0FD 488B442410              	mov rax, qword [rsp + 8 * 2]
 16614 0000B102 488B5CC410              	mov rbx, qword [rsp + 8 * (2 + rax)]
 16615 0000B107 48895A01                	mov SOB_PAIR_CAR(rdx), rbx
 16616 0000B10B 488D5CC408              	lea rbx, [rsp + 8 * (2 + rax - 1)]
 16617                                  .L_lambda_opt_extra_shift_process_0088:
 16618 0000B110 488B0B                  	mov rcx, [rbx]
 16619 0000B113 48894B08                	mov [rbx + 8], rcx
 16620 0000B117 4883EB08                	sub rbx, 8
 16621 0000B11B 4839DC                  	cmp rsp, rbx
 16622 0000B11E 7EF0                    	jle .L_lambda_opt_extra_shift_process_0088
 16623                                  .L_lambda_opt_extra_shift_process_end_0088:
 16624 0000B120 4883C408                	add rsp, 8
 16625 0000B124 488B5C2410              	mov rbx, [rsp + 8 * 2]
 16626 0000B129 4883EB01                	sub rbx, 1
 16627 0000B12D 48895C2410              	mov [rsp + 8 * 2], rbx
 16628 0000B132 48837C241001            	cmp qword [rsp + 8 * 2], 1
 16629 0000B138 7FAF                    	jg .L_lambda_opt_stack_shrink_loop_0088
 16630                                  .L_lambda_opt_stack_shrink_loop_exit_0088:
 16631 0000B13A 488B4C2410              	mov rcx, [rsp + 8 * 2]
 16632 0000B13F 488B5CCC10              	mov rbx, qword [rsp + 8 * (2 + rcx)]
 16633 0000B144 BF11000000              	mov rdi, (1 + 8 + 8)
 16634 0000B149 E898A00000              	call malloc
 16635 0000B14E C60021                  	mov byte[rax], T_pair
 16636 0000B151 48895009                	mov SOB_PAIR_CDR(rax), rdx
 16637 0000B155 48895801                	mov SOB_PAIR_CAR(rax), rbx
 16638 0000B159 488944CC10              	mov [rsp + 8 * (2 + rcx)], rax
 16639                                  .L_lambda_opt_stack_adjusted_0088:
 16640 0000B15E C8000000                	enter 0, 0
 16641                                  	; preparing a tail-call
 16642                                  	; preparing a non-tail-call
 16643 0000B162 488B4520                	mov rax, PARAM(0)	; param s
 16644 0000B166 50                      	push rax
 16645 0000B167 488B0425[84170000]      	mov rax, qword [free_var_70]	; free var char->integer
 16646 0000B16F 803805                  	cmp byte [rax], T_undefined
 16647 0000B172 0F84419F0000            	je L_error_fvar_undefined
 16648 0000B178 50                      	push rax
 16649 0000B179 6A02                    	push 2	; arg count
 16650 0000B17B 488B0425[F81A0000]      	mov rax, qword [free_var_122]	; free var map
 16651 0000B183 803805                  	cmp byte [rax], T_undefined
 16652 0000B186 0F842D9F0000            	je L_error_fvar_undefined
 16653 0000B18C 803804                  	cmp byte [rax], T_closure
 16654 0000B18F 0F85A89F0000            	jne L_error_non_closure
 16655 0000B195 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16656 0000B198 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16657 0000B19B 50                      	push rax
 16658 0000B19C 488B4510                	mov rax, ENV
 16659 0000B1A0 488B00                  	mov rax, qword [rax + 8 * 0]
 16660 0000B1A3 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var comparator
 16661 0000B1A6 50                      	push rax
 16662 0000B1A7 6A02                    	push 2	; arg count
 16663 0000B1A9 488B0425[0F150000]      	mov rax, qword [free_var_33]	; free var apply
 16664 0000B1B1 803805                  	cmp byte [rax], T_undefined
 16665 0000B1B4 0F84FF9E0000            	je L_error_fvar_undefined
 16666 0000B1BA 803804                  	cmp byte [rax], T_closure
 16667 0000B1BD 0F857A9F0000            	jne L_error_non_closure
 16668 0000B1C3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16669                                  
 16670                                  	; recycling the current frame
 16671 0000B1C6 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 16672 0000B1C9 FF7500                  	push qword [rbp]	; old frame-pointer
 16673 0000B1CC B906000000              	mov rcx, 6
 16674 0000B1D1 488B5D18                	mov rbx, COUNT
 16675 0000B1D5 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 16676 0000B1DA 488D55F8                	lea rdx, [rbp - 8]
 16677                                  .L_tc_recycle_frame_loop_0550:
 16678 0000B1DE 4883F900                	cmp rcx, 0
 16679 0000B1E2 7413                    	je .L_tc_recycle_frame_done_0550
 16680 0000B1E4 488B32                  	mov rsi, qword [rdx]
 16681 0000B1E7 488933                  	mov qword [rbx], rsi
 16682 0000B1EA 48FFC9                  	dec rcx
 16683 0000B1ED 4883EB08                	sub rbx, 8
 16684 0000B1F1 4883EA08                	sub rdx, 8
 16685 0000B1F5 EBE7                    	jmp .L_tc_recycle_frame_loop_0550
 16686                                  .L_tc_recycle_frame_done_0550:
 16687 0000B1F7 488D6308                	lea rsp, [rbx + 8]
 16688 0000B1FB 5D                      	pop rbp
 16689 0000B1FC FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 16690 0000B1FF C9                      	leave
 16691 0000B200 C21800                  	ret AND_KILL_FRAME(1)
 16692                                  .L_lambda_opt_end_0088:	; new closure is in rax
 16693 0000B203 C9                      	leave
 16694 0000B204 C21800                  	ret AND_KILL_FRAME(1)
 16695                                  .L_lambda_simple_end_03fb:	; new closure is in rax
 16696 0000B207 50                      	push rax
 16697 0000B208 6A01                    	push 1	; arg count
 16698 0000B20A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16699 0000B20F E8D29F0000              	call malloc
 16700 0000B214 50                      	push rax
 16701 0000B215 BF00000000              	mov rdi, 8 * 0	; new rib
 16702 0000B21A E8C79F0000              	call malloc
 16703 0000B21F 50                      	push rax
 16704 0000B220 BF08000000              	mov rdi, 8 * 1	; extended env
 16705 0000B225 E8BC9F0000              	call malloc
 16706 0000B22A 488B7D10                	mov rdi, ENV
 16707 0000B22E BE00000000              	mov rsi, 0
 16708 0000B233 BA01000000              	mov rdx, 1
 16709                                  .L_lambda_simple_env_loop_03fc:	; ext_env[i + 1] <-- env[i]
 16710 0000B238 4883FE00                	cmp rsi, 0
 16711 0000B23C 7410                    	je .L_lambda_simple_env_end_03fc
 16712 0000B23E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16713 0000B242 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16714 0000B246 48FFC6                  	inc rsi
 16715 0000B249 48FFC2                  	inc rdx
 16716 0000B24C EBEA                    	jmp .L_lambda_simple_env_loop_03fc
 16717                                  .L_lambda_simple_env_end_03fc:
 16718 0000B24E 5B                      	pop rbx
 16719 0000B24F BE00000000              	mov rsi, 0
 16720                                  .L_lambda_simple_params_loop_03fc:	; copy params
 16721 0000B254 4883FE00                	cmp rsi, 0
 16722 0000B258 740E                    	je .L_lambda_simple_params_end_03fc
 16723 0000B25A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16724 0000B25F 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16725 0000B263 48FFC6                  	inc rsi
 16726 0000B266 EBEC                    	jmp .L_lambda_simple_params_loop_03fc
 16727                                  .L_lambda_simple_params_end_03fc:
 16728 0000B268 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 16729 0000B26B 4889C3                  	mov rbx, rax
 16730 0000B26E 58                      	pop rax
 16731 0000B26F C60004                  	mov byte [rax], T_closure
 16732 0000B272 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16733 0000B276 48C74009[83B20000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03fc
 16734 0000B27E E965010000              	jmp .L_lambda_simple_end_03fc
 16735                                  .L_lambda_simple_code_03fc:	; lambda-simple body
 16736 0000B283 48837C241001            	cmp qword [rsp + 8 * 2], 1
 16737 0000B289 740B                    	je .L_lambda_simple_arity_check_ok_03fc
 16738 0000B28B FF742410                	push qword [rsp + 8 * 2]
 16739 0000B28F 6A01                    	push 1
 16740 0000B291 E9099F0000              	jmp L_error_incorrect_arity_simple
 16741                                  .L_lambda_simple_arity_check_ok_03fc:
 16742 0000B296 C8000000                	enter 0, 0
 16743                                  	; preparing a non-tail-call
 16744 0000B29A 488B0425[22130000]      	mov rax, qword [free_var_4]	; free var <
 16745 0000B2A2 803805                  	cmp byte [rax], T_undefined
 16746 0000B2A5 0F840E9E0000            	je L_error_fvar_undefined
 16747 0000B2AB 50                      	push rax
 16748 0000B2AC 6A01                    	push 1	; arg count
 16749 0000B2AE 488B4520                	mov rax, PARAM(0)	; param make-char-comparator
 16750 0000B2B2 803804                  	cmp byte [rax], T_closure
 16751 0000B2B5 0F85829E0000            	jne L_error_non_closure
 16752 0000B2BB FF7001                  	push SOB_CLOSURE_ENV(rax)
 16753 0000B2BE FF5009                  	call SOB_CLOSURE_CODE(rax)
 16754 0000B2C1 48890425[1D180000]      	mov qword [free_var_79], rax	; free var char<?
 16755 0000B2C9 803805                  	cmp byte [rax], T_undefined
 16756 0000B2CC 0F84E79D0000            	je L_error_fvar_undefined
 16757 0000B2D2 48B8-                   	mov rax, sob_void
 16757 0000B2D4 [0000000000000000] 
 16758                                  
 16759                                  	; preparing a non-tail-call
 16760 0000B2DC 488B0425[33130000]      	mov rax, qword [free_var_5]	; free var <=
 16761 0000B2E4 803805                  	cmp byte [rax], T_undefined
 16762 0000B2E7 0F84CC9D0000            	je L_error_fvar_undefined
 16763 0000B2ED 50                      	push rax
 16764 0000B2EE 6A01                    	push 1	; arg count
 16765 0000B2F0 488B4520                	mov rax, PARAM(0)	; param make-char-comparator
 16766 0000B2F4 803804                  	cmp byte [rax], T_closure
 16767 0000B2F7 0F85409E0000            	jne L_error_non_closure
 16768 0000B2FD FF7001                  	push SOB_CLOSURE_ENV(rax)
 16769 0000B300 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16770 0000B303 48890425[0C180000]      	mov qword [free_var_78], rax	; free var char<=?
 16771 0000B30B 803805                  	cmp byte [rax], T_undefined
 16772 0000B30E 0F84A59D0000            	je L_error_fvar_undefined
 16773 0000B314 48B8-                   	mov rax, sob_void
 16773 0000B316 [0000000000000000] 
 16774                                  
 16775                                  	; preparing a non-tail-call
 16776 0000B31E 488B0425[44130000]      	mov rax, qword [free_var_6]	; free var =
 16777 0000B326 803805                  	cmp byte [rax], T_undefined
 16778 0000B329 0F848A9D0000            	je L_error_fvar_undefined
 16779 0000B32F 50                      	push rax
 16780 0000B330 6A01                    	push 1	; arg count
 16781 0000B332 488B4520                	mov rax, PARAM(0)	; param make-char-comparator
 16782 0000B336 803804                  	cmp byte [rax], T_closure
 16783 0000B339 0F85FE9D0000            	jne L_error_non_closure
 16784 0000B33F FF7001                  	push SOB_CLOSURE_ENV(rax)
 16785 0000B342 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16786 0000B345 48890425[2E180000]      	mov qword [free_var_80], rax	; free var char=?
 16787 0000B34D 803805                  	cmp byte [rax], T_undefined
 16788 0000B350 0F84639D0000            	je L_error_fvar_undefined
 16789 0000B356 48B8-                   	mov rax, sob_void
 16789 0000B358 [0000000000000000] 
 16790                                  
 16791                                  	; preparing a non-tail-call
 16792 0000B360 488B0425[55130000]      	mov rax, qword [free_var_7]	; free var >
 16793 0000B368 803805                  	cmp byte [rax], T_undefined
 16794 0000B36B 0F84489D0000            	je L_error_fvar_undefined
 16795 0000B371 50                      	push rax
 16796 0000B372 6A01                    	push 1	; arg count
 16797 0000B374 488B4520                	mov rax, PARAM(0)	; param make-char-comparator
 16798 0000B378 803804                  	cmp byte [rax], T_closure
 16799 0000B37B 0F85BC9D0000            	jne L_error_non_closure
 16800 0000B381 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16801 0000B384 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16802 0000B387 48890425[50180000]      	mov qword [free_var_82], rax	; free var char>?
 16803 0000B38F 803805                  	cmp byte [rax], T_undefined
 16804 0000B392 0F84219D0000            	je L_error_fvar_undefined
 16805 0000B398 48B8-                   	mov rax, sob_void
 16805 0000B39A [0000000000000000] 
 16806                                  
 16807                                  	; preparing a non-tail-call
 16808 0000B3A2 488B0425[66130000]      	mov rax, qword [free_var_8]	; free var >=
 16809 0000B3AA 803805                  	cmp byte [rax], T_undefined
 16810 0000B3AD 0F84069D0000            	je L_error_fvar_undefined
 16811 0000B3B3 50                      	push rax
 16812 0000B3B4 6A01                    	push 1	; arg count
 16813 0000B3B6 488B4520                	mov rax, PARAM(0)	; param make-char-comparator
 16814 0000B3BA 803804                  	cmp byte [rax], T_closure
 16815 0000B3BD 0F857A9D0000            	jne L_error_non_closure
 16816 0000B3C3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16817 0000B3C6 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16818 0000B3C9 48890425[3F180000]      	mov qword [free_var_81], rax	; free var char>=?
 16819 0000B3D1 803805                  	cmp byte [rax], T_undefined
 16820 0000B3D4 0F84DF9C0000            	je L_error_fvar_undefined
 16821 0000B3DA 48B8-                   	mov rax, sob_void
 16821 0000B3DC [0000000000000000] 
 16822 0000B3E4 C9                      	leave
 16823 0000B3E5 C21800                  	ret AND_KILL_FRAME(1)
 16824                                  .L_lambda_simple_end_03fc:	; new closure is in rax
 16825 0000B3E8 803804                  	cmp byte [rax], T_closure
 16826 0000B3EB 0F854C9D0000            	jne L_error_non_closure
 16827 0000B3F1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16828 0000B3F4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16829                                  
 16830 0000B3F7 4889C7                  	mov rdi, rax
 16831 0000B3FA E83CA00000              	call print_sexpr_if_not_void
 16832                                  
 16833 0000B3FF 48B8-                   	mov rax, L_constants + 0
 16833 0000B401 [0000000000000000] 
 16834 0000B409 48890425[EA170000]      	mov qword [free_var_76], rax
 16835 0000B411 48B8-                   	mov rax, sob_void
 16835 0000B413 [0000000000000000] 
 16836                                  
 16837 0000B41B 4889C7                  	mov rdi, rax
 16838 0000B41E E818A00000              	call print_sexpr_if_not_void
 16839                                  
 16840 0000B423 48B8-                   	mov rax, L_constants + 0
 16840 0000B425 [0000000000000000] 
 16841 0000B42D 48890425[FB170000]      	mov qword [free_var_77], rax
 16842 0000B435 48B8-                   	mov rax, sob_void
 16842 0000B437 [0000000000000000] 
 16843                                  
 16844 0000B43F 4889C7                  	mov rdi, rax
 16845 0000B442 E8F49F0000              	call print_sexpr_if_not_void
 16846                                  
 16847                                  	; preparing a non-tail-call
 16848                                  	; preparing a non-tail-call
 16849                                  	; preparing a non-tail-call
 16850 0000B447 48B8-                   	mov rax, L_constants + 3352
 16850 0000B449 [180D000000000000] 
 16851 0000B451 50                      	push rax
 16852 0000B452 6A01                    	push 1	; arg count
 16853 0000B454 488B0425[84170000]      	mov rax, qword [free_var_70]	; free var char->integer
 16854 0000B45C 803805                  	cmp byte [rax], T_undefined
 16855 0000B45F 0F84549C0000            	je L_error_fvar_undefined
 16856 0000B465 803804                  	cmp byte [rax], T_closure
 16857 0000B468 0F85CF9C0000            	jne L_error_non_closure
 16858 0000B46E FF7001                  	push SOB_CLOSURE_ENV(rax)
 16859 0000B471 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16860 0000B474 50                      	push rax
 16861                                  	; preparing a non-tail-call
 16862 0000B475 48B8-                   	mov rax, L_constants + 3365
 16862 0000B477 [250D000000000000] 
 16863 0000B47F 50                      	push rax
 16864 0000B480 6A01                    	push 1	; arg count
 16865 0000B482 488B0425[84170000]      	mov rax, qword [free_var_70]	; free var char->integer
 16866 0000B48A 803805                  	cmp byte [rax], T_undefined
 16867 0000B48D 0F84269C0000            	je L_error_fvar_undefined
 16868 0000B493 803804                  	cmp byte [rax], T_closure
 16869 0000B496 0F85A19C0000            	jne L_error_non_closure
 16870 0000B49C FF7001                  	push SOB_CLOSURE_ENV(rax)
 16871 0000B49F FF5009                  	call SOB_CLOSURE_CODE(rax)
 16872 0000B4A2 50                      	push rax
 16873 0000B4A3 6A02                    	push 2	; arg count
 16874 0000B4A5 488B0425[00130000]      	mov rax, qword [free_var_2]	; free var -
 16875 0000B4AD 803805                  	cmp byte [rax], T_undefined
 16876 0000B4B0 0F84039C0000            	je L_error_fvar_undefined
 16877 0000B4B6 803804                  	cmp byte [rax], T_closure
 16878 0000B4B9 0F857E9C0000            	jne L_error_non_closure
 16879 0000B4BF FF7001                  	push SOB_CLOSURE_ENV(rax)
 16880 0000B4C2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16881 0000B4C5 50                      	push rax
 16882 0000B4C6 6A01                    	push 1	; arg count
 16883 0000B4C8 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16884 0000B4CD E8149D0000              	call malloc
 16885 0000B4D2 50                      	push rax
 16886 0000B4D3 BF00000000              	mov rdi, 8 * 0	; new rib
 16887 0000B4D8 E8099D0000              	call malloc
 16888 0000B4DD 50                      	push rax
 16889 0000B4DE BF08000000              	mov rdi, 8 * 1	; extended env
 16890 0000B4E3 E8FE9C0000              	call malloc
 16891 0000B4E8 488B7D10                	mov rdi, ENV
 16892 0000B4EC BE00000000              	mov rsi, 0
 16893 0000B4F1 BA01000000              	mov rdx, 1
 16894                                  .L_lambda_simple_env_loop_03fd:	; ext_env[i + 1] <-- env[i]
 16895 0000B4F6 4883FE00                	cmp rsi, 0
 16896 0000B4FA 7410                    	je .L_lambda_simple_env_end_03fd
 16897 0000B4FC 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16898 0000B500 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16899 0000B504 48FFC6                  	inc rsi
 16900 0000B507 48FFC2                  	inc rdx
 16901 0000B50A EBEA                    	jmp .L_lambda_simple_env_loop_03fd
 16902                                  .L_lambda_simple_env_end_03fd:
 16903 0000B50C 5B                      	pop rbx
 16904 0000B50D BE00000000              	mov rsi, 0
 16905                                  .L_lambda_simple_params_loop_03fd:	; copy params
 16906 0000B512 4883FE00                	cmp rsi, 0
 16907 0000B516 740E                    	je .L_lambda_simple_params_end_03fd
 16908 0000B518 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16909 0000B51D 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16910 0000B521 48FFC6                  	inc rsi
 16911 0000B524 EBEC                    	jmp .L_lambda_simple_params_loop_03fd
 16912                                  .L_lambda_simple_params_end_03fd:
 16913 0000B526 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 16914 0000B529 4889C3                  	mov rbx, rax
 16915 0000B52C 58                      	pop rax
 16916 0000B52D C60004                  	mov byte [rax], T_closure
 16917 0000B530 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16918 0000B534 48C74009[41B50000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03fd
 16919 0000B53C E973030000              	jmp .L_lambda_simple_end_03fd
 16920                                  .L_lambda_simple_code_03fd:	; lambda-simple body
 16921 0000B541 48837C241001            	cmp qword [rsp + 8 * 2], 1
 16922 0000B547 740B                    	je .L_lambda_simple_arity_check_ok_03fd
 16923 0000B549 FF742410                	push qword [rsp + 8 * 2]
 16924 0000B54D 6A01                    	push 1
 16925 0000B54F E94B9C0000              	jmp L_error_incorrect_arity_simple
 16926                                  .L_lambda_simple_arity_check_ok_03fd:
 16927 0000B554 C8000000                	enter 0, 0
 16928 0000B558 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16929 0000B55D E8849C0000              	call malloc
 16930 0000B562 50                      	push rax
 16931 0000B563 BF08000000              	mov rdi, 8 * 1	; new rib
 16932 0000B568 E8799C0000              	call malloc
 16933 0000B56D 50                      	push rax
 16934 0000B56E BF10000000              	mov rdi, 8 * 2	; extended env
 16935 0000B573 E86E9C0000              	call malloc
 16936 0000B578 488B7D10                	mov rdi, ENV
 16937 0000B57C BE00000000              	mov rsi, 0
 16938 0000B581 BA01000000              	mov rdx, 1
 16939                                  .L_lambda_simple_env_loop_03fe:	; ext_env[i + 1] <-- env[i]
 16940 0000B586 4883FE01                	cmp rsi, 1
 16941 0000B58A 7410                    	je .L_lambda_simple_env_end_03fe
 16942 0000B58C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16943 0000B590 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16944 0000B594 48FFC6                  	inc rsi
 16945 0000B597 48FFC2                  	inc rdx
 16946 0000B59A EBEA                    	jmp .L_lambda_simple_env_loop_03fe
 16947                                  .L_lambda_simple_env_end_03fe:
 16948 0000B59C 5B                      	pop rbx
 16949 0000B59D BE00000000              	mov rsi, 0
 16950                                  .L_lambda_simple_params_loop_03fe:	; copy params
 16951 0000B5A2 4883FE01                	cmp rsi, 1
 16952 0000B5A6 740E                    	je .L_lambda_simple_params_end_03fe
 16953 0000B5A8 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16954 0000B5AD 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16955 0000B5B1 48FFC6                  	inc rsi
 16956 0000B5B4 EBEC                    	jmp .L_lambda_simple_params_loop_03fe
 16957                                  .L_lambda_simple_params_end_03fe:
 16958 0000B5B6 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 16959 0000B5B9 4889C3                  	mov rbx, rax
 16960 0000B5BC 58                      	pop rax
 16961 0000B5BD C60004                  	mov byte [rax], T_closure
 16962 0000B5C0 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16963 0000B5C4 48C74009[D1B50000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03fe
 16964 0000B5CC E918010000              	jmp .L_lambda_simple_end_03fe
 16965                                  .L_lambda_simple_code_03fe:	; lambda-simple body
 16966 0000B5D1 48837C241001            	cmp qword [rsp + 8 * 2], 1
 16967 0000B5D7 740B                    	je .L_lambda_simple_arity_check_ok_03fe
 16968 0000B5D9 FF742410                	push qword [rsp + 8 * 2]
 16969 0000B5DD 6A01                    	push 1
 16970 0000B5DF E9BB9B0000              	jmp L_error_incorrect_arity_simple
 16971                                  .L_lambda_simple_arity_check_ok_03fe:
 16972 0000B5E4 C8000000                	enter 0, 0
 16973                                  	; preparing a non-tail-call
 16974 0000B5E8 48B8-                   	mov rax, L_constants + 3354
 16974 0000B5EA [1A0D000000000000] 
 16975 0000B5F2 50                      	push rax
 16976 0000B5F3 488B4520                	mov rax, PARAM(0)	; param ch
 16977 0000B5F7 50                      	push rax
 16978 0000B5F8 48B8-                   	mov rax, L_constants + 3352
 16978 0000B5FA [180D000000000000] 
 16979 0000B602 50                      	push rax
 16980 0000B603 6A03                    	push 3	; arg count
 16981 0000B605 488B0425[0C180000]      	mov rax, qword [free_var_78]	; free var char<=?
 16982 0000B60D 803805                  	cmp byte [rax], T_undefined
 16983 0000B610 0F84A39A0000            	je L_error_fvar_undefined
 16984 0000B616 803804                  	cmp byte [rax], T_closure
 16985 0000B619 0F851E9B0000            	jne L_error_non_closure
 16986 0000B61F FF7001                  	push SOB_CLOSURE_ENV(rax)
 16987 0000B622 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16988 0000B625 483D[02000000]          	cmp rax, sob_boolean_false
 16989 0000B62B 0F84B0000000            	je .L_if_else_02fb
 16990                                  	; preparing a tail-call
 16991                                  	; preparing a non-tail-call
 16992 0000B631 488B4510                	mov rax, ENV
 16993 0000B635 488B00                  	mov rax, qword [rax + 8 * 0]
 16994 0000B638 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var delta
 16995 0000B63B 50                      	push rax
 16996                                  	; preparing a non-tail-call
 16997 0000B63C 488B4520                	mov rax, PARAM(0)	; param ch
 16998 0000B640 50                      	push rax
 16999 0000B641 6A01                    	push 1	; arg count
 17000 0000B643 488B0425[84170000]      	mov rax, qword [free_var_70]	; free var char->integer
 17001 0000B64B 803805                  	cmp byte [rax], T_undefined
 17002 0000B64E 0F84659A0000            	je L_error_fvar_undefined
 17003 0000B654 803804                  	cmp byte [rax], T_closure
 17004 0000B657 0F85E09A0000            	jne L_error_non_closure
 17005 0000B65D FF7001                  	push SOB_CLOSURE_ENV(rax)
 17006 0000B660 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17007 0000B663 50                      	push rax
 17008 0000B664 6A02                    	push 2	; arg count
 17009 0000B666 488B0425[EF120000]      	mov rax, qword [free_var_1]	; free var +
 17010 0000B66E 803805                  	cmp byte [rax], T_undefined
 17011 0000B671 0F84429A0000            	je L_error_fvar_undefined
 17012 0000B677 803804                  	cmp byte [rax], T_closure
 17013 0000B67A 0F85BD9A0000            	jne L_error_non_closure
 17014 0000B680 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17015 0000B683 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17016 0000B686 50                      	push rax
 17017 0000B687 6A01                    	push 1	; arg count
 17018 0000B689 488B0425[93190000]      	mov rax, qword [free_var_101]	; free var integer->char
 17019 0000B691 803805                  	cmp byte [rax], T_undefined
 17020 0000B694 0F841F9A0000            	je L_error_fvar_undefined
 17021 0000B69A 803804                  	cmp byte [rax], T_closure
 17022 0000B69D 0F859A9A0000            	jne L_error_non_closure
 17023 0000B6A3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17024                                  
 17025                                  	; recycling the current frame
 17026 0000B6A6 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 17027 0000B6A9 FF7500                  	push qword [rbp]	; old frame-pointer
 17028 0000B6AC B905000000              	mov rcx, 5
 17029 0000B6B1 488B5D18                	mov rbx, COUNT
 17030 0000B6B5 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 17031 0000B6BA 488D55F8                	lea rdx, [rbp - 8]
 17032                                  .L_tc_recycle_frame_loop_0551:
 17033 0000B6BE 4883F900                	cmp rcx, 0
 17034 0000B6C2 7413                    	je .L_tc_recycle_frame_done_0551
 17035 0000B6C4 488B32                  	mov rsi, qword [rdx]
 17036 0000B6C7 488933                  	mov qword [rbx], rsi
 17037 0000B6CA 48FFC9                  	dec rcx
 17038 0000B6CD 4883EB08                	sub rbx, 8
 17039 0000B6D1 4883EA08                	sub rdx, 8
 17040 0000B6D5 EBE7                    	jmp .L_tc_recycle_frame_loop_0551
 17041                                  .L_tc_recycle_frame_done_0551:
 17042 0000B6D7 488D6308                	lea rsp, [rbx + 8]
 17043 0000B6DB 5D                      	pop rbp
 17044 0000B6DC FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 17045 0000B6DF EB04                    	jmp .L_if_end_02fb
 17046                                  .L_if_else_02fb:
 17047 0000B6E1 488B4520                	mov rax, PARAM(0)	; param ch
 17048                                  .L_if_end_02fb:
 17049 0000B6E5 C9                      	leave
 17050 0000B6E6 C21800                  	ret AND_KILL_FRAME(1)
 17051                                  .L_lambda_simple_end_03fe:	; new closure is in rax
 17052 0000B6E9 48890425[EA170000]      	mov qword [free_var_76], rax	; free var char-downcase
 17053 0000B6F1 803805                  	cmp byte [rax], T_undefined
 17054 0000B6F4 0F84BF990000            	je L_error_fvar_undefined
 17055 0000B6FA 48B8-                   	mov rax, sob_void
 17055 0000B6FC [0000000000000000] 
 17056                                  
 17057 0000B704 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17058 0000B709 E8D89A0000              	call malloc
 17059 0000B70E 50                      	push rax
 17060 0000B70F BF08000000              	mov rdi, 8 * 1	; new rib
 17061 0000B714 E8CD9A0000              	call malloc
 17062 0000B719 50                      	push rax
 17063 0000B71A BF10000000              	mov rdi, 8 * 2	; extended env
 17064 0000B71F E8C29A0000              	call malloc
 17065 0000B724 488B7D10                	mov rdi, ENV
 17066 0000B728 BE00000000              	mov rsi, 0
 17067 0000B72D BA01000000              	mov rdx, 1
 17068                                  .L_lambda_simple_env_loop_03ff:	; ext_env[i + 1] <-- env[i]
 17069 0000B732 4883FE01                	cmp rsi, 1
 17070 0000B736 7410                    	je .L_lambda_simple_env_end_03ff
 17071 0000B738 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17072 0000B73C 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17073 0000B740 48FFC6                  	inc rsi
 17074 0000B743 48FFC2                  	inc rdx
 17075 0000B746 EBEA                    	jmp .L_lambda_simple_env_loop_03ff
 17076                                  .L_lambda_simple_env_end_03ff:
 17077 0000B748 5B                      	pop rbx
 17078 0000B749 BE00000000              	mov rsi, 0
 17079                                  .L_lambda_simple_params_loop_03ff:	; copy params
 17080 0000B74E 4883FE01                	cmp rsi, 1
 17081 0000B752 740E                    	je .L_lambda_simple_params_end_03ff
 17082 0000B754 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17083 0000B759 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17084 0000B75D 48FFC6                  	inc rsi
 17085 0000B760 EBEC                    	jmp .L_lambda_simple_params_loop_03ff
 17086                                  .L_lambda_simple_params_end_03ff:
 17087 0000B762 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 17088 0000B765 4889C3                  	mov rbx, rax
 17089 0000B768 58                      	pop rax
 17090 0000B769 C60004                  	mov byte [rax], T_closure
 17091 0000B76C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17092 0000B770 48C74009[7DB70000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03ff
 17093 0000B778 E918010000              	jmp .L_lambda_simple_end_03ff
 17094                                  .L_lambda_simple_code_03ff:	; lambda-simple body
 17095 0000B77D 48837C241001            	cmp qword [rsp + 8 * 2], 1
 17096 0000B783 740B                    	je .L_lambda_simple_arity_check_ok_03ff
 17097 0000B785 FF742410                	push qword [rsp + 8 * 2]
 17098 0000B789 6A01                    	push 1
 17099 0000B78B E90F9A0000              	jmp L_error_incorrect_arity_simple
 17100                                  .L_lambda_simple_arity_check_ok_03ff:
 17101 0000B790 C8000000                	enter 0, 0
 17102                                  	; preparing a non-tail-call
 17103 0000B794 48B8-                   	mov rax, L_constants + 3367
 17103 0000B796 [270D000000000000] 
 17104 0000B79E 50                      	push rax
 17105 0000B79F 488B4520                	mov rax, PARAM(0)	; param ch
 17106 0000B7A3 50                      	push rax
 17107 0000B7A4 48B8-                   	mov rax, L_constants + 3365
 17107 0000B7A6 [250D000000000000] 
 17108 0000B7AE 50                      	push rax
 17109 0000B7AF 6A03                    	push 3	; arg count
 17110 0000B7B1 488B0425[0C180000]      	mov rax, qword [free_var_78]	; free var char<=?
 17111 0000B7B9 803805                  	cmp byte [rax], T_undefined
 17112 0000B7BC 0F84F7980000            	je L_error_fvar_undefined
 17113 0000B7C2 803804                  	cmp byte [rax], T_closure
 17114 0000B7C5 0F8572990000            	jne L_error_non_closure
 17115 0000B7CB FF7001                  	push SOB_CLOSURE_ENV(rax)
 17116 0000B7CE FF5009                  	call SOB_CLOSURE_CODE(rax)
 17117 0000B7D1 483D[02000000]          	cmp rax, sob_boolean_false
 17118 0000B7D7 0F84B0000000            	je .L_if_else_02fc
 17119                                  	; preparing a tail-call
 17120                                  	; preparing a non-tail-call
 17121 0000B7DD 488B4510                	mov rax, ENV
 17122 0000B7E1 488B00                  	mov rax, qword [rax + 8 * 0]
 17123 0000B7E4 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var delta
 17124 0000B7E7 50                      	push rax
 17125                                  	; preparing a non-tail-call
 17126 0000B7E8 488B4520                	mov rax, PARAM(0)	; param ch
 17127 0000B7EC 50                      	push rax
 17128 0000B7ED 6A01                    	push 1	; arg count
 17129 0000B7EF 488B0425[84170000]      	mov rax, qword [free_var_70]	; free var char->integer
 17130 0000B7F7 803805                  	cmp byte [rax], T_undefined
 17131 0000B7FA 0F84B9980000            	je L_error_fvar_undefined
 17132 0000B800 803804                  	cmp byte [rax], T_closure
 17133 0000B803 0F8534990000            	jne L_error_non_closure
 17134 0000B809 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17135 0000B80C FF5009                  	call SOB_CLOSURE_CODE(rax)
 17136 0000B80F 50                      	push rax
 17137 0000B810 6A02                    	push 2	; arg count
 17138 0000B812 488B0425[00130000]      	mov rax, qword [free_var_2]	; free var -
 17139 0000B81A 803805                  	cmp byte [rax], T_undefined
 17140 0000B81D 0F8496980000            	je L_error_fvar_undefined
 17141 0000B823 803804                  	cmp byte [rax], T_closure
 17142 0000B826 0F8511990000            	jne L_error_non_closure
 17143 0000B82C FF7001                  	push SOB_CLOSURE_ENV(rax)
 17144 0000B82F FF5009                  	call SOB_CLOSURE_CODE(rax)
 17145 0000B832 50                      	push rax
 17146 0000B833 6A01                    	push 1	; arg count
 17147 0000B835 488B0425[93190000]      	mov rax, qword [free_var_101]	; free var integer->char
 17148 0000B83D 803805                  	cmp byte [rax], T_undefined
 17149 0000B840 0F8473980000            	je L_error_fvar_undefined
 17150 0000B846 803804                  	cmp byte [rax], T_closure
 17151 0000B849 0F85EE980000            	jne L_error_non_closure
 17152 0000B84F FF7001                  	push SOB_CLOSURE_ENV(rax)
 17153                                  
 17154                                  	; recycling the current frame
 17155 0000B852 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 17156 0000B855 FF7500                  	push qword [rbp]	; old frame-pointer
 17157 0000B858 B905000000              	mov rcx, 5
 17158 0000B85D 488B5D18                	mov rbx, COUNT
 17159 0000B861 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 17160 0000B866 488D55F8                	lea rdx, [rbp - 8]
 17161                                  .L_tc_recycle_frame_loop_0552:
 17162 0000B86A 4883F900                	cmp rcx, 0
 17163 0000B86E 7413                    	je .L_tc_recycle_frame_done_0552
 17164 0000B870 488B32                  	mov rsi, qword [rdx]
 17165 0000B873 488933                  	mov qword [rbx], rsi
 17166 0000B876 48FFC9                  	dec rcx
 17167 0000B879 4883EB08                	sub rbx, 8
 17168 0000B87D 4883EA08                	sub rdx, 8
 17169 0000B881 EBE7                    	jmp .L_tc_recycle_frame_loop_0552
 17170                                  .L_tc_recycle_frame_done_0552:
 17171 0000B883 488D6308                	lea rsp, [rbx + 8]
 17172 0000B887 5D                      	pop rbp
 17173 0000B888 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 17174 0000B88B EB04                    	jmp .L_if_end_02fc
 17175                                  .L_if_else_02fc:
 17176 0000B88D 488B4520                	mov rax, PARAM(0)	; param ch
 17177                                  .L_if_end_02fc:
 17178 0000B891 C9                      	leave
 17179 0000B892 C21800                  	ret AND_KILL_FRAME(1)
 17180                                  .L_lambda_simple_end_03ff:	; new closure is in rax
 17181 0000B895 48890425[FB170000]      	mov qword [free_var_77], rax	; free var char-upcase
 17182 0000B89D 803805                  	cmp byte [rax], T_undefined
 17183 0000B8A0 0F8413980000            	je L_error_fvar_undefined
 17184 0000B8A6 48B8-                   	mov rax, sob_void
 17184 0000B8A8 [0000000000000000] 
 17185 0000B8B0 C9                      	leave
 17186 0000B8B1 C21800                  	ret AND_KILL_FRAME(1)
 17187                                  .L_lambda_simple_end_03fd:	; new closure is in rax
 17188 0000B8B4 803804                  	cmp byte [rax], T_closure
 17189 0000B8B7 0F8580980000            	jne L_error_non_closure
 17190 0000B8BD FF7001                  	push SOB_CLOSURE_ENV(rax)
 17191 0000B8C0 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17192                                  
 17193 0000B8C3 4889C7                  	mov rdi, rax
 17194 0000B8C6 E8709B0000              	call print_sexpr_if_not_void
 17195                                  
 17196 0000B8CB 48B8-                   	mov rax, L_constants + 0
 17196 0000B8CD [0000000000000000] 
 17197 0000B8D5 48890425[A6170000]      	mov qword [free_var_72], rax
 17198 0000B8DD 48B8-                   	mov rax, sob_void
 17198 0000B8DF [0000000000000000] 
 17199                                  
 17200 0000B8E7 4889C7                  	mov rdi, rax
 17201 0000B8EA E84C9B0000              	call print_sexpr_if_not_void
 17202                                  
 17203 0000B8EF 48B8-                   	mov rax, L_constants + 0
 17203 0000B8F1 [0000000000000000] 
 17204 0000B8F9 48890425[95170000]      	mov qword [free_var_71], rax
 17205 0000B901 48B8-                   	mov rax, sob_void
 17205 0000B903 [0000000000000000] 
 17206                                  
 17207 0000B90B 4889C7                  	mov rdi, rax
 17208 0000B90E E8289B0000              	call print_sexpr_if_not_void
 17209                                  
 17210 0000B913 48B8-                   	mov rax, L_constants + 0
 17210 0000B915 [0000000000000000] 
 17211 0000B91D 48890425[B7170000]      	mov qword [free_var_73], rax
 17212 0000B925 48B8-                   	mov rax, sob_void
 17212 0000B927 [0000000000000000] 
 17213                                  
 17214 0000B92F 4889C7                  	mov rdi, rax
 17215 0000B932 E8049B0000              	call print_sexpr_if_not_void
 17216                                  
 17217 0000B937 48B8-                   	mov rax, L_constants + 0
 17217 0000B939 [0000000000000000] 
 17218 0000B941 48890425[D9170000]      	mov qword [free_var_75], rax
 17219 0000B949 48B8-                   	mov rax, sob_void
 17219 0000B94B [0000000000000000] 
 17220                                  
 17221 0000B953 4889C7                  	mov rdi, rax
 17222 0000B956 E8E09A0000              	call print_sexpr_if_not_void
 17223                                  
 17224 0000B95B 48B8-                   	mov rax, L_constants + 0
 17224 0000B95D [0000000000000000] 
 17225 0000B965 48890425[C8170000]      	mov qword [free_var_74], rax
 17226 0000B96D 48B8-                   	mov rax, sob_void
 17226 0000B96F [0000000000000000] 
 17227                                  
 17228 0000B977 4889C7                  	mov rdi, rax
 17229 0000B97A E8BC9A0000              	call print_sexpr_if_not_void
 17230                                  
 17231                                  	; preparing a non-tail-call
 17232 0000B97F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17233 0000B984 E85D980000              	call malloc
 17234 0000B989 50                      	push rax
 17235 0000B98A BF00000000              	mov rdi, 8 * 0	; new rib
 17236 0000B98F E852980000              	call malloc
 17237 0000B994 50                      	push rax
 17238 0000B995 BF08000000              	mov rdi, 8 * 1	; extended env
 17239 0000B99A E847980000              	call malloc
 17240 0000B99F 488B7D10                	mov rdi, ENV
 17241 0000B9A3 BE00000000              	mov rsi, 0
 17242 0000B9A8 BA01000000              	mov rdx, 1
 17243                                  .L_lambda_simple_env_loop_0400:	; ext_env[i + 1] <-- env[i]
 17244 0000B9AD 4883FE00                	cmp rsi, 0
 17245 0000B9B1 7410                    	je .L_lambda_simple_env_end_0400
 17246 0000B9B3 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17247 0000B9B7 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17248 0000B9BB 48FFC6                  	inc rsi
 17249 0000B9BE 48FFC2                  	inc rdx
 17250 0000B9C1 EBEA                    	jmp .L_lambda_simple_env_loop_0400
 17251                                  .L_lambda_simple_env_end_0400:
 17252 0000B9C3 5B                      	pop rbx
 17253 0000B9C4 BE00000000              	mov rsi, 0
 17254                                  .L_lambda_simple_params_loop_0400:	; copy params
 17255 0000B9C9 4883FE00                	cmp rsi, 0
 17256 0000B9CD 740E                    	je .L_lambda_simple_params_end_0400
 17257 0000B9CF 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17258 0000B9D4 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17259 0000B9D8 48FFC6                  	inc rsi
 17260 0000B9DB EBEC                    	jmp .L_lambda_simple_params_loop_0400
 17261                                  .L_lambda_simple_params_end_0400:
 17262 0000B9DD 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 17263 0000B9E0 4889C3                  	mov rbx, rax
 17264 0000B9E3 58                      	pop rax
 17265 0000B9E4 C60004                  	mov byte [rax], T_closure
 17266 0000B9E7 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17267 0000B9EB 48C74009[F8B90000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0400
 17268 0000B9F3 E90F030000              	jmp .L_lambda_simple_end_0400
 17269                                  .L_lambda_simple_code_0400:	; lambda-simple body
 17270 0000B9F8 48837C241001            	cmp qword [rsp + 8 * 2], 1
 17271 0000B9FE 740B                    	je .L_lambda_simple_arity_check_ok_0400
 17272 0000BA00 FF742410                	push qword [rsp + 8 * 2]
 17273 0000BA04 6A01                    	push 1
 17274 0000BA06 E994970000              	jmp L_error_incorrect_arity_simple
 17275                                  .L_lambda_simple_arity_check_ok_0400:
 17276 0000BA0B C8000000                	enter 0, 0
 17277 0000BA0F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17278 0000BA14 E8CD970000              	call malloc
 17279 0000BA19 50                      	push rax
 17280 0000BA1A BF08000000              	mov rdi, 8 * 1	; new rib
 17281 0000BA1F E8C2970000              	call malloc
 17282 0000BA24 50                      	push rax
 17283 0000BA25 BF10000000              	mov rdi, 8 * 2	; extended env
 17284 0000BA2A E8B7970000              	call malloc
 17285 0000BA2F 488B7D10                	mov rdi, ENV
 17286 0000BA33 BE00000000              	mov rsi, 0
 17287 0000BA38 BA01000000              	mov rdx, 1
 17288                                  .L_lambda_opt_env_loop_0089:	; ext_env[i + 1] <-- env[i]
 17289 0000BA3D 4883FE01                	cmp rsi, 1
 17290 0000BA41 7410                    	je .L_lambda_opt_env_end_0089
 17291 0000BA43 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17292 0000BA47 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17293 0000BA4B 48FFC6                  	inc rsi
 17294 0000BA4E 48FFC2                  	inc rdx
 17295 0000BA51 EBEA                    	jmp .L_lambda_opt_env_loop_0089
 17296                                  .L_lambda_opt_env_end_0089:
 17297 0000BA53 5B                      	pop rbx
 17298 0000BA54 BE00000000              	mov rsi, 0
 17299                                  .L_lambda_opt_params_loop_0089:	; copy params
 17300 0000BA59 4883FE01                	cmp rsi, 1
 17301 0000BA5D 740E                    	je .L_lambda_opt_params_end_0089
 17302 0000BA5F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17303 0000BA64 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17304 0000BA68 48FFC6                  	inc rsi
 17305 0000BA6B EBEC                    	jmp .L_lambda_opt_params_loop_0089
 17306                                  .L_lambda_opt_params_end_0089:
 17307 0000BA6D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 17308 0000BA70 4889C3                  	mov rbx, rax
 17309 0000BA73 58                      	pop rax
 17310 0000BA74 C60004                  	mov byte [rax], T_closure
 17311 0000BA77 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17312 0000BA7B 48C74009[88BA0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0089
 17313 0000BA83 E97B020000              	jmp .L_lambda_opt_end_0089
 17314                                  .L_lambda_opt_code_0089:	; lambda-simple body
 17315 0000BA88 48837C241000            	cmp qword [rsp + 8 * 2], 0 ;	 check num of args
 17316 0000BA8E 740D                    	je .L_lambda_opt_arity_check_exact_0089 ;	 if equal, go to exact arity
 17317 0000BA90 7F42                    	jg .L_lambda_opt_arity_check_more_0089 ;	 if greater than, go to arity more
 17318 0000BA92 FF742410                	push qword [rsp + 8 * 2] ;	 else, throw opt arity error
 17319 0000BA96 6A00                    	push 0
 17320 0000BA98 E916970000              	jmp L_error_incorrect_arity_opt
 17321                                  .L_lambda_opt_arity_check_exact_0089:
 17322 0000BA9D 488B442410              	mov rax, qword [rsp + 8 * 2] ;	 number of args
 17323 0000BAA2 488D5CC410              	lea rbx, [rsp + 8 * (2 + rax)] ;	 address of last element
 17324 0000BAA7 4883EC08                	sub rsp, 8
 17325 0000BAAB 488D0C24                	lea rcx, [rsp + 0] ;	 new start
 17326                                  .L_lambda_opt_shift_entry_0089:
 17327 0000BAAF 488B5108                	mov rdx, [rcx + 8]
 17328 0000BAB3 488911                  	mov [rcx], rdx
 17329 0000BAB6 4883C108                	add rcx, 8
 17330 0000BABA 4839CB                  	cmp rbx, rcx
 17331 0000BABD 75F0                    	jne .L_lambda_opt_shift_entry_0089
 17332                                  .L_lambda_opt_shift_exit_0089:
 17333 0000BABF 48C703[01000000]        	mov qword[rbx], sob_nil ;	 place nil
 17334 0000BAC6 4883C001                	add rax, 1
 17335 0000BACA 4889442410              	mov qword [rsp + 8 * 2], rax
 17336 0000BACF E987000000              	jmp .L_lambda_opt_stack_adjusted_0089
 17337                                  .L_lambda_opt_arity_check_more_0089:
 17338 0000BAD4 48BA-                   	mov rdx, sob_nil ;	 base cdr
 17338 0000BAD6 [0100000000000000] 
 17339 0000BADE 48837C241001            	cmp qword [rsp + 8 * 2], 1
 17340 0000BAE4 7451                    	je .L_lambda_opt_stack_shrink_loop_exit_0089
 17341                                  .L_lambda_opt_stack_shrink_loop_0089:
 17342 0000BAE6 BF11000000              	mov rdi, (1 + 8 + 8)
 17343 0000BAEB E8F6960000              	call malloc
 17344 0000BAF0 C60021                  	mov byte[rax], T_pair
 17345 0000BAF3 48895009                	mov SOB_PAIR_CDR(rax), rdx
 17346 0000BAF7 4889C2                  	mov rdx, rax
 17347 0000BAFA 488B442410              	mov rax, qword [rsp + 8 * 2]
 17348 0000BAFF 488B5CC410              	mov rbx, qword [rsp + 8 * (2 + rax)]
 17349 0000BB04 48895A01                	mov SOB_PAIR_CAR(rdx), rbx
 17350 0000BB08 488D5CC408              	lea rbx, [rsp + 8 * (2 + rax - 1)]
 17351                                  .L_lambda_opt_extra_shift_process_0089:
 17352 0000BB0D 488B0B                  	mov rcx, [rbx]
 17353 0000BB10 48894B08                	mov [rbx + 8], rcx
 17354 0000BB14 4883EB08                	sub rbx, 8
 17355 0000BB18 4839DC                  	cmp rsp, rbx
 17356 0000BB1B 7EF0                    	jle .L_lambda_opt_extra_shift_process_0089
 17357                                  .L_lambda_opt_extra_shift_process_end_0089:
 17358 0000BB1D 4883C408                	add rsp, 8
 17359 0000BB21 488B5C2410              	mov rbx, [rsp + 8 * 2]
 17360 0000BB26 4883EB01                	sub rbx, 1
 17361 0000BB2A 48895C2410              	mov [rsp + 8 * 2], rbx
 17362 0000BB2F 48837C241001            	cmp qword [rsp + 8 * 2], 1
 17363 0000BB35 7FAF                    	jg .L_lambda_opt_stack_shrink_loop_0089
 17364                                  .L_lambda_opt_stack_shrink_loop_exit_0089:
 17365 0000BB37 488B4C2410              	mov rcx, [rsp + 8 * 2]
 17366 0000BB3C 488B5CCC10              	mov rbx, qword [rsp + 8 * (2 + rcx)]
 17367 0000BB41 BF11000000              	mov rdi, (1 + 8 + 8)
 17368 0000BB46 E89B960000              	call malloc
 17369 0000BB4B C60021                  	mov byte[rax], T_pair
 17370 0000BB4E 48895009                	mov SOB_PAIR_CDR(rax), rdx
 17371 0000BB52 48895801                	mov SOB_PAIR_CAR(rax), rbx
 17372 0000BB56 488944CC10              	mov [rsp + 8 * (2 + rcx)], rax
 17373                                  .L_lambda_opt_stack_adjusted_0089:
 17374 0000BB5B C8000000                	enter 0, 0
 17375                                  	; preparing a tail-call
 17376                                  	; preparing a non-tail-call
 17377 0000BB5F 488B4520                	mov rax, PARAM(0)	; param s
 17378 0000BB63 50                      	push rax
 17379 0000BB64 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17380 0000BB69 E878960000              	call malloc
 17381 0000BB6E 50                      	push rax
 17382 0000BB6F BF08000000              	mov rdi, 8 * 1	; new rib
 17383 0000BB74 E86D960000              	call malloc
 17384 0000BB79 50                      	push rax
 17385 0000BB7A BF18000000              	mov rdi, 8 * 3	; extended env
 17386 0000BB7F E862960000              	call malloc
 17387 0000BB84 488B7D10                	mov rdi, ENV
 17388 0000BB88 BE00000000              	mov rsi, 0
 17389 0000BB8D BA01000000              	mov rdx, 1
 17390                                  .L_lambda_simple_env_loop_0401:	; ext_env[i + 1] <-- env[i]
 17391 0000BB92 4883FE02                	cmp rsi, 2
 17392 0000BB96 7410                    	je .L_lambda_simple_env_end_0401
 17393 0000BB98 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17394 0000BB9C 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17395 0000BBA0 48FFC6                  	inc rsi
 17396 0000BBA3 48FFC2                  	inc rdx
 17397 0000BBA6 EBEA                    	jmp .L_lambda_simple_env_loop_0401
 17398                                  .L_lambda_simple_env_end_0401:
 17399 0000BBA8 5B                      	pop rbx
 17400 0000BBA9 BE00000000              	mov rsi, 0
 17401                                  .L_lambda_simple_params_loop_0401:	; copy params
 17402 0000BBAE 4883FE01                	cmp rsi, 1
 17403 0000BBB2 740E                    	je .L_lambda_simple_params_end_0401
 17404 0000BBB4 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17405 0000BBB9 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17406 0000BBBD 48FFC6                  	inc rsi
 17407 0000BBC0 EBEC                    	jmp .L_lambda_simple_params_loop_0401
 17408                                  .L_lambda_simple_params_end_0401:
 17409 0000BBC2 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 17410 0000BBC5 4889C3                  	mov rbx, rax
 17411 0000BBC8 58                      	pop rax
 17412 0000BBC9 C60004                  	mov byte [rax], T_closure
 17413 0000BBCC 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17414 0000BBD0 48C74009[DDBB0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0401
 17415 0000BBD8 E99B000000              	jmp .L_lambda_simple_end_0401
 17416                                  .L_lambda_simple_code_0401:	; lambda-simple body
 17417 0000BBDD 48837C241001            	cmp qword [rsp + 8 * 2], 1
 17418 0000BBE3 740B                    	je .L_lambda_simple_arity_check_ok_0401
 17419 0000BBE5 FF742410                	push qword [rsp + 8 * 2]
 17420 0000BBE9 6A01                    	push 1
 17421 0000BBEB E9AF950000              	jmp L_error_incorrect_arity_simple
 17422                                  .L_lambda_simple_arity_check_ok_0401:
 17423 0000BBF0 C8000000                	enter 0, 0
 17424                                  	; preparing a tail-call
 17425                                  	; preparing a non-tail-call
 17426 0000BBF4 488B4520                	mov rax, PARAM(0)	; param ch
 17427 0000BBF8 50                      	push rax
 17428 0000BBF9 6A01                    	push 1	; arg count
 17429 0000BBFB 488B0425[EA170000]      	mov rax, qword [free_var_76]	; free var char-downcase
 17430 0000BC03 803805                  	cmp byte [rax], T_undefined
 17431 0000BC06 0F84AD940000            	je L_error_fvar_undefined
 17432 0000BC0C 803804                  	cmp byte [rax], T_closure
 17433 0000BC0F 0F8528950000            	jne L_error_non_closure
 17434 0000BC15 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17435 0000BC18 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17436 0000BC1B 50                      	push rax
 17437 0000BC1C 6A01                    	push 1	; arg count
 17438 0000BC1E 488B0425[84170000]      	mov rax, qword [free_var_70]	; free var char->integer
 17439 0000BC26 803805                  	cmp byte [rax], T_undefined
 17440 0000BC29 0F848A940000            	je L_error_fvar_undefined
 17441 0000BC2F 803804                  	cmp byte [rax], T_closure
 17442 0000BC32 0F8505950000            	jne L_error_non_closure
 17443 0000BC38 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17444                                  
 17445                                  	; recycling the current frame
 17446 0000BC3B FF7508                  	push qword [rbp + 8 * 1]	; old return address
 17447 0000BC3E FF7500                  	push qword [rbp]	; old frame-pointer
 17448 0000BC41 B905000000              	mov rcx, 5
 17449 0000BC46 488B5D18                	mov rbx, COUNT
 17450 0000BC4A 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 17451 0000BC4F 488D55F8                	lea rdx, [rbp - 8]
 17452                                  .L_tc_recycle_frame_loop_0553:
 17453 0000BC53 4883F900                	cmp rcx, 0
 17454 0000BC57 7413                    	je .L_tc_recycle_frame_done_0553
 17455 0000BC59 488B32                  	mov rsi, qword [rdx]
 17456 0000BC5C 488933                  	mov qword [rbx], rsi
 17457 0000BC5F 48FFC9                  	dec rcx
 17458 0000BC62 4883EB08                	sub rbx, 8
 17459 0000BC66 4883EA08                	sub rdx, 8
 17460 0000BC6A EBE7                    	jmp .L_tc_recycle_frame_loop_0553
 17461                                  .L_tc_recycle_frame_done_0553:
 17462 0000BC6C 488D6308                	lea rsp, [rbx + 8]
 17463 0000BC70 5D                      	pop rbp
 17464 0000BC71 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 17465 0000BC74 C9                      	leave
 17466 0000BC75 C21800                  	ret AND_KILL_FRAME(1)
 17467                                  .L_lambda_simple_end_0401:	; new closure is in rax
 17468 0000BC78 50                      	push rax
 17469 0000BC79 6A02                    	push 2	; arg count
 17470 0000BC7B 488B0425[F81A0000]      	mov rax, qword [free_var_122]	; free var map
 17471 0000BC83 803805                  	cmp byte [rax], T_undefined
 17472 0000BC86 0F842D940000            	je L_error_fvar_undefined
 17473 0000BC8C 803804                  	cmp byte [rax], T_closure
 17474 0000BC8F 0F85A8940000            	jne L_error_non_closure
 17475 0000BC95 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17476 0000BC98 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17477 0000BC9B 50                      	push rax
 17478 0000BC9C 488B4510                	mov rax, ENV
 17479 0000BCA0 488B00                  	mov rax, qword [rax + 8 * 0]
 17480 0000BCA3 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var comparator
 17481 0000BCA6 50                      	push rax
 17482 0000BCA7 6A02                    	push 2	; arg count
 17483 0000BCA9 488B0425[0F150000]      	mov rax, qword [free_var_33]	; free var apply
 17484 0000BCB1 803805                  	cmp byte [rax], T_undefined
 17485 0000BCB4 0F84FF930000            	je L_error_fvar_undefined
 17486 0000BCBA 803804                  	cmp byte [rax], T_closure
 17487 0000BCBD 0F857A940000            	jne L_error_non_closure
 17488 0000BCC3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17489                                  
 17490                                  	; recycling the current frame
 17491 0000BCC6 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 17492 0000BCC9 FF7500                  	push qword [rbp]	; old frame-pointer
 17493 0000BCCC B906000000              	mov rcx, 6
 17494 0000BCD1 488B5D18                	mov rbx, COUNT
 17495 0000BCD5 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 17496 0000BCDA 488D55F8                	lea rdx, [rbp - 8]
 17497                                  .L_tc_recycle_frame_loop_0554:
 17498 0000BCDE 4883F900                	cmp rcx, 0
 17499 0000BCE2 7413                    	je .L_tc_recycle_frame_done_0554
 17500 0000BCE4 488B32                  	mov rsi, qword [rdx]
 17501 0000BCE7 488933                  	mov qword [rbx], rsi
 17502 0000BCEA 48FFC9                  	dec rcx
 17503 0000BCED 4883EB08                	sub rbx, 8
 17504 0000BCF1 4883EA08                	sub rdx, 8
 17505 0000BCF5 EBE7                    	jmp .L_tc_recycle_frame_loop_0554
 17506                                  .L_tc_recycle_frame_done_0554:
 17507 0000BCF7 488D6308                	lea rsp, [rbx + 8]
 17508 0000BCFB 5D                      	pop rbp
 17509 0000BCFC FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 17510 0000BCFF C9                      	leave
 17511 0000BD00 C21800                  	ret AND_KILL_FRAME(1)
 17512                                  .L_lambda_opt_end_0089:	; new closure is in rax
 17513 0000BD03 C9                      	leave
 17514 0000BD04 C21800                  	ret AND_KILL_FRAME(1)
 17515                                  .L_lambda_simple_end_0400:	; new closure is in rax
 17516 0000BD07 50                      	push rax
 17517 0000BD08 6A01                    	push 1	; arg count
 17518 0000BD0A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17519 0000BD0F E8D2940000              	call malloc
 17520 0000BD14 50                      	push rax
 17521 0000BD15 BF00000000              	mov rdi, 8 * 0	; new rib
 17522 0000BD1A E8C7940000              	call malloc
 17523 0000BD1F 50                      	push rax
 17524 0000BD20 BF08000000              	mov rdi, 8 * 1	; extended env
 17525 0000BD25 E8BC940000              	call malloc
 17526 0000BD2A 488B7D10                	mov rdi, ENV
 17527 0000BD2E BE00000000              	mov rsi, 0
 17528 0000BD33 BA01000000              	mov rdx, 1
 17529                                  .L_lambda_simple_env_loop_0402:	; ext_env[i + 1] <-- env[i]
 17530 0000BD38 4883FE00                	cmp rsi, 0
 17531 0000BD3C 7410                    	je .L_lambda_simple_env_end_0402
 17532 0000BD3E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17533 0000BD42 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17534 0000BD46 48FFC6                  	inc rsi
 17535 0000BD49 48FFC2                  	inc rdx
 17536 0000BD4C EBEA                    	jmp .L_lambda_simple_env_loop_0402
 17537                                  .L_lambda_simple_env_end_0402:
 17538 0000BD4E 5B                      	pop rbx
 17539 0000BD4F BE00000000              	mov rsi, 0
 17540                                  .L_lambda_simple_params_loop_0402:	; copy params
 17541 0000BD54 4883FE00                	cmp rsi, 0
 17542 0000BD58 740E                    	je .L_lambda_simple_params_end_0402
 17543 0000BD5A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17544 0000BD5F 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17545 0000BD63 48FFC6                  	inc rsi
 17546 0000BD66 EBEC                    	jmp .L_lambda_simple_params_loop_0402
 17547                                  .L_lambda_simple_params_end_0402:
 17548 0000BD68 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 17549 0000BD6B 4889C3                  	mov rbx, rax
 17550 0000BD6E 58                      	pop rax
 17551 0000BD6F C60004                  	mov byte [rax], T_closure
 17552 0000BD72 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17553 0000BD76 48C74009[83BD0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0402
 17554 0000BD7E E965010000              	jmp .L_lambda_simple_end_0402
 17555                                  .L_lambda_simple_code_0402:	; lambda-simple body
 17556 0000BD83 48837C241001            	cmp qword [rsp + 8 * 2], 1
 17557 0000BD89 740B                    	je .L_lambda_simple_arity_check_ok_0402
 17558 0000BD8B FF742410                	push qword [rsp + 8 * 2]
 17559 0000BD8F 6A01                    	push 1
 17560 0000BD91 E909940000              	jmp L_error_incorrect_arity_simple
 17561                                  .L_lambda_simple_arity_check_ok_0402:
 17562 0000BD96 C8000000                	enter 0, 0
 17563                                  	; preparing a non-tail-call
 17564 0000BD9A 488B0425[22130000]      	mov rax, qword [free_var_4]	; free var <
 17565 0000BDA2 803805                  	cmp byte [rax], T_undefined
 17566 0000BDA5 0F840E930000            	je L_error_fvar_undefined
 17567 0000BDAB 50                      	push rax
 17568 0000BDAC 6A01                    	push 1	; arg count
 17569 0000BDAE 488B4520                	mov rax, PARAM(0)	; param make-char-ci-comparator
 17570 0000BDB2 803804                  	cmp byte [rax], T_closure
 17571 0000BDB5 0F8582930000            	jne L_error_non_closure
 17572 0000BDBB FF7001                  	push SOB_CLOSURE_ENV(rax)
 17573 0000BDBE FF5009                  	call SOB_CLOSURE_CODE(rax)
 17574 0000BDC1 48890425[A6170000]      	mov qword [free_var_72], rax	; free var char-ci<?
 17575 0000BDC9 803805                  	cmp byte [rax], T_undefined
 17576 0000BDCC 0F84E7920000            	je L_error_fvar_undefined
 17577 0000BDD2 48B8-                   	mov rax, sob_void
 17577 0000BDD4 [0000000000000000] 
 17578                                  
 17579                                  	; preparing a non-tail-call
 17580 0000BDDC 488B0425[33130000]      	mov rax, qword [free_var_5]	; free var <=
 17581 0000BDE4 803805                  	cmp byte [rax], T_undefined
 17582 0000BDE7 0F84CC920000            	je L_error_fvar_undefined
 17583 0000BDED 50                      	push rax
 17584 0000BDEE 6A01                    	push 1	; arg count
 17585 0000BDF0 488B4520                	mov rax, PARAM(0)	; param make-char-ci-comparator
 17586 0000BDF4 803804                  	cmp byte [rax], T_closure
 17587 0000BDF7 0F8540930000            	jne L_error_non_closure
 17588 0000BDFD FF7001                  	push SOB_CLOSURE_ENV(rax)
 17589 0000BE00 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17590 0000BE03 48890425[95170000]      	mov qword [free_var_71], rax	; free var char-ci<=?
 17591 0000BE0B 803805                  	cmp byte [rax], T_undefined
 17592 0000BE0E 0F84A5920000            	je L_error_fvar_undefined
 17593 0000BE14 48B8-                   	mov rax, sob_void
 17593 0000BE16 [0000000000000000] 
 17594                                  
 17595                                  	; preparing a non-tail-call
 17596 0000BE1E 488B0425[44130000]      	mov rax, qword [free_var_6]	; free var =
 17597 0000BE26 803805                  	cmp byte [rax], T_undefined
 17598 0000BE29 0F848A920000            	je L_error_fvar_undefined
 17599 0000BE2F 50                      	push rax
 17600 0000BE30 6A01                    	push 1	; arg count
 17601 0000BE32 488B4520                	mov rax, PARAM(0)	; param make-char-ci-comparator
 17602 0000BE36 803804                  	cmp byte [rax], T_closure
 17603 0000BE39 0F85FE920000            	jne L_error_non_closure
 17604 0000BE3F FF7001                  	push SOB_CLOSURE_ENV(rax)
 17605 0000BE42 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17606 0000BE45 48890425[B7170000]      	mov qword [free_var_73], rax	; free var char-ci=?
 17607 0000BE4D 803805                  	cmp byte [rax], T_undefined
 17608 0000BE50 0F8463920000            	je L_error_fvar_undefined
 17609 0000BE56 48B8-                   	mov rax, sob_void
 17609 0000BE58 [0000000000000000] 
 17610                                  
 17611                                  	; preparing a non-tail-call
 17612 0000BE60 488B0425[55130000]      	mov rax, qword [free_var_7]	; free var >
 17613 0000BE68 803805                  	cmp byte [rax], T_undefined
 17614 0000BE6B 0F8448920000            	je L_error_fvar_undefined
 17615 0000BE71 50                      	push rax
 17616 0000BE72 6A01                    	push 1	; arg count
 17617 0000BE74 488B4520                	mov rax, PARAM(0)	; param make-char-ci-comparator
 17618 0000BE78 803804                  	cmp byte [rax], T_closure
 17619 0000BE7B 0F85BC920000            	jne L_error_non_closure
 17620 0000BE81 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17621 0000BE84 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17622 0000BE87 48890425[D9170000]      	mov qword [free_var_75], rax	; free var char-ci>?
 17623 0000BE8F 803805                  	cmp byte [rax], T_undefined
 17624 0000BE92 0F8421920000            	je L_error_fvar_undefined
 17625 0000BE98 48B8-                   	mov rax, sob_void
 17625 0000BE9A [0000000000000000] 
 17626                                  
 17627                                  	; preparing a non-tail-call
 17628 0000BEA2 488B0425[66130000]      	mov rax, qword [free_var_8]	; free var >=
 17629 0000BEAA 803805                  	cmp byte [rax], T_undefined
 17630 0000BEAD 0F8406920000            	je L_error_fvar_undefined
 17631 0000BEB3 50                      	push rax
 17632 0000BEB4 6A01                    	push 1	; arg count
 17633 0000BEB6 488B4520                	mov rax, PARAM(0)	; param make-char-ci-comparator
 17634 0000BEBA 803804                  	cmp byte [rax], T_closure
 17635 0000BEBD 0F857A920000            	jne L_error_non_closure
 17636 0000BEC3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17637 0000BEC6 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17638 0000BEC9 48890425[C8170000]      	mov qword [free_var_74], rax	; free var char-ci>=?
 17639 0000BED1 803805                  	cmp byte [rax], T_undefined
 17640 0000BED4 0F84DF910000            	je L_error_fvar_undefined
 17641 0000BEDA 48B8-                   	mov rax, sob_void
 17641 0000BEDC [0000000000000000] 
 17642 0000BEE4 C9                      	leave
 17643 0000BEE5 C21800                  	ret AND_KILL_FRAME(1)
 17644                                  .L_lambda_simple_end_0402:	; new closure is in rax
 17645 0000BEE8 803804                  	cmp byte [rax], T_closure
 17646 0000BEEB 0F854C920000            	jne L_error_non_closure
 17647 0000BEF1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17648 0000BEF4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17649                                  
 17650 0000BEF7 4889C7                  	mov rdi, rax
 17651 0000BEFA E83C950000              	call print_sexpr_if_not_void
 17652                                  
 17653 0000BEFF 48B8-                   	mov rax, L_constants + 0
 17653 0000BF01 [0000000000000000] 
 17654 0000BF09 48890425[071D0000]      	mov qword [free_var_153], rax
 17655 0000BF11 48B8-                   	mov rax, sob_void
 17655 0000BF13 [0000000000000000] 
 17656                                  
 17657 0000BF1B 4889C7                  	mov rdi, rax
 17658 0000BF1E E818950000              	call print_sexpr_if_not_void
 17659                                  
 17660 0000BF23 48B8-                   	mov rax, L_constants + 0
 17660 0000BF25 [0000000000000000] 
 17661 0000BF2D 48890425[6D1D0000]      	mov qword [free_var_159], rax
 17662 0000BF35 48B8-                   	mov rax, sob_void
 17662 0000BF37 [0000000000000000] 
 17663                                  
 17664 0000BF3F 4889C7                  	mov rdi, rax
 17665 0000BF42 E8F4940000              	call print_sexpr_if_not_void
 17666                                  
 17667                                  	; preparing a non-tail-call
 17668 0000BF47 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17669 0000BF4C E895920000              	call malloc
 17670 0000BF51 50                      	push rax
 17671 0000BF52 BF00000000              	mov rdi, 8 * 0	; new rib
 17672 0000BF57 E88A920000              	call malloc
 17673 0000BF5C 50                      	push rax
 17674 0000BF5D BF08000000              	mov rdi, 8 * 1	; extended env
 17675 0000BF62 E87F920000              	call malloc
 17676 0000BF67 488B7D10                	mov rdi, ENV
 17677 0000BF6B BE00000000              	mov rsi, 0
 17678 0000BF70 BA01000000              	mov rdx, 1
 17679                                  .L_lambda_simple_env_loop_0403:	; ext_env[i + 1] <-- env[i]
 17680 0000BF75 4883FE00                	cmp rsi, 0
 17681 0000BF79 7410                    	je .L_lambda_simple_env_end_0403
 17682 0000BF7B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17683 0000BF7F 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17684 0000BF83 48FFC6                  	inc rsi
 17685 0000BF86 48FFC2                  	inc rdx
 17686 0000BF89 EBEA                    	jmp .L_lambda_simple_env_loop_0403
 17687                                  .L_lambda_simple_env_end_0403:
 17688 0000BF8B 5B                      	pop rbx
 17689 0000BF8C BE00000000              	mov rsi, 0
 17690                                  .L_lambda_simple_params_loop_0403:	; copy params
 17691 0000BF91 4883FE00                	cmp rsi, 0
 17692 0000BF95 740E                    	je .L_lambda_simple_params_end_0403
 17693 0000BF97 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17694 0000BF9C 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17695 0000BFA0 48FFC6                  	inc rsi
 17696 0000BFA3 EBEC                    	jmp .L_lambda_simple_params_loop_0403
 17697                                  .L_lambda_simple_params_end_0403:
 17698 0000BFA5 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 17699 0000BFA8 4889C3                  	mov rbx, rax
 17700 0000BFAB 58                      	pop rax
 17701 0000BFAC C60004                  	mov byte [rax], T_closure
 17702 0000BFAF 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17703 0000BFB3 48C74009[C0BF0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0403
 17704 0000BFBB E95D010000              	jmp .L_lambda_simple_end_0403
 17705                                  .L_lambda_simple_code_0403:	; lambda-simple body
 17706 0000BFC0 48837C241001            	cmp qword [rsp + 8 * 2], 1
 17707 0000BFC6 740B                    	je .L_lambda_simple_arity_check_ok_0403
 17708 0000BFC8 FF742410                	push qword [rsp + 8 * 2]
 17709 0000BFCC 6A01                    	push 1
 17710 0000BFCE E9CC910000              	jmp L_error_incorrect_arity_simple
 17711                                  .L_lambda_simple_arity_check_ok_0403:
 17712 0000BFD3 C8000000                	enter 0, 0
 17713 0000BFD7 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17714 0000BFDC E805920000              	call malloc
 17715 0000BFE1 50                      	push rax
 17716 0000BFE2 BF08000000              	mov rdi, 8 * 1	; new rib
 17717 0000BFE7 E8FA910000              	call malloc
 17718 0000BFEC 50                      	push rax
 17719 0000BFED BF10000000              	mov rdi, 8 * 2	; extended env
 17720 0000BFF2 E8EF910000              	call malloc
 17721 0000BFF7 488B7D10                	mov rdi, ENV
 17722 0000BFFB BE00000000              	mov rsi, 0
 17723 0000C000 BA01000000              	mov rdx, 1
 17724                                  .L_lambda_simple_env_loop_0404:	; ext_env[i + 1] <-- env[i]
 17725 0000C005 4883FE01                	cmp rsi, 1
 17726 0000C009 7410                    	je .L_lambda_simple_env_end_0404
 17727 0000C00B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17728 0000C00F 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17729 0000C013 48FFC6                  	inc rsi
 17730 0000C016 48FFC2                  	inc rdx
 17731 0000C019 EBEA                    	jmp .L_lambda_simple_env_loop_0404
 17732                                  .L_lambda_simple_env_end_0404:
 17733 0000C01B 5B                      	pop rbx
 17734 0000C01C BE00000000              	mov rsi, 0
 17735                                  .L_lambda_simple_params_loop_0404:	; copy params
 17736 0000C021 4883FE01                	cmp rsi, 1
 17737 0000C025 740E                    	je .L_lambda_simple_params_end_0404
 17738 0000C027 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17739 0000C02C 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17740 0000C030 48FFC6                  	inc rsi
 17741 0000C033 EBEC                    	jmp .L_lambda_simple_params_loop_0404
 17742                                  .L_lambda_simple_params_end_0404:
 17743 0000C035 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 17744 0000C038 4889C3                  	mov rbx, rax
 17745 0000C03B 58                      	pop rax
 17746 0000C03C C60004                  	mov byte [rax], T_closure
 17747 0000C03F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17748 0000C043 48C74009[50C00000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0404
 17749 0000C04B E9C9000000              	jmp .L_lambda_simple_end_0404
 17750                                  .L_lambda_simple_code_0404:	; lambda-simple body
 17751 0000C050 48837C241001            	cmp qword [rsp + 8 * 2], 1
 17752 0000C056 740B                    	je .L_lambda_simple_arity_check_ok_0404
 17753 0000C058 FF742410                	push qword [rsp + 8 * 2]
 17754 0000C05C 6A01                    	push 1
 17755 0000C05E E93C910000              	jmp L_error_incorrect_arity_simple
 17756                                  .L_lambda_simple_arity_check_ok_0404:
 17757 0000C063 C8000000                	enter 0, 0
 17758                                  	; preparing a tail-call
 17759                                  	; preparing a non-tail-call
 17760                                  	; preparing a non-tail-call
 17761 0000C067 488B4520                	mov rax, PARAM(0)	; param str
 17762 0000C06B 50                      	push rax
 17763 0000C06C 6A01                    	push 1	; arg count
 17764 0000C06E 488B0425[901C0000]      	mov rax, qword [free_var_146]	; free var string->list
 17765 0000C076 803805                  	cmp byte [rax], T_undefined
 17766 0000C079 0F843A900000            	je L_error_fvar_undefined
 17767 0000C07F 803804                  	cmp byte [rax], T_closure
 17768 0000C082 0F85B5900000            	jne L_error_non_closure
 17769 0000C088 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17770 0000C08B FF5009                  	call SOB_CLOSURE_CODE(rax)
 17771 0000C08E 50                      	push rax
 17772 0000C08F 488B4510                	mov rax, ENV
 17773 0000C093 488B00                  	mov rax, qword [rax + 8 * 0]
 17774 0000C096 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var char-case-converter
 17775 0000C099 50                      	push rax
 17776 0000C09A 6A02                    	push 2	; arg count
 17777 0000C09C 488B0425[F81A0000]      	mov rax, qword [free_var_122]	; free var map
 17778 0000C0A4 803805                  	cmp byte [rax], T_undefined
 17779 0000C0A7 0F840C900000            	je L_error_fvar_undefined
 17780 0000C0AD 803804                  	cmp byte [rax], T_closure
 17781 0000C0B0 0F8587900000            	jne L_error_non_closure
 17782 0000C0B6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17783 0000C0B9 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17784 0000C0BC 50                      	push rax
 17785 0000C0BD 6A01                    	push 1	; arg count
 17786 0000C0BF 488B0425[0A1A0000]      	mov rax, qword [free_var_108]	; free var list->string
 17787 0000C0C7 803805                  	cmp byte [rax], T_undefined
 17788 0000C0CA 0F84E98F0000            	je L_error_fvar_undefined
 17789 0000C0D0 803804                  	cmp byte [rax], T_closure
 17790 0000C0D3 0F8564900000            	jne L_error_non_closure
 17791 0000C0D9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17792                                  
 17793                                  	; recycling the current frame
 17794 0000C0DC FF7508                  	push qword [rbp + 8 * 1]	; old return address
 17795 0000C0DF FF7500                  	push qword [rbp]	; old frame-pointer
 17796 0000C0E2 B905000000              	mov rcx, 5
 17797 0000C0E7 488B5D18                	mov rbx, COUNT
 17798 0000C0EB 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 17799 0000C0F0 488D55F8                	lea rdx, [rbp - 8]
 17800                                  .L_tc_recycle_frame_loop_0555:
 17801 0000C0F4 4883F900                	cmp rcx, 0
 17802 0000C0F8 7413                    	je .L_tc_recycle_frame_done_0555
 17803 0000C0FA 488B32                  	mov rsi, qword [rdx]
 17804 0000C0FD 488933                  	mov qword [rbx], rsi
 17805 0000C100 48FFC9                  	dec rcx
 17806 0000C103 4883EB08                	sub rbx, 8
 17807 0000C107 4883EA08                	sub rdx, 8
 17808 0000C10B EBE7                    	jmp .L_tc_recycle_frame_loop_0555
 17809                                  .L_tc_recycle_frame_done_0555:
 17810 0000C10D 488D6308                	lea rsp, [rbx + 8]
 17811 0000C111 5D                      	pop rbp
 17812 0000C112 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 17813 0000C115 C9                      	leave
 17814 0000C116 C21800                  	ret AND_KILL_FRAME(1)
 17815                                  .L_lambda_simple_end_0404:	; new closure is in rax
 17816 0000C119 C9                      	leave
 17817 0000C11A C21800                  	ret AND_KILL_FRAME(1)
 17818                                  .L_lambda_simple_end_0403:	; new closure is in rax
 17819 0000C11D 50                      	push rax
 17820 0000C11E 6A01                    	push 1	; arg count
 17821 0000C120 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17822 0000C125 E8BC900000              	call malloc
 17823 0000C12A 50                      	push rax
 17824 0000C12B BF00000000              	mov rdi, 8 * 0	; new rib
 17825 0000C130 E8B1900000              	call malloc
 17826 0000C135 50                      	push rax
 17827 0000C136 BF08000000              	mov rdi, 8 * 1	; extended env
 17828 0000C13B E8A6900000              	call malloc
 17829 0000C140 488B7D10                	mov rdi, ENV
 17830 0000C144 BE00000000              	mov rsi, 0
 17831 0000C149 BA01000000              	mov rdx, 1
 17832                                  .L_lambda_simple_env_loop_0405:	; ext_env[i + 1] <-- env[i]
 17833 0000C14E 4883FE00                	cmp rsi, 0
 17834 0000C152 7410                    	je .L_lambda_simple_env_end_0405
 17835 0000C154 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17836 0000C158 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17837 0000C15C 48FFC6                  	inc rsi
 17838 0000C15F 48FFC2                  	inc rdx
 17839 0000C162 EBEA                    	jmp .L_lambda_simple_env_loop_0405
 17840                                  .L_lambda_simple_env_end_0405:
 17841 0000C164 5B                      	pop rbx
 17842 0000C165 BE00000000              	mov rsi, 0
 17843                                  .L_lambda_simple_params_loop_0405:	; copy params
 17844 0000C16A 4883FE00                	cmp rsi, 0
 17845 0000C16E 740E                    	je .L_lambda_simple_params_end_0405
 17846 0000C170 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17847 0000C175 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17848 0000C179 48FFC6                  	inc rsi
 17849 0000C17C EBEC                    	jmp .L_lambda_simple_params_loop_0405
 17850                                  .L_lambda_simple_params_end_0405:
 17851 0000C17E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 17852 0000C181 4889C3                  	mov rbx, rax
 17853 0000C184 58                      	pop rax
 17854 0000C185 C60004                  	mov byte [rax], T_closure
 17855 0000C188 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17856 0000C18C 48C74009[99C10000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0405
 17857 0000C194 E99F000000              	jmp .L_lambda_simple_end_0405
 17858                                  .L_lambda_simple_code_0405:	; lambda-simple body
 17859 0000C199 48837C241001            	cmp qword [rsp + 8 * 2], 1
 17860 0000C19F 740B                    	je .L_lambda_simple_arity_check_ok_0405
 17861 0000C1A1 FF742410                	push qword [rsp + 8 * 2]
 17862 0000C1A5 6A01                    	push 1
 17863 0000C1A7 E9F38F0000              	jmp L_error_incorrect_arity_simple
 17864                                  .L_lambda_simple_arity_check_ok_0405:
 17865 0000C1AC C8000000                	enter 0, 0
 17866                                  	; preparing a non-tail-call
 17867 0000C1B0 488B0425[EA170000]      	mov rax, qword [free_var_76]	; free var char-downcase
 17868 0000C1B8 803805                  	cmp byte [rax], T_undefined
 17869 0000C1BB 0F84F88E0000            	je L_error_fvar_undefined
 17870 0000C1C1 50                      	push rax
 17871 0000C1C2 6A01                    	push 1	; arg count
 17872 0000C1C4 488B4520                	mov rax, PARAM(0)	; param make-string-case-converter
 17873 0000C1C8 803804                  	cmp byte [rax], T_closure
 17874 0000C1CB 0F856C8F0000            	jne L_error_non_closure
 17875 0000C1D1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17876 0000C1D4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17877 0000C1D7 48890425[071D0000]      	mov qword [free_var_153], rax	; free var string-downcase
 17878 0000C1DF 803805                  	cmp byte [rax], T_undefined
 17879 0000C1E2 0F84D18E0000            	je L_error_fvar_undefined
 17880 0000C1E8 48B8-                   	mov rax, sob_void
 17880 0000C1EA [0000000000000000] 
 17881                                  
 17882                                  	; preparing a non-tail-call
 17883 0000C1F2 488B0425[FB170000]      	mov rax, qword [free_var_77]	; free var char-upcase
 17884 0000C1FA 803805                  	cmp byte [rax], T_undefined
 17885 0000C1FD 0F84B68E0000            	je L_error_fvar_undefined
 17886 0000C203 50                      	push rax
 17887 0000C204 6A01                    	push 1	; arg count
 17888 0000C206 488B4520                	mov rax, PARAM(0)	; param make-string-case-converter
 17889 0000C20A 803804                  	cmp byte [rax], T_closure
 17890 0000C20D 0F852A8F0000            	jne L_error_non_closure
 17891 0000C213 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17892 0000C216 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17893 0000C219 48890425[6D1D0000]      	mov qword [free_var_159], rax	; free var string-upcase
 17894 0000C221 803805                  	cmp byte [rax], T_undefined
 17895 0000C224 0F848F8E0000            	je L_error_fvar_undefined
 17896 0000C22A 48B8-                   	mov rax, sob_void
 17896 0000C22C [0000000000000000] 
 17897 0000C234 C9                      	leave
 17898 0000C235 C21800                  	ret AND_KILL_FRAME(1)
 17899                                  .L_lambda_simple_end_0405:	; new closure is in rax
 17900 0000C238 803804                  	cmp byte [rax], T_closure
 17901 0000C23B 0F85FC8E0000            	jne L_error_non_closure
 17902 0000C241 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17903 0000C244 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17904                                  
 17905 0000C247 4889C7                  	mov rdi, rax
 17906 0000C24A E8EC910000              	call print_sexpr_if_not_void
 17907                                  
 17908 0000C24F 48B8-                   	mov rax, L_constants + 0
 17908 0000C251 [0000000000000000] 
 17909 0000C259 48890425[8F1D0000]      	mov qword [free_var_161], rax
 17910 0000C261 48B8-                   	mov rax, sob_void
 17910 0000C263 [0000000000000000] 
 17911                                  
 17912 0000C26B 4889C7                  	mov rdi, rax
 17913 0000C26E E8C8910000              	call print_sexpr_if_not_void
 17914                                  
 17915 0000C273 48B8-                   	mov rax, L_constants + 0
 17915 0000C275 [0000000000000000] 
 17916 0000C27D 48890425[7E1D0000]      	mov qword [free_var_160], rax
 17917 0000C285 48B8-                   	mov rax, sob_void
 17917 0000C287 [0000000000000000] 
 17918                                  
 17919 0000C28F 4889C7                  	mov rdi, rax
 17920 0000C292 E8A4910000              	call print_sexpr_if_not_void
 17921                                  
 17922 0000C297 48B8-                   	mov rax, L_constants + 0
 17922 0000C299 [0000000000000000] 
 17923 0000C2A1 48890425[A01D0000]      	mov qword [free_var_162], rax
 17924 0000C2A9 48B8-                   	mov rax, sob_void
 17924 0000C2AB [0000000000000000] 
 17925                                  
 17926 0000C2B3 4889C7                  	mov rdi, rax
 17927 0000C2B6 E880910000              	call print_sexpr_if_not_void
 17928                                  
 17929 0000C2BB 48B8-                   	mov rax, L_constants + 0
 17929 0000C2BD [0000000000000000] 
 17930 0000C2C5 48890425[B11D0000]      	mov qword [free_var_163], rax
 17931 0000C2CD 48B8-                   	mov rax, sob_void
 17931 0000C2CF [0000000000000000] 
 17932                                  
 17933 0000C2D7 4889C7                  	mov rdi, rax
 17934 0000C2DA E85C910000              	call print_sexpr_if_not_void
 17935                                  
 17936 0000C2DF 48B8-                   	mov rax, L_constants + 0
 17936 0000C2E1 [0000000000000000] 
 17937 0000C2E9 48890425[C21D0000]      	mov qword [free_var_164], rax
 17938 0000C2F1 48B8-                   	mov rax, sob_void
 17938 0000C2F3 [0000000000000000] 
 17939                                  
 17940 0000C2FB 4889C7                  	mov rdi, rax
 17941 0000C2FE E838910000              	call print_sexpr_if_not_void
 17942                                  
 17943 0000C303 48B8-                   	mov rax, L_constants + 0
 17943 0000C305 [0000000000000000] 
 17944 0000C30D 48890425[C31C0000]      	mov qword [free_var_149], rax
 17945 0000C315 48B8-                   	mov rax, sob_void
 17945 0000C317 [0000000000000000] 
 17946                                  
 17947 0000C31F 4889C7                  	mov rdi, rax
 17948 0000C322 E814910000              	call print_sexpr_if_not_void
 17949                                  
 17950 0000C327 48B8-                   	mov rax, L_constants + 0
 17950 0000C329 [0000000000000000] 
 17951 0000C331 48890425[B21C0000]      	mov qword [free_var_148], rax
 17952 0000C339 48B8-                   	mov rax, sob_void
 17952 0000C33B [0000000000000000] 
 17953                                  
 17954 0000C343 4889C7                  	mov rdi, rax
 17955 0000C346 E8F0900000              	call print_sexpr_if_not_void
 17956                                  
 17957 0000C34B 48B8-                   	mov rax, L_constants + 0
 17957 0000C34D [0000000000000000] 
 17958 0000C355 48890425[D41C0000]      	mov qword [free_var_150], rax
 17959 0000C35D 48B8-                   	mov rax, sob_void
 17959 0000C35F [0000000000000000] 
 17960                                  
 17961 0000C367 4889C7                  	mov rdi, rax
 17962 0000C36A E8CC900000              	call print_sexpr_if_not_void
 17963                                  
 17964 0000C36F 48B8-                   	mov rax, L_constants + 0
 17964 0000C371 [0000000000000000] 
 17965 0000C379 48890425[E51C0000]      	mov qword [free_var_151], rax
 17966 0000C381 48B8-                   	mov rax, sob_void
 17966 0000C383 [0000000000000000] 
 17967                                  
 17968 0000C38B 4889C7                  	mov rdi, rax
 17969 0000C38E E8A8900000              	call print_sexpr_if_not_void
 17970                                  
 17971 0000C393 48B8-                   	mov rax, L_constants + 0
 17971 0000C395 [0000000000000000] 
 17972 0000C39D 48890425[F61C0000]      	mov qword [free_var_152], rax
 17973 0000C3A5 48B8-                   	mov rax, sob_void
 17973 0000C3A7 [0000000000000000] 
 17974                                  
 17975 0000C3AF 4889C7                  	mov rdi, rax
 17976 0000C3B2 E884900000              	call print_sexpr_if_not_void
 17977                                  
 17978                                  	; preparing a non-tail-call
 17979 0000C3B7 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17980 0000C3BC E8258E0000              	call malloc
 17981 0000C3C1 50                      	push rax
 17982 0000C3C2 BF00000000              	mov rdi, 8 * 0	; new rib
 17983 0000C3C7 E81A8E0000              	call malloc
 17984 0000C3CC 50                      	push rax
 17985 0000C3CD BF08000000              	mov rdi, 8 * 1	; extended env
 17986 0000C3D2 E80F8E0000              	call malloc
 17987 0000C3D7 488B7D10                	mov rdi, ENV
 17988 0000C3DB BE00000000              	mov rsi, 0
 17989 0000C3E0 BA01000000              	mov rdx, 1
 17990                                  .L_lambda_simple_env_loop_0406:	; ext_env[i + 1] <-- env[i]
 17991 0000C3E5 4883FE00                	cmp rsi, 0
 17992 0000C3E9 7410                    	je .L_lambda_simple_env_end_0406
 17993 0000C3EB 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17994 0000C3EF 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17995 0000C3F3 48FFC6                  	inc rsi
 17996 0000C3F6 48FFC2                  	inc rdx
 17997 0000C3F9 EBEA                    	jmp .L_lambda_simple_env_loop_0406
 17998                                  .L_lambda_simple_env_end_0406:
 17999 0000C3FB 5B                      	pop rbx
 18000 0000C3FC BE00000000              	mov rsi, 0
 18001                                  .L_lambda_simple_params_loop_0406:	; copy params
 18002 0000C401 4883FE00                	cmp rsi, 0
 18003 0000C405 740E                    	je .L_lambda_simple_params_end_0406
 18004 0000C407 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18005 0000C40C 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18006 0000C410 48FFC6                  	inc rsi
 18007 0000C413 EBEC                    	jmp .L_lambda_simple_params_loop_0406
 18008                                  .L_lambda_simple_params_end_0406:
 18009 0000C415 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 18010 0000C418 4889C3                  	mov rbx, rax
 18011 0000C41B 58                      	pop rax
 18012 0000C41C C60004                  	mov byte [rax], T_closure
 18013 0000C41F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18014 0000C423 48C74009[30C40000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0406
 18015 0000C42B E99B0C0000              	jmp .L_lambda_simple_end_0406
 18016                                  .L_lambda_simple_code_0406:	; lambda-simple body
 18017 0000C430 48837C241002            	cmp qword [rsp + 8 * 2], 2
 18018 0000C436 740B                    	je .L_lambda_simple_arity_check_ok_0406
 18019 0000C438 FF742410                	push qword [rsp + 8 * 2]
 18020 0000C43C 6A02                    	push 2
 18021 0000C43E E95C8D0000              	jmp L_error_incorrect_arity_simple
 18022                                  .L_lambda_simple_arity_check_ok_0406:
 18023 0000C443 C8000000                	enter 0, 0
 18024                                  	; preparing a tail-call
 18025 0000C447 48B8-                   	mov rax, L_constants + 2335
 18025 0000C449 [1F09000000000000] 
 18026 0000C451 50                      	push rax
 18027 0000C452 6A01                    	push 1	; arg count
 18028 0000C454 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18029 0000C459 E8888D0000              	call malloc
 18030 0000C45E 50                      	push rax
 18031 0000C45F BF10000000              	mov rdi, 8 * 2	; new rib
 18032 0000C464 E87D8D0000              	call malloc
 18033 0000C469 50                      	push rax
 18034 0000C46A BF10000000              	mov rdi, 8 * 2	; extended env
 18035 0000C46F E8728D0000              	call malloc
 18036 0000C474 488B7D10                	mov rdi, ENV
 18037 0000C478 BE00000000              	mov rsi, 0
 18038 0000C47D BA01000000              	mov rdx, 1
 18039                                  .L_lambda_simple_env_loop_0407:	; ext_env[i + 1] <-- env[i]
 18040 0000C482 4883FE01                	cmp rsi, 1
 18041 0000C486 7410                    	je .L_lambda_simple_env_end_0407
 18042 0000C488 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18043 0000C48C 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18044 0000C490 48FFC6                  	inc rsi
 18045 0000C493 48FFC2                  	inc rdx
 18046 0000C496 EBEA                    	jmp .L_lambda_simple_env_loop_0407
 18047                                  .L_lambda_simple_env_end_0407:
 18048 0000C498 5B                      	pop rbx
 18049 0000C499 BE00000000              	mov rsi, 0
 18050                                  .L_lambda_simple_params_loop_0407:	; copy params
 18051 0000C49E 4883FE02                	cmp rsi, 2
 18052 0000C4A2 740E                    	je .L_lambda_simple_params_end_0407
 18053 0000C4A4 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18054 0000C4A9 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18055 0000C4AD 48FFC6                  	inc rsi
 18056 0000C4B0 EBEC                    	jmp .L_lambda_simple_params_loop_0407
 18057                                  .L_lambda_simple_params_end_0407:
 18058 0000C4B2 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 18059 0000C4B5 4889C3                  	mov rbx, rax
 18060 0000C4B8 58                      	pop rax
 18061 0000C4B9 C60004                  	mov byte [rax], T_closure
 18062 0000C4BC 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18063 0000C4C0 48C74009[CDC40000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0407
 18064 0000C4C8 E9B50B0000              	jmp .L_lambda_simple_end_0407
 18065                                  .L_lambda_simple_code_0407:	; lambda-simple body
 18066 0000C4CD 48837C241001            	cmp qword [rsp + 8 * 2], 1
 18067 0000C4D3 740B                    	je .L_lambda_simple_arity_check_ok_0407
 18068 0000C4D5 FF742410                	push qword [rsp + 8 * 2]
 18069 0000C4D9 6A01                    	push 1
 18070 0000C4DB E9BF8C0000              	jmp L_error_incorrect_arity_simple
 18071                                  .L_lambda_simple_arity_check_ok_0407:
 18072 0000C4E0 C8000000                	enter 0, 0
 18073                                  
 18074 0000C4E4 BF08000000              	mov rdi, 8
 18075 0000C4E9 E8F88C0000              	call malloc
 18076 0000C4EE 488B5D20                	mov rbx, PARAM(0)	; param run
 18077 0000C4F2 488918                  	mov [rax], rbx	; box run
 18078 0000C4F5 48894520                	mov PARAM(0), rax	; replace param with box
 18079 0000C4F9 48B8-                   	mov rax, sob_void
 18079 0000C4FB [0000000000000000] 
 18080                                  
 18081 0000C503 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18082 0000C508 E8D98C0000              	call malloc
 18083 0000C50D 50                      	push rax
 18084 0000C50E BF08000000              	mov rdi, 8 * 1	; new rib
 18085 0000C513 E8CE8C0000              	call malloc
 18086 0000C518 50                      	push rax
 18087 0000C519 BF18000000              	mov rdi, 8 * 3	; extended env
 18088 0000C51E E8C38C0000              	call malloc
 18089 0000C523 488B7D10                	mov rdi, ENV
 18090 0000C527 BE00000000              	mov rsi, 0
 18091 0000C52C BA01000000              	mov rdx, 1
 18092                                  .L_lambda_simple_env_loop_0408:	; ext_env[i + 1] <-- env[i]
 18093 0000C531 4883FE02                	cmp rsi, 2
 18094 0000C535 7410                    	je .L_lambda_simple_env_end_0408
 18095 0000C537 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18096 0000C53B 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18097 0000C53F 48FFC6                  	inc rsi
 18098 0000C542 48FFC2                  	inc rdx
 18099 0000C545 EBEA                    	jmp .L_lambda_simple_env_loop_0408
 18100                                  .L_lambda_simple_env_end_0408:
 18101 0000C547 5B                      	pop rbx
 18102 0000C548 BE00000000              	mov rsi, 0
 18103                                  .L_lambda_simple_params_loop_0408:	; copy params
 18104 0000C54D 4883FE01                	cmp rsi, 1
 18105 0000C551 740E                    	je .L_lambda_simple_params_end_0408
 18106 0000C553 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18107 0000C558 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18108 0000C55C 48FFC6                  	inc rsi
 18109 0000C55F EBEC                    	jmp .L_lambda_simple_params_loop_0408
 18110                                  .L_lambda_simple_params_end_0408:
 18111 0000C561 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 18112 0000C564 4889C3                  	mov rbx, rax
 18113 0000C567 58                      	pop rax
 18114 0000C568 C60004                  	mov byte [rax], T_closure
 18115 0000C56B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18116 0000C56F 48C74009[7CC50000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0408
 18117 0000C577 E983020000              	jmp .L_lambda_simple_end_0408
 18118                                  .L_lambda_simple_code_0408:	; lambda-simple body
 18119 0000C57C 48837C241005            	cmp qword [rsp + 8 * 2], 5
 18120 0000C582 740B                    	je .L_lambda_simple_arity_check_ok_0408
 18121 0000C584 FF742410                	push qword [rsp + 8 * 2]
 18122 0000C588 6A05                    	push 5
 18123 0000C58A E9108C0000              	jmp L_error_incorrect_arity_simple
 18124                                  .L_lambda_simple_arity_check_ok_0408:
 18125 0000C58F C8000000                	enter 0, 0
 18126                                  	; preparing a non-tail-call
 18127 0000C593 488B4530                	mov rax, PARAM(2)	; param len1
 18128 0000C597 50                      	push rax
 18129 0000C598 488B4520                	mov rax, PARAM(0)	; param i
 18130 0000C59C 50                      	push rax
 18131 0000C59D 6A02                    	push 2	; arg count
 18132 0000C59F 488B0425[44130000]      	mov rax, qword [free_var_6]	; free var =
 18133 0000C5A7 803805                  	cmp byte [rax], T_undefined
 18134 0000C5AA 0F84098B0000            	je L_error_fvar_undefined
 18135 0000C5B0 803804                  	cmp byte [rax], T_closure
 18136 0000C5B3 0F85848B0000            	jne L_error_non_closure
 18137 0000C5B9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18138 0000C5BC FF5009                  	call SOB_CLOSURE_CODE(rax)
 18139 0000C5BF 483D[02000000]          	cmp rax, sob_boolean_false
 18140 0000C5C5 742E                    	je .L_if_else_02fd
 18141                                  	; preparing a non-tail-call
 18142 0000C5C7 488B4540                	mov rax, PARAM(4)	; param len2
 18143 0000C5CB 50                      	push rax
 18144 0000C5CC 488B4530                	mov rax, PARAM(2)	; param len1
 18145 0000C5D0 50                      	push rax
 18146 0000C5D1 6A02                    	push 2	; arg count
 18147 0000C5D3 488B0425[22130000]      	mov rax, qword [free_var_4]	; free var <
 18148 0000C5DB 803805                  	cmp byte [rax], T_undefined
 18149 0000C5DE 0F84D58A0000            	je L_error_fvar_undefined
 18150 0000C5E4 803804                  	cmp byte [rax], T_closure
 18151 0000C5E7 0F85508B0000            	jne L_error_non_closure
 18152 0000C5ED FF7001                  	push SOB_CLOSURE_ENV(rax)
 18153 0000C5F0 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18154 0000C5F3 EB0A                    	jmp .L_if_end_02fd
 18155                                  .L_if_else_02fd:
 18156 0000C5F5 48B8-                   	mov rax, L_constants + 2
 18156 0000C5F7 [0200000000000000] 
 18157                                  .L_if_end_02fd:
 18158 0000C5FF 483D[02000000]          	cmp rax, sob_boolean_false
 18159 0000C605 0F85F0010000            	jne .L_or_end_004d
 18160                                  	; preparing a non-tail-call
 18161 0000C60B 488B4530                	mov rax, PARAM(2)	; param len1
 18162 0000C60F 50                      	push rax
 18163 0000C610 488B4520                	mov rax, PARAM(0)	; param i
 18164 0000C614 50                      	push rax
 18165 0000C615 6A02                    	push 2	; arg count
 18166 0000C617 488B0425[22130000]      	mov rax, qword [free_var_4]	; free var <
 18167 0000C61F 803805                  	cmp byte [rax], T_undefined
 18168 0000C622 0F84918A0000            	je L_error_fvar_undefined
 18169 0000C628 803804                  	cmp byte [rax], T_closure
 18170 0000C62B 0F850C8B0000            	jne L_error_non_closure
 18171 0000C631 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18172 0000C634 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18173 0000C637 483D[02000000]          	cmp rax, sob_boolean_false
 18174 0000C63D 0F84AE010000            	je .L_if_else_02ff
 18175                                  	; preparing a non-tail-call
 18176                                  	; preparing a non-tail-call
 18177 0000C643 488B4520                	mov rax, PARAM(0)	; param i
 18178 0000C647 50                      	push rax
 18179 0000C648 488B4538                	mov rax, PARAM(3)	; param str2
 18180 0000C64C 50                      	push rax
 18181 0000C64D 6A02                    	push 2	; arg count
 18182 0000C64F 488B0425[291D0000]      	mov rax, qword [free_var_155]	; free var string-ref
 18183 0000C657 803805                  	cmp byte [rax], T_undefined
 18184 0000C65A 0F84598A0000            	je L_error_fvar_undefined
 18185 0000C660 803804                  	cmp byte [rax], T_closure
 18186 0000C663 0F85D48A0000            	jne L_error_non_closure
 18187 0000C669 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18188 0000C66C FF5009                  	call SOB_CLOSURE_CODE(rax)
 18189 0000C66F 50                      	push rax
 18190                                  	; preparing a non-tail-call
 18191 0000C670 488B4520                	mov rax, PARAM(0)	; param i
 18192 0000C674 50                      	push rax
 18193 0000C675 488B4528                	mov rax, PARAM(1)	; param str1
 18194 0000C679 50                      	push rax
 18195 0000C67A 6A02                    	push 2	; arg count
 18196 0000C67C 488B0425[291D0000]      	mov rax, qword [free_var_155]	; free var string-ref
 18197 0000C684 803805                  	cmp byte [rax], T_undefined
 18198 0000C687 0F842C8A0000            	je L_error_fvar_undefined
 18199 0000C68D 803804                  	cmp byte [rax], T_closure
 18200 0000C690 0F85A78A0000            	jne L_error_non_closure
 18201 0000C696 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18202 0000C699 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18203 0000C69C 50                      	push rax
 18204 0000C69D 6A02                    	push 2	; arg count
 18205 0000C69F 488B4510                	mov rax, ENV
 18206 0000C6A3 488B4008                	mov rax, qword [rax + 8 * 1]
 18207 0000C6A7 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var char<?
 18208 0000C6AA 803804                  	cmp byte [rax], T_closure
 18209 0000C6AD 0F858A8A0000            	jne L_error_non_closure
 18210 0000C6B3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18211 0000C6B6 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18212 0000C6B9 483D[02000000]          	cmp rax, sob_boolean_false
 18213 0000C6BF 0F852A010000            	jne .L_or_end_004e
 18214                                  	; preparing a non-tail-call
 18215                                  	; preparing a non-tail-call
 18216 0000C6C5 488B4520                	mov rax, PARAM(0)	; param i
 18217 0000C6C9 50                      	push rax
 18218 0000C6CA 488B4538                	mov rax, PARAM(3)	; param str2
 18219 0000C6CE 50                      	push rax
 18220 0000C6CF 6A02                    	push 2	; arg count
 18221 0000C6D1 488B0425[291D0000]      	mov rax, qword [free_var_155]	; free var string-ref
 18222 0000C6D9 803805                  	cmp byte [rax], T_undefined
 18223 0000C6DC 0F84D7890000            	je L_error_fvar_undefined
 18224 0000C6E2 803804                  	cmp byte [rax], T_closure
 18225 0000C6E5 0F85528A0000            	jne L_error_non_closure
 18226 0000C6EB FF7001                  	push SOB_CLOSURE_ENV(rax)
 18227 0000C6EE FF5009                  	call SOB_CLOSURE_CODE(rax)
 18228 0000C6F1 50                      	push rax
 18229                                  	; preparing a non-tail-call
 18230 0000C6F2 488B4520                	mov rax, PARAM(0)	; param i
 18231 0000C6F6 50                      	push rax
 18232 0000C6F7 488B4528                	mov rax, PARAM(1)	; param str1
 18233 0000C6FB 50                      	push rax
 18234 0000C6FC 6A02                    	push 2	; arg count
 18235 0000C6FE 488B0425[291D0000]      	mov rax, qword [free_var_155]	; free var string-ref
 18236 0000C706 803805                  	cmp byte [rax], T_undefined
 18237 0000C709 0F84AA890000            	je L_error_fvar_undefined
 18238 0000C70F 803804                  	cmp byte [rax], T_closure
 18239 0000C712 0F85258A0000            	jne L_error_non_closure
 18240 0000C718 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18241 0000C71B FF5009                  	call SOB_CLOSURE_CODE(rax)
 18242 0000C71E 50                      	push rax
 18243 0000C71F 6A02                    	push 2	; arg count
 18244 0000C721 488B4510                	mov rax, ENV
 18245 0000C725 488B4008                	mov rax, qword [rax + 8 * 1]
 18246 0000C729 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var char=?
 18247 0000C72D 803804                  	cmp byte [rax], T_closure
 18248 0000C730 0F85078A0000            	jne L_error_non_closure
 18249 0000C736 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18250 0000C739 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18251 0000C73C 483D[02000000]          	cmp rax, sob_boolean_false
 18252 0000C742 0F849D000000            	je .L_if_else_02fe
 18253                                  	; preparing a tail-call
 18254 0000C748 488B4540                	mov rax, PARAM(4)	; param len2
 18255 0000C74C 50                      	push rax
 18256 0000C74D 488B4538                	mov rax, PARAM(3)	; param str2
 18257 0000C751 50                      	push rax
 18258 0000C752 488B4530                	mov rax, PARAM(2)	; param len1
 18259 0000C756 50                      	push rax
 18260 0000C757 488B4528                	mov rax, PARAM(1)	; param str1
 18261 0000C75B 50                      	push rax
 18262                                  	; preparing a non-tail-call
 18263 0000C75C 48B8-                   	mov rax, L_constants + 2810
 18263 0000C75E [FA0A000000000000] 
 18264 0000C766 50                      	push rax
 18265 0000C767 488B4520                	mov rax, PARAM(0)	; param i
 18266 0000C76B 50                      	push rax
 18267 0000C76C 6A02                    	push 2	; arg count
 18268 0000C76E 488B0425[EF120000]      	mov rax, qword [free_var_1]	; free var +
 18269 0000C776 803805                  	cmp byte [rax], T_undefined
 18270 0000C779 0F843A890000            	je L_error_fvar_undefined
 18271 0000C77F 803804                  	cmp byte [rax], T_closure
 18272 0000C782 0F85B5890000            	jne L_error_non_closure
 18273 0000C788 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18274 0000C78B FF5009                  	call SOB_CLOSURE_CODE(rax)
 18275 0000C78E 50                      	push rax
 18276 0000C78F 6A05                    	push 5	; arg count
 18277 0000C791 488B4510                	mov rax, ENV
 18278 0000C795 488B00                  	mov rax, qword [rax + 8 * 0]
 18279 0000C798 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 18280 0000C79B 488B00                  	mov rax, qword [rax]
 18281 0000C79E 803804                  	cmp byte [rax], T_closure
 18282 0000C7A1 0F8596890000            	jne L_error_non_closure
 18283 0000C7A7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18284                                  
 18285                                  	; recycling the current frame
 18286 0000C7AA FF7508                  	push qword [rbp + 8 * 1]	; old return address
 18287 0000C7AD FF7500                  	push qword [rbp]	; old frame-pointer
 18288 0000C7B0 B909000000              	mov rcx, 9
 18289 0000C7B5 488B5D18                	mov rbx, COUNT
 18290 0000C7B9 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 18291 0000C7BE 488D55F8                	lea rdx, [rbp - 8]
 18292                                  .L_tc_recycle_frame_loop_0556:
 18293 0000C7C2 4883F900                	cmp rcx, 0
 18294 0000C7C6 7413                    	je .L_tc_recycle_frame_done_0556
 18295 0000C7C8 488B32                  	mov rsi, qword [rdx]
 18296 0000C7CB 488933                  	mov qword [rbx], rsi
 18297 0000C7CE 48FFC9                  	dec rcx
 18298 0000C7D1 4883EB08                	sub rbx, 8
 18299 0000C7D5 4883EA08                	sub rdx, 8
 18300 0000C7D9 EBE7                    	jmp .L_tc_recycle_frame_loop_0556
 18301                                  .L_tc_recycle_frame_done_0556:
 18302 0000C7DB 488D6308                	lea rsp, [rbx + 8]
 18303 0000C7DF 5D                      	pop rbp
 18304 0000C7E0 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 18305 0000C7E3 EB0A                    	jmp .L_if_end_02fe
 18306                                  .L_if_else_02fe:
 18307 0000C7E5 48B8-                   	mov rax, L_constants + 2
 18307 0000C7E7 [0200000000000000] 
 18308                                  .L_if_end_02fe:
 18309                                  .L_or_end_004e:
 18310 0000C7EF EB0A                    	jmp .L_if_end_02ff
 18311                                  .L_if_else_02ff:
 18312 0000C7F1 48B8-                   	mov rax, L_constants + 2
 18312 0000C7F3 [0200000000000000] 
 18313                                  .L_if_end_02ff:
 18314                                  .L_or_end_004d:
 18315 0000C7FB C9                      	leave
 18316 0000C7FC C23800                  	ret AND_KILL_FRAME(5)
 18317                                  .L_lambda_simple_end_0408:	; new closure is in rax
 18318                                  
 18319 0000C7FF 50                      	push rax
 18320 0000C800 488B4520                	mov rax, PARAM(0)	; param run
 18321                                  
 18322 0000C804 8F00                    	pop qword[rax]
 18323 0000C806 48B8-                   	mov rax, sob_void
 18323 0000C808 [0000000000000000] 
 18324                                  
 18325                                  	; preparing a tail-call
 18326 0000C810 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18327 0000C815 E8CC890000              	call malloc
 18328 0000C81A 50                      	push rax
 18329 0000C81B BF08000000              	mov rdi, 8 * 1	; new rib
 18330 0000C820 E8C1890000              	call malloc
 18331 0000C825 50                      	push rax
 18332 0000C826 BF18000000              	mov rdi, 8 * 3	; extended env
 18333 0000C82B E8B6890000              	call malloc
 18334 0000C830 488B7D10                	mov rdi, ENV
 18335 0000C834 BE00000000              	mov rsi, 0
 18336 0000C839 BA01000000              	mov rdx, 1
 18337                                  .L_lambda_simple_env_loop_0409:	; ext_env[i + 1] <-- env[i]
 18338 0000C83E 4883FE02                	cmp rsi, 2
 18339 0000C842 7410                    	je .L_lambda_simple_env_end_0409
 18340 0000C844 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18341 0000C848 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18342 0000C84C 48FFC6                  	inc rsi
 18343 0000C84F 48FFC2                  	inc rdx
 18344 0000C852 EBEA                    	jmp .L_lambda_simple_env_loop_0409
 18345                                  .L_lambda_simple_env_end_0409:
 18346 0000C854 5B                      	pop rbx
 18347 0000C855 BE00000000              	mov rsi, 0
 18348                                  .L_lambda_simple_params_loop_0409:	; copy params
 18349 0000C85A 4883FE01                	cmp rsi, 1
 18350 0000C85E 740E                    	je .L_lambda_simple_params_end_0409
 18351 0000C860 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18352 0000C865 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18353 0000C869 48FFC6                  	inc rsi
 18354 0000C86C EBEC                    	jmp .L_lambda_simple_params_loop_0409
 18355                                  .L_lambda_simple_params_end_0409:
 18356 0000C86E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 18357 0000C871 4889C3                  	mov rbx, rax
 18358 0000C874 58                      	pop rax
 18359 0000C875 C60004                  	mov byte [rax], T_closure
 18360 0000C878 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18361 0000C87C 48C74009[89C80000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0409
 18362 0000C884 E985020000              	jmp .L_lambda_simple_end_0409
 18363                                  .L_lambda_simple_code_0409:	; lambda-simple body
 18364 0000C889 48837C241002            	cmp qword [rsp + 8 * 2], 2
 18365 0000C88F 740B                    	je .L_lambda_simple_arity_check_ok_0409
 18366 0000C891 FF742410                	push qword [rsp + 8 * 2]
 18367 0000C895 6A02                    	push 2
 18368 0000C897 E903890000              	jmp L_error_incorrect_arity_simple
 18369                                  .L_lambda_simple_arity_check_ok_0409:
 18370 0000C89C C8000000                	enter 0, 0
 18371                                  	; preparing a tail-call
 18372                                  	; preparing a non-tail-call
 18373 0000C8A0 488B4528                	mov rax, PARAM(1)	; param str2
 18374 0000C8A4 50                      	push rax
 18375 0000C8A5 6A01                    	push 1	; arg count
 18376 0000C8A7 488B0425[181D0000]      	mov rax, qword [free_var_154]	; free var string-length
 18377 0000C8AF 803805                  	cmp byte [rax], T_undefined
 18378 0000C8B2 0F8401880000            	je L_error_fvar_undefined
 18379 0000C8B8 803804                  	cmp byte [rax], T_closure
 18380 0000C8BB 0F857C880000            	jne L_error_non_closure
 18381 0000C8C1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18382 0000C8C4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18383 0000C8C7 50                      	push rax
 18384                                  	; preparing a non-tail-call
 18385 0000C8C8 488B4520                	mov rax, PARAM(0)	; param str1
 18386 0000C8CC 50                      	push rax
 18387 0000C8CD 6A01                    	push 1	; arg count
 18388 0000C8CF 488B0425[181D0000]      	mov rax, qword [free_var_154]	; free var string-length
 18389 0000C8D7 803805                  	cmp byte [rax], T_undefined
 18390 0000C8DA 0F84D9870000            	je L_error_fvar_undefined
 18391 0000C8E0 803804                  	cmp byte [rax], T_closure
 18392 0000C8E3 0F8554880000            	jne L_error_non_closure
 18393 0000C8E9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18394 0000C8EC FF5009                  	call SOB_CLOSURE_CODE(rax)
 18395 0000C8EF 50                      	push rax
 18396 0000C8F0 6A02                    	push 2	; arg count
 18397 0000C8F2 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18398 0000C8F7 E8EA880000              	call malloc
 18399 0000C8FC 50                      	push rax
 18400 0000C8FD BF10000000              	mov rdi, 8 * 2	; new rib
 18401 0000C902 E8DF880000              	call malloc
 18402 0000C907 50                      	push rax
 18403 0000C908 BF20000000              	mov rdi, 8 * 4	; extended env
 18404 0000C90D E8D4880000              	call malloc
 18405 0000C912 488B7D10                	mov rdi, ENV
 18406 0000C916 BE00000000              	mov rsi, 0
 18407 0000C91B BA01000000              	mov rdx, 1
 18408                                  .L_lambda_simple_env_loop_040a:	; ext_env[i + 1] <-- env[i]
 18409 0000C920 4883FE03                	cmp rsi, 3
 18410 0000C924 7410                    	je .L_lambda_simple_env_end_040a
 18411 0000C926 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18412 0000C92A 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18413 0000C92E 48FFC6                  	inc rsi
 18414 0000C931 48FFC2                  	inc rdx
 18415 0000C934 EBEA                    	jmp .L_lambda_simple_env_loop_040a
 18416                                  .L_lambda_simple_env_end_040a:
 18417 0000C936 5B                      	pop rbx
 18418 0000C937 BE00000000              	mov rsi, 0
 18419                                  .L_lambda_simple_params_loop_040a:	; copy params
 18420 0000C93C 4883FE02                	cmp rsi, 2
 18421 0000C940 740E                    	je .L_lambda_simple_params_end_040a
 18422 0000C942 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18423 0000C947 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18424 0000C94B 48FFC6                  	inc rsi
 18425 0000C94E EBEC                    	jmp .L_lambda_simple_params_loop_040a
 18426                                  .L_lambda_simple_params_end_040a:
 18427 0000C950 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 18428 0000C953 4889C3                  	mov rbx, rax
 18429 0000C956 58                      	pop rax
 18430 0000C957 C60004                  	mov byte [rax], T_closure
 18431 0000C95A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18432 0000C95E 48C74009[6BC90000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_040a
 18433 0000C966 E95A010000              	jmp .L_lambda_simple_end_040a
 18434                                  .L_lambda_simple_code_040a:	; lambda-simple body
 18435 0000C96B 48837C241002            	cmp qword [rsp + 8 * 2], 2
 18436 0000C971 740B                    	je .L_lambda_simple_arity_check_ok_040a
 18437 0000C973 FF742410                	push qword [rsp + 8 * 2]
 18438 0000C977 6A02                    	push 2
 18439 0000C979 E921880000              	jmp L_error_incorrect_arity_simple
 18440                                  .L_lambda_simple_arity_check_ok_040a:
 18441 0000C97E C8000000                	enter 0, 0
 18442                                  	; preparing a non-tail-call
 18443 0000C982 488B4528                	mov rax, PARAM(1)	; param len2
 18444 0000C986 50                      	push rax
 18445 0000C987 488B4520                	mov rax, PARAM(0)	; param len1
 18446 0000C98B 50                      	push rax
 18447 0000C98C 6A02                    	push 2	; arg count
 18448 0000C98E 488B0425[33130000]      	mov rax, qword [free_var_5]	; free var <=
 18449 0000C996 803805                  	cmp byte [rax], T_undefined
 18450 0000C999 0F841A870000            	je L_error_fvar_undefined
 18451 0000C99F 803804                  	cmp byte [rax], T_closure
 18452 0000C9A2 0F8595870000            	jne L_error_non_closure
 18453 0000C9A8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18454 0000C9AB FF5009                  	call SOB_CLOSURE_CODE(rax)
 18455 0000C9AE 483D[02000000]          	cmp rax, sob_boolean_false
 18456 0000C9B4 0F8486000000            	je .L_if_else_0300
 18457                                  	; preparing a tail-call
 18458 0000C9BA 488B4528                	mov rax, PARAM(1)	; param len2
 18459 0000C9BE 50                      	push rax
 18460 0000C9BF 488B4510                	mov rax, ENV
 18461 0000C9C3 488B00                  	mov rax, qword [rax + 8 * 0]
 18462 0000C9C6 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var str2
 18463 0000C9CA 50                      	push rax
 18464 0000C9CB 488B4520                	mov rax, PARAM(0)	; param len1
 18465 0000C9CF 50                      	push rax
 18466 0000C9D0 488B4510                	mov rax, ENV
 18467 0000C9D4 488B00                  	mov rax, qword [rax + 8 * 0]
 18468 0000C9D7 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str1
 18469 0000C9DA 50                      	push rax
 18470 0000C9DB 48B8-                   	mov rax, L_constants + 2558
 18470 0000C9DD [FE09000000000000] 
 18471 0000C9E5 50                      	push rax
 18472 0000C9E6 6A05                    	push 5	; arg count
 18473 0000C9E8 488B4510                	mov rax, ENV
 18474 0000C9EC 488B4008                	mov rax, qword [rax + 8 * 1]
 18475 0000C9F0 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 18476 0000C9F3 488B00                  	mov rax, qword [rax]
 18477 0000C9F6 803804                  	cmp byte [rax], T_closure
 18478 0000C9F9 0F853E870000            	jne L_error_non_closure
 18479 0000C9FF FF7001                  	push SOB_CLOSURE_ENV(rax)
 18480                                  
 18481                                  	; recycling the current frame
 18482 0000CA02 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 18483 0000CA05 FF7500                  	push qword [rbp]	; old frame-pointer
 18484 0000CA08 B909000000              	mov rcx, 9
 18485 0000CA0D 488B5D18                	mov rbx, COUNT
 18486 0000CA11 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 18487 0000CA16 488D55F8                	lea rdx, [rbp - 8]
 18488                                  .L_tc_recycle_frame_loop_0557:
 18489 0000CA1A 4883F900                	cmp rcx, 0
 18490 0000CA1E 7413                    	je .L_tc_recycle_frame_done_0557
 18491 0000CA20 488B32                  	mov rsi, qword [rdx]
 18492 0000CA23 488933                  	mov qword [rbx], rsi
 18493 0000CA26 48FFC9                  	dec rcx
 18494 0000CA29 4883EB08                	sub rbx, 8
 18495 0000CA2D 4883EA08                	sub rdx, 8
 18496 0000CA31 EBE7                    	jmp .L_tc_recycle_frame_loop_0557
 18497                                  .L_tc_recycle_frame_done_0557:
 18498 0000CA33 488D6308                	lea rsp, [rbx + 8]
 18499 0000CA37 5D                      	pop rbp
 18500 0000CA38 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 18501 0000CA3B E981000000              	jmp .L_if_end_0300
 18502                                  .L_if_else_0300:
 18503                                  	; preparing a tail-call
 18504 0000CA40 488B4520                	mov rax, PARAM(0)	; param len1
 18505 0000CA44 50                      	push rax
 18506 0000CA45 488B4510                	mov rax, ENV
 18507 0000CA49 488B00                  	mov rax, qword [rax + 8 * 0]
 18508 0000CA4C 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str1
 18509 0000CA4F 50                      	push rax
 18510 0000CA50 488B4528                	mov rax, PARAM(1)	; param len2
 18511 0000CA54 50                      	push rax
 18512 0000CA55 488B4510                	mov rax, ENV
 18513 0000CA59 488B00                  	mov rax, qword [rax + 8 * 0]
 18514 0000CA5C 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var str2
 18515 0000CA60 50                      	push rax
 18516 0000CA61 48B8-                   	mov rax, L_constants + 2558
 18516 0000CA63 [FE09000000000000] 
 18517 0000CA6B 50                      	push rax
 18518 0000CA6C 6A05                    	push 5	; arg count
 18519 0000CA6E 488B4510                	mov rax, ENV
 18520 0000CA72 488B4008                	mov rax, qword [rax + 8 * 1]
 18521 0000CA76 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 18522 0000CA79 488B00                  	mov rax, qword [rax]
 18523 0000CA7C 803804                  	cmp byte [rax], T_closure
 18524 0000CA7F 0F85B8860000            	jne L_error_non_closure
 18525 0000CA85 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18526                                  
 18527                                  	; recycling the current frame
 18528 0000CA88 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 18529 0000CA8B FF7500                  	push qword [rbp]	; old frame-pointer
 18530 0000CA8E B909000000              	mov rcx, 9
 18531 0000CA93 488B5D18                	mov rbx, COUNT
 18532 0000CA97 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 18533 0000CA9C 488D55F8                	lea rdx, [rbp - 8]
 18534                                  .L_tc_recycle_frame_loop_0558:
 18535 0000CAA0 4883F900                	cmp rcx, 0
 18536 0000CAA4 7413                    	je .L_tc_recycle_frame_done_0558
 18537 0000CAA6 488B32                  	mov rsi, qword [rdx]
 18538 0000CAA9 488933                  	mov qword [rbx], rsi
 18539 0000CAAC 48FFC9                  	dec rcx
 18540 0000CAAF 4883EB08                	sub rbx, 8
 18541 0000CAB3 4883EA08                	sub rdx, 8
 18542 0000CAB7 EBE7                    	jmp .L_tc_recycle_frame_loop_0558
 18543                                  .L_tc_recycle_frame_done_0558:
 18544 0000CAB9 488D6308                	lea rsp, [rbx + 8]
 18545 0000CABD 5D                      	pop rbp
 18546 0000CABE FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 18547                                  .L_if_end_0300:
 18548 0000CAC1 C9                      	leave
 18549 0000CAC2 C22000                  	ret AND_KILL_FRAME(2)
 18550                                  .L_lambda_simple_end_040a:	; new closure is in rax
 18551 0000CAC5 803804                  	cmp byte [rax], T_closure
 18552 0000CAC8 0F856F860000            	jne L_error_non_closure
 18553 0000CACE FF7001                  	push SOB_CLOSURE_ENV(rax)
 18554                                  
 18555                                  	; recycling the current frame
 18556 0000CAD1 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 18557 0000CAD4 FF7500                  	push qword [rbp]	; old frame-pointer
 18558 0000CAD7 B906000000              	mov rcx, 6
 18559 0000CADC 488B5D18                	mov rbx, COUNT
 18560 0000CAE0 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 18561 0000CAE5 488D55F8                	lea rdx, [rbp - 8]
 18562                                  .L_tc_recycle_frame_loop_0559:
 18563 0000CAE9 4883F900                	cmp rcx, 0
 18564 0000CAED 7413                    	je .L_tc_recycle_frame_done_0559
 18565 0000CAEF 488B32                  	mov rsi, qword [rdx]
 18566 0000CAF2 488933                  	mov qword [rbx], rsi
 18567 0000CAF5 48FFC9                  	dec rcx
 18568 0000CAF8 4883EB08                	sub rbx, 8
 18569 0000CAFC 4883EA08                	sub rdx, 8
 18570 0000CB00 EBE7                    	jmp .L_tc_recycle_frame_loop_0559
 18571                                  .L_tc_recycle_frame_done_0559:
 18572 0000CB02 488D6308                	lea rsp, [rbx + 8]
 18573 0000CB06 5D                      	pop rbp
 18574 0000CB07 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 18575 0000CB0A C9                      	leave
 18576 0000CB0B C22000                  	ret AND_KILL_FRAME(2)
 18577                                  .L_lambda_simple_end_0409:	; new closure is in rax
 18578 0000CB0E 50                      	push rax
 18579 0000CB0F 6A01                    	push 1	; arg count
 18580 0000CB11 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18581 0000CB16 E8CB860000              	call malloc
 18582 0000CB1B 50                      	push rax
 18583 0000CB1C BF08000000              	mov rdi, 8 * 1	; new rib
 18584 0000CB21 E8C0860000              	call malloc
 18585 0000CB26 50                      	push rax
 18586 0000CB27 BF18000000              	mov rdi, 8 * 3	; extended env
 18587 0000CB2C E8B5860000              	call malloc
 18588 0000CB31 488B7D10                	mov rdi, ENV
 18589 0000CB35 BE00000000              	mov rsi, 0
 18590 0000CB3A BA01000000              	mov rdx, 1
 18591                                  .L_lambda_simple_env_loop_040b:	; ext_env[i + 1] <-- env[i]
 18592 0000CB3F 4883FE02                	cmp rsi, 2
 18593 0000CB43 7410                    	je .L_lambda_simple_env_end_040b
 18594 0000CB45 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18595 0000CB49 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18596 0000CB4D 48FFC6                  	inc rsi
 18597 0000CB50 48FFC2                  	inc rdx
 18598 0000CB53 EBEA                    	jmp .L_lambda_simple_env_loop_040b
 18599                                  .L_lambda_simple_env_end_040b:
 18600 0000CB55 5B                      	pop rbx
 18601 0000CB56 BE00000000              	mov rsi, 0
 18602                                  .L_lambda_simple_params_loop_040b:	; copy params
 18603 0000CB5B 4883FE01                	cmp rsi, 1
 18604 0000CB5F 740E                    	je .L_lambda_simple_params_end_040b
 18605 0000CB61 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18606 0000CB66 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18607 0000CB6A 48FFC6                  	inc rsi
 18608 0000CB6D EBEC                    	jmp .L_lambda_simple_params_loop_040b
 18609                                  .L_lambda_simple_params_end_040b:
 18610 0000CB6F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 18611 0000CB72 4889C3                  	mov rbx, rax
 18612 0000CB75 58                      	pop rax
 18613 0000CB76 C60004                  	mov byte [rax], T_closure
 18614 0000CB79 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18615 0000CB7D 48C74009[8ACB0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_040b
 18616 0000CB85 E9AF040000              	jmp .L_lambda_simple_end_040b
 18617                                  .L_lambda_simple_code_040b:	; lambda-simple body
 18618 0000CB8A 48837C241001            	cmp qword [rsp + 8 * 2], 1
 18619 0000CB90 740B                    	je .L_lambda_simple_arity_check_ok_040b
 18620 0000CB92 FF742410                	push qword [rsp + 8 * 2]
 18621 0000CB96 6A01                    	push 1
 18622 0000CB98 E902860000              	jmp L_error_incorrect_arity_simple
 18623                                  .L_lambda_simple_arity_check_ok_040b:
 18624 0000CB9D C8000000                	enter 0, 0
 18625                                  	; preparing a tail-call
 18626 0000CBA1 48B8-                   	mov rax, L_constants + 2335
 18626 0000CBA3 [1F09000000000000] 
 18627 0000CBAB 50                      	push rax
 18628 0000CBAC 6A01                    	push 1	; arg count
 18629 0000CBAE BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18630 0000CBB3 E82E860000              	call malloc
 18631 0000CBB8 50                      	push rax
 18632 0000CBB9 BF08000000              	mov rdi, 8 * 1	; new rib
 18633 0000CBBE E823860000              	call malloc
 18634 0000CBC3 50                      	push rax
 18635 0000CBC4 BF20000000              	mov rdi, 8 * 4	; extended env
 18636 0000CBC9 E818860000              	call malloc
 18637 0000CBCE 488B7D10                	mov rdi, ENV
 18638 0000CBD2 BE00000000              	mov rsi, 0
 18639 0000CBD7 BA01000000              	mov rdx, 1
 18640                                  .L_lambda_simple_env_loop_040c:	; ext_env[i + 1] <-- env[i]
 18641 0000CBDC 4883FE03                	cmp rsi, 3
 18642 0000CBE0 7410                    	je .L_lambda_simple_env_end_040c
 18643 0000CBE2 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18644 0000CBE6 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18645 0000CBEA 48FFC6                  	inc rsi
 18646 0000CBED 48FFC2                  	inc rdx
 18647 0000CBF0 EBEA                    	jmp .L_lambda_simple_env_loop_040c
 18648                                  .L_lambda_simple_env_end_040c:
 18649 0000CBF2 5B                      	pop rbx
 18650 0000CBF3 BE00000000              	mov rsi, 0
 18651                                  .L_lambda_simple_params_loop_040c:	; copy params
 18652 0000CBF8 4883FE01                	cmp rsi, 1
 18653 0000CBFC 740E                    	je .L_lambda_simple_params_end_040c
 18654 0000CBFE 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18655 0000CC03 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18656 0000CC07 48FFC6                  	inc rsi
 18657 0000CC0A EBEC                    	jmp .L_lambda_simple_params_loop_040c
 18658                                  .L_lambda_simple_params_end_040c:
 18659 0000CC0C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 18660 0000CC0F 4889C3                  	mov rbx, rax
 18661 0000CC12 58                      	pop rax
 18662 0000CC13 C60004                  	mov byte [rax], T_closure
 18663 0000CC16 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18664 0000CC1A 48C74009[27CC0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_040c
 18665 0000CC22 E9C9030000              	jmp .L_lambda_simple_end_040c
 18666                                  .L_lambda_simple_code_040c:	; lambda-simple body
 18667 0000CC27 48837C241001            	cmp qword [rsp + 8 * 2], 1
 18668 0000CC2D 740B                    	je .L_lambda_simple_arity_check_ok_040c
 18669 0000CC2F FF742410                	push qword [rsp + 8 * 2]
 18670 0000CC33 6A01                    	push 1
 18671 0000CC35 E965850000              	jmp L_error_incorrect_arity_simple
 18672                                  .L_lambda_simple_arity_check_ok_040c:
 18673 0000CC3A C8000000                	enter 0, 0
 18674                                  
 18675 0000CC3E BF08000000              	mov rdi, 8
 18676 0000CC43 E89E850000              	call malloc
 18677 0000CC48 488B5D20                	mov rbx, PARAM(0)	; param run
 18678 0000CC4C 488918                  	mov [rax], rbx	; box run
 18679 0000CC4F 48894520                	mov PARAM(0), rax	; replace param with box
 18680 0000CC53 48B8-                   	mov rax, sob_void
 18680 0000CC55 [0000000000000000] 
 18681                                  
 18682 0000CC5D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18683 0000CC62 E87F850000              	call malloc
 18684 0000CC67 50                      	push rax
 18685 0000CC68 BF08000000              	mov rdi, 8 * 1	; new rib
 18686 0000CC6D E874850000              	call malloc
 18687 0000CC72 50                      	push rax
 18688 0000CC73 BF28000000              	mov rdi, 8 * 5	; extended env
 18689 0000CC78 E869850000              	call malloc
 18690 0000CC7D 488B7D10                	mov rdi, ENV
 18691 0000CC81 BE00000000              	mov rsi, 0
 18692 0000CC86 BA01000000              	mov rdx, 1
 18693                                  .L_lambda_simple_env_loop_040d:	; ext_env[i + 1] <-- env[i]
 18694 0000CC8B 4883FE04                	cmp rsi, 4
 18695 0000CC8F 7410                    	je .L_lambda_simple_env_end_040d
 18696 0000CC91 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18697 0000CC95 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18698 0000CC99 48FFC6                  	inc rsi
 18699 0000CC9C 48FFC2                  	inc rdx
 18700 0000CC9F EBEA                    	jmp .L_lambda_simple_env_loop_040d
 18701                                  .L_lambda_simple_env_end_040d:
 18702 0000CCA1 5B                      	pop rbx
 18703 0000CCA2 BE00000000              	mov rsi, 0
 18704                                  .L_lambda_simple_params_loop_040d:	; copy params
 18705 0000CCA7 4883FE01                	cmp rsi, 1
 18706 0000CCAB 740E                    	je .L_lambda_simple_params_end_040d
 18707 0000CCAD 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18708 0000CCB2 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18709 0000CCB6 48FFC6                  	inc rsi
 18710 0000CCB9 EBEC                    	jmp .L_lambda_simple_params_loop_040d
 18711                                  .L_lambda_simple_params_end_040d:
 18712 0000CCBB 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 18713 0000CCBE 4889C3                  	mov rbx, rax
 18714 0000CCC1 58                      	pop rax
 18715 0000CCC2 C60004                  	mov byte [rax], T_closure
 18716 0000CCC5 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18717 0000CCC9 48C74009[D6CC0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_040d
 18718 0000CCD1 E953010000              	jmp .L_lambda_simple_end_040d
 18719                                  .L_lambda_simple_code_040d:	; lambda-simple body
 18720 0000CCD6 48837C241002            	cmp qword [rsp + 8 * 2], 2
 18721 0000CCDC 740B                    	je .L_lambda_simple_arity_check_ok_040d
 18722 0000CCDE FF742410                	push qword [rsp + 8 * 2]
 18723 0000CCE2 6A02                    	push 2
 18724 0000CCE4 E9B6840000              	jmp L_error_incorrect_arity_simple
 18725                                  .L_lambda_simple_arity_check_ok_040d:
 18726 0000CCE9 C8000000                	enter 0, 0
 18727                                  	; preparing a non-tail-call
 18728 0000CCED 488B4528                	mov rax, PARAM(1)	; param strs
 18729 0000CCF1 50                      	push rax
 18730 0000CCF2 6A01                    	push 1	; arg count
 18731 0000CCF4 488B0425[3C1B0000]      	mov rax, qword [free_var_126]	; free var null?
 18732 0000CCFC 803805                  	cmp byte [rax], T_undefined
 18733 0000CCFF 0F84B4830000            	je L_error_fvar_undefined
 18734 0000CD05 803804                  	cmp byte [rax], T_closure
 18735 0000CD08 0F852F840000            	jne L_error_non_closure
 18736 0000CD0E FF7001                  	push SOB_CLOSURE_ENV(rax)
 18737 0000CD11 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18738 0000CD14 483D[02000000]          	cmp rax, sob_boolean_false
 18739 0000CD1A 0F8505010000            	jne .L_or_end_004f
 18740                                  	; preparing a non-tail-call
 18741                                  	; preparing a non-tail-call
 18742 0000CD20 488B4528                	mov rax, PARAM(1)	; param strs
 18743 0000CD24 50                      	push rax
 18744 0000CD25 6A01                    	push 1	; arg count
 18745 0000CD27 488B0425[74160000]      	mov rax, qword [free_var_54]	; free var car
 18746 0000CD2F 803805                  	cmp byte [rax], T_undefined
 18747 0000CD32 0F8481830000            	je L_error_fvar_undefined
 18748 0000CD38 803804                  	cmp byte [rax], T_closure
 18749 0000CD3B 0F85FC830000            	jne L_error_non_closure
 18750 0000CD41 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18751 0000CD44 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18752 0000CD47 50                      	push rax
 18753 0000CD48 488B4520                	mov rax, PARAM(0)	; param str
 18754 0000CD4C 50                      	push rax
 18755 0000CD4D 6A02                    	push 2	; arg count
 18756 0000CD4F 488B4510                	mov rax, ENV
 18757 0000CD53 488B4008                	mov rax, qword [rax + 8 * 1]
 18758 0000CD57 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var binary-string<?
 18759 0000CD5A 803804                  	cmp byte [rax], T_closure
 18760 0000CD5D 0F85DA830000            	jne L_error_non_closure
 18761 0000CD63 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18762 0000CD66 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18763 0000CD69 483D[02000000]          	cmp rax, sob_boolean_false
 18764 0000CD6F 0F84A6000000            	je .L_if_else_0301
 18765                                  	; preparing a tail-call
 18766                                  	; preparing a non-tail-call
 18767 0000CD75 488B4528                	mov rax, PARAM(1)	; param strs
 18768 0000CD79 50                      	push rax
 18769 0000CD7A 6A01                    	push 1	; arg count
 18770 0000CD7C 488B0425[73170000]      	mov rax, qword [free_var_69]	; free var cdr
 18771 0000CD84 803805                  	cmp byte [rax], T_undefined
 18772 0000CD87 0F842C830000            	je L_error_fvar_undefined
 18773 0000CD8D 803804                  	cmp byte [rax], T_closure
 18774 0000CD90 0F85A7830000            	jne L_error_non_closure
 18775 0000CD96 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18776 0000CD99 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18777 0000CD9C 50                      	push rax
 18778                                  	; preparing a non-tail-call
 18779 0000CD9D 488B4528                	mov rax, PARAM(1)	; param strs
 18780 0000CDA1 50                      	push rax
 18781 0000CDA2 6A01                    	push 1	; arg count
 18782 0000CDA4 488B0425[74160000]      	mov rax, qword [free_var_54]	; free var car
 18783 0000CDAC 803805                  	cmp byte [rax], T_undefined
 18784 0000CDAF 0F8404830000            	je L_error_fvar_undefined
 18785 0000CDB5 803804                  	cmp byte [rax], T_closure
 18786 0000CDB8 0F857F830000            	jne L_error_non_closure
 18787 0000CDBE FF7001                  	push SOB_CLOSURE_ENV(rax)
 18788 0000CDC1 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18789 0000CDC4 50                      	push rax
 18790 0000CDC5 6A02                    	push 2	; arg count
 18791 0000CDC7 488B4510                	mov rax, ENV
 18792 0000CDCB 488B00                  	mov rax, qword [rax + 8 * 0]
 18793 0000CDCE 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 18794 0000CDD1 488B00                  	mov rax, qword [rax]
 18795 0000CDD4 803804                  	cmp byte [rax], T_closure
 18796 0000CDD7 0F8560830000            	jne L_error_non_closure
 18797 0000CDDD FF7001                  	push SOB_CLOSURE_ENV(rax)
 18798                                  
 18799                                  	; recycling the current frame
 18800 0000CDE0 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 18801 0000CDE3 FF7500                  	push qword [rbp]	; old frame-pointer
 18802 0000CDE6 B906000000              	mov rcx, 6
 18803 0000CDEB 488B5D18                	mov rbx, COUNT
 18804 0000CDEF 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 18805 0000CDF4 488D55F8                	lea rdx, [rbp - 8]
 18806                                  .L_tc_recycle_frame_loop_055a:
 18807 0000CDF8 4883F900                	cmp rcx, 0
 18808 0000CDFC 7413                    	je .L_tc_recycle_frame_done_055a
 18809 0000CDFE 488B32                  	mov rsi, qword [rdx]
 18810 0000CE01 488933                  	mov qword [rbx], rsi
 18811 0000CE04 48FFC9                  	dec rcx
 18812 0000CE07 4883EB08                	sub rbx, 8
 18813 0000CE0B 4883EA08                	sub rdx, 8
 18814 0000CE0F EBE7                    	jmp .L_tc_recycle_frame_loop_055a
 18815                                  .L_tc_recycle_frame_done_055a:
 18816 0000CE11 488D6308                	lea rsp, [rbx + 8]
 18817 0000CE15 5D                      	pop rbp
 18818 0000CE16 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 18819 0000CE19 EB0A                    	jmp .L_if_end_0301
 18820                                  .L_if_else_0301:
 18821 0000CE1B 48B8-                   	mov rax, L_constants + 2
 18821 0000CE1D [0200000000000000] 
 18822                                  .L_if_end_0301:
 18823                                  .L_or_end_004f:
 18824 0000CE25 C9                      	leave
 18825 0000CE26 C22000                  	ret AND_KILL_FRAME(2)
 18826                                  .L_lambda_simple_end_040d:	; new closure is in rax
 18827                                  
 18828 0000CE29 50                      	push rax
 18829 0000CE2A 488B4520                	mov rax, PARAM(0)	; param run
 18830                                  
 18831 0000CE2E 8F00                    	pop qword[rax]
 18832 0000CE30 48B8-                   	mov rax, sob_void
 18832 0000CE32 [0000000000000000] 
 18833                                  
 18834 0000CE3A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18835 0000CE3F E8A2830000              	call malloc
 18836 0000CE44 50                      	push rax
 18837 0000CE45 BF08000000              	mov rdi, 8 * 1	; new rib
 18838 0000CE4A E897830000              	call malloc
 18839 0000CE4F 50                      	push rax
 18840 0000CE50 BF28000000              	mov rdi, 8 * 5	; extended env
 18841 0000CE55 E88C830000              	call malloc
 18842 0000CE5A 488B7D10                	mov rdi, ENV
 18843 0000CE5E BE00000000              	mov rsi, 0
 18844 0000CE63 BA01000000              	mov rdx, 1
 18845                                  .L_lambda_opt_env_loop_008a:	; ext_env[i + 1] <-- env[i]
 18846 0000CE68 4883FE04                	cmp rsi, 4
 18847 0000CE6C 7410                    	je .L_lambda_opt_env_end_008a
 18848 0000CE6E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18849 0000CE72 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18850 0000CE76 48FFC6                  	inc rsi
 18851 0000CE79 48FFC2                  	inc rdx
 18852 0000CE7C EBEA                    	jmp .L_lambda_opt_env_loop_008a
 18853                                  .L_lambda_opt_env_end_008a:
 18854 0000CE7E 5B                      	pop rbx
 18855 0000CE7F BE00000000              	mov rsi, 0
 18856                                  .L_lambda_opt_params_loop_008a:	; copy params
 18857 0000CE84 4883FE01                	cmp rsi, 1
 18858 0000CE88 740E                    	je .L_lambda_opt_params_end_008a
 18859 0000CE8A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18860 0000CE8F 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18861 0000CE93 48FFC6                  	inc rsi
 18862 0000CE96 EBEC                    	jmp .L_lambda_opt_params_loop_008a
 18863                                  .L_lambda_opt_params_end_008a:
 18864 0000CE98 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 18865 0000CE9B 4889C3                  	mov rbx, rax
 18866 0000CE9E 58                      	pop rax
 18867 0000CE9F C60004                  	mov byte [rax], T_closure
 18868 0000CEA2 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18869 0000CEA6 48C74009[B3CE0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_008a
 18870 0000CEAE E939010000              	jmp .L_lambda_opt_end_008a
 18871                                  .L_lambda_opt_code_008a:	; lambda-simple body
 18872 0000CEB3 48837C241001            	cmp qword [rsp + 8 * 2], 1 ;	 check num of args
 18873 0000CEB9 740D                    	je .L_lambda_opt_arity_check_exact_008a ;	 if equal, go to exact arity
 18874 0000CEBB 7F42                    	jg .L_lambda_opt_arity_check_more_008a ;	 if greater than, go to arity more
 18875 0000CEBD FF742410                	push qword [rsp + 8 * 2] ;	 else, throw opt arity error
 18876 0000CEC1 6A01                    	push 1
 18877 0000CEC3 E9EB820000              	jmp L_error_incorrect_arity_opt
 18878                                  .L_lambda_opt_arity_check_exact_008a:
 18879 0000CEC8 488B442410              	mov rax, qword [rsp + 8 * 2] ;	 number of args
 18880 0000CECD 488D5CC410              	lea rbx, [rsp + 8 * (2 + rax)] ;	 address of last element
 18881 0000CED2 4883EC08                	sub rsp, 8
 18882 0000CED6 488D0C24                	lea rcx, [rsp + 0] ;	 new start
 18883                                  .L_lambda_opt_shift_entry_008a:
 18884 0000CEDA 488B5108                	mov rdx, [rcx + 8]
 18885 0000CEDE 488911                  	mov [rcx], rdx
 18886 0000CEE1 4883C108                	add rcx, 8
 18887 0000CEE5 4839CB                  	cmp rbx, rcx
 18888 0000CEE8 75F0                    	jne .L_lambda_opt_shift_entry_008a
 18889                                  .L_lambda_opt_shift_exit_008a:
 18890 0000CEEA 48C703[01000000]        	mov qword[rbx], sob_nil ;	 place nil
 18891 0000CEF1 4883C001                	add rax, 1
 18892 0000CEF5 4889442410              	mov qword [rsp + 8 * 2], rax
 18893 0000CEFA E987000000              	jmp .L_lambda_opt_stack_adjusted_008a
 18894                                  .L_lambda_opt_arity_check_more_008a:
 18895 0000CEFF 48BA-                   	mov rdx, sob_nil ;	 base cdr
 18895 0000CF01 [0100000000000000] 
 18896 0000CF09 48837C241002            	cmp qword [rsp + 8 * 2], 2
 18897 0000CF0F 7451                    	je .L_lambda_opt_stack_shrink_loop_exit_008a
 18898                                  .L_lambda_opt_stack_shrink_loop_008a:
 18899 0000CF11 BF11000000              	mov rdi, (1 + 8 + 8)
 18900 0000CF16 E8CB820000              	call malloc
 18901 0000CF1B C60021                  	mov byte[rax], T_pair
 18902 0000CF1E 48895009                	mov SOB_PAIR_CDR(rax), rdx
 18903 0000CF22 4889C2                  	mov rdx, rax
 18904 0000CF25 488B442410              	mov rax, qword [rsp + 8 * 2]
 18905 0000CF2A 488B5CC410              	mov rbx, qword [rsp + 8 * (2 + rax)]
 18906 0000CF2F 48895A01                	mov SOB_PAIR_CAR(rdx), rbx
 18907 0000CF33 488D5CC408              	lea rbx, [rsp + 8 * (2 + rax - 1)]
 18908                                  .L_lambda_opt_extra_shift_process_008a:
 18909 0000CF38 488B0B                  	mov rcx, [rbx]
 18910 0000CF3B 48894B08                	mov [rbx + 8], rcx
 18911 0000CF3F 4883EB08                	sub rbx, 8
 18912 0000CF43 4839DC                  	cmp rsp, rbx
 18913 0000CF46 7EF0                    	jle .L_lambda_opt_extra_shift_process_008a
 18914                                  .L_lambda_opt_extra_shift_process_end_008a:
 18915 0000CF48 4883C408                	add rsp, 8
 18916 0000CF4C 488B5C2410              	mov rbx, [rsp + 8 * 2]
 18917 0000CF51 4883EB01                	sub rbx, 1
 18918 0000CF55 48895C2410              	mov [rsp + 8 * 2], rbx
 18919 0000CF5A 48837C241002            	cmp qword [rsp + 8 * 2], 2
 18920 0000CF60 7FAF                    	jg .L_lambda_opt_stack_shrink_loop_008a
 18921                                  .L_lambda_opt_stack_shrink_loop_exit_008a:
 18922 0000CF62 488B4C2410              	mov rcx, [rsp + 8 * 2]
 18923 0000CF67 488B5CCC10              	mov rbx, qword [rsp + 8 * (2 + rcx)]
 18924 0000CF6C BF11000000              	mov rdi, (1 + 8 + 8)
 18925 0000CF71 E870820000              	call malloc
 18926 0000CF76 C60021                  	mov byte[rax], T_pair
 18927 0000CF79 48895009                	mov SOB_PAIR_CDR(rax), rdx
 18928 0000CF7D 48895801                	mov SOB_PAIR_CAR(rax), rbx
 18929 0000CF81 488944CC10              	mov [rsp + 8 * (2 + rcx)], rax
 18930                                  .L_lambda_opt_stack_adjusted_008a:
 18931 0000CF86 C8000000                	enter 0, 0
 18932                                  	; preparing a tail-call
 18933 0000CF8A 488B4528                	mov rax, PARAM(1)	; param strs
 18934 0000CF8E 50                      	push rax
 18935 0000CF8F 488B4520                	mov rax, PARAM(0)	; param str
 18936 0000CF93 50                      	push rax
 18937 0000CF94 6A02                    	push 2	; arg count
 18938 0000CF96 488B4510                	mov rax, ENV
 18939 0000CF9A 488B00                  	mov rax, qword [rax + 8 * 0]
 18940 0000CF9D 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 18941 0000CFA0 488B00                  	mov rax, qword [rax]
 18942 0000CFA3 803804                  	cmp byte [rax], T_closure
 18943 0000CFA6 0F8591810000            	jne L_error_non_closure
 18944 0000CFAC FF7001                  	push SOB_CLOSURE_ENV(rax)
 18945                                  
 18946                                  	; recycling the current frame
 18947 0000CFAF FF7508                  	push qword [rbp + 8 * 1]	; old return address
 18948 0000CFB2 FF7500                  	push qword [rbp]	; old frame-pointer
 18949 0000CFB5 B906000000              	mov rcx, 6
 18950 0000CFBA 488B5D18                	mov rbx, COUNT
 18951 0000CFBE 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 18952 0000CFC3 488D55F8                	lea rdx, [rbp - 8]
 18953                                  .L_tc_recycle_frame_loop_055b:
 18954 0000CFC7 4883F900                	cmp rcx, 0
 18955 0000CFCB 7413                    	je .L_tc_recycle_frame_done_055b
 18956 0000CFCD 488B32                  	mov rsi, qword [rdx]
 18957 0000CFD0 488933                  	mov qword [rbx], rsi
 18958 0000CFD3 48FFC9                  	dec rcx
 18959 0000CFD6 4883EB08                	sub rbx, 8
 18960 0000CFDA 4883EA08                	sub rdx, 8
 18961 0000CFDE EBE7                    	jmp .L_tc_recycle_frame_loop_055b
 18962                                  .L_tc_recycle_frame_done_055b:
 18963 0000CFE0 488D6308                	lea rsp, [rbx + 8]
 18964 0000CFE4 5D                      	pop rbp
 18965 0000CFE5 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 18966 0000CFE8 C9                      	leave
 18967 0000CFE9 C22000                  	ret AND_KILL_FRAME(2)
 18968                                  .L_lambda_opt_end_008a:	; new closure is in rax
 18969 0000CFEC C9                      	leave
 18970 0000CFED C21800                  	ret AND_KILL_FRAME(1)
 18971                                  .L_lambda_simple_end_040c:	; new closure is in rax
 18972 0000CFF0 803804                  	cmp byte [rax], T_closure
 18973 0000CFF3 0F8544810000            	jne L_error_non_closure
 18974 0000CFF9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18975                                  
 18976                                  	; recycling the current frame
 18977 0000CFFC FF7508                  	push qword [rbp + 8 * 1]	; old return address
 18978 0000CFFF FF7500                  	push qword [rbp]	; old frame-pointer
 18979 0000D002 B905000000              	mov rcx, 5
 18980 0000D007 488B5D18                	mov rbx, COUNT
 18981 0000D00B 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 18982 0000D010 488D55F8                	lea rdx, [rbp - 8]
 18983                                  .L_tc_recycle_frame_loop_055c:
 18984 0000D014 4883F900                	cmp rcx, 0
 18985 0000D018 7413                    	je .L_tc_recycle_frame_done_055c
 18986 0000D01A 488B32                  	mov rsi, qword [rdx]
 18987 0000D01D 488933                  	mov qword [rbx], rsi
 18988 0000D020 48FFC9                  	dec rcx
 18989 0000D023 4883EB08                	sub rbx, 8
 18990 0000D027 4883EA08                	sub rdx, 8
 18991 0000D02B EBE7                    	jmp .L_tc_recycle_frame_loop_055c
 18992                                  .L_tc_recycle_frame_done_055c:
 18993 0000D02D 488D6308                	lea rsp, [rbx + 8]
 18994 0000D031 5D                      	pop rbp
 18995 0000D032 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 18996 0000D035 C9                      	leave
 18997 0000D036 C21800                  	ret AND_KILL_FRAME(1)
 18998                                  .L_lambda_simple_end_040b:	; new closure is in rax
 18999 0000D039 803804                  	cmp byte [rax], T_closure
 19000 0000D03C 0F85FB800000            	jne L_error_non_closure
 19001 0000D042 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19002                                  
 19003                                  	; recycling the current frame
 19004 0000D045 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 19005 0000D048 FF7500                  	push qword [rbp]	; old frame-pointer
 19006 0000D04B B905000000              	mov rcx, 5
 19007 0000D050 488B5D18                	mov rbx, COUNT
 19008 0000D054 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 19009 0000D059 488D55F8                	lea rdx, [rbp - 8]
 19010                                  .L_tc_recycle_frame_loop_055d:
 19011 0000D05D 4883F900                	cmp rcx, 0
 19012 0000D061 7413                    	je .L_tc_recycle_frame_done_055d
 19013 0000D063 488B32                  	mov rsi, qword [rdx]
 19014 0000D066 488933                  	mov qword [rbx], rsi
 19015 0000D069 48FFC9                  	dec rcx
 19016 0000D06C 4883EB08                	sub rbx, 8
 19017 0000D070 4883EA08                	sub rdx, 8
 19018 0000D074 EBE7                    	jmp .L_tc_recycle_frame_loop_055d
 19019                                  .L_tc_recycle_frame_done_055d:
 19020 0000D076 488D6308                	lea rsp, [rbx + 8]
 19021 0000D07A 5D                      	pop rbp
 19022 0000D07B FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 19023 0000D07E C9                      	leave
 19024 0000D07F C21800                  	ret AND_KILL_FRAME(1)
 19025                                  .L_lambda_simple_end_0407:	; new closure is in rax
 19026 0000D082 803804                  	cmp byte [rax], T_closure
 19027 0000D085 0F85B2800000            	jne L_error_non_closure
 19028 0000D08B FF7001                  	push SOB_CLOSURE_ENV(rax)
 19029                                  
 19030                                  	; recycling the current frame
 19031 0000D08E FF7508                  	push qword [rbp + 8 * 1]	; old return address
 19032 0000D091 FF7500                  	push qword [rbp]	; old frame-pointer
 19033 0000D094 B905000000              	mov rcx, 5
 19034 0000D099 488B5D18                	mov rbx, COUNT
 19035 0000D09D 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 19036 0000D0A2 488D55F8                	lea rdx, [rbp - 8]
 19037                                  .L_tc_recycle_frame_loop_055e:
 19038 0000D0A6 4883F900                	cmp rcx, 0
 19039 0000D0AA 7413                    	je .L_tc_recycle_frame_done_055e
 19040 0000D0AC 488B32                  	mov rsi, qword [rdx]
 19041 0000D0AF 488933                  	mov qword [rbx], rsi
 19042 0000D0B2 48FFC9                  	dec rcx
 19043 0000D0B5 4883EB08                	sub rbx, 8
 19044 0000D0B9 4883EA08                	sub rdx, 8
 19045 0000D0BD EBE7                    	jmp .L_tc_recycle_frame_loop_055e
 19046                                  .L_tc_recycle_frame_done_055e:
 19047 0000D0BF 488D6308                	lea rsp, [rbx + 8]
 19048 0000D0C3 5D                      	pop rbp
 19049 0000D0C4 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 19050 0000D0C7 C9                      	leave
 19051 0000D0C8 C22000                  	ret AND_KILL_FRAME(2)
 19052                                  .L_lambda_simple_end_0406:	; new closure is in rax
 19053 0000D0CB 50                      	push rax
 19054 0000D0CC 6A01                    	push 1	; arg count
 19055 0000D0CE BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19056 0000D0D3 E80E810000              	call malloc
 19057 0000D0D8 50                      	push rax
 19058 0000D0D9 BF00000000              	mov rdi, 8 * 0	; new rib
 19059 0000D0DE E803810000              	call malloc
 19060 0000D0E3 50                      	push rax
 19061 0000D0E4 BF08000000              	mov rdi, 8 * 1	; extended env
 19062 0000D0E9 E8F8800000              	call malloc
 19063 0000D0EE 488B7D10                	mov rdi, ENV
 19064 0000D0F2 BE00000000              	mov rsi, 0
 19065 0000D0F7 BA01000000              	mov rdx, 1
 19066                                  .L_lambda_simple_env_loop_040e:	; ext_env[i + 1] <-- env[i]
 19067 0000D0FC 4883FE00                	cmp rsi, 0
 19068 0000D100 7410                    	je .L_lambda_simple_env_end_040e
 19069 0000D102 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19070 0000D106 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19071 0000D10A 48FFC6                  	inc rsi
 19072 0000D10D 48FFC2                  	inc rdx
 19073 0000D110 EBEA                    	jmp .L_lambda_simple_env_loop_040e
 19074                                  .L_lambda_simple_env_end_040e:
 19075 0000D112 5B                      	pop rbx
 19076 0000D113 BE00000000              	mov rsi, 0
 19077                                  .L_lambda_simple_params_loop_040e:	; copy params
 19078 0000D118 4883FE00                	cmp rsi, 0
 19079 0000D11C 740E                    	je .L_lambda_simple_params_end_040e
 19080 0000D11E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19081 0000D123 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19082 0000D127 48FFC6                  	inc rsi
 19083 0000D12A EBEC                    	jmp .L_lambda_simple_params_loop_040e
 19084                                  .L_lambda_simple_params_end_040e:
 19085 0000D12C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 19086 0000D12F 4889C3                  	mov rbx, rax
 19087 0000D132 58                      	pop rax
 19088 0000D133 C60004                  	mov byte [rax], T_closure
 19089 0000D136 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19090 0000D13A 48C74009[47D10000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_040e
 19091 0000D142 E96B010000              	jmp .L_lambda_simple_end_040e
 19092                                  .L_lambda_simple_code_040e:	; lambda-simple body
 19093 0000D147 48837C241001            	cmp qword [rsp + 8 * 2], 1
 19094 0000D14D 740B                    	je .L_lambda_simple_arity_check_ok_040e
 19095 0000D14F FF742410                	push qword [rsp + 8 * 2]
 19096 0000D153 6A01                    	push 1
 19097 0000D155 E945800000              	jmp L_error_incorrect_arity_simple
 19098                                  .L_lambda_simple_arity_check_ok_040e:
 19099 0000D15A C8000000                	enter 0, 0
 19100                                  	; preparing a non-tail-call
 19101 0000D15E 488B0425[2E180000]      	mov rax, qword [free_var_80]	; free var char=?
 19102 0000D166 803805                  	cmp byte [rax], T_undefined
 19103 0000D169 0F844A7F0000            	je L_error_fvar_undefined
 19104 0000D16F 50                      	push rax
 19105 0000D170 488B0425[1D180000]      	mov rax, qword [free_var_79]	; free var char<?
 19106 0000D178 803805                  	cmp byte [rax], T_undefined
 19107 0000D17B 0F84387F0000            	je L_error_fvar_undefined
 19108 0000D181 50                      	push rax
 19109 0000D182 6A02                    	push 2	; arg count
 19110 0000D184 488B4520                	mov rax, PARAM(0)	; param make-string<?
 19111 0000D188 803804                  	cmp byte [rax], T_closure
 19112 0000D18B 0F85AC7F0000            	jne L_error_non_closure
 19113 0000D191 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19114 0000D194 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19115 0000D197 48890425[8F1D0000]      	mov qword [free_var_161], rax	; free var string<?
 19116 0000D19F 803805                  	cmp byte [rax], T_undefined
 19117 0000D1A2 0F84117F0000            	je L_error_fvar_undefined
 19118 0000D1A8 48B8-                   	mov rax, sob_void
 19118 0000D1AA [0000000000000000] 
 19119                                  
 19120                                  	; preparing a non-tail-call
 19121 0000D1B2 488B0425[B7170000]      	mov rax, qword [free_var_73]	; free var char-ci=?
 19122 0000D1BA 803805                  	cmp byte [rax], T_undefined
 19123 0000D1BD 0F84F67E0000            	je L_error_fvar_undefined
 19124 0000D1C3 50                      	push rax
 19125 0000D1C4 488B0425[A6170000]      	mov rax, qword [free_var_72]	; free var char-ci<?
 19126 0000D1CC 803805                  	cmp byte [rax], T_undefined
 19127 0000D1CF 0F84E47E0000            	je L_error_fvar_undefined
 19128 0000D1D5 50                      	push rax
 19129 0000D1D6 6A02                    	push 2	; arg count
 19130 0000D1D8 488B4520                	mov rax, PARAM(0)	; param make-string<?
 19131 0000D1DC 803804                  	cmp byte [rax], T_closure
 19132 0000D1DF 0F85587F0000            	jne L_error_non_closure
 19133 0000D1E5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19134 0000D1E8 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19135 0000D1EB 48890425[C31C0000]      	mov qword [free_var_149], rax	; free var string-ci<?
 19136 0000D1F3 803805                  	cmp byte [rax], T_undefined
 19137 0000D1F6 0F84BD7E0000            	je L_error_fvar_undefined
 19138 0000D1FC 48B8-                   	mov rax, sob_void
 19138 0000D1FE [0000000000000000] 
 19139                                  
 19140                                  	; preparing a non-tail-call
 19141 0000D206 488B0425[2E180000]      	mov rax, qword [free_var_80]	; free var char=?
 19142 0000D20E 803805                  	cmp byte [rax], T_undefined
 19143 0000D211 0F84A27E0000            	je L_error_fvar_undefined
 19144 0000D217 50                      	push rax
 19145 0000D218 488B0425[50180000]      	mov rax, qword [free_var_82]	; free var char>?
 19146 0000D220 803805                  	cmp byte [rax], T_undefined
 19147 0000D223 0F84907E0000            	je L_error_fvar_undefined
 19148 0000D229 50                      	push rax
 19149 0000D22A 6A02                    	push 2	; arg count
 19150 0000D22C 488B4520                	mov rax, PARAM(0)	; param make-string<?
 19151 0000D230 803804                  	cmp byte [rax], T_closure
 19152 0000D233 0F85047F0000            	jne L_error_non_closure
 19153 0000D239 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19154 0000D23C FF5009                  	call SOB_CLOSURE_CODE(rax)
 19155 0000D23F 48890425[C21D0000]      	mov qword [free_var_164], rax	; free var string>?
 19156 0000D247 803805                  	cmp byte [rax], T_undefined
 19157 0000D24A 0F84697E0000            	je L_error_fvar_undefined
 19158 0000D250 48B8-                   	mov rax, sob_void
 19158 0000D252 [0000000000000000] 
 19159                                  
 19160                                  	; preparing a non-tail-call
 19161 0000D25A 488B0425[B7170000]      	mov rax, qword [free_var_73]	; free var char-ci=?
 19162 0000D262 803805                  	cmp byte [rax], T_undefined
 19163 0000D265 0F844E7E0000            	je L_error_fvar_undefined
 19164 0000D26B 50                      	push rax
 19165 0000D26C 488B0425[D9170000]      	mov rax, qword [free_var_75]	; free var char-ci>?
 19166 0000D274 803805                  	cmp byte [rax], T_undefined
 19167 0000D277 0F843C7E0000            	je L_error_fvar_undefined
 19168 0000D27D 50                      	push rax
 19169 0000D27E 6A02                    	push 2	; arg count
 19170 0000D280 488B4520                	mov rax, PARAM(0)	; param make-string<?
 19171 0000D284 803804                  	cmp byte [rax], T_closure
 19172 0000D287 0F85B07E0000            	jne L_error_non_closure
 19173 0000D28D FF7001                  	push SOB_CLOSURE_ENV(rax)
 19174 0000D290 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19175 0000D293 48890425[F61C0000]      	mov qword [free_var_152], rax	; free var string-ci>?
 19176 0000D29B 803805                  	cmp byte [rax], T_undefined
 19177 0000D29E 0F84157E0000            	je L_error_fvar_undefined
 19178 0000D2A4 48B8-                   	mov rax, sob_void
 19178 0000D2A6 [0000000000000000] 
 19179 0000D2AE C9                      	leave
 19180 0000D2AF C21800                  	ret AND_KILL_FRAME(1)
 19181                                  .L_lambda_simple_end_040e:	; new closure is in rax
 19182 0000D2B2 803804                  	cmp byte [rax], T_closure
 19183 0000D2B5 0F85827E0000            	jne L_error_non_closure
 19184 0000D2BB FF7001                  	push SOB_CLOSURE_ENV(rax)
 19185 0000D2BE FF5009                  	call SOB_CLOSURE_CODE(rax)
 19186                                  
 19187 0000D2C1 4889C7                  	mov rdi, rax
 19188 0000D2C4 E872810000              	call print_sexpr_if_not_void
 19189                                  
 19190                                  	; preparing a non-tail-call
 19191 0000D2C9 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19192 0000D2CE E8137F0000              	call malloc
 19193 0000D2D3 50                      	push rax
 19194 0000D2D4 BF00000000              	mov rdi, 8 * 0	; new rib
 19195 0000D2D9 E8087F0000              	call malloc
 19196 0000D2DE 50                      	push rax
 19197 0000D2DF BF08000000              	mov rdi, 8 * 1	; extended env
 19198 0000D2E4 E8FD7E0000              	call malloc
 19199 0000D2E9 488B7D10                	mov rdi, ENV
 19200 0000D2ED BE00000000              	mov rsi, 0
 19201 0000D2F2 BA01000000              	mov rdx, 1
 19202                                  .L_lambda_simple_env_loop_040f:	; ext_env[i + 1] <-- env[i]
 19203 0000D2F7 4883FE00                	cmp rsi, 0
 19204 0000D2FB 7410                    	je .L_lambda_simple_env_end_040f
 19205 0000D2FD 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19206 0000D301 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19207 0000D305 48FFC6                  	inc rsi
 19208 0000D308 48FFC2                  	inc rdx
 19209 0000D30B EBEA                    	jmp .L_lambda_simple_env_loop_040f
 19210                                  .L_lambda_simple_env_end_040f:
 19211 0000D30D 5B                      	pop rbx
 19212 0000D30E BE00000000              	mov rsi, 0
 19213                                  .L_lambda_simple_params_loop_040f:	; copy params
 19214 0000D313 4883FE00                	cmp rsi, 0
 19215 0000D317 740E                    	je .L_lambda_simple_params_end_040f
 19216 0000D319 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19217 0000D31E 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19218 0000D322 48FFC6                  	inc rsi
 19219 0000D325 EBEC                    	jmp .L_lambda_simple_params_loop_040f
 19220                                  .L_lambda_simple_params_end_040f:
 19221 0000D327 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 19222 0000D32A 4889C3                  	mov rbx, rax
 19223 0000D32D 58                      	pop rax
 19224 0000D32E C60004                  	mov byte [rax], T_closure
 19225 0000D331 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19226 0000D335 48C74009[42D30000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_040f
 19227 0000D33D E95B0C0000              	jmp .L_lambda_simple_end_040f
 19228                                  .L_lambda_simple_code_040f:	; lambda-simple body
 19229 0000D342 48837C241002            	cmp qword [rsp + 8 * 2], 2
 19230 0000D348 740B                    	je .L_lambda_simple_arity_check_ok_040f
 19231 0000D34A FF742410                	push qword [rsp + 8 * 2]
 19232 0000D34E 6A02                    	push 2
 19233 0000D350 E94A7E0000              	jmp L_error_incorrect_arity_simple
 19234                                  .L_lambda_simple_arity_check_ok_040f:
 19235 0000D355 C8000000                	enter 0, 0
 19236                                  	; preparing a tail-call
 19237 0000D359 48B8-                   	mov rax, L_constants + 2335
 19237 0000D35B [1F09000000000000] 
 19238 0000D363 50                      	push rax
 19239 0000D364 6A01                    	push 1	; arg count
 19240 0000D366 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19241 0000D36B E8767E0000              	call malloc
 19242 0000D370 50                      	push rax
 19243 0000D371 BF10000000              	mov rdi, 8 * 2	; new rib
 19244 0000D376 E86B7E0000              	call malloc
 19245 0000D37B 50                      	push rax
 19246 0000D37C BF10000000              	mov rdi, 8 * 2	; extended env
 19247 0000D381 E8607E0000              	call malloc
 19248 0000D386 488B7D10                	mov rdi, ENV
 19249 0000D38A BE00000000              	mov rsi, 0
 19250 0000D38F BA01000000              	mov rdx, 1
 19251                                  .L_lambda_simple_env_loop_0410:	; ext_env[i + 1] <-- env[i]
 19252 0000D394 4883FE01                	cmp rsi, 1
 19253 0000D398 7410                    	je .L_lambda_simple_env_end_0410
 19254 0000D39A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19255 0000D39E 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19256 0000D3A2 48FFC6                  	inc rsi
 19257 0000D3A5 48FFC2                  	inc rdx
 19258 0000D3A8 EBEA                    	jmp .L_lambda_simple_env_loop_0410
 19259                                  .L_lambda_simple_env_end_0410:
 19260 0000D3AA 5B                      	pop rbx
 19261 0000D3AB BE00000000              	mov rsi, 0
 19262                                  .L_lambda_simple_params_loop_0410:	; copy params
 19263 0000D3B0 4883FE02                	cmp rsi, 2
 19264 0000D3B4 740E                    	je .L_lambda_simple_params_end_0410
 19265 0000D3B6 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19266 0000D3BB 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19267 0000D3BF 48FFC6                  	inc rsi
 19268 0000D3C2 EBEC                    	jmp .L_lambda_simple_params_loop_0410
 19269                                  .L_lambda_simple_params_end_0410:
 19270 0000D3C4 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 19271 0000D3C7 4889C3                  	mov rbx, rax
 19272 0000D3CA 58                      	pop rax
 19273 0000D3CB C60004                  	mov byte [rax], T_closure
 19274 0000D3CE 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19275 0000D3D2 48C74009[DFD30000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0410
 19276 0000D3DA E9750B0000              	jmp .L_lambda_simple_end_0410
 19277                                  .L_lambda_simple_code_0410:	; lambda-simple body
 19278 0000D3DF 48837C241001            	cmp qword [rsp + 8 * 2], 1
 19279 0000D3E5 740B                    	je .L_lambda_simple_arity_check_ok_0410
 19280 0000D3E7 FF742410                	push qword [rsp + 8 * 2]
 19281 0000D3EB 6A01                    	push 1
 19282 0000D3ED E9AD7D0000              	jmp L_error_incorrect_arity_simple
 19283                                  .L_lambda_simple_arity_check_ok_0410:
 19284 0000D3F2 C8000000                	enter 0, 0
 19285                                  
 19286 0000D3F6 BF08000000              	mov rdi, 8
 19287 0000D3FB E8E67D0000              	call malloc
 19288 0000D400 488B5D20                	mov rbx, PARAM(0)	; param run
 19289 0000D404 488918                  	mov [rax], rbx	; box run
 19290 0000D407 48894520                	mov PARAM(0), rax	; replace param with box
 19291 0000D40B 48B8-                   	mov rax, sob_void
 19291 0000D40D [0000000000000000] 
 19292                                  
 19293 0000D415 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19294 0000D41A E8C77D0000              	call malloc
 19295 0000D41F 50                      	push rax
 19296 0000D420 BF08000000              	mov rdi, 8 * 1	; new rib
 19297 0000D425 E8BC7D0000              	call malloc
 19298 0000D42A 50                      	push rax
 19299 0000D42B BF18000000              	mov rdi, 8 * 3	; extended env
 19300 0000D430 E8B17D0000              	call malloc
 19301 0000D435 488B7D10                	mov rdi, ENV
 19302 0000D439 BE00000000              	mov rsi, 0
 19303 0000D43E BA01000000              	mov rdx, 1
 19304                                  .L_lambda_simple_env_loop_0411:	; ext_env[i + 1] <-- env[i]
 19305 0000D443 4883FE02                	cmp rsi, 2
 19306 0000D447 7410                    	je .L_lambda_simple_env_end_0411
 19307 0000D449 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19308 0000D44D 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19309 0000D451 48FFC6                  	inc rsi
 19310 0000D454 48FFC2                  	inc rdx
 19311 0000D457 EBEA                    	jmp .L_lambda_simple_env_loop_0411
 19312                                  .L_lambda_simple_env_end_0411:
 19313 0000D459 5B                      	pop rbx
 19314 0000D45A BE00000000              	mov rsi, 0
 19315                                  .L_lambda_simple_params_loop_0411:	; copy params
 19316 0000D45F 4883FE01                	cmp rsi, 1
 19317 0000D463 740E                    	je .L_lambda_simple_params_end_0411
 19318 0000D465 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19319 0000D46A 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19320 0000D46E 48FFC6                  	inc rsi
 19321 0000D471 EBEC                    	jmp .L_lambda_simple_params_loop_0411
 19322                                  .L_lambda_simple_params_end_0411:
 19323 0000D473 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 19324 0000D476 4889C3                  	mov rbx, rax
 19325 0000D479 58                      	pop rax
 19326 0000D47A C60004                  	mov byte [rax], T_closure
 19327 0000D47D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19328 0000D481 48C74009[8ED40000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0411
 19329 0000D489 E943020000              	jmp .L_lambda_simple_end_0411
 19330                                  .L_lambda_simple_code_0411:	; lambda-simple body
 19331 0000D48E 48837C241005            	cmp qword [rsp + 8 * 2], 5
 19332 0000D494 740B                    	je .L_lambda_simple_arity_check_ok_0411
 19333 0000D496 FF742410                	push qword [rsp + 8 * 2]
 19334 0000D49A 6A05                    	push 5
 19335 0000D49C E9FE7C0000              	jmp L_error_incorrect_arity_simple
 19336                                  .L_lambda_simple_arity_check_ok_0411:
 19337 0000D4A1 C8000000                	enter 0, 0
 19338                                  	; preparing a non-tail-call
 19339 0000D4A5 488B4530                	mov rax, PARAM(2)	; param len1
 19340 0000D4A9 50                      	push rax
 19341 0000D4AA 488B4520                	mov rax, PARAM(0)	; param i
 19342 0000D4AE 50                      	push rax
 19343 0000D4AF 6A02                    	push 2	; arg count
 19344 0000D4B1 488B0425[44130000]      	mov rax, qword [free_var_6]	; free var =
 19345 0000D4B9 803805                  	cmp byte [rax], T_undefined
 19346 0000D4BC 0F84F77B0000            	je L_error_fvar_undefined
 19347 0000D4C2 803804                  	cmp byte [rax], T_closure
 19348 0000D4C5 0F85727C0000            	jne L_error_non_closure
 19349 0000D4CB FF7001                  	push SOB_CLOSURE_ENV(rax)
 19350 0000D4CE FF5009                  	call SOB_CLOSURE_CODE(rax)
 19351 0000D4D1 483D[02000000]          	cmp rax, sob_boolean_false
 19352 0000D4D7 0F85F0010000            	jne .L_or_end_0050
 19353                                  	; preparing a non-tail-call
 19354                                  	; preparing a non-tail-call
 19355 0000D4DD 488B4520                	mov rax, PARAM(0)	; param i
 19356 0000D4E1 50                      	push rax
 19357 0000D4E2 488B4538                	mov rax, PARAM(3)	; param str2
 19358 0000D4E6 50                      	push rax
 19359 0000D4E7 6A02                    	push 2	; arg count
 19360 0000D4E9 488B0425[291D0000]      	mov rax, qword [free_var_155]	; free var string-ref
 19361 0000D4F1 803805                  	cmp byte [rax], T_undefined
 19362 0000D4F4 0F84BF7B0000            	je L_error_fvar_undefined
 19363 0000D4FA 803804                  	cmp byte [rax], T_closure
 19364 0000D4FD 0F853A7C0000            	jne L_error_non_closure
 19365 0000D503 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19366 0000D506 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19367 0000D509 50                      	push rax
 19368                                  	; preparing a non-tail-call
 19369 0000D50A 488B4520                	mov rax, PARAM(0)	; param i
 19370 0000D50E 50                      	push rax
 19371 0000D50F 488B4528                	mov rax, PARAM(1)	; param str1
 19372 0000D513 50                      	push rax
 19373 0000D514 6A02                    	push 2	; arg count
 19374 0000D516 488B0425[291D0000]      	mov rax, qword [free_var_155]	; free var string-ref
 19375 0000D51E 803805                  	cmp byte [rax], T_undefined
 19376 0000D521 0F84927B0000            	je L_error_fvar_undefined
 19377 0000D527 803804                  	cmp byte [rax], T_closure
 19378 0000D52A 0F850D7C0000            	jne L_error_non_closure
 19379 0000D530 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19380 0000D533 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19381 0000D536 50                      	push rax
 19382 0000D537 6A02                    	push 2	; arg count
 19383 0000D539 488B4510                	mov rax, ENV
 19384 0000D53D 488B4008                	mov rax, qword [rax + 8 * 1]
 19385 0000D541 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var char<?
 19386 0000D544 803804                  	cmp byte [rax], T_closure
 19387 0000D547 0F85F07B0000            	jne L_error_non_closure
 19388 0000D54D FF7001                  	push SOB_CLOSURE_ENV(rax)
 19389 0000D550 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19390 0000D553 483D[02000000]          	cmp rax, sob_boolean_false
 19391 0000D559 0F856E010000            	jne .L_or_end_0050
 19392                                  	; preparing a non-tail-call
 19393 0000D55F 488B4530                	mov rax, PARAM(2)	; param len1
 19394 0000D563 50                      	push rax
 19395 0000D564 488B4520                	mov rax, PARAM(0)	; param i
 19396 0000D568 50                      	push rax
 19397 0000D569 6A02                    	push 2	; arg count
 19398 0000D56B 488B0425[22130000]      	mov rax, qword [free_var_4]	; free var <
 19399 0000D573 803805                  	cmp byte [rax], T_undefined
 19400 0000D576 0F843D7B0000            	je L_error_fvar_undefined
 19401 0000D57C 803804                  	cmp byte [rax], T_closure
 19402 0000D57F 0F85B87B0000            	jne L_error_non_closure
 19403 0000D585 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19404 0000D588 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19405 0000D58B 483D[02000000]          	cmp rax, sob_boolean_false
 19406 0000D591 0F842C010000            	je .L_if_else_0303
 19407                                  	; preparing a non-tail-call
 19408                                  	; preparing a non-tail-call
 19409 0000D597 488B4520                	mov rax, PARAM(0)	; param i
 19410 0000D59B 50                      	push rax
 19411 0000D59C 488B4538                	mov rax, PARAM(3)	; param str2
 19412 0000D5A0 50                      	push rax
 19413 0000D5A1 6A02                    	push 2	; arg count
 19414 0000D5A3 488B0425[291D0000]      	mov rax, qword [free_var_155]	; free var string-ref
 19415 0000D5AB 803805                  	cmp byte [rax], T_undefined
 19416 0000D5AE 0F84057B0000            	je L_error_fvar_undefined
 19417 0000D5B4 803804                  	cmp byte [rax], T_closure
 19418 0000D5B7 0F85807B0000            	jne L_error_non_closure
 19419 0000D5BD FF7001                  	push SOB_CLOSURE_ENV(rax)
 19420 0000D5C0 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19421 0000D5C3 50                      	push rax
 19422                                  	; preparing a non-tail-call
 19423 0000D5C4 488B4520                	mov rax, PARAM(0)	; param i
 19424 0000D5C8 50                      	push rax
 19425 0000D5C9 488B4528                	mov rax, PARAM(1)	; param str1
 19426 0000D5CD 50                      	push rax
 19427 0000D5CE 6A02                    	push 2	; arg count
 19428 0000D5D0 488B0425[291D0000]      	mov rax, qword [free_var_155]	; free var string-ref
 19429 0000D5D8 803805                  	cmp byte [rax], T_undefined
 19430 0000D5DB 0F84D87A0000            	je L_error_fvar_undefined
 19431 0000D5E1 803804                  	cmp byte [rax], T_closure
 19432 0000D5E4 0F85537B0000            	jne L_error_non_closure
 19433 0000D5EA FF7001                  	push SOB_CLOSURE_ENV(rax)
 19434 0000D5ED FF5009                  	call SOB_CLOSURE_CODE(rax)
 19435 0000D5F0 50                      	push rax
 19436 0000D5F1 6A02                    	push 2	; arg count
 19437 0000D5F3 488B4510                	mov rax, ENV
 19438 0000D5F7 488B4008                	mov rax, qword [rax + 8 * 1]
 19439 0000D5FB 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var char=?
 19440 0000D5FF 803804                  	cmp byte [rax], T_closure
 19441 0000D602 0F85357B0000            	jne L_error_non_closure
 19442 0000D608 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19443 0000D60B FF5009                  	call SOB_CLOSURE_CODE(rax)
 19444 0000D60E 483D[02000000]          	cmp rax, sob_boolean_false
 19445 0000D614 0F849D000000            	je .L_if_else_0302
 19446                                  	; preparing a tail-call
 19447 0000D61A 488B4540                	mov rax, PARAM(4)	; param len2
 19448 0000D61E 50                      	push rax
 19449 0000D61F 488B4538                	mov rax, PARAM(3)	; param str2
 19450 0000D623 50                      	push rax
 19451 0000D624 488B4530                	mov rax, PARAM(2)	; param len1
 19452 0000D628 50                      	push rax
 19453 0000D629 488B4528                	mov rax, PARAM(1)	; param str1
 19454 0000D62D 50                      	push rax
 19455                                  	; preparing a non-tail-call
 19456 0000D62E 48B8-                   	mov rax, L_constants + 2810
 19456 0000D630 [FA0A000000000000] 
 19457 0000D638 50                      	push rax
 19458 0000D639 488B4520                	mov rax, PARAM(0)	; param i
 19459 0000D63D 50                      	push rax
 19460 0000D63E 6A02                    	push 2	; arg count
 19461 0000D640 488B0425[EF120000]      	mov rax, qword [free_var_1]	; free var +
 19462 0000D648 803805                  	cmp byte [rax], T_undefined
 19463 0000D64B 0F84687A0000            	je L_error_fvar_undefined
 19464 0000D651 803804                  	cmp byte [rax], T_closure
 19465 0000D654 0F85E37A0000            	jne L_error_non_closure
 19466 0000D65A FF7001                  	push SOB_CLOSURE_ENV(rax)
 19467 0000D65D FF5009                  	call SOB_CLOSURE_CODE(rax)
 19468 0000D660 50                      	push rax
 19469 0000D661 6A05                    	push 5	; arg count
 19470 0000D663 488B4510                	mov rax, ENV
 19471 0000D667 488B00                  	mov rax, qword [rax + 8 * 0]
 19472 0000D66A 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 19473 0000D66D 488B00                  	mov rax, qword [rax]
 19474 0000D670 803804                  	cmp byte [rax], T_closure
 19475 0000D673 0F85C47A0000            	jne L_error_non_closure
 19476 0000D679 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19477                                  
 19478                                  	; recycling the current frame
 19479 0000D67C FF7508                  	push qword [rbp + 8 * 1]	; old return address
 19480 0000D67F FF7500                  	push qword [rbp]	; old frame-pointer
 19481 0000D682 B909000000              	mov rcx, 9
 19482 0000D687 488B5D18                	mov rbx, COUNT
 19483 0000D68B 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 19484 0000D690 488D55F8                	lea rdx, [rbp - 8]
 19485                                  .L_tc_recycle_frame_loop_055f:
 19486 0000D694 4883F900                	cmp rcx, 0
 19487 0000D698 7413                    	je .L_tc_recycle_frame_done_055f
 19488 0000D69A 488B32                  	mov rsi, qword [rdx]
 19489 0000D69D 488933                  	mov qword [rbx], rsi
 19490 0000D6A0 48FFC9                  	dec rcx
 19491 0000D6A3 4883EB08                	sub rbx, 8
 19492 0000D6A7 4883EA08                	sub rdx, 8
 19493 0000D6AB EBE7                    	jmp .L_tc_recycle_frame_loop_055f
 19494                                  .L_tc_recycle_frame_done_055f:
 19495 0000D6AD 488D6308                	lea rsp, [rbx + 8]
 19496 0000D6B1 5D                      	pop rbp
 19497 0000D6B2 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 19498 0000D6B5 EB0A                    	jmp .L_if_end_0302
 19499                                  .L_if_else_0302:
 19500 0000D6B7 48B8-                   	mov rax, L_constants + 2
 19500 0000D6B9 [0200000000000000] 
 19501                                  .L_if_end_0302:
 19502 0000D6C1 EB0A                    	jmp .L_if_end_0303
 19503                                  .L_if_else_0303:
 19504 0000D6C3 48B8-                   	mov rax, L_constants + 2
 19504 0000D6C5 [0200000000000000] 
 19505                                  .L_if_end_0303:
 19506                                  .L_or_end_0050:
 19507 0000D6CD C9                      	leave
 19508 0000D6CE C23800                  	ret AND_KILL_FRAME(5)
 19509                                  .L_lambda_simple_end_0411:	; new closure is in rax
 19510                                  
 19511 0000D6D1 50                      	push rax
 19512 0000D6D2 488B4520                	mov rax, PARAM(0)	; param run
 19513                                  
 19514 0000D6D6 8F00                    	pop qword[rax]
 19515 0000D6D8 48B8-                   	mov rax, sob_void
 19515 0000D6DA [0000000000000000] 
 19516                                  
 19517                                  	; preparing a tail-call
 19518 0000D6E2 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19519 0000D6E7 E8FA7A0000              	call malloc
 19520 0000D6EC 50                      	push rax
 19521 0000D6ED BF08000000              	mov rdi, 8 * 1	; new rib
 19522 0000D6F2 E8EF7A0000              	call malloc
 19523 0000D6F7 50                      	push rax
 19524 0000D6F8 BF18000000              	mov rdi, 8 * 3	; extended env
 19525 0000D6FD E8E47A0000              	call malloc
 19526 0000D702 488B7D10                	mov rdi, ENV
 19527 0000D706 BE00000000              	mov rsi, 0
 19528 0000D70B BA01000000              	mov rdx, 1
 19529                                  .L_lambda_simple_env_loop_0412:	; ext_env[i + 1] <-- env[i]
 19530 0000D710 4883FE02                	cmp rsi, 2
 19531 0000D714 7410                    	je .L_lambda_simple_env_end_0412
 19532 0000D716 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19533 0000D71A 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19534 0000D71E 48FFC6                  	inc rsi
 19535 0000D721 48FFC2                  	inc rdx
 19536 0000D724 EBEA                    	jmp .L_lambda_simple_env_loop_0412
 19537                                  .L_lambda_simple_env_end_0412:
 19538 0000D726 5B                      	pop rbx
 19539 0000D727 BE00000000              	mov rsi, 0
 19540                                  .L_lambda_simple_params_loop_0412:	; copy params
 19541 0000D72C 4883FE01                	cmp rsi, 1
 19542 0000D730 740E                    	je .L_lambda_simple_params_end_0412
 19543 0000D732 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19544 0000D737 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19545 0000D73B 48FFC6                  	inc rsi
 19546 0000D73E EBEC                    	jmp .L_lambda_simple_params_loop_0412
 19547                                  .L_lambda_simple_params_end_0412:
 19548 0000D740 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 19549 0000D743 4889C3                  	mov rbx, rax
 19550 0000D746 58                      	pop rax
 19551 0000D747 C60004                  	mov byte [rax], T_closure
 19552 0000D74A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19553 0000D74E 48C74009[5BD70000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0412
 19554 0000D756 E985020000              	jmp .L_lambda_simple_end_0412
 19555                                  .L_lambda_simple_code_0412:	; lambda-simple body
 19556 0000D75B 48837C241002            	cmp qword [rsp + 8 * 2], 2
 19557 0000D761 740B                    	je .L_lambda_simple_arity_check_ok_0412
 19558 0000D763 FF742410                	push qword [rsp + 8 * 2]
 19559 0000D767 6A02                    	push 2
 19560 0000D769 E9317A0000              	jmp L_error_incorrect_arity_simple
 19561                                  .L_lambda_simple_arity_check_ok_0412:
 19562 0000D76E C8000000                	enter 0, 0
 19563                                  	; preparing a tail-call
 19564                                  	; preparing a non-tail-call
 19565 0000D772 488B4528                	mov rax, PARAM(1)	; param str2
 19566 0000D776 50                      	push rax
 19567 0000D777 6A01                    	push 1	; arg count
 19568 0000D779 488B0425[181D0000]      	mov rax, qword [free_var_154]	; free var string-length
 19569 0000D781 803805                  	cmp byte [rax], T_undefined
 19570 0000D784 0F842F790000            	je L_error_fvar_undefined
 19571 0000D78A 803804                  	cmp byte [rax], T_closure
 19572 0000D78D 0F85AA790000            	jne L_error_non_closure
 19573 0000D793 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19574 0000D796 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19575 0000D799 50                      	push rax
 19576                                  	; preparing a non-tail-call
 19577 0000D79A 488B4520                	mov rax, PARAM(0)	; param str1
 19578 0000D79E 50                      	push rax
 19579 0000D79F 6A01                    	push 1	; arg count
 19580 0000D7A1 488B0425[181D0000]      	mov rax, qword [free_var_154]	; free var string-length
 19581 0000D7A9 803805                  	cmp byte [rax], T_undefined
 19582 0000D7AC 0F8407790000            	je L_error_fvar_undefined
 19583 0000D7B2 803804                  	cmp byte [rax], T_closure
 19584 0000D7B5 0F8582790000            	jne L_error_non_closure
 19585 0000D7BB FF7001                  	push SOB_CLOSURE_ENV(rax)
 19586 0000D7BE FF5009                  	call SOB_CLOSURE_CODE(rax)
 19587 0000D7C1 50                      	push rax
 19588 0000D7C2 6A02                    	push 2	; arg count
 19589 0000D7C4 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19590 0000D7C9 E8187A0000              	call malloc
 19591 0000D7CE 50                      	push rax
 19592 0000D7CF BF10000000              	mov rdi, 8 * 2	; new rib
 19593 0000D7D4 E80D7A0000              	call malloc
 19594 0000D7D9 50                      	push rax
 19595 0000D7DA BF20000000              	mov rdi, 8 * 4	; extended env
 19596 0000D7DF E8027A0000              	call malloc
 19597 0000D7E4 488B7D10                	mov rdi, ENV
 19598 0000D7E8 BE00000000              	mov rsi, 0
 19599 0000D7ED BA01000000              	mov rdx, 1
 19600                                  .L_lambda_simple_env_loop_0413:	; ext_env[i + 1] <-- env[i]
 19601 0000D7F2 4883FE03                	cmp rsi, 3
 19602 0000D7F6 7410                    	je .L_lambda_simple_env_end_0413
 19603 0000D7F8 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19604 0000D7FC 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19605 0000D800 48FFC6                  	inc rsi
 19606 0000D803 48FFC2                  	inc rdx
 19607 0000D806 EBEA                    	jmp .L_lambda_simple_env_loop_0413
 19608                                  .L_lambda_simple_env_end_0413:
 19609 0000D808 5B                      	pop rbx
 19610 0000D809 BE00000000              	mov rsi, 0
 19611                                  .L_lambda_simple_params_loop_0413:	; copy params
 19612 0000D80E 4883FE02                	cmp rsi, 2
 19613 0000D812 740E                    	je .L_lambda_simple_params_end_0413
 19614 0000D814 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19615 0000D819 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19616 0000D81D 48FFC6                  	inc rsi
 19617 0000D820 EBEC                    	jmp .L_lambda_simple_params_loop_0413
 19618                                  .L_lambda_simple_params_end_0413:
 19619 0000D822 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 19620 0000D825 4889C3                  	mov rbx, rax
 19621 0000D828 58                      	pop rax
 19622 0000D829 C60004                  	mov byte [rax], T_closure
 19623 0000D82C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19624 0000D830 48C74009[3DD80000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0413
 19625 0000D838 E95A010000              	jmp .L_lambda_simple_end_0413
 19626                                  .L_lambda_simple_code_0413:	; lambda-simple body
 19627 0000D83D 48837C241002            	cmp qword [rsp + 8 * 2], 2
 19628 0000D843 740B                    	je .L_lambda_simple_arity_check_ok_0413
 19629 0000D845 FF742410                	push qword [rsp + 8 * 2]
 19630 0000D849 6A02                    	push 2
 19631 0000D84B E94F790000              	jmp L_error_incorrect_arity_simple
 19632                                  .L_lambda_simple_arity_check_ok_0413:
 19633 0000D850 C8000000                	enter 0, 0
 19634                                  	; preparing a non-tail-call
 19635 0000D854 488B4528                	mov rax, PARAM(1)	; param len2
 19636 0000D858 50                      	push rax
 19637 0000D859 488B4520                	mov rax, PARAM(0)	; param len1
 19638 0000D85D 50                      	push rax
 19639 0000D85E 6A02                    	push 2	; arg count
 19640 0000D860 488B0425[33130000]      	mov rax, qword [free_var_5]	; free var <=
 19641 0000D868 803805                  	cmp byte [rax], T_undefined
 19642 0000D86B 0F8448780000            	je L_error_fvar_undefined
 19643 0000D871 803804                  	cmp byte [rax], T_closure
 19644 0000D874 0F85C3780000            	jne L_error_non_closure
 19645 0000D87A FF7001                  	push SOB_CLOSURE_ENV(rax)
 19646 0000D87D FF5009                  	call SOB_CLOSURE_CODE(rax)
 19647 0000D880 483D[02000000]          	cmp rax, sob_boolean_false
 19648 0000D886 0F8486000000            	je .L_if_else_0304
 19649                                  	; preparing a tail-call
 19650 0000D88C 488B4528                	mov rax, PARAM(1)	; param len2
 19651 0000D890 50                      	push rax
 19652 0000D891 488B4510                	mov rax, ENV
 19653 0000D895 488B00                  	mov rax, qword [rax + 8 * 0]
 19654 0000D898 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var str2
 19655 0000D89C 50                      	push rax
 19656 0000D89D 488B4520                	mov rax, PARAM(0)	; param len1
 19657 0000D8A1 50                      	push rax
 19658 0000D8A2 488B4510                	mov rax, ENV
 19659 0000D8A6 488B00                  	mov rax, qword [rax + 8 * 0]
 19660 0000D8A9 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str1
 19661 0000D8AC 50                      	push rax
 19662 0000D8AD 48B8-                   	mov rax, L_constants + 2558
 19662 0000D8AF [FE09000000000000] 
 19663 0000D8B7 50                      	push rax
 19664 0000D8B8 6A05                    	push 5	; arg count
 19665 0000D8BA 488B4510                	mov rax, ENV
 19666 0000D8BE 488B4008                	mov rax, qword [rax + 8 * 1]
 19667 0000D8C2 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 19668 0000D8C5 488B00                  	mov rax, qword [rax]
 19669 0000D8C8 803804                  	cmp byte [rax], T_closure
 19670 0000D8CB 0F856C780000            	jne L_error_non_closure
 19671 0000D8D1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19672                                  
 19673                                  	; recycling the current frame
 19674 0000D8D4 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 19675 0000D8D7 FF7500                  	push qword [rbp]	; old frame-pointer
 19676 0000D8DA B909000000              	mov rcx, 9
 19677 0000D8DF 488B5D18                	mov rbx, COUNT
 19678 0000D8E3 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 19679 0000D8E8 488D55F8                	lea rdx, [rbp - 8]
 19680                                  .L_tc_recycle_frame_loop_0560:
 19681 0000D8EC 4883F900                	cmp rcx, 0
 19682 0000D8F0 7413                    	je .L_tc_recycle_frame_done_0560
 19683 0000D8F2 488B32                  	mov rsi, qword [rdx]
 19684 0000D8F5 488933                  	mov qword [rbx], rsi
 19685 0000D8F8 48FFC9                  	dec rcx
 19686 0000D8FB 4883EB08                	sub rbx, 8
 19687 0000D8FF 4883EA08                	sub rdx, 8
 19688 0000D903 EBE7                    	jmp .L_tc_recycle_frame_loop_0560
 19689                                  .L_tc_recycle_frame_done_0560:
 19690 0000D905 488D6308                	lea rsp, [rbx + 8]
 19691 0000D909 5D                      	pop rbp
 19692 0000D90A FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 19693 0000D90D E981000000              	jmp .L_if_end_0304
 19694                                  .L_if_else_0304:
 19695                                  	; preparing a tail-call
 19696 0000D912 488B4520                	mov rax, PARAM(0)	; param len1
 19697 0000D916 50                      	push rax
 19698 0000D917 488B4510                	mov rax, ENV
 19699 0000D91B 488B00                  	mov rax, qword [rax + 8 * 0]
 19700 0000D91E 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str1
 19701 0000D921 50                      	push rax
 19702 0000D922 488B4528                	mov rax, PARAM(1)	; param len2
 19703 0000D926 50                      	push rax
 19704 0000D927 488B4510                	mov rax, ENV
 19705 0000D92B 488B00                  	mov rax, qword [rax + 8 * 0]
 19706 0000D92E 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var str2
 19707 0000D932 50                      	push rax
 19708 0000D933 48B8-                   	mov rax, L_constants + 2558
 19708 0000D935 [FE09000000000000] 
 19709 0000D93D 50                      	push rax
 19710 0000D93E 6A05                    	push 5	; arg count
 19711 0000D940 488B4510                	mov rax, ENV
 19712 0000D944 488B4008                	mov rax, qword [rax + 8 * 1]
 19713 0000D948 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 19714 0000D94B 488B00                  	mov rax, qword [rax]
 19715 0000D94E 803804                  	cmp byte [rax], T_closure
 19716 0000D951 0F85E6770000            	jne L_error_non_closure
 19717 0000D957 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19718                                  
 19719                                  	; recycling the current frame
 19720 0000D95A FF7508                  	push qword [rbp + 8 * 1]	; old return address
 19721 0000D95D FF7500                  	push qword [rbp]	; old frame-pointer
 19722 0000D960 B909000000              	mov rcx, 9
 19723 0000D965 488B5D18                	mov rbx, COUNT
 19724 0000D969 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 19725 0000D96E 488D55F8                	lea rdx, [rbp - 8]
 19726                                  .L_tc_recycle_frame_loop_0561:
 19727 0000D972 4883F900                	cmp rcx, 0
 19728 0000D976 7413                    	je .L_tc_recycle_frame_done_0561
 19729 0000D978 488B32                  	mov rsi, qword [rdx]
 19730 0000D97B 488933                  	mov qword [rbx], rsi
 19731 0000D97E 48FFC9                  	dec rcx
 19732 0000D981 4883EB08                	sub rbx, 8
 19733 0000D985 4883EA08                	sub rdx, 8
 19734 0000D989 EBE7                    	jmp .L_tc_recycle_frame_loop_0561
 19735                                  .L_tc_recycle_frame_done_0561:
 19736 0000D98B 488D6308                	lea rsp, [rbx + 8]
 19737 0000D98F 5D                      	pop rbp
 19738 0000D990 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 19739                                  .L_if_end_0304:
 19740 0000D993 C9                      	leave
 19741 0000D994 C22000                  	ret AND_KILL_FRAME(2)
 19742                                  .L_lambda_simple_end_0413:	; new closure is in rax
 19743 0000D997 803804                  	cmp byte [rax], T_closure
 19744 0000D99A 0F859D770000            	jne L_error_non_closure
 19745 0000D9A0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19746                                  
 19747                                  	; recycling the current frame
 19748 0000D9A3 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 19749 0000D9A6 FF7500                  	push qword [rbp]	; old frame-pointer
 19750 0000D9A9 B906000000              	mov rcx, 6
 19751 0000D9AE 488B5D18                	mov rbx, COUNT
 19752 0000D9B2 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 19753 0000D9B7 488D55F8                	lea rdx, [rbp - 8]
 19754                                  .L_tc_recycle_frame_loop_0562:
 19755 0000D9BB 4883F900                	cmp rcx, 0
 19756 0000D9BF 7413                    	je .L_tc_recycle_frame_done_0562
 19757 0000D9C1 488B32                  	mov rsi, qword [rdx]
 19758 0000D9C4 488933                  	mov qword [rbx], rsi
 19759 0000D9C7 48FFC9                  	dec rcx
 19760 0000D9CA 4883EB08                	sub rbx, 8
 19761 0000D9CE 4883EA08                	sub rdx, 8
 19762 0000D9D2 EBE7                    	jmp .L_tc_recycle_frame_loop_0562
 19763                                  .L_tc_recycle_frame_done_0562:
 19764 0000D9D4 488D6308                	lea rsp, [rbx + 8]
 19765 0000D9D8 5D                      	pop rbp
 19766 0000D9D9 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 19767 0000D9DC C9                      	leave
 19768 0000D9DD C22000                  	ret AND_KILL_FRAME(2)
 19769                                  .L_lambda_simple_end_0412:	; new closure is in rax
 19770 0000D9E0 50                      	push rax
 19771 0000D9E1 6A01                    	push 1	; arg count
 19772 0000D9E3 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19773 0000D9E8 E8F9770000              	call malloc
 19774 0000D9ED 50                      	push rax
 19775 0000D9EE BF08000000              	mov rdi, 8 * 1	; new rib
 19776 0000D9F3 E8EE770000              	call malloc
 19777 0000D9F8 50                      	push rax
 19778 0000D9F9 BF18000000              	mov rdi, 8 * 3	; extended env
 19779 0000D9FE E8E3770000              	call malloc
 19780 0000DA03 488B7D10                	mov rdi, ENV
 19781 0000DA07 BE00000000              	mov rsi, 0
 19782 0000DA0C BA01000000              	mov rdx, 1
 19783                                  .L_lambda_simple_env_loop_0414:	; ext_env[i + 1] <-- env[i]
 19784 0000DA11 4883FE02                	cmp rsi, 2
 19785 0000DA15 7410                    	je .L_lambda_simple_env_end_0414
 19786 0000DA17 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19787 0000DA1B 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19788 0000DA1F 48FFC6                  	inc rsi
 19789 0000DA22 48FFC2                  	inc rdx
 19790 0000DA25 EBEA                    	jmp .L_lambda_simple_env_loop_0414
 19791                                  .L_lambda_simple_env_end_0414:
 19792 0000DA27 5B                      	pop rbx
 19793 0000DA28 BE00000000              	mov rsi, 0
 19794                                  .L_lambda_simple_params_loop_0414:	; copy params
 19795 0000DA2D 4883FE01                	cmp rsi, 1
 19796 0000DA31 740E                    	je .L_lambda_simple_params_end_0414
 19797 0000DA33 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19798 0000DA38 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19799 0000DA3C 48FFC6                  	inc rsi
 19800 0000DA3F EBEC                    	jmp .L_lambda_simple_params_loop_0414
 19801                                  .L_lambda_simple_params_end_0414:
 19802 0000DA41 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 19803 0000DA44 4889C3                  	mov rbx, rax
 19804 0000DA47 58                      	pop rax
 19805 0000DA48 C60004                  	mov byte [rax], T_closure
 19806 0000DA4B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19807 0000DA4F 48C74009[5CDA0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0414
 19808 0000DA57 E9AF040000              	jmp .L_lambda_simple_end_0414
 19809                                  .L_lambda_simple_code_0414:	; lambda-simple body
 19810 0000DA5C 48837C241001            	cmp qword [rsp + 8 * 2], 1
 19811 0000DA62 740B                    	je .L_lambda_simple_arity_check_ok_0414
 19812 0000DA64 FF742410                	push qword [rsp + 8 * 2]
 19813 0000DA68 6A01                    	push 1
 19814 0000DA6A E930770000              	jmp L_error_incorrect_arity_simple
 19815                                  .L_lambda_simple_arity_check_ok_0414:
 19816 0000DA6F C8000000                	enter 0, 0
 19817                                  	; preparing a tail-call
 19818 0000DA73 48B8-                   	mov rax, L_constants + 2335
 19818 0000DA75 [1F09000000000000] 
 19819 0000DA7D 50                      	push rax
 19820 0000DA7E 6A01                    	push 1	; arg count
 19821 0000DA80 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19822 0000DA85 E85C770000              	call malloc
 19823 0000DA8A 50                      	push rax
 19824 0000DA8B BF08000000              	mov rdi, 8 * 1	; new rib
 19825 0000DA90 E851770000              	call malloc
 19826 0000DA95 50                      	push rax
 19827 0000DA96 BF20000000              	mov rdi, 8 * 4	; extended env
 19828 0000DA9B E846770000              	call malloc
 19829 0000DAA0 488B7D10                	mov rdi, ENV
 19830 0000DAA4 BE00000000              	mov rsi, 0
 19831 0000DAA9 BA01000000              	mov rdx, 1
 19832                                  .L_lambda_simple_env_loop_0415:	; ext_env[i + 1] <-- env[i]
 19833 0000DAAE 4883FE03                	cmp rsi, 3
 19834 0000DAB2 7410                    	je .L_lambda_simple_env_end_0415
 19835 0000DAB4 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19836 0000DAB8 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19837 0000DABC 48FFC6                  	inc rsi
 19838 0000DABF 48FFC2                  	inc rdx
 19839 0000DAC2 EBEA                    	jmp .L_lambda_simple_env_loop_0415
 19840                                  .L_lambda_simple_env_end_0415:
 19841 0000DAC4 5B                      	pop rbx
 19842 0000DAC5 BE00000000              	mov rsi, 0
 19843                                  .L_lambda_simple_params_loop_0415:	; copy params
 19844 0000DACA 4883FE01                	cmp rsi, 1
 19845 0000DACE 740E                    	je .L_lambda_simple_params_end_0415
 19846 0000DAD0 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19847 0000DAD5 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19848 0000DAD9 48FFC6                  	inc rsi
 19849 0000DADC EBEC                    	jmp .L_lambda_simple_params_loop_0415
 19850                                  .L_lambda_simple_params_end_0415:
 19851 0000DADE 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 19852 0000DAE1 4889C3                  	mov rbx, rax
 19853 0000DAE4 58                      	pop rax
 19854 0000DAE5 C60004                  	mov byte [rax], T_closure
 19855 0000DAE8 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19856 0000DAEC 48C74009[F9DA0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0415
 19857 0000DAF4 E9C9030000              	jmp .L_lambda_simple_end_0415
 19858                                  .L_lambda_simple_code_0415:	; lambda-simple body
 19859 0000DAF9 48837C241001            	cmp qword [rsp + 8 * 2], 1
 19860 0000DAFF 740B                    	je .L_lambda_simple_arity_check_ok_0415
 19861 0000DB01 FF742410                	push qword [rsp + 8 * 2]
 19862 0000DB05 6A01                    	push 1
 19863 0000DB07 E993760000              	jmp L_error_incorrect_arity_simple
 19864                                  .L_lambda_simple_arity_check_ok_0415:
 19865 0000DB0C C8000000                	enter 0, 0
 19866                                  
 19867 0000DB10 BF08000000              	mov rdi, 8
 19868 0000DB15 E8CC760000              	call malloc
 19869 0000DB1A 488B5D20                	mov rbx, PARAM(0)	; param run
 19870 0000DB1E 488918                  	mov [rax], rbx	; box run
 19871 0000DB21 48894520                	mov PARAM(0), rax	; replace param with box
 19872 0000DB25 48B8-                   	mov rax, sob_void
 19872 0000DB27 [0000000000000000] 
 19873                                  
 19874 0000DB2F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19875 0000DB34 E8AD760000              	call malloc
 19876 0000DB39 50                      	push rax
 19877 0000DB3A BF08000000              	mov rdi, 8 * 1	; new rib
 19878 0000DB3F E8A2760000              	call malloc
 19879 0000DB44 50                      	push rax
 19880 0000DB45 BF28000000              	mov rdi, 8 * 5	; extended env
 19881 0000DB4A E897760000              	call malloc
 19882 0000DB4F 488B7D10                	mov rdi, ENV
 19883 0000DB53 BE00000000              	mov rsi, 0
 19884 0000DB58 BA01000000              	mov rdx, 1
 19885                                  .L_lambda_simple_env_loop_0416:	; ext_env[i + 1] <-- env[i]
 19886 0000DB5D 4883FE04                	cmp rsi, 4
 19887 0000DB61 7410                    	je .L_lambda_simple_env_end_0416
 19888 0000DB63 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19889 0000DB67 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19890 0000DB6B 48FFC6                  	inc rsi
 19891 0000DB6E 48FFC2                  	inc rdx
 19892 0000DB71 EBEA                    	jmp .L_lambda_simple_env_loop_0416
 19893                                  .L_lambda_simple_env_end_0416:
 19894 0000DB73 5B                      	pop rbx
 19895 0000DB74 BE00000000              	mov rsi, 0
 19896                                  .L_lambda_simple_params_loop_0416:	; copy params
 19897 0000DB79 4883FE01                	cmp rsi, 1
 19898 0000DB7D 740E                    	je .L_lambda_simple_params_end_0416
 19899 0000DB7F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19900 0000DB84 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19901 0000DB88 48FFC6                  	inc rsi
 19902 0000DB8B EBEC                    	jmp .L_lambda_simple_params_loop_0416
 19903                                  .L_lambda_simple_params_end_0416:
 19904 0000DB8D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 19905 0000DB90 4889C3                  	mov rbx, rax
 19906 0000DB93 58                      	pop rax
 19907 0000DB94 C60004                  	mov byte [rax], T_closure
 19908 0000DB97 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19909 0000DB9B 48C74009[A8DB0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0416
 19910 0000DBA3 E953010000              	jmp .L_lambda_simple_end_0416
 19911                                  .L_lambda_simple_code_0416:	; lambda-simple body
 19912 0000DBA8 48837C241002            	cmp qword [rsp + 8 * 2], 2
 19913 0000DBAE 740B                    	je .L_lambda_simple_arity_check_ok_0416
 19914 0000DBB0 FF742410                	push qword [rsp + 8 * 2]
 19915 0000DBB4 6A02                    	push 2
 19916 0000DBB6 E9E4750000              	jmp L_error_incorrect_arity_simple
 19917                                  .L_lambda_simple_arity_check_ok_0416:
 19918 0000DBBB C8000000                	enter 0, 0
 19919                                  	; preparing a non-tail-call
 19920 0000DBBF 488B4528                	mov rax, PARAM(1)	; param strs
 19921 0000DBC3 50                      	push rax
 19922 0000DBC4 6A01                    	push 1	; arg count
 19923 0000DBC6 488B0425[3C1B0000]      	mov rax, qword [free_var_126]	; free var null?
 19924 0000DBCE 803805                  	cmp byte [rax], T_undefined
 19925 0000DBD1 0F84E2740000            	je L_error_fvar_undefined
 19926 0000DBD7 803804                  	cmp byte [rax], T_closure
 19927 0000DBDA 0F855D750000            	jne L_error_non_closure
 19928 0000DBE0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19929 0000DBE3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19930 0000DBE6 483D[02000000]          	cmp rax, sob_boolean_false
 19931 0000DBEC 0F8505010000            	jne .L_or_end_0051
 19932                                  	; preparing a non-tail-call
 19933                                  	; preparing a non-tail-call
 19934 0000DBF2 488B4528                	mov rax, PARAM(1)	; param strs
 19935 0000DBF6 50                      	push rax
 19936 0000DBF7 6A01                    	push 1	; arg count
 19937 0000DBF9 488B0425[74160000]      	mov rax, qword [free_var_54]	; free var car
 19938 0000DC01 803805                  	cmp byte [rax], T_undefined
 19939 0000DC04 0F84AF740000            	je L_error_fvar_undefined
 19940 0000DC0A 803804                  	cmp byte [rax], T_closure
 19941 0000DC0D 0F852A750000            	jne L_error_non_closure
 19942 0000DC13 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19943 0000DC16 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19944 0000DC19 50                      	push rax
 19945 0000DC1A 488B4520                	mov rax, PARAM(0)	; param str
 19946 0000DC1E 50                      	push rax
 19947 0000DC1F 6A02                    	push 2	; arg count
 19948 0000DC21 488B4510                	mov rax, ENV
 19949 0000DC25 488B4008                	mov rax, qword [rax + 8 * 1]
 19950 0000DC29 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var binary-string<=?
 19951 0000DC2C 803804                  	cmp byte [rax], T_closure
 19952 0000DC2F 0F8508750000            	jne L_error_non_closure
 19953 0000DC35 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19954 0000DC38 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19955 0000DC3B 483D[02000000]          	cmp rax, sob_boolean_false
 19956 0000DC41 0F84A6000000            	je .L_if_else_0305
 19957                                  	; preparing a tail-call
 19958                                  	; preparing a non-tail-call
 19959 0000DC47 488B4528                	mov rax, PARAM(1)	; param strs
 19960 0000DC4B 50                      	push rax
 19961 0000DC4C 6A01                    	push 1	; arg count
 19962 0000DC4E 488B0425[73170000]      	mov rax, qword [free_var_69]	; free var cdr
 19963 0000DC56 803805                  	cmp byte [rax], T_undefined
 19964 0000DC59 0F845A740000            	je L_error_fvar_undefined
 19965 0000DC5F 803804                  	cmp byte [rax], T_closure
 19966 0000DC62 0F85D5740000            	jne L_error_non_closure
 19967 0000DC68 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19968 0000DC6B FF5009                  	call SOB_CLOSURE_CODE(rax)
 19969 0000DC6E 50                      	push rax
 19970                                  	; preparing a non-tail-call
 19971 0000DC6F 488B4528                	mov rax, PARAM(1)	; param strs
 19972 0000DC73 50                      	push rax
 19973 0000DC74 6A01                    	push 1	; arg count
 19974 0000DC76 488B0425[74160000]      	mov rax, qword [free_var_54]	; free var car
 19975 0000DC7E 803805                  	cmp byte [rax], T_undefined
 19976 0000DC81 0F8432740000            	je L_error_fvar_undefined
 19977 0000DC87 803804                  	cmp byte [rax], T_closure
 19978 0000DC8A 0F85AD740000            	jne L_error_non_closure
 19979 0000DC90 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19980 0000DC93 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19981 0000DC96 50                      	push rax
 19982 0000DC97 6A02                    	push 2	; arg count
 19983 0000DC99 488B4510                	mov rax, ENV
 19984 0000DC9D 488B00                  	mov rax, qword [rax + 8 * 0]
 19985 0000DCA0 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 19986 0000DCA3 488B00                  	mov rax, qword [rax]
 19987 0000DCA6 803804                  	cmp byte [rax], T_closure
 19988 0000DCA9 0F858E740000            	jne L_error_non_closure
 19989 0000DCAF FF7001                  	push SOB_CLOSURE_ENV(rax)
 19990                                  
 19991                                  	; recycling the current frame
 19992 0000DCB2 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 19993 0000DCB5 FF7500                  	push qword [rbp]	; old frame-pointer
 19994 0000DCB8 B906000000              	mov rcx, 6
 19995 0000DCBD 488B5D18                	mov rbx, COUNT
 19996 0000DCC1 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 19997 0000DCC6 488D55F8                	lea rdx, [rbp - 8]
 19998                                  .L_tc_recycle_frame_loop_0563:
 19999 0000DCCA 4883F900                	cmp rcx, 0
 20000 0000DCCE 7413                    	je .L_tc_recycle_frame_done_0563
 20001 0000DCD0 488B32                  	mov rsi, qword [rdx]
 20002 0000DCD3 488933                  	mov qword [rbx], rsi
 20003 0000DCD6 48FFC9                  	dec rcx
 20004 0000DCD9 4883EB08                	sub rbx, 8
 20005 0000DCDD 4883EA08                	sub rdx, 8
 20006 0000DCE1 EBE7                    	jmp .L_tc_recycle_frame_loop_0563
 20007                                  .L_tc_recycle_frame_done_0563:
 20008 0000DCE3 488D6308                	lea rsp, [rbx + 8]
 20009 0000DCE7 5D                      	pop rbp
 20010 0000DCE8 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 20011 0000DCEB EB0A                    	jmp .L_if_end_0305
 20012                                  .L_if_else_0305:
 20013 0000DCED 48B8-                   	mov rax, L_constants + 2
 20013 0000DCEF [0200000000000000] 
 20014                                  .L_if_end_0305:
 20015                                  .L_or_end_0051:
 20016 0000DCF7 C9                      	leave
 20017 0000DCF8 C22000                  	ret AND_KILL_FRAME(2)
 20018                                  .L_lambda_simple_end_0416:	; new closure is in rax
 20019                                  
 20020 0000DCFB 50                      	push rax
 20021 0000DCFC 488B4520                	mov rax, PARAM(0)	; param run
 20022                                  
 20023 0000DD00 8F00                    	pop qword[rax]
 20024 0000DD02 48B8-                   	mov rax, sob_void
 20024 0000DD04 [0000000000000000] 
 20025                                  
 20026 0000DD0C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20027 0000DD11 E8D0740000              	call malloc
 20028 0000DD16 50                      	push rax
 20029 0000DD17 BF08000000              	mov rdi, 8 * 1	; new rib
 20030 0000DD1C E8C5740000              	call malloc
 20031 0000DD21 50                      	push rax
 20032 0000DD22 BF28000000              	mov rdi, 8 * 5	; extended env
 20033 0000DD27 E8BA740000              	call malloc
 20034 0000DD2C 488B7D10                	mov rdi, ENV
 20035 0000DD30 BE00000000              	mov rsi, 0
 20036 0000DD35 BA01000000              	mov rdx, 1
 20037                                  .L_lambda_opt_env_loop_008b:	; ext_env[i + 1] <-- env[i]
 20038 0000DD3A 4883FE04                	cmp rsi, 4
 20039 0000DD3E 7410                    	je .L_lambda_opt_env_end_008b
 20040 0000DD40 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20041 0000DD44 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20042 0000DD48 48FFC6                  	inc rsi
 20043 0000DD4B 48FFC2                  	inc rdx
 20044 0000DD4E EBEA                    	jmp .L_lambda_opt_env_loop_008b
 20045                                  .L_lambda_opt_env_end_008b:
 20046 0000DD50 5B                      	pop rbx
 20047 0000DD51 BE00000000              	mov rsi, 0
 20048                                  .L_lambda_opt_params_loop_008b:	; copy params
 20049 0000DD56 4883FE01                	cmp rsi, 1
 20050 0000DD5A 740E                    	je .L_lambda_opt_params_end_008b
 20051 0000DD5C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20052 0000DD61 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20053 0000DD65 48FFC6                  	inc rsi
 20054 0000DD68 EBEC                    	jmp .L_lambda_opt_params_loop_008b
 20055                                  .L_lambda_opt_params_end_008b:
 20056 0000DD6A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 20057 0000DD6D 4889C3                  	mov rbx, rax
 20058 0000DD70 58                      	pop rax
 20059 0000DD71 C60004                  	mov byte [rax], T_closure
 20060 0000DD74 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20061 0000DD78 48C74009[85DD0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_008b
 20062 0000DD80 E939010000              	jmp .L_lambda_opt_end_008b
 20063                                  .L_lambda_opt_code_008b:	; lambda-simple body
 20064 0000DD85 48837C241001            	cmp qword [rsp + 8 * 2], 1 ;	 check num of args
 20065 0000DD8B 740D                    	je .L_lambda_opt_arity_check_exact_008b ;	 if equal, go to exact arity
 20066 0000DD8D 7F42                    	jg .L_lambda_opt_arity_check_more_008b ;	 if greater than, go to arity more
 20067 0000DD8F FF742410                	push qword [rsp + 8 * 2] ;	 else, throw opt arity error
 20068 0000DD93 6A01                    	push 1
 20069 0000DD95 E919740000              	jmp L_error_incorrect_arity_opt
 20070                                  .L_lambda_opt_arity_check_exact_008b:
 20071 0000DD9A 488B442410              	mov rax, qword [rsp + 8 * 2] ;	 number of args
 20072 0000DD9F 488D5CC410              	lea rbx, [rsp + 8 * (2 + rax)] ;	 address of last element
 20073 0000DDA4 4883EC08                	sub rsp, 8
 20074 0000DDA8 488D0C24                	lea rcx, [rsp + 0] ;	 new start
 20075                                  .L_lambda_opt_shift_entry_008b:
 20076 0000DDAC 488B5108                	mov rdx, [rcx + 8]
 20077 0000DDB0 488911                  	mov [rcx], rdx
 20078 0000DDB3 4883C108                	add rcx, 8
 20079 0000DDB7 4839CB                  	cmp rbx, rcx
 20080 0000DDBA 75F0                    	jne .L_lambda_opt_shift_entry_008b
 20081                                  .L_lambda_opt_shift_exit_008b:
 20082 0000DDBC 48C703[01000000]        	mov qword[rbx], sob_nil ;	 place nil
 20083 0000DDC3 4883C001                	add rax, 1
 20084 0000DDC7 4889442410              	mov qword [rsp + 8 * 2], rax
 20085 0000DDCC E987000000              	jmp .L_lambda_opt_stack_adjusted_008b
 20086                                  .L_lambda_opt_arity_check_more_008b:
 20087 0000DDD1 48BA-                   	mov rdx, sob_nil ;	 base cdr
 20087 0000DDD3 [0100000000000000] 
 20088 0000DDDB 48837C241002            	cmp qword [rsp + 8 * 2], 2
 20089 0000DDE1 7451                    	je .L_lambda_opt_stack_shrink_loop_exit_008b
 20090                                  .L_lambda_opt_stack_shrink_loop_008b:
 20091 0000DDE3 BF11000000              	mov rdi, (1 + 8 + 8)
 20092 0000DDE8 E8F9730000              	call malloc
 20093 0000DDED C60021                  	mov byte[rax], T_pair
 20094 0000DDF0 48895009                	mov SOB_PAIR_CDR(rax), rdx
 20095 0000DDF4 4889C2                  	mov rdx, rax
 20096 0000DDF7 488B442410              	mov rax, qword [rsp + 8 * 2]
 20097 0000DDFC 488B5CC410              	mov rbx, qword [rsp + 8 * (2 + rax)]
 20098 0000DE01 48895A01                	mov SOB_PAIR_CAR(rdx), rbx
 20099 0000DE05 488D5CC408              	lea rbx, [rsp + 8 * (2 + rax - 1)]
 20100                                  .L_lambda_opt_extra_shift_process_008b:
 20101 0000DE0A 488B0B                  	mov rcx, [rbx]
 20102 0000DE0D 48894B08                	mov [rbx + 8], rcx
 20103 0000DE11 4883EB08                	sub rbx, 8
 20104 0000DE15 4839DC                  	cmp rsp, rbx
 20105 0000DE18 7EF0                    	jle .L_lambda_opt_extra_shift_process_008b
 20106                                  .L_lambda_opt_extra_shift_process_end_008b:
 20107 0000DE1A 4883C408                	add rsp, 8
 20108 0000DE1E 488B5C2410              	mov rbx, [rsp + 8 * 2]
 20109 0000DE23 4883EB01                	sub rbx, 1
 20110 0000DE27 48895C2410              	mov [rsp + 8 * 2], rbx
 20111 0000DE2C 48837C241002            	cmp qword [rsp + 8 * 2], 2
 20112 0000DE32 7FAF                    	jg .L_lambda_opt_stack_shrink_loop_008b
 20113                                  .L_lambda_opt_stack_shrink_loop_exit_008b:
 20114 0000DE34 488B4C2410              	mov rcx, [rsp + 8 * 2]
 20115 0000DE39 488B5CCC10              	mov rbx, qword [rsp + 8 * (2 + rcx)]
 20116 0000DE3E BF11000000              	mov rdi, (1 + 8 + 8)
 20117 0000DE43 E89E730000              	call malloc
 20118 0000DE48 C60021                  	mov byte[rax], T_pair
 20119 0000DE4B 48895009                	mov SOB_PAIR_CDR(rax), rdx
 20120 0000DE4F 48895801                	mov SOB_PAIR_CAR(rax), rbx
 20121 0000DE53 488944CC10              	mov [rsp + 8 * (2 + rcx)], rax
 20122                                  .L_lambda_opt_stack_adjusted_008b:
 20123 0000DE58 C8000000                	enter 0, 0
 20124                                  	; preparing a tail-call
 20125 0000DE5C 488B4528                	mov rax, PARAM(1)	; param strs
 20126 0000DE60 50                      	push rax
 20127 0000DE61 488B4520                	mov rax, PARAM(0)	; param str
 20128 0000DE65 50                      	push rax
 20129 0000DE66 6A02                    	push 2	; arg count
 20130 0000DE68 488B4510                	mov rax, ENV
 20131 0000DE6C 488B00                  	mov rax, qword [rax + 8 * 0]
 20132 0000DE6F 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 20133 0000DE72 488B00                  	mov rax, qword [rax]
 20134 0000DE75 803804                  	cmp byte [rax], T_closure
 20135 0000DE78 0F85BF720000            	jne L_error_non_closure
 20136 0000DE7E FF7001                  	push SOB_CLOSURE_ENV(rax)
 20137                                  
 20138                                  	; recycling the current frame
 20139 0000DE81 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 20140 0000DE84 FF7500                  	push qword [rbp]	; old frame-pointer
 20141 0000DE87 B906000000              	mov rcx, 6
 20142 0000DE8C 488B5D18                	mov rbx, COUNT
 20143 0000DE90 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 20144 0000DE95 488D55F8                	lea rdx, [rbp - 8]
 20145                                  .L_tc_recycle_frame_loop_0564:
 20146 0000DE99 4883F900                	cmp rcx, 0
 20147 0000DE9D 7413                    	je .L_tc_recycle_frame_done_0564
 20148 0000DE9F 488B32                  	mov rsi, qword [rdx]
 20149 0000DEA2 488933                  	mov qword [rbx], rsi
 20150 0000DEA5 48FFC9                  	dec rcx
 20151 0000DEA8 4883EB08                	sub rbx, 8
 20152 0000DEAC 4883EA08                	sub rdx, 8
 20153 0000DEB0 EBE7                    	jmp .L_tc_recycle_frame_loop_0564
 20154                                  .L_tc_recycle_frame_done_0564:
 20155 0000DEB2 488D6308                	lea rsp, [rbx + 8]
 20156 0000DEB6 5D                      	pop rbp
 20157 0000DEB7 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 20158 0000DEBA C9                      	leave
 20159 0000DEBB C22000                  	ret AND_KILL_FRAME(2)
 20160                                  .L_lambda_opt_end_008b:	; new closure is in rax
 20161 0000DEBE C9                      	leave
 20162 0000DEBF C21800                  	ret AND_KILL_FRAME(1)
 20163                                  .L_lambda_simple_end_0415:	; new closure is in rax
 20164 0000DEC2 803804                  	cmp byte [rax], T_closure
 20165 0000DEC5 0F8572720000            	jne L_error_non_closure
 20166 0000DECB FF7001                  	push SOB_CLOSURE_ENV(rax)
 20167                                  
 20168                                  	; recycling the current frame
 20169 0000DECE FF7508                  	push qword [rbp + 8 * 1]	; old return address
 20170 0000DED1 FF7500                  	push qword [rbp]	; old frame-pointer
 20171 0000DED4 B905000000              	mov rcx, 5
 20172 0000DED9 488B5D18                	mov rbx, COUNT
 20173 0000DEDD 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 20174 0000DEE2 488D55F8                	lea rdx, [rbp - 8]
 20175                                  .L_tc_recycle_frame_loop_0565:
 20176 0000DEE6 4883F900                	cmp rcx, 0
 20177 0000DEEA 7413                    	je .L_tc_recycle_frame_done_0565
 20178 0000DEEC 488B32                  	mov rsi, qword [rdx]
 20179 0000DEEF 488933                  	mov qword [rbx], rsi
 20180 0000DEF2 48FFC9                  	dec rcx
 20181 0000DEF5 4883EB08                	sub rbx, 8
 20182 0000DEF9 4883EA08                	sub rdx, 8
 20183 0000DEFD EBE7                    	jmp .L_tc_recycle_frame_loop_0565
 20184                                  .L_tc_recycle_frame_done_0565:
 20185 0000DEFF 488D6308                	lea rsp, [rbx + 8]
 20186 0000DF03 5D                      	pop rbp
 20187 0000DF04 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 20188 0000DF07 C9                      	leave
 20189 0000DF08 C21800                  	ret AND_KILL_FRAME(1)
 20190                                  .L_lambda_simple_end_0414:	; new closure is in rax
 20191 0000DF0B 803804                  	cmp byte [rax], T_closure
 20192 0000DF0E 0F8529720000            	jne L_error_non_closure
 20193 0000DF14 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20194                                  
 20195                                  	; recycling the current frame
 20196 0000DF17 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 20197 0000DF1A FF7500                  	push qword [rbp]	; old frame-pointer
 20198 0000DF1D B905000000              	mov rcx, 5
 20199 0000DF22 488B5D18                	mov rbx, COUNT
 20200 0000DF26 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 20201 0000DF2B 488D55F8                	lea rdx, [rbp - 8]
 20202                                  .L_tc_recycle_frame_loop_0566:
 20203 0000DF2F 4883F900                	cmp rcx, 0
 20204 0000DF33 7413                    	je .L_tc_recycle_frame_done_0566
 20205 0000DF35 488B32                  	mov rsi, qword [rdx]
 20206 0000DF38 488933                  	mov qword [rbx], rsi
 20207 0000DF3B 48FFC9                  	dec rcx
 20208 0000DF3E 4883EB08                	sub rbx, 8
 20209 0000DF42 4883EA08                	sub rdx, 8
 20210 0000DF46 EBE7                    	jmp .L_tc_recycle_frame_loop_0566
 20211                                  .L_tc_recycle_frame_done_0566:
 20212 0000DF48 488D6308                	lea rsp, [rbx + 8]
 20213 0000DF4C 5D                      	pop rbp
 20214 0000DF4D FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 20215 0000DF50 C9                      	leave
 20216 0000DF51 C21800                  	ret AND_KILL_FRAME(1)
 20217                                  .L_lambda_simple_end_0410:	; new closure is in rax
 20218 0000DF54 803804                  	cmp byte [rax], T_closure
 20219 0000DF57 0F85E0710000            	jne L_error_non_closure
 20220 0000DF5D FF7001                  	push SOB_CLOSURE_ENV(rax)
 20221                                  
 20222                                  	; recycling the current frame
 20223 0000DF60 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 20224 0000DF63 FF7500                  	push qword [rbp]	; old frame-pointer
 20225 0000DF66 B905000000              	mov rcx, 5
 20226 0000DF6B 488B5D18                	mov rbx, COUNT
 20227 0000DF6F 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 20228 0000DF74 488D55F8                	lea rdx, [rbp - 8]
 20229                                  .L_tc_recycle_frame_loop_0567:
 20230 0000DF78 4883F900                	cmp rcx, 0
 20231 0000DF7C 7413                    	je .L_tc_recycle_frame_done_0567
 20232 0000DF7E 488B32                  	mov rsi, qword [rdx]
 20233 0000DF81 488933                  	mov qword [rbx], rsi
 20234 0000DF84 48FFC9                  	dec rcx
 20235 0000DF87 4883EB08                	sub rbx, 8
 20236 0000DF8B 4883EA08                	sub rdx, 8
 20237 0000DF8F EBE7                    	jmp .L_tc_recycle_frame_loop_0567
 20238                                  .L_tc_recycle_frame_done_0567:
 20239 0000DF91 488D6308                	lea rsp, [rbx + 8]
 20240 0000DF95 5D                      	pop rbp
 20241 0000DF96 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 20242 0000DF99 C9                      	leave
 20243 0000DF9A C22000                  	ret AND_KILL_FRAME(2)
 20244                                  .L_lambda_simple_end_040f:	; new closure is in rax
 20245 0000DF9D 50                      	push rax
 20246 0000DF9E 6A01                    	push 1	; arg count
 20247 0000DFA0 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20248 0000DFA5 E83C720000              	call malloc
 20249 0000DFAA 50                      	push rax
 20250 0000DFAB BF00000000              	mov rdi, 8 * 0	; new rib
 20251 0000DFB0 E831720000              	call malloc
 20252 0000DFB5 50                      	push rax
 20253 0000DFB6 BF08000000              	mov rdi, 8 * 1	; extended env
 20254 0000DFBB E826720000              	call malloc
 20255 0000DFC0 488B7D10                	mov rdi, ENV
 20256 0000DFC4 BE00000000              	mov rsi, 0
 20257 0000DFC9 BA01000000              	mov rdx, 1
 20258                                  .L_lambda_simple_env_loop_0417:	; ext_env[i + 1] <-- env[i]
 20259 0000DFCE 4883FE00                	cmp rsi, 0
 20260 0000DFD2 7410                    	je .L_lambda_simple_env_end_0417
 20261 0000DFD4 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20262 0000DFD8 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20263 0000DFDC 48FFC6                  	inc rsi
 20264 0000DFDF 48FFC2                  	inc rdx
 20265 0000DFE2 EBEA                    	jmp .L_lambda_simple_env_loop_0417
 20266                                  .L_lambda_simple_env_end_0417:
 20267 0000DFE4 5B                      	pop rbx
 20268 0000DFE5 BE00000000              	mov rsi, 0
 20269                                  .L_lambda_simple_params_loop_0417:	; copy params
 20270 0000DFEA 4883FE00                	cmp rsi, 0
 20271 0000DFEE 740E                    	je .L_lambda_simple_params_end_0417
 20272 0000DFF0 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20273 0000DFF5 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20274 0000DFF9 48FFC6                  	inc rsi
 20275 0000DFFC EBEC                    	jmp .L_lambda_simple_params_loop_0417
 20276                                  .L_lambda_simple_params_end_0417:
 20277 0000DFFE 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 20278 0000E001 4889C3                  	mov rbx, rax
 20279 0000E004 58                      	pop rax
 20280 0000E005 C60004                  	mov byte [rax], T_closure
 20281 0000E008 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20282 0000E00C 48C74009[19E00000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0417
 20283 0000E014 E96B010000              	jmp .L_lambda_simple_end_0417
 20284                                  .L_lambda_simple_code_0417:	; lambda-simple body
 20285 0000E019 48837C241001            	cmp qword [rsp + 8 * 2], 1
 20286 0000E01F 740B                    	je .L_lambda_simple_arity_check_ok_0417
 20287 0000E021 FF742410                	push qword [rsp + 8 * 2]
 20288 0000E025 6A01                    	push 1
 20289 0000E027 E973710000              	jmp L_error_incorrect_arity_simple
 20290                                  .L_lambda_simple_arity_check_ok_0417:
 20291 0000E02C C8000000                	enter 0, 0
 20292                                  	; preparing a non-tail-call
 20293 0000E030 488B0425[2E180000]      	mov rax, qword [free_var_80]	; free var char=?
 20294 0000E038 803805                  	cmp byte [rax], T_undefined
 20295 0000E03B 0F8478700000            	je L_error_fvar_undefined
 20296 0000E041 50                      	push rax
 20297 0000E042 488B0425[1D180000]      	mov rax, qword [free_var_79]	; free var char<?
 20298 0000E04A 803805                  	cmp byte [rax], T_undefined
 20299 0000E04D 0F8466700000            	je L_error_fvar_undefined
 20300 0000E053 50                      	push rax
 20301 0000E054 6A02                    	push 2	; arg count
 20302 0000E056 488B4520                	mov rax, PARAM(0)	; param make-string<=?
 20303 0000E05A 803804                  	cmp byte [rax], T_closure
 20304 0000E05D 0F85DA700000            	jne L_error_non_closure
 20305 0000E063 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20306 0000E066 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20307 0000E069 48890425[7E1D0000]      	mov qword [free_var_160], rax	; free var string<=?
 20308 0000E071 803805                  	cmp byte [rax], T_undefined
 20309 0000E074 0F843F700000            	je L_error_fvar_undefined
 20310 0000E07A 48B8-                   	mov rax, sob_void
 20310 0000E07C [0000000000000000] 
 20311                                  
 20312                                  	; preparing a non-tail-call
 20313 0000E084 488B0425[B7170000]      	mov rax, qword [free_var_73]	; free var char-ci=?
 20314 0000E08C 803805                  	cmp byte [rax], T_undefined
 20315 0000E08F 0F8424700000            	je L_error_fvar_undefined
 20316 0000E095 50                      	push rax
 20317 0000E096 488B0425[A6170000]      	mov rax, qword [free_var_72]	; free var char-ci<?
 20318 0000E09E 803805                  	cmp byte [rax], T_undefined
 20319 0000E0A1 0F8412700000            	je L_error_fvar_undefined
 20320 0000E0A7 50                      	push rax
 20321 0000E0A8 6A02                    	push 2	; arg count
 20322 0000E0AA 488B4520                	mov rax, PARAM(0)	; param make-string<=?
 20323 0000E0AE 803804                  	cmp byte [rax], T_closure
 20324 0000E0B1 0F8586700000            	jne L_error_non_closure
 20325 0000E0B7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20326 0000E0BA FF5009                  	call SOB_CLOSURE_CODE(rax)
 20327 0000E0BD 48890425[B21C0000]      	mov qword [free_var_148], rax	; free var string-ci<=?
 20328 0000E0C5 803805                  	cmp byte [rax], T_undefined
 20329 0000E0C8 0F84EB6F0000            	je L_error_fvar_undefined
 20330 0000E0CE 48B8-                   	mov rax, sob_void
 20330 0000E0D0 [0000000000000000] 
 20331                                  
 20332                                  	; preparing a non-tail-call
 20333 0000E0D8 488B0425[2E180000]      	mov rax, qword [free_var_80]	; free var char=?
 20334 0000E0E0 803805                  	cmp byte [rax], T_undefined
 20335 0000E0E3 0F84D06F0000            	je L_error_fvar_undefined
 20336 0000E0E9 50                      	push rax
 20337 0000E0EA 488B0425[50180000]      	mov rax, qword [free_var_82]	; free var char>?
 20338 0000E0F2 803805                  	cmp byte [rax], T_undefined
 20339 0000E0F5 0F84BE6F0000            	je L_error_fvar_undefined
 20340 0000E0FB 50                      	push rax
 20341 0000E0FC 6A02                    	push 2	; arg count
 20342 0000E0FE 488B4520                	mov rax, PARAM(0)	; param make-string<=?
 20343 0000E102 803804                  	cmp byte [rax], T_closure
 20344 0000E105 0F8532700000            	jne L_error_non_closure
 20345 0000E10B FF7001                  	push SOB_CLOSURE_ENV(rax)
 20346 0000E10E FF5009                  	call SOB_CLOSURE_CODE(rax)
 20347 0000E111 48890425[B11D0000]      	mov qword [free_var_163], rax	; free var string>=?
 20348 0000E119 803805                  	cmp byte [rax], T_undefined
 20349 0000E11C 0F84976F0000            	je L_error_fvar_undefined
 20350 0000E122 48B8-                   	mov rax, sob_void
 20350 0000E124 [0000000000000000] 
 20351                                  
 20352                                  	; preparing a non-tail-call
 20353 0000E12C 488B0425[B7170000]      	mov rax, qword [free_var_73]	; free var char-ci=?
 20354 0000E134 803805                  	cmp byte [rax], T_undefined
 20355 0000E137 0F847C6F0000            	je L_error_fvar_undefined
 20356 0000E13D 50                      	push rax
 20357 0000E13E 488B0425[D9170000]      	mov rax, qword [free_var_75]	; free var char-ci>?
 20358 0000E146 803805                  	cmp byte [rax], T_undefined
 20359 0000E149 0F846A6F0000            	je L_error_fvar_undefined
 20360 0000E14F 50                      	push rax
 20361 0000E150 6A02                    	push 2	; arg count
 20362 0000E152 488B4520                	mov rax, PARAM(0)	; param make-string<=?
 20363 0000E156 803804                  	cmp byte [rax], T_closure
 20364 0000E159 0F85DE6F0000            	jne L_error_non_closure
 20365 0000E15F FF7001                  	push SOB_CLOSURE_ENV(rax)
 20366 0000E162 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20367 0000E165 48890425[E51C0000]      	mov qword [free_var_151], rax	; free var string-ci>=?
 20368 0000E16D 803805                  	cmp byte [rax], T_undefined
 20369 0000E170 0F84436F0000            	je L_error_fvar_undefined
 20370 0000E176 48B8-                   	mov rax, sob_void
 20370 0000E178 [0000000000000000] 
 20371 0000E180 C9                      	leave
 20372 0000E181 C21800                  	ret AND_KILL_FRAME(1)
 20373                                  .L_lambda_simple_end_0417:	; new closure is in rax
 20374 0000E184 803804                  	cmp byte [rax], T_closure
 20375 0000E187 0F85B06F0000            	jne L_error_non_closure
 20376 0000E18D FF7001                  	push SOB_CLOSURE_ENV(rax)
 20377 0000E190 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20378                                  
 20379 0000E193 4889C7                  	mov rdi, rax
 20380 0000E196 E8A0720000              	call print_sexpr_if_not_void
 20381                                  
 20382                                  	; preparing a non-tail-call
 20383 0000E19B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20384 0000E1A0 E841700000              	call malloc
 20385 0000E1A5 50                      	push rax
 20386 0000E1A6 BF00000000              	mov rdi, 8 * 0	; new rib
 20387 0000E1AB E836700000              	call malloc
 20388 0000E1B0 50                      	push rax
 20389 0000E1B1 BF08000000              	mov rdi, 8 * 1	; extended env
 20390 0000E1B6 E82B700000              	call malloc
 20391 0000E1BB 488B7D10                	mov rdi, ENV
 20392 0000E1BF BE00000000              	mov rsi, 0
 20393 0000E1C4 BA01000000              	mov rdx, 1
 20394                                  .L_lambda_simple_env_loop_0418:	; ext_env[i + 1] <-- env[i]
 20395 0000E1C9 4883FE00                	cmp rsi, 0
 20396 0000E1CD 7410                    	je .L_lambda_simple_env_end_0418
 20397 0000E1CF 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20398 0000E1D3 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20399 0000E1D7 48FFC6                  	inc rsi
 20400 0000E1DA 48FFC2                  	inc rdx
 20401 0000E1DD EBEA                    	jmp .L_lambda_simple_env_loop_0418
 20402                                  .L_lambda_simple_env_end_0418:
 20403 0000E1DF 5B                      	pop rbx
 20404 0000E1E0 BE00000000              	mov rsi, 0
 20405                                  .L_lambda_simple_params_loop_0418:	; copy params
 20406 0000E1E5 4883FE00                	cmp rsi, 0
 20407 0000E1E9 740E                    	je .L_lambda_simple_params_end_0418
 20408 0000E1EB 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20409 0000E1F0 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20410 0000E1F4 48FFC6                  	inc rsi
 20411 0000E1F7 EBEC                    	jmp .L_lambda_simple_params_loop_0418
 20412                                  .L_lambda_simple_params_end_0418:
 20413 0000E1F9 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 20414 0000E1FC 4889C3                  	mov rbx, rax
 20415 0000E1FF 58                      	pop rax
 20416 0000E200 C60004                  	mov byte [rax], T_closure
 20417 0000E203 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20418 0000E207 48C74009[14E20000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0418
 20419 0000E20F E9540B0000              	jmp .L_lambda_simple_end_0418
 20420                                  .L_lambda_simple_code_0418:	; lambda-simple body
 20421 0000E214 48837C241001            	cmp qword [rsp + 8 * 2], 1
 20422 0000E21A 740B                    	je .L_lambda_simple_arity_check_ok_0418
 20423 0000E21C FF742410                	push qword [rsp + 8 * 2]
 20424 0000E220 6A01                    	push 1
 20425 0000E222 E9786F0000              	jmp L_error_incorrect_arity_simple
 20426                                  .L_lambda_simple_arity_check_ok_0418:
 20427 0000E227 C8000000                	enter 0, 0
 20428                                  	; preparing a tail-call
 20429 0000E22B 48B8-                   	mov rax, L_constants + 2335
 20429 0000E22D [1F09000000000000] 
 20430 0000E235 50                      	push rax
 20431 0000E236 6A01                    	push 1	; arg count
 20432 0000E238 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20433 0000E23D E8A46F0000              	call malloc
 20434 0000E242 50                      	push rax
 20435 0000E243 BF08000000              	mov rdi, 8 * 1	; new rib
 20436 0000E248 E8996F0000              	call malloc
 20437 0000E24D 50                      	push rax
 20438 0000E24E BF10000000              	mov rdi, 8 * 2	; extended env
 20439 0000E253 E88E6F0000              	call malloc
 20440 0000E258 488B7D10                	mov rdi, ENV
 20441 0000E25C BE00000000              	mov rsi, 0
 20442 0000E261 BA01000000              	mov rdx, 1
 20443                                  .L_lambda_simple_env_loop_0419:	; ext_env[i + 1] <-- env[i]
 20444 0000E266 4883FE01                	cmp rsi, 1
 20445 0000E26A 7410                    	je .L_lambda_simple_env_end_0419
 20446 0000E26C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20447 0000E270 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20448 0000E274 48FFC6                  	inc rsi
 20449 0000E277 48FFC2                  	inc rdx
 20450 0000E27A EBEA                    	jmp .L_lambda_simple_env_loop_0419
 20451                                  .L_lambda_simple_env_end_0419:
 20452 0000E27C 5B                      	pop rbx
 20453 0000E27D BE00000000              	mov rsi, 0
 20454                                  .L_lambda_simple_params_loop_0419:	; copy params
 20455 0000E282 4883FE01                	cmp rsi, 1
 20456 0000E286 740E                    	je .L_lambda_simple_params_end_0419
 20457 0000E288 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20458 0000E28D 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20459 0000E291 48FFC6                  	inc rsi
 20460 0000E294 EBEC                    	jmp .L_lambda_simple_params_loop_0419
 20461                                  .L_lambda_simple_params_end_0419:
 20462 0000E296 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 20463 0000E299 4889C3                  	mov rbx, rax
 20464 0000E29C 58                      	pop rax
 20465 0000E29D C60004                  	mov byte [rax], T_closure
 20466 0000E2A0 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20467 0000E2A4 48C74009[B1E20000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0419
 20468 0000E2AC E96E0A0000              	jmp .L_lambda_simple_end_0419
 20469                                  .L_lambda_simple_code_0419:	; lambda-simple body
 20470 0000E2B1 48837C241001            	cmp qword [rsp + 8 * 2], 1
 20471 0000E2B7 740B                    	je .L_lambda_simple_arity_check_ok_0419
 20472 0000E2B9 FF742410                	push qword [rsp + 8 * 2]
 20473 0000E2BD 6A01                    	push 1
 20474 0000E2BF E9DB6E0000              	jmp L_error_incorrect_arity_simple
 20475                                  .L_lambda_simple_arity_check_ok_0419:
 20476 0000E2C4 C8000000                	enter 0, 0
 20477                                  
 20478 0000E2C8 BF08000000              	mov rdi, 8
 20479 0000E2CD E8146F0000              	call malloc
 20480 0000E2D2 488B5D20                	mov rbx, PARAM(0)	; param run
 20481 0000E2D6 488918                  	mov [rax], rbx	; box run
 20482 0000E2D9 48894520                	mov PARAM(0), rax	; replace param with box
 20483 0000E2DD 48B8-                   	mov rax, sob_void
 20483 0000E2DF [0000000000000000] 
 20484                                  
 20485 0000E2E7 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20486 0000E2EC E8F56E0000              	call malloc
 20487 0000E2F1 50                      	push rax
 20488 0000E2F2 BF08000000              	mov rdi, 8 * 1	; new rib
 20489 0000E2F7 E8EA6E0000              	call malloc
 20490 0000E2FC 50                      	push rax
 20491 0000E2FD BF18000000              	mov rdi, 8 * 3	; extended env
 20492 0000E302 E8DF6E0000              	call malloc
 20493 0000E307 488B7D10                	mov rdi, ENV
 20494 0000E30B BE00000000              	mov rsi, 0
 20495 0000E310 BA01000000              	mov rdx, 1
 20496                                  .L_lambda_simple_env_loop_041a:	; ext_env[i + 1] <-- env[i]
 20497 0000E315 4883FE02                	cmp rsi, 2
 20498 0000E319 7410                    	je .L_lambda_simple_env_end_041a
 20499 0000E31B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20500 0000E31F 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20501 0000E323 48FFC6                  	inc rsi
 20502 0000E326 48FFC2                  	inc rdx
 20503 0000E329 EBEA                    	jmp .L_lambda_simple_env_loop_041a
 20504                                  .L_lambda_simple_env_end_041a:
 20505 0000E32B 5B                      	pop rbx
 20506 0000E32C BE00000000              	mov rsi, 0
 20507                                  .L_lambda_simple_params_loop_041a:	; copy params
 20508 0000E331 4883FE01                	cmp rsi, 1
 20509 0000E335 740E                    	je .L_lambda_simple_params_end_041a
 20510 0000E337 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20511 0000E33C 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20512 0000E340 48FFC6                  	inc rsi
 20513 0000E343 EBEC                    	jmp .L_lambda_simple_params_loop_041a
 20514                                  .L_lambda_simple_params_end_041a:
 20515 0000E345 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 20516 0000E348 4889C3                  	mov rbx, rax
 20517 0000E34B 58                      	pop rax
 20518 0000E34C C60004                  	mov byte [rax], T_closure
 20519 0000E34F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20520 0000E353 48C74009[60E30000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_041a
 20521 0000E35B E9BB010000              	jmp .L_lambda_simple_end_041a
 20522                                  .L_lambda_simple_code_041a:	; lambda-simple body
 20523 0000E360 48837C241004            	cmp qword [rsp + 8 * 2], 4
 20524 0000E366 740B                    	je .L_lambda_simple_arity_check_ok_041a
 20525 0000E368 FF742410                	push qword [rsp + 8 * 2]
 20526 0000E36C 6A04                    	push 4
 20527 0000E36E E92C6E0000              	jmp L_error_incorrect_arity_simple
 20528                                  .L_lambda_simple_arity_check_ok_041a:
 20529 0000E373 C8000000                	enter 0, 0
 20530                                  	; preparing a non-tail-call
 20531 0000E377 488B4538                	mov rax, PARAM(3)	; param len
 20532 0000E37B 50                      	push rax
 20533 0000E37C 488B4520                	mov rax, PARAM(0)	; param i
 20534 0000E380 50                      	push rax
 20535 0000E381 6A02                    	push 2	; arg count
 20536 0000E383 488B0425[44130000]      	mov rax, qword [free_var_6]	; free var =
 20537 0000E38B 803805                  	cmp byte [rax], T_undefined
 20538 0000E38E 0F84256D0000            	je L_error_fvar_undefined
 20539 0000E394 803804                  	cmp byte [rax], T_closure
 20540 0000E397 0F85A06D0000            	jne L_error_non_closure
 20541 0000E39D FF7001                  	push SOB_CLOSURE_ENV(rax)
 20542 0000E3A0 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20543 0000E3A3 483D[02000000]          	cmp rax, sob_boolean_false
 20544 0000E3A9 0F8568010000            	jne .L_or_end_0052
 20545                                  	; preparing a non-tail-call
 20546 0000E3AF 488B4538                	mov rax, PARAM(3)	; param len
 20547 0000E3B3 50                      	push rax
 20548 0000E3B4 488B4520                	mov rax, PARAM(0)	; param i
 20549 0000E3B8 50                      	push rax
 20550 0000E3B9 6A02                    	push 2	; arg count
 20551 0000E3BB 488B0425[22130000]      	mov rax, qword [free_var_4]	; free var <
 20552 0000E3C3 803805                  	cmp byte [rax], T_undefined
 20553 0000E3C6 0F84ED6C0000            	je L_error_fvar_undefined
 20554 0000E3CC 803804                  	cmp byte [rax], T_closure
 20555 0000E3CF 0F85686D0000            	jne L_error_non_closure
 20556 0000E3D5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20557 0000E3D8 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20558 0000E3DB 483D[02000000]          	cmp rax, sob_boolean_false
 20559 0000E3E1 0F8426010000            	je .L_if_else_0307
 20560                                  	; preparing a non-tail-call
 20561                                  	; preparing a non-tail-call
 20562 0000E3E7 488B4520                	mov rax, PARAM(0)	; param i
 20563 0000E3EB 50                      	push rax
 20564 0000E3EC 488B4530                	mov rax, PARAM(2)	; param str2
 20565 0000E3F0 50                      	push rax
 20566 0000E3F1 6A02                    	push 2	; arg count
 20567 0000E3F3 488B0425[291D0000]      	mov rax, qword [free_var_155]	; free var string-ref
 20568 0000E3FB 803805                  	cmp byte [rax], T_undefined
 20569 0000E3FE 0F84B56C0000            	je L_error_fvar_undefined
 20570 0000E404 803804                  	cmp byte [rax], T_closure
 20571 0000E407 0F85306D0000            	jne L_error_non_closure
 20572 0000E40D FF7001                  	push SOB_CLOSURE_ENV(rax)
 20573 0000E410 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20574 0000E413 50                      	push rax
 20575                                  	; preparing a non-tail-call
 20576 0000E414 488B4520                	mov rax, PARAM(0)	; param i
 20577 0000E418 50                      	push rax
 20578 0000E419 488B4528                	mov rax, PARAM(1)	; param str1
 20579 0000E41D 50                      	push rax
 20580 0000E41E 6A02                    	push 2	; arg count
 20581 0000E420 488B0425[291D0000]      	mov rax, qword [free_var_155]	; free var string-ref
 20582 0000E428 803805                  	cmp byte [rax], T_undefined
 20583 0000E42B 0F84886C0000            	je L_error_fvar_undefined
 20584 0000E431 803804                  	cmp byte [rax], T_closure
 20585 0000E434 0F85036D0000            	jne L_error_non_closure
 20586 0000E43A FF7001                  	push SOB_CLOSURE_ENV(rax)
 20587 0000E43D FF5009                  	call SOB_CLOSURE_CODE(rax)
 20588 0000E440 50                      	push rax
 20589 0000E441 6A02                    	push 2	; arg count
 20590 0000E443 488B4510                	mov rax, ENV
 20591 0000E447 488B4008                	mov rax, qword [rax + 8 * 1]
 20592 0000E44B 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var char=?
 20593 0000E44E 803804                  	cmp byte [rax], T_closure
 20594 0000E451 0F85E66C0000            	jne L_error_non_closure
 20595 0000E457 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20596 0000E45A FF5009                  	call SOB_CLOSURE_CODE(rax)
 20597 0000E45D 483D[02000000]          	cmp rax, sob_boolean_false
 20598 0000E463 0F8498000000            	je .L_if_else_0306
 20599                                  	; preparing a tail-call
 20600 0000E469 488B4538                	mov rax, PARAM(3)	; param len
 20601 0000E46D 50                      	push rax
 20602 0000E46E 488B4530                	mov rax, PARAM(2)	; param str2
 20603 0000E472 50                      	push rax
 20604 0000E473 488B4528                	mov rax, PARAM(1)	; param str1
 20605 0000E477 50                      	push rax
 20606                                  	; preparing a non-tail-call
 20607 0000E478 48B8-                   	mov rax, L_constants + 2810
 20607 0000E47A [FA0A000000000000] 
 20608 0000E482 50                      	push rax
 20609 0000E483 488B4520                	mov rax, PARAM(0)	; param i
 20610 0000E487 50                      	push rax
 20611 0000E488 6A02                    	push 2	; arg count
 20612 0000E48A 488B0425[EF120000]      	mov rax, qword [free_var_1]	; free var +
 20613 0000E492 803805                  	cmp byte [rax], T_undefined
 20614 0000E495 0F841E6C0000            	je L_error_fvar_undefined
 20615 0000E49B 803804                  	cmp byte [rax], T_closure
 20616 0000E49E 0F85996C0000            	jne L_error_non_closure
 20617 0000E4A4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20618 0000E4A7 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20619 0000E4AA 50                      	push rax
 20620 0000E4AB 6A04                    	push 4	; arg count
 20621 0000E4AD 488B4510                	mov rax, ENV
 20622 0000E4B1 488B00                  	mov rax, qword [rax + 8 * 0]
 20623 0000E4B4 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 20624 0000E4B7 488B00                  	mov rax, qword [rax]
 20625 0000E4BA 803804                  	cmp byte [rax], T_closure
 20626 0000E4BD 0F857A6C0000            	jne L_error_non_closure
 20627 0000E4C3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20628                                  
 20629                                  	; recycling the current frame
 20630 0000E4C6 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 20631 0000E4C9 FF7500                  	push qword [rbp]	; old frame-pointer
 20632 0000E4CC B908000000              	mov rcx, 8
 20633 0000E4D1 488B5D18                	mov rbx, COUNT
 20634 0000E4D5 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 20635 0000E4DA 488D55F8                	lea rdx, [rbp - 8]
 20636                                  .L_tc_recycle_frame_loop_0568:
 20637 0000E4DE 4883F900                	cmp rcx, 0
 20638 0000E4E2 7413                    	je .L_tc_recycle_frame_done_0568
 20639 0000E4E4 488B32                  	mov rsi, qword [rdx]
 20640 0000E4E7 488933                  	mov qword [rbx], rsi
 20641 0000E4EA 48FFC9                  	dec rcx
 20642 0000E4ED 4883EB08                	sub rbx, 8
 20643 0000E4F1 4883EA08                	sub rdx, 8
 20644 0000E4F5 EBE7                    	jmp .L_tc_recycle_frame_loop_0568
 20645                                  .L_tc_recycle_frame_done_0568:
 20646 0000E4F7 488D6308                	lea rsp, [rbx + 8]
 20647 0000E4FB 5D                      	pop rbp
 20648 0000E4FC FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 20649 0000E4FF EB0A                    	jmp .L_if_end_0306
 20650                                  .L_if_else_0306:
 20651 0000E501 48B8-                   	mov rax, L_constants + 2
 20651 0000E503 [0200000000000000] 
 20652                                  .L_if_end_0306:
 20653 0000E50B EB0A                    	jmp .L_if_end_0307
 20654                                  .L_if_else_0307:
 20655 0000E50D 48B8-                   	mov rax, L_constants + 2
 20655 0000E50F [0200000000000000] 
 20656                                  .L_if_end_0307:
 20657                                  .L_or_end_0052:
 20658 0000E517 C9                      	leave
 20659 0000E518 C23000                  	ret AND_KILL_FRAME(4)
 20660                                  .L_lambda_simple_end_041a:	; new closure is in rax
 20661                                  
 20662 0000E51B 50                      	push rax
 20663 0000E51C 488B4520                	mov rax, PARAM(0)	; param run
 20664                                  
 20665 0000E520 8F00                    	pop qword[rax]
 20666 0000E522 48B8-                   	mov rax, sob_void
 20666 0000E524 [0000000000000000] 
 20667                                  
 20668                                  	; preparing a tail-call
 20669 0000E52C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20670 0000E531 E8B06C0000              	call malloc
 20671 0000E536 50                      	push rax
 20672 0000E537 BF08000000              	mov rdi, 8 * 1	; new rib
 20673 0000E53C E8A56C0000              	call malloc
 20674 0000E541 50                      	push rax
 20675 0000E542 BF18000000              	mov rdi, 8 * 3	; extended env
 20676 0000E547 E89A6C0000              	call malloc
 20677 0000E54C 488B7D10                	mov rdi, ENV
 20678 0000E550 BE00000000              	mov rsi, 0
 20679 0000E555 BA01000000              	mov rdx, 1
 20680                                  .L_lambda_simple_env_loop_041b:	; ext_env[i + 1] <-- env[i]
 20681 0000E55A 4883FE02                	cmp rsi, 2
 20682 0000E55E 7410                    	je .L_lambda_simple_env_end_041b
 20683 0000E560 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20684 0000E564 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20685 0000E568 48FFC6                  	inc rsi
 20686 0000E56B 48FFC2                  	inc rdx
 20687 0000E56E EBEA                    	jmp .L_lambda_simple_env_loop_041b
 20688                                  .L_lambda_simple_env_end_041b:
 20689 0000E570 5B                      	pop rbx
 20690 0000E571 BE00000000              	mov rsi, 0
 20691                                  .L_lambda_simple_params_loop_041b:	; copy params
 20692 0000E576 4883FE01                	cmp rsi, 1
 20693 0000E57A 740E                    	je .L_lambda_simple_params_end_041b
 20694 0000E57C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20695 0000E581 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20696 0000E585 48FFC6                  	inc rsi
 20697 0000E588 EBEC                    	jmp .L_lambda_simple_params_loop_041b
 20698                                  .L_lambda_simple_params_end_041b:
 20699 0000E58A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 20700 0000E58D 4889C3                  	mov rbx, rax
 20701 0000E590 58                      	pop rax
 20702 0000E591 C60004                  	mov byte [rax], T_closure
 20703 0000E594 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20704 0000E598 48C74009[A5E50000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_041b
 20705 0000E5A0 E906020000              	jmp .L_lambda_simple_end_041b
 20706                                  .L_lambda_simple_code_041b:	; lambda-simple body
 20707 0000E5A5 48837C241002            	cmp qword [rsp + 8 * 2], 2
 20708 0000E5AB 740B                    	je .L_lambda_simple_arity_check_ok_041b
 20709 0000E5AD FF742410                	push qword [rsp + 8 * 2]
 20710 0000E5B1 6A02                    	push 2
 20711 0000E5B3 E9E76B0000              	jmp L_error_incorrect_arity_simple
 20712                                  .L_lambda_simple_arity_check_ok_041b:
 20713 0000E5B8 C8000000                	enter 0, 0
 20714                                  	; preparing a tail-call
 20715                                  	; preparing a non-tail-call
 20716 0000E5BC 488B4528                	mov rax, PARAM(1)	; param str2
 20717 0000E5C0 50                      	push rax
 20718 0000E5C1 6A01                    	push 1	; arg count
 20719 0000E5C3 488B0425[181D0000]      	mov rax, qword [free_var_154]	; free var string-length
 20720 0000E5CB 803805                  	cmp byte [rax], T_undefined
 20721 0000E5CE 0F84E56A0000            	je L_error_fvar_undefined
 20722 0000E5D4 803804                  	cmp byte [rax], T_closure
 20723 0000E5D7 0F85606B0000            	jne L_error_non_closure
 20724 0000E5DD FF7001                  	push SOB_CLOSURE_ENV(rax)
 20725 0000E5E0 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20726 0000E5E3 50                      	push rax
 20727                                  	; preparing a non-tail-call
 20728 0000E5E4 488B4520                	mov rax, PARAM(0)	; param str1
 20729 0000E5E8 50                      	push rax
 20730 0000E5E9 6A01                    	push 1	; arg count
 20731 0000E5EB 488B0425[181D0000]      	mov rax, qword [free_var_154]	; free var string-length
 20732 0000E5F3 803805                  	cmp byte [rax], T_undefined
 20733 0000E5F6 0F84BD6A0000            	je L_error_fvar_undefined
 20734 0000E5FC 803804                  	cmp byte [rax], T_closure
 20735 0000E5FF 0F85386B0000            	jne L_error_non_closure
 20736 0000E605 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20737 0000E608 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20738 0000E60B 50                      	push rax
 20739 0000E60C 6A02                    	push 2	; arg count
 20740 0000E60E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20741 0000E613 E8CE6B0000              	call malloc
 20742 0000E618 50                      	push rax
 20743 0000E619 BF10000000              	mov rdi, 8 * 2	; new rib
 20744 0000E61E E8C36B0000              	call malloc
 20745 0000E623 50                      	push rax
 20746 0000E624 BF20000000              	mov rdi, 8 * 4	; extended env
 20747 0000E629 E8B86B0000              	call malloc
 20748 0000E62E 488B7D10                	mov rdi, ENV
 20749 0000E632 BE00000000              	mov rsi, 0
 20750 0000E637 BA01000000              	mov rdx, 1
 20751                                  .L_lambda_simple_env_loop_041c:	; ext_env[i + 1] <-- env[i]
 20752 0000E63C 4883FE03                	cmp rsi, 3
 20753 0000E640 7410                    	je .L_lambda_simple_env_end_041c
 20754 0000E642 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20755 0000E646 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20756 0000E64A 48FFC6                  	inc rsi
 20757 0000E64D 48FFC2                  	inc rdx
 20758 0000E650 EBEA                    	jmp .L_lambda_simple_env_loop_041c
 20759                                  .L_lambda_simple_env_end_041c:
 20760 0000E652 5B                      	pop rbx
 20761 0000E653 BE00000000              	mov rsi, 0
 20762                                  .L_lambda_simple_params_loop_041c:	; copy params
 20763 0000E658 4883FE02                	cmp rsi, 2
 20764 0000E65C 740E                    	je .L_lambda_simple_params_end_041c
 20765 0000E65E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20766 0000E663 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20767 0000E667 48FFC6                  	inc rsi
 20768 0000E66A EBEC                    	jmp .L_lambda_simple_params_loop_041c
 20769                                  .L_lambda_simple_params_end_041c:
 20770 0000E66C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 20771 0000E66F 4889C3                  	mov rbx, rax
 20772 0000E672 58                      	pop rax
 20773 0000E673 C60004                  	mov byte [rax], T_closure
 20774 0000E676 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20775 0000E67A 48C74009[87E60000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_041c
 20776 0000E682 E9DB000000              	jmp .L_lambda_simple_end_041c
 20777                                  .L_lambda_simple_code_041c:	; lambda-simple body
 20778 0000E687 48837C241002            	cmp qword [rsp + 8 * 2], 2
 20779 0000E68D 740B                    	je .L_lambda_simple_arity_check_ok_041c
 20780 0000E68F FF742410                	push qword [rsp + 8 * 2]
 20781 0000E693 6A02                    	push 2
 20782 0000E695 E9056B0000              	jmp L_error_incorrect_arity_simple
 20783                                  .L_lambda_simple_arity_check_ok_041c:
 20784 0000E69A C8000000                	enter 0, 0
 20785                                  	; preparing a non-tail-call
 20786 0000E69E 488B4528                	mov rax, PARAM(1)	; param len2
 20787 0000E6A2 50                      	push rax
 20788 0000E6A3 488B4520                	mov rax, PARAM(0)	; param len1
 20789 0000E6A7 50                      	push rax
 20790 0000E6A8 6A02                    	push 2	; arg count
 20791 0000E6AA 488B0425[44130000]      	mov rax, qword [free_var_6]	; free var =
 20792 0000E6B2 803805                  	cmp byte [rax], T_undefined
 20793 0000E6B5 0F84FE690000            	je L_error_fvar_undefined
 20794 0000E6BB 803804                  	cmp byte [rax], T_closure
 20795 0000E6BE 0F85796A0000            	jne L_error_non_closure
 20796 0000E6C4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20797 0000E6C7 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20798 0000E6CA 483D[02000000]          	cmp rax, sob_boolean_false
 20799 0000E6D0 0F847E000000            	je .L_if_else_0308
 20800                                  	; preparing a tail-call
 20801 0000E6D6 488B4520                	mov rax, PARAM(0)	; param len1
 20802 0000E6DA 50                      	push rax
 20803 0000E6DB 488B4510                	mov rax, ENV
 20804 0000E6DF 488B00                  	mov rax, qword [rax + 8 * 0]
 20805 0000E6E2 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var str2
 20806 0000E6E6 50                      	push rax
 20807 0000E6E7 488B4510                	mov rax, ENV
 20808 0000E6EB 488B00                  	mov rax, qword [rax + 8 * 0]
 20809 0000E6EE 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str1
 20810 0000E6F1 50                      	push rax
 20811 0000E6F2 48B8-                   	mov rax, L_constants + 2558
 20811 0000E6F4 [FE09000000000000] 
 20812 0000E6FC 50                      	push rax
 20813 0000E6FD 6A04                    	push 4	; arg count
 20814 0000E6FF 488B4510                	mov rax, ENV
 20815 0000E703 488B4008                	mov rax, qword [rax + 8 * 1]
 20816 0000E707 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 20817 0000E70A 488B00                  	mov rax, qword [rax]
 20818 0000E70D 803804                  	cmp byte [rax], T_closure
 20819 0000E710 0F85276A0000            	jne L_error_non_closure
 20820 0000E716 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20821                                  
 20822                                  	; recycling the current frame
 20823 0000E719 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 20824 0000E71C FF7500                  	push qword [rbp]	; old frame-pointer
 20825 0000E71F B908000000              	mov rcx, 8
 20826 0000E724 488B5D18                	mov rbx, COUNT
 20827 0000E728 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 20828 0000E72D 488D55F8                	lea rdx, [rbp - 8]
 20829                                  .L_tc_recycle_frame_loop_0569:
 20830 0000E731 4883F900                	cmp rcx, 0
 20831 0000E735 7413                    	je .L_tc_recycle_frame_done_0569
 20832 0000E737 488B32                  	mov rsi, qword [rdx]
 20833 0000E73A 488933                  	mov qword [rbx], rsi
 20834 0000E73D 48FFC9                  	dec rcx
 20835 0000E740 4883EB08                	sub rbx, 8
 20836 0000E744 4883EA08                	sub rdx, 8
 20837 0000E748 EBE7                    	jmp .L_tc_recycle_frame_loop_0569
 20838                                  .L_tc_recycle_frame_done_0569:
 20839 0000E74A 488D6308                	lea rsp, [rbx + 8]
 20840 0000E74E 5D                      	pop rbp
 20841 0000E74F FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 20842 0000E752 EB0A                    	jmp .L_if_end_0308
 20843                                  .L_if_else_0308:
 20844 0000E754 48B8-                   	mov rax, L_constants + 2
 20844 0000E756 [0200000000000000] 
 20845                                  .L_if_end_0308:
 20846 0000E75E C9                      	leave
 20847 0000E75F C22000                  	ret AND_KILL_FRAME(2)
 20848                                  .L_lambda_simple_end_041c:	; new closure is in rax
 20849 0000E762 803804                  	cmp byte [rax], T_closure
 20850 0000E765 0F85D2690000            	jne L_error_non_closure
 20851 0000E76B FF7001                  	push SOB_CLOSURE_ENV(rax)
 20852                                  
 20853                                  	; recycling the current frame
 20854 0000E76E FF7508                  	push qword [rbp + 8 * 1]	; old return address
 20855 0000E771 FF7500                  	push qword [rbp]	; old frame-pointer
 20856 0000E774 B906000000              	mov rcx, 6
 20857 0000E779 488B5D18                	mov rbx, COUNT
 20858 0000E77D 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 20859 0000E782 488D55F8                	lea rdx, [rbp - 8]
 20860                                  .L_tc_recycle_frame_loop_056a:
 20861 0000E786 4883F900                	cmp rcx, 0
 20862 0000E78A 7413                    	je .L_tc_recycle_frame_done_056a
 20863 0000E78C 488B32                  	mov rsi, qword [rdx]
 20864 0000E78F 488933                  	mov qword [rbx], rsi
 20865 0000E792 48FFC9                  	dec rcx
 20866 0000E795 4883EB08                	sub rbx, 8
 20867 0000E799 4883EA08                	sub rdx, 8
 20868 0000E79D EBE7                    	jmp .L_tc_recycle_frame_loop_056a
 20869                                  .L_tc_recycle_frame_done_056a:
 20870 0000E79F 488D6308                	lea rsp, [rbx + 8]
 20871 0000E7A3 5D                      	pop rbp
 20872 0000E7A4 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 20873 0000E7A7 C9                      	leave
 20874 0000E7A8 C22000                  	ret AND_KILL_FRAME(2)
 20875                                  .L_lambda_simple_end_041b:	; new closure is in rax
 20876 0000E7AB 50                      	push rax
 20877 0000E7AC 6A01                    	push 1	; arg count
 20878 0000E7AE BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20879 0000E7B3 E82E6A0000              	call malloc
 20880 0000E7B8 50                      	push rax
 20881 0000E7B9 BF08000000              	mov rdi, 8 * 1	; new rib
 20882 0000E7BE E8236A0000              	call malloc
 20883 0000E7C3 50                      	push rax
 20884 0000E7C4 BF18000000              	mov rdi, 8 * 3	; extended env
 20885 0000E7C9 E8186A0000              	call malloc
 20886 0000E7CE 488B7D10                	mov rdi, ENV
 20887 0000E7D2 BE00000000              	mov rsi, 0
 20888 0000E7D7 BA01000000              	mov rdx, 1
 20889                                  .L_lambda_simple_env_loop_041d:	; ext_env[i + 1] <-- env[i]
 20890 0000E7DC 4883FE02                	cmp rsi, 2
 20891 0000E7E0 7410                    	je .L_lambda_simple_env_end_041d
 20892 0000E7E2 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20893 0000E7E6 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20894 0000E7EA 48FFC6                  	inc rsi
 20895 0000E7ED 48FFC2                  	inc rdx
 20896 0000E7F0 EBEA                    	jmp .L_lambda_simple_env_loop_041d
 20897                                  .L_lambda_simple_env_end_041d:
 20898 0000E7F2 5B                      	pop rbx
 20899 0000E7F3 BE00000000              	mov rsi, 0
 20900                                  .L_lambda_simple_params_loop_041d:	; copy params
 20901 0000E7F8 4883FE01                	cmp rsi, 1
 20902 0000E7FC 740E                    	je .L_lambda_simple_params_end_041d
 20903 0000E7FE 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20904 0000E803 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20905 0000E807 48FFC6                  	inc rsi
 20906 0000E80A EBEC                    	jmp .L_lambda_simple_params_loop_041d
 20907                                  .L_lambda_simple_params_end_041d:
 20908 0000E80C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 20909 0000E80F 4889C3                  	mov rbx, rax
 20910 0000E812 58                      	pop rax
 20911 0000E813 C60004                  	mov byte [rax], T_closure
 20912 0000E816 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20913 0000E81A 48C74009[27E80000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_041d
 20914 0000E822 E9AF040000              	jmp .L_lambda_simple_end_041d
 20915                                  .L_lambda_simple_code_041d:	; lambda-simple body
 20916 0000E827 48837C241001            	cmp qword [rsp + 8 * 2], 1
 20917 0000E82D 740B                    	je .L_lambda_simple_arity_check_ok_041d
 20918 0000E82F FF742410                	push qword [rsp + 8 * 2]
 20919 0000E833 6A01                    	push 1
 20920 0000E835 E965690000              	jmp L_error_incorrect_arity_simple
 20921                                  .L_lambda_simple_arity_check_ok_041d:
 20922 0000E83A C8000000                	enter 0, 0
 20923                                  	; preparing a tail-call
 20924 0000E83E 48B8-                   	mov rax, L_constants + 2335
 20924 0000E840 [1F09000000000000] 
 20925 0000E848 50                      	push rax
 20926 0000E849 6A01                    	push 1	; arg count
 20927 0000E84B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20928 0000E850 E891690000              	call malloc
 20929 0000E855 50                      	push rax
 20930 0000E856 BF08000000              	mov rdi, 8 * 1	; new rib
 20931 0000E85B E886690000              	call malloc
 20932 0000E860 50                      	push rax
 20933 0000E861 BF20000000              	mov rdi, 8 * 4	; extended env
 20934 0000E866 E87B690000              	call malloc
 20935 0000E86B 488B7D10                	mov rdi, ENV
 20936 0000E86F BE00000000              	mov rsi, 0
 20937 0000E874 BA01000000              	mov rdx, 1
 20938                                  .L_lambda_simple_env_loop_041e:	; ext_env[i + 1] <-- env[i]
 20939 0000E879 4883FE03                	cmp rsi, 3
 20940 0000E87D 7410                    	je .L_lambda_simple_env_end_041e
 20941 0000E87F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20942 0000E883 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20943 0000E887 48FFC6                  	inc rsi
 20944 0000E88A 48FFC2                  	inc rdx
 20945 0000E88D EBEA                    	jmp .L_lambda_simple_env_loop_041e
 20946                                  .L_lambda_simple_env_end_041e:
 20947 0000E88F 5B                      	pop rbx
 20948 0000E890 BE00000000              	mov rsi, 0
 20949                                  .L_lambda_simple_params_loop_041e:	; copy params
 20950 0000E895 4883FE01                	cmp rsi, 1
 20951 0000E899 740E                    	je .L_lambda_simple_params_end_041e
 20952 0000E89B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20953 0000E8A0 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20954 0000E8A4 48FFC6                  	inc rsi
 20955 0000E8A7 EBEC                    	jmp .L_lambda_simple_params_loop_041e
 20956                                  .L_lambda_simple_params_end_041e:
 20957 0000E8A9 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 20958 0000E8AC 4889C3                  	mov rbx, rax
 20959 0000E8AF 58                      	pop rax
 20960 0000E8B0 C60004                  	mov byte [rax], T_closure
 20961 0000E8B3 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20962 0000E8B7 48C74009[C4E80000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_041e
 20963 0000E8BF E9C9030000              	jmp .L_lambda_simple_end_041e
 20964                                  .L_lambda_simple_code_041e:	; lambda-simple body
 20965 0000E8C4 48837C241001            	cmp qword [rsp + 8 * 2], 1
 20966 0000E8CA 740B                    	je .L_lambda_simple_arity_check_ok_041e
 20967 0000E8CC FF742410                	push qword [rsp + 8 * 2]
 20968 0000E8D0 6A01                    	push 1
 20969 0000E8D2 E9C8680000              	jmp L_error_incorrect_arity_simple
 20970                                  .L_lambda_simple_arity_check_ok_041e:
 20971 0000E8D7 C8000000                	enter 0, 0
 20972                                  
 20973 0000E8DB BF08000000              	mov rdi, 8
 20974 0000E8E0 E801690000              	call malloc
 20975 0000E8E5 488B5D20                	mov rbx, PARAM(0)	; param run
 20976 0000E8E9 488918                  	mov [rax], rbx	; box run
 20977 0000E8EC 48894520                	mov PARAM(0), rax	; replace param with box
 20978 0000E8F0 48B8-                   	mov rax, sob_void
 20978 0000E8F2 [0000000000000000] 
 20979                                  
 20980 0000E8FA BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20981 0000E8FF E8E2680000              	call malloc
 20982 0000E904 50                      	push rax
 20983 0000E905 BF08000000              	mov rdi, 8 * 1	; new rib
 20984 0000E90A E8D7680000              	call malloc
 20985 0000E90F 50                      	push rax
 20986 0000E910 BF28000000              	mov rdi, 8 * 5	; extended env
 20987 0000E915 E8CC680000              	call malloc
 20988 0000E91A 488B7D10                	mov rdi, ENV
 20989 0000E91E BE00000000              	mov rsi, 0
 20990 0000E923 BA01000000              	mov rdx, 1
 20991                                  .L_lambda_simple_env_loop_041f:	; ext_env[i + 1] <-- env[i]
 20992 0000E928 4883FE04                	cmp rsi, 4
 20993 0000E92C 7410                    	je .L_lambda_simple_env_end_041f
 20994 0000E92E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20995 0000E932 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20996 0000E936 48FFC6                  	inc rsi
 20997 0000E939 48FFC2                  	inc rdx
 20998 0000E93C EBEA                    	jmp .L_lambda_simple_env_loop_041f
 20999                                  .L_lambda_simple_env_end_041f:
 21000 0000E93E 5B                      	pop rbx
 21001 0000E93F BE00000000              	mov rsi, 0
 21002                                  .L_lambda_simple_params_loop_041f:	; copy params
 21003 0000E944 4883FE01                	cmp rsi, 1
 21004 0000E948 740E                    	je .L_lambda_simple_params_end_041f
 21005 0000E94A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21006 0000E94F 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21007 0000E953 48FFC6                  	inc rsi
 21008 0000E956 EBEC                    	jmp .L_lambda_simple_params_loop_041f
 21009                                  .L_lambda_simple_params_end_041f:
 21010 0000E958 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 21011 0000E95B 4889C3                  	mov rbx, rax
 21012 0000E95E 58                      	pop rax
 21013 0000E95F C60004                  	mov byte [rax], T_closure
 21014 0000E962 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21015 0000E966 48C74009[73E90000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_041f
 21016 0000E96E E953010000              	jmp .L_lambda_simple_end_041f
 21017                                  .L_lambda_simple_code_041f:	; lambda-simple body
 21018 0000E973 48837C241002            	cmp qword [rsp + 8 * 2], 2
 21019 0000E979 740B                    	je .L_lambda_simple_arity_check_ok_041f
 21020 0000E97B FF742410                	push qword [rsp + 8 * 2]
 21021 0000E97F 6A02                    	push 2
 21022 0000E981 E919680000              	jmp L_error_incorrect_arity_simple
 21023                                  .L_lambda_simple_arity_check_ok_041f:
 21024 0000E986 C8000000                	enter 0, 0
 21025                                  	; preparing a non-tail-call
 21026 0000E98A 488B4528                	mov rax, PARAM(1)	; param strs
 21027 0000E98E 50                      	push rax
 21028 0000E98F 6A01                    	push 1	; arg count
 21029 0000E991 488B0425[3C1B0000]      	mov rax, qword [free_var_126]	; free var null?
 21030 0000E999 803805                  	cmp byte [rax], T_undefined
 21031 0000E99C 0F8417670000            	je L_error_fvar_undefined
 21032 0000E9A2 803804                  	cmp byte [rax], T_closure
 21033 0000E9A5 0F8592670000            	jne L_error_non_closure
 21034 0000E9AB FF7001                  	push SOB_CLOSURE_ENV(rax)
 21035 0000E9AE FF5009                  	call SOB_CLOSURE_CODE(rax)
 21036 0000E9B1 483D[02000000]          	cmp rax, sob_boolean_false
 21037 0000E9B7 0F8505010000            	jne .L_or_end_0053
 21038                                  	; preparing a non-tail-call
 21039                                  	; preparing a non-tail-call
 21040 0000E9BD 488B4528                	mov rax, PARAM(1)	; param strs
 21041 0000E9C1 50                      	push rax
 21042 0000E9C2 6A01                    	push 1	; arg count
 21043 0000E9C4 488B0425[74160000]      	mov rax, qword [free_var_54]	; free var car
 21044 0000E9CC 803805                  	cmp byte [rax], T_undefined
 21045 0000E9CF 0F84E4660000            	je L_error_fvar_undefined
 21046 0000E9D5 803804                  	cmp byte [rax], T_closure
 21047 0000E9D8 0F855F670000            	jne L_error_non_closure
 21048 0000E9DE FF7001                  	push SOB_CLOSURE_ENV(rax)
 21049 0000E9E1 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21050 0000E9E4 50                      	push rax
 21051 0000E9E5 488B4520                	mov rax, PARAM(0)	; param str
 21052 0000E9E9 50                      	push rax
 21053 0000E9EA 6A02                    	push 2	; arg count
 21054 0000E9EC 488B4510                	mov rax, ENV
 21055 0000E9F0 488B4008                	mov rax, qword [rax + 8 * 1]
 21056 0000E9F4 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var binary-string=?
 21057 0000E9F7 803804                  	cmp byte [rax], T_closure
 21058 0000E9FA 0F853D670000            	jne L_error_non_closure
 21059 0000EA00 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21060 0000EA03 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21061 0000EA06 483D[02000000]          	cmp rax, sob_boolean_false
 21062 0000EA0C 0F84A6000000            	je .L_if_else_0309
 21063                                  	; preparing a tail-call
 21064                                  	; preparing a non-tail-call
 21065 0000EA12 488B4528                	mov rax, PARAM(1)	; param strs
 21066 0000EA16 50                      	push rax
 21067 0000EA17 6A01                    	push 1	; arg count
 21068 0000EA19 488B0425[73170000]      	mov rax, qword [free_var_69]	; free var cdr
 21069 0000EA21 803805                  	cmp byte [rax], T_undefined
 21070 0000EA24 0F848F660000            	je L_error_fvar_undefined
 21071 0000EA2A 803804                  	cmp byte [rax], T_closure
 21072 0000EA2D 0F850A670000            	jne L_error_non_closure
 21073 0000EA33 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21074 0000EA36 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21075 0000EA39 50                      	push rax
 21076                                  	; preparing a non-tail-call
 21077 0000EA3A 488B4528                	mov rax, PARAM(1)	; param strs
 21078 0000EA3E 50                      	push rax
 21079 0000EA3F 6A01                    	push 1	; arg count
 21080 0000EA41 488B0425[74160000]      	mov rax, qword [free_var_54]	; free var car
 21081 0000EA49 803805                  	cmp byte [rax], T_undefined
 21082 0000EA4C 0F8467660000            	je L_error_fvar_undefined
 21083 0000EA52 803804                  	cmp byte [rax], T_closure
 21084 0000EA55 0F85E2660000            	jne L_error_non_closure
 21085 0000EA5B FF7001                  	push SOB_CLOSURE_ENV(rax)
 21086 0000EA5E FF5009                  	call SOB_CLOSURE_CODE(rax)
 21087 0000EA61 50                      	push rax
 21088 0000EA62 6A02                    	push 2	; arg count
 21089 0000EA64 488B4510                	mov rax, ENV
 21090 0000EA68 488B00                  	mov rax, qword [rax + 8 * 0]
 21091 0000EA6B 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 21092 0000EA6E 488B00                  	mov rax, qword [rax]
 21093 0000EA71 803804                  	cmp byte [rax], T_closure
 21094 0000EA74 0F85C3660000            	jne L_error_non_closure
 21095 0000EA7A FF7001                  	push SOB_CLOSURE_ENV(rax)
 21096                                  
 21097                                  	; recycling the current frame
 21098 0000EA7D FF7508                  	push qword [rbp + 8 * 1]	; old return address
 21099 0000EA80 FF7500                  	push qword [rbp]	; old frame-pointer
 21100 0000EA83 B906000000              	mov rcx, 6
 21101 0000EA88 488B5D18                	mov rbx, COUNT
 21102 0000EA8C 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 21103 0000EA91 488D55F8                	lea rdx, [rbp - 8]
 21104                                  .L_tc_recycle_frame_loop_056b:
 21105 0000EA95 4883F900                	cmp rcx, 0
 21106 0000EA99 7413                    	je .L_tc_recycle_frame_done_056b
 21107 0000EA9B 488B32                  	mov rsi, qword [rdx]
 21108 0000EA9E 488933                  	mov qword [rbx], rsi
 21109 0000EAA1 48FFC9                  	dec rcx
 21110 0000EAA4 4883EB08                	sub rbx, 8
 21111 0000EAA8 4883EA08                	sub rdx, 8
 21112 0000EAAC EBE7                    	jmp .L_tc_recycle_frame_loop_056b
 21113                                  .L_tc_recycle_frame_done_056b:
 21114 0000EAAE 488D6308                	lea rsp, [rbx + 8]
 21115 0000EAB2 5D                      	pop rbp
 21116 0000EAB3 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 21117 0000EAB6 EB0A                    	jmp .L_if_end_0309
 21118                                  .L_if_else_0309:
 21119 0000EAB8 48B8-                   	mov rax, L_constants + 2
 21119 0000EABA [0200000000000000] 
 21120                                  .L_if_end_0309:
 21121                                  .L_or_end_0053:
 21122 0000EAC2 C9                      	leave
 21123 0000EAC3 C22000                  	ret AND_KILL_FRAME(2)
 21124                                  .L_lambda_simple_end_041f:	; new closure is in rax
 21125                                  
 21126 0000EAC6 50                      	push rax
 21127 0000EAC7 488B4520                	mov rax, PARAM(0)	; param run
 21128                                  
 21129 0000EACB 8F00                    	pop qword[rax]
 21130 0000EACD 48B8-                   	mov rax, sob_void
 21130 0000EACF [0000000000000000] 
 21131                                  
 21132 0000EAD7 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21133 0000EADC E805670000              	call malloc
 21134 0000EAE1 50                      	push rax
 21135 0000EAE2 BF08000000              	mov rdi, 8 * 1	; new rib
 21136 0000EAE7 E8FA660000              	call malloc
 21137 0000EAEC 50                      	push rax
 21138 0000EAED BF28000000              	mov rdi, 8 * 5	; extended env
 21139 0000EAF2 E8EF660000              	call malloc
 21140 0000EAF7 488B7D10                	mov rdi, ENV
 21141 0000EAFB BE00000000              	mov rsi, 0
 21142 0000EB00 BA01000000              	mov rdx, 1
 21143                                  .L_lambda_opt_env_loop_008c:	; ext_env[i + 1] <-- env[i]
 21144 0000EB05 4883FE04                	cmp rsi, 4
 21145 0000EB09 7410                    	je .L_lambda_opt_env_end_008c
 21146 0000EB0B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21147 0000EB0F 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21148 0000EB13 48FFC6                  	inc rsi
 21149 0000EB16 48FFC2                  	inc rdx
 21150 0000EB19 EBEA                    	jmp .L_lambda_opt_env_loop_008c
 21151                                  .L_lambda_opt_env_end_008c:
 21152 0000EB1B 5B                      	pop rbx
 21153 0000EB1C BE00000000              	mov rsi, 0
 21154                                  .L_lambda_opt_params_loop_008c:	; copy params
 21155 0000EB21 4883FE01                	cmp rsi, 1
 21156 0000EB25 740E                    	je .L_lambda_opt_params_end_008c
 21157 0000EB27 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21158 0000EB2C 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21159 0000EB30 48FFC6                  	inc rsi
 21160 0000EB33 EBEC                    	jmp .L_lambda_opt_params_loop_008c
 21161                                  .L_lambda_opt_params_end_008c:
 21162 0000EB35 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 21163 0000EB38 4889C3                  	mov rbx, rax
 21164 0000EB3B 58                      	pop rax
 21165 0000EB3C C60004                  	mov byte [rax], T_closure
 21166 0000EB3F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21167 0000EB43 48C74009[50EB0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_008c
 21168 0000EB4B E939010000              	jmp .L_lambda_opt_end_008c
 21169                                  .L_lambda_opt_code_008c:	; lambda-simple body
 21170 0000EB50 48837C241001            	cmp qword [rsp + 8 * 2], 1 ;	 check num of args
 21171 0000EB56 740D                    	je .L_lambda_opt_arity_check_exact_008c ;	 if equal, go to exact arity
 21172 0000EB58 7F42                    	jg .L_lambda_opt_arity_check_more_008c ;	 if greater than, go to arity more
 21173 0000EB5A FF742410                	push qword [rsp + 8 * 2] ;	 else, throw opt arity error
 21174 0000EB5E 6A01                    	push 1
 21175 0000EB60 E94E660000              	jmp L_error_incorrect_arity_opt
 21176                                  .L_lambda_opt_arity_check_exact_008c:
 21177 0000EB65 488B442410              	mov rax, qword [rsp + 8 * 2] ;	 number of args
 21178 0000EB6A 488D5CC410              	lea rbx, [rsp + 8 * (2 + rax)] ;	 address of last element
 21179 0000EB6F 4883EC08                	sub rsp, 8
 21180 0000EB73 488D0C24                	lea rcx, [rsp + 0] ;	 new start
 21181                                  .L_lambda_opt_shift_entry_008c:
 21182 0000EB77 488B5108                	mov rdx, [rcx + 8]
 21183 0000EB7B 488911                  	mov [rcx], rdx
 21184 0000EB7E 4883C108                	add rcx, 8
 21185 0000EB82 4839CB                  	cmp rbx, rcx
 21186 0000EB85 75F0                    	jne .L_lambda_opt_shift_entry_008c
 21187                                  .L_lambda_opt_shift_exit_008c:
 21188 0000EB87 48C703[01000000]        	mov qword[rbx], sob_nil ;	 place nil
 21189 0000EB8E 4883C001                	add rax, 1
 21190 0000EB92 4889442410              	mov qword [rsp + 8 * 2], rax
 21191 0000EB97 E987000000              	jmp .L_lambda_opt_stack_adjusted_008c
 21192                                  .L_lambda_opt_arity_check_more_008c:
 21193 0000EB9C 48BA-                   	mov rdx, sob_nil ;	 base cdr
 21193 0000EB9E [0100000000000000] 
 21194 0000EBA6 48837C241002            	cmp qword [rsp + 8 * 2], 2
 21195 0000EBAC 7451                    	je .L_lambda_opt_stack_shrink_loop_exit_008c
 21196                                  .L_lambda_opt_stack_shrink_loop_008c:
 21197 0000EBAE BF11000000              	mov rdi, (1 + 8 + 8)
 21198 0000EBB3 E82E660000              	call malloc
 21199 0000EBB8 C60021                  	mov byte[rax], T_pair
 21200 0000EBBB 48895009                	mov SOB_PAIR_CDR(rax), rdx
 21201 0000EBBF 4889C2                  	mov rdx, rax
 21202 0000EBC2 488B442410              	mov rax, qword [rsp + 8 * 2]
 21203 0000EBC7 488B5CC410              	mov rbx, qword [rsp + 8 * (2 + rax)]
 21204 0000EBCC 48895A01                	mov SOB_PAIR_CAR(rdx), rbx
 21205 0000EBD0 488D5CC408              	lea rbx, [rsp + 8 * (2 + rax - 1)]
 21206                                  .L_lambda_opt_extra_shift_process_008c:
 21207 0000EBD5 488B0B                  	mov rcx, [rbx]
 21208 0000EBD8 48894B08                	mov [rbx + 8], rcx
 21209 0000EBDC 4883EB08                	sub rbx, 8
 21210 0000EBE0 4839DC                  	cmp rsp, rbx
 21211 0000EBE3 7EF0                    	jle .L_lambda_opt_extra_shift_process_008c
 21212                                  .L_lambda_opt_extra_shift_process_end_008c:
 21213 0000EBE5 4883C408                	add rsp, 8
 21214 0000EBE9 488B5C2410              	mov rbx, [rsp + 8 * 2]
 21215 0000EBEE 4883EB01                	sub rbx, 1
 21216 0000EBF2 48895C2410              	mov [rsp + 8 * 2], rbx
 21217 0000EBF7 48837C241002            	cmp qword [rsp + 8 * 2], 2
 21218 0000EBFD 7FAF                    	jg .L_lambda_opt_stack_shrink_loop_008c
 21219                                  .L_lambda_opt_stack_shrink_loop_exit_008c:
 21220 0000EBFF 488B4C2410              	mov rcx, [rsp + 8 * 2]
 21221 0000EC04 488B5CCC10              	mov rbx, qword [rsp + 8 * (2 + rcx)]
 21222 0000EC09 BF11000000              	mov rdi, (1 + 8 + 8)
 21223 0000EC0E E8D3650000              	call malloc
 21224 0000EC13 C60021                  	mov byte[rax], T_pair
 21225 0000EC16 48895009                	mov SOB_PAIR_CDR(rax), rdx
 21226 0000EC1A 48895801                	mov SOB_PAIR_CAR(rax), rbx
 21227 0000EC1E 488944CC10              	mov [rsp + 8 * (2 + rcx)], rax
 21228                                  .L_lambda_opt_stack_adjusted_008c:
 21229 0000EC23 C8000000                	enter 0, 0
 21230                                  	; preparing a tail-call
 21231 0000EC27 488B4528                	mov rax, PARAM(1)	; param strs
 21232 0000EC2B 50                      	push rax
 21233 0000EC2C 488B4520                	mov rax, PARAM(0)	; param str
 21234 0000EC30 50                      	push rax
 21235 0000EC31 6A02                    	push 2	; arg count
 21236 0000EC33 488B4510                	mov rax, ENV
 21237 0000EC37 488B00                  	mov rax, qword [rax + 8 * 0]
 21238 0000EC3A 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 21239 0000EC3D 488B00                  	mov rax, qword [rax]
 21240 0000EC40 803804                  	cmp byte [rax], T_closure
 21241 0000EC43 0F85F4640000            	jne L_error_non_closure
 21242 0000EC49 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21243                                  
 21244                                  	; recycling the current frame
 21245 0000EC4C FF7508                  	push qword [rbp + 8 * 1]	; old return address
 21246 0000EC4F FF7500                  	push qword [rbp]	; old frame-pointer
 21247 0000EC52 B906000000              	mov rcx, 6
 21248 0000EC57 488B5D18                	mov rbx, COUNT
 21249 0000EC5B 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 21250 0000EC60 488D55F8                	lea rdx, [rbp - 8]
 21251                                  .L_tc_recycle_frame_loop_056c:
 21252 0000EC64 4883F900                	cmp rcx, 0
 21253 0000EC68 7413                    	je .L_tc_recycle_frame_done_056c
 21254 0000EC6A 488B32                  	mov rsi, qword [rdx]
 21255 0000EC6D 488933                  	mov qword [rbx], rsi
 21256 0000EC70 48FFC9                  	dec rcx
 21257 0000EC73 4883EB08                	sub rbx, 8
 21258 0000EC77 4883EA08                	sub rdx, 8
 21259 0000EC7B EBE7                    	jmp .L_tc_recycle_frame_loop_056c
 21260                                  .L_tc_recycle_frame_done_056c:
 21261 0000EC7D 488D6308                	lea rsp, [rbx + 8]
 21262 0000EC81 5D                      	pop rbp
 21263 0000EC82 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 21264 0000EC85 C9                      	leave
 21265 0000EC86 C22000                  	ret AND_KILL_FRAME(2)
 21266                                  .L_lambda_opt_end_008c:	; new closure is in rax
 21267 0000EC89 C9                      	leave
 21268 0000EC8A C21800                  	ret AND_KILL_FRAME(1)
 21269                                  .L_lambda_simple_end_041e:	; new closure is in rax
 21270 0000EC8D 803804                  	cmp byte [rax], T_closure
 21271 0000EC90 0F85A7640000            	jne L_error_non_closure
 21272 0000EC96 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21273                                  
 21274                                  	; recycling the current frame
 21275 0000EC99 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 21276 0000EC9C FF7500                  	push qword [rbp]	; old frame-pointer
 21277 0000EC9F B905000000              	mov rcx, 5
 21278 0000ECA4 488B5D18                	mov rbx, COUNT
 21279 0000ECA8 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 21280 0000ECAD 488D55F8                	lea rdx, [rbp - 8]
 21281                                  .L_tc_recycle_frame_loop_056d:
 21282 0000ECB1 4883F900                	cmp rcx, 0
 21283 0000ECB5 7413                    	je .L_tc_recycle_frame_done_056d
 21284 0000ECB7 488B32                  	mov rsi, qword [rdx]
 21285 0000ECBA 488933                  	mov qword [rbx], rsi
 21286 0000ECBD 48FFC9                  	dec rcx
 21287 0000ECC0 4883EB08                	sub rbx, 8
 21288 0000ECC4 4883EA08                	sub rdx, 8
 21289 0000ECC8 EBE7                    	jmp .L_tc_recycle_frame_loop_056d
 21290                                  .L_tc_recycle_frame_done_056d:
 21291 0000ECCA 488D6308                	lea rsp, [rbx + 8]
 21292 0000ECCE 5D                      	pop rbp
 21293 0000ECCF FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 21294 0000ECD2 C9                      	leave
 21295 0000ECD3 C21800                  	ret AND_KILL_FRAME(1)
 21296                                  .L_lambda_simple_end_041d:	; new closure is in rax
 21297 0000ECD6 803804                  	cmp byte [rax], T_closure
 21298 0000ECD9 0F855E640000            	jne L_error_non_closure
 21299 0000ECDF FF7001                  	push SOB_CLOSURE_ENV(rax)
 21300                                  
 21301                                  	; recycling the current frame
 21302 0000ECE2 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 21303 0000ECE5 FF7500                  	push qword [rbp]	; old frame-pointer
 21304 0000ECE8 B905000000              	mov rcx, 5
 21305 0000ECED 488B5D18                	mov rbx, COUNT
 21306 0000ECF1 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 21307 0000ECF6 488D55F8                	lea rdx, [rbp - 8]
 21308                                  .L_tc_recycle_frame_loop_056e:
 21309 0000ECFA 4883F900                	cmp rcx, 0
 21310 0000ECFE 7413                    	je .L_tc_recycle_frame_done_056e
 21311 0000ED00 488B32                  	mov rsi, qword [rdx]
 21312 0000ED03 488933                  	mov qword [rbx], rsi
 21313 0000ED06 48FFC9                  	dec rcx
 21314 0000ED09 4883EB08                	sub rbx, 8
 21315 0000ED0D 4883EA08                	sub rdx, 8
 21316 0000ED11 EBE7                    	jmp .L_tc_recycle_frame_loop_056e
 21317                                  .L_tc_recycle_frame_done_056e:
 21318 0000ED13 488D6308                	lea rsp, [rbx + 8]
 21319 0000ED17 5D                      	pop rbp
 21320 0000ED18 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 21321 0000ED1B C9                      	leave
 21322 0000ED1C C21800                  	ret AND_KILL_FRAME(1)
 21323                                  .L_lambda_simple_end_0419:	; new closure is in rax
 21324 0000ED1F 803804                  	cmp byte [rax], T_closure
 21325 0000ED22 0F8515640000            	jne L_error_non_closure
 21326 0000ED28 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21327                                  
 21328                                  	; recycling the current frame
 21329 0000ED2B FF7508                  	push qword [rbp + 8 * 1]	; old return address
 21330 0000ED2E FF7500                  	push qword [rbp]	; old frame-pointer
 21331 0000ED31 B905000000              	mov rcx, 5
 21332 0000ED36 488B5D18                	mov rbx, COUNT
 21333 0000ED3A 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 21334 0000ED3F 488D55F8                	lea rdx, [rbp - 8]
 21335                                  .L_tc_recycle_frame_loop_056f:
 21336 0000ED43 4883F900                	cmp rcx, 0
 21337 0000ED47 7413                    	je .L_tc_recycle_frame_done_056f
 21338 0000ED49 488B32                  	mov rsi, qword [rdx]
 21339 0000ED4C 488933                  	mov qword [rbx], rsi
 21340 0000ED4F 48FFC9                  	dec rcx
 21341 0000ED52 4883EB08                	sub rbx, 8
 21342 0000ED56 4883EA08                	sub rdx, 8
 21343 0000ED5A EBE7                    	jmp .L_tc_recycle_frame_loop_056f
 21344                                  .L_tc_recycle_frame_done_056f:
 21345 0000ED5C 488D6308                	lea rsp, [rbx + 8]
 21346 0000ED60 5D                      	pop rbp
 21347 0000ED61 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 21348 0000ED64 C9                      	leave
 21349 0000ED65 C21800                  	ret AND_KILL_FRAME(1)
 21350                                  .L_lambda_simple_end_0418:	; new closure is in rax
 21351 0000ED68 50                      	push rax
 21352 0000ED69 6A01                    	push 1	; arg count
 21353 0000ED6B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21354 0000ED70 E871640000              	call malloc
 21355 0000ED75 50                      	push rax
 21356 0000ED76 BF00000000              	mov rdi, 8 * 0	; new rib
 21357 0000ED7B E866640000              	call malloc
 21358 0000ED80 50                      	push rax
 21359 0000ED81 BF08000000              	mov rdi, 8 * 1	; extended env
 21360 0000ED86 E85B640000              	call malloc
 21361 0000ED8B 488B7D10                	mov rdi, ENV
 21362 0000ED8F BE00000000              	mov rsi, 0
 21363 0000ED94 BA01000000              	mov rdx, 1
 21364                                  .L_lambda_simple_env_loop_0420:	; ext_env[i + 1] <-- env[i]
 21365 0000ED99 4883FE00                	cmp rsi, 0
 21366 0000ED9D 7410                    	je .L_lambda_simple_env_end_0420
 21367 0000ED9F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21368 0000EDA3 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21369 0000EDA7 48FFC6                  	inc rsi
 21370 0000EDAA 48FFC2                  	inc rdx
 21371 0000EDAD EBEA                    	jmp .L_lambda_simple_env_loop_0420
 21372                                  .L_lambda_simple_env_end_0420:
 21373 0000EDAF 5B                      	pop rbx
 21374 0000EDB0 BE00000000              	mov rsi, 0
 21375                                  .L_lambda_simple_params_loop_0420:	; copy params
 21376 0000EDB5 4883FE00                	cmp rsi, 0
 21377 0000EDB9 740E                    	je .L_lambda_simple_params_end_0420
 21378 0000EDBB 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21379 0000EDC0 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21380 0000EDC4 48FFC6                  	inc rsi
 21381 0000EDC7 EBEC                    	jmp .L_lambda_simple_params_loop_0420
 21382                                  .L_lambda_simple_params_end_0420:
 21383 0000EDC9 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 21384 0000EDCC 4889C3                  	mov rbx, rax
 21385 0000EDCF 58                      	pop rax
 21386 0000EDD0 C60004                  	mov byte [rax], T_closure
 21387 0000EDD3 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21388 0000EDD7 48C74009[E4ED0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0420
 21389 0000EDDF E99F000000              	jmp .L_lambda_simple_end_0420
 21390                                  .L_lambda_simple_code_0420:	; lambda-simple body
 21391 0000EDE4 48837C241001            	cmp qword [rsp + 8 * 2], 1
 21392 0000EDEA 740B                    	je .L_lambda_simple_arity_check_ok_0420
 21393 0000EDEC FF742410                	push qword [rsp + 8 * 2]
 21394 0000EDF0 6A01                    	push 1
 21395 0000EDF2 E9A8630000              	jmp L_error_incorrect_arity_simple
 21396                                  .L_lambda_simple_arity_check_ok_0420:
 21397 0000EDF7 C8000000                	enter 0, 0
 21398                                  	; preparing a non-tail-call
 21399 0000EDFB 488B0425[2E180000]      	mov rax, qword [free_var_80]	; free var char=?
 21400 0000EE03 803805                  	cmp byte [rax], T_undefined
 21401 0000EE06 0F84AD620000            	je L_error_fvar_undefined
 21402 0000EE0C 50                      	push rax
 21403 0000EE0D 6A01                    	push 1	; arg count
 21404 0000EE0F 488B4520                	mov rax, PARAM(0)	; param make-string=?
 21405 0000EE13 803804                  	cmp byte [rax], T_closure
 21406 0000EE16 0F8521630000            	jne L_error_non_closure
 21407 0000EE1C FF7001                  	push SOB_CLOSURE_ENV(rax)
 21408 0000EE1F FF5009                  	call SOB_CLOSURE_CODE(rax)
 21409 0000EE22 48890425[A01D0000]      	mov qword [free_var_162], rax	; free var string=?
 21410 0000EE2A 803805                  	cmp byte [rax], T_undefined
 21411 0000EE2D 0F8486620000            	je L_error_fvar_undefined
 21412 0000EE33 48B8-                   	mov rax, sob_void
 21412 0000EE35 [0000000000000000] 
 21413                                  
 21414                                  	; preparing a non-tail-call
 21415 0000EE3D 488B0425[B7170000]      	mov rax, qword [free_var_73]	; free var char-ci=?
 21416 0000EE45 803805                  	cmp byte [rax], T_undefined
 21417 0000EE48 0F846B620000            	je L_error_fvar_undefined
 21418 0000EE4E 50                      	push rax
 21419 0000EE4F 6A01                    	push 1	; arg count
 21420 0000EE51 488B4520                	mov rax, PARAM(0)	; param make-string=?
 21421 0000EE55 803804                  	cmp byte [rax], T_closure
 21422 0000EE58 0F85DF620000            	jne L_error_non_closure
 21423 0000EE5E FF7001                  	push SOB_CLOSURE_ENV(rax)
 21424 0000EE61 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21425 0000EE64 48890425[D41C0000]      	mov qword [free_var_150], rax	; free var string-ci=?
 21426 0000EE6C 803805                  	cmp byte [rax], T_undefined
 21427 0000EE6F 0F8444620000            	je L_error_fvar_undefined
 21428 0000EE75 48B8-                   	mov rax, sob_void
 21428 0000EE77 [0000000000000000] 
 21429 0000EE7F C9                      	leave
 21430 0000EE80 C21800                  	ret AND_KILL_FRAME(1)
 21431                                  .L_lambda_simple_end_0420:	; new closure is in rax
 21432 0000EE83 803804                  	cmp byte [rax], T_closure
 21433 0000EE86 0F85B1620000            	jne L_error_non_closure
 21434 0000EE8C FF7001                  	push SOB_CLOSURE_ENV(rax)
 21435 0000EE8F FF5009                  	call SOB_CLOSURE_CODE(rax)
 21436                                  
 21437 0000EE92 4889C7                  	mov rdi, rax
 21438 0000EE95 E8A1650000              	call print_sexpr_if_not_void
 21439                                  
 21440 0000EE9A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21441 0000EE9F E842630000              	call malloc
 21442 0000EEA4 50                      	push rax
 21443 0000EEA5 BF00000000              	mov rdi, 8 * 0	; new rib
 21444 0000EEAA E837630000              	call malloc
 21445 0000EEAF 50                      	push rax
 21446 0000EEB0 BF08000000              	mov rdi, 8 * 1	; extended env
 21447 0000EEB5 E82C630000              	call malloc
 21448 0000EEBA 488B7D10                	mov rdi, ENV
 21449 0000EEBE BE00000000              	mov rsi, 0
 21450 0000EEC3 BA01000000              	mov rdx, 1
 21451                                  .L_lambda_simple_env_loop_0421:	; ext_env[i + 1] <-- env[i]
 21452 0000EEC8 4883FE00                	cmp rsi, 0
 21453 0000EECC 7410                    	je .L_lambda_simple_env_end_0421
 21454 0000EECE 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21455 0000EED2 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21456 0000EED6 48FFC6                  	inc rsi
 21457 0000EED9 48FFC2                  	inc rdx
 21458 0000EEDC EBEA                    	jmp .L_lambda_simple_env_loop_0421
 21459                                  .L_lambda_simple_env_end_0421:
 21460 0000EEDE 5B                      	pop rbx
 21461 0000EEDF BE00000000              	mov rsi, 0
 21462                                  .L_lambda_simple_params_loop_0421:	; copy params
 21463 0000EEE4 4883FE00                	cmp rsi, 0
 21464 0000EEE8 740E                    	je .L_lambda_simple_params_end_0421
 21465 0000EEEA 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21466 0000EEEF 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21467 0000EEF3 48FFC6                  	inc rsi
 21468 0000EEF6 EBEC                    	jmp .L_lambda_simple_params_loop_0421
 21469                                  .L_lambda_simple_params_end_0421:
 21470 0000EEF8 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 21471 0000EEFB 4889C3                  	mov rbx, rax
 21472 0000EEFE 58                      	pop rax
 21473 0000EEFF C60004                  	mov byte [rax], T_closure
 21474 0000EF02 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21475 0000EF06 48C74009[13EF0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0421
 21476 0000EF0E E90D010000              	jmp .L_lambda_simple_end_0421
 21477                                  .L_lambda_simple_code_0421:	; lambda-simple body
 21478 0000EF13 48837C241001            	cmp qword [rsp + 8 * 2], 1
 21479 0000EF19 740B                    	je .L_lambda_simple_arity_check_ok_0421
 21480 0000EF1B FF742410                	push qword [rsp + 8 * 2]
 21481 0000EF1F 6A01                    	push 1
 21482 0000EF21 E979620000              	jmp L_error_incorrect_arity_simple
 21483                                  .L_lambda_simple_arity_check_ok_0421:
 21484 0000EF26 C8000000                	enter 0, 0
 21485                                  	; preparing a non-tail-call
 21486 0000EF2A 488B4520                	mov rax, PARAM(0)	; param e
 21487 0000EF2E 50                      	push rax
 21488 0000EF2F 6A01                    	push 1	; arg count
 21489 0000EF31 488B0425[3C1B0000]      	mov rax, qword [free_var_126]	; free var null?
 21490 0000EF39 803805                  	cmp byte [rax], T_undefined
 21491 0000EF3C 0F8477610000            	je L_error_fvar_undefined
 21492 0000EF42 803804                  	cmp byte [rax], T_closure
 21493 0000EF45 0F85F2610000            	jne L_error_non_closure
 21494 0000EF4B FF7001                  	push SOB_CLOSURE_ENV(rax)
 21495 0000EF4E FF5009                  	call SOB_CLOSURE_CODE(rax)
 21496 0000EF51 483D[02000000]          	cmp rax, sob_boolean_false
 21497 0000EF57 0F85BF000000            	jne .L_or_end_0054
 21498                                  	; preparing a non-tail-call
 21499 0000EF5D 488B4520                	mov rax, PARAM(0)	; param e
 21500 0000EF61 50                      	push rax
 21501 0000EF62 6A01                    	push 1	; arg count
 21502 0000EF64 488B0425[911B0000]      	mov rax, qword [free_var_131]	; free var pair?
 21503 0000EF6C 803805                  	cmp byte [rax], T_undefined
 21504 0000EF6F 0F8444610000            	je L_error_fvar_undefined
 21505 0000EF75 803804                  	cmp byte [rax], T_closure
 21506 0000EF78 0F85BF610000            	jne L_error_non_closure
 21507 0000EF7E FF7001                  	push SOB_CLOSURE_ENV(rax)
 21508 0000EF81 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21509 0000EF84 483D[02000000]          	cmp rax, sob_boolean_false
 21510 0000EF8A 0F8482000000            	je .L_if_else_030a
 21511                                  	; preparing a tail-call
 21512                                  	; preparing a non-tail-call
 21513 0000EF90 488B4520                	mov rax, PARAM(0)	; param e
 21514 0000EF94 50                      	push rax
 21515 0000EF95 6A01                    	push 1	; arg count
 21516 0000EF97 488B0425[73170000]      	mov rax, qword [free_var_69]	; free var cdr
 21517 0000EF9F 803805                  	cmp byte [rax], T_undefined
 21518 0000EFA2 0F8411610000            	je L_error_fvar_undefined
 21519 0000EFA8 803804                  	cmp byte [rax], T_closure
 21520 0000EFAB 0F858C610000            	jne L_error_non_closure
 21521 0000EFB1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21522 0000EFB4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21523 0000EFB7 50                      	push rax
 21524 0000EFB8 6A01                    	push 1	; arg count
 21525 0000EFBA 488B0425[2C1A0000]      	mov rax, qword [free_var_110]	; free var list?
 21526 0000EFC2 803805                  	cmp byte [rax], T_undefined
 21527 0000EFC5 0F84EE600000            	je L_error_fvar_undefined
 21528 0000EFCB 803804                  	cmp byte [rax], T_closure
 21529 0000EFCE 0F8569610000            	jne L_error_non_closure
 21530 0000EFD4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21531                                  
 21532                                  	; recycling the current frame
 21533 0000EFD7 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 21534 0000EFDA FF7500                  	push qword [rbp]	; old frame-pointer
 21535 0000EFDD B905000000              	mov rcx, 5
 21536 0000EFE2 488B5D18                	mov rbx, COUNT
 21537 0000EFE6 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 21538 0000EFEB 488D55F8                	lea rdx, [rbp - 8]
 21539                                  .L_tc_recycle_frame_loop_0570:
 21540 0000EFEF 4883F900                	cmp rcx, 0
 21541 0000EFF3 7413                    	je .L_tc_recycle_frame_done_0570
 21542 0000EFF5 488B32                  	mov rsi, qword [rdx]
 21543 0000EFF8 488933                  	mov qword [rbx], rsi
 21544 0000EFFB 48FFC9                  	dec rcx
 21545 0000EFFE 4883EB08                	sub rbx, 8
 21546 0000F002 4883EA08                	sub rdx, 8
 21547 0000F006 EBE7                    	jmp .L_tc_recycle_frame_loop_0570
 21548                                  .L_tc_recycle_frame_done_0570:
 21549 0000F008 488D6308                	lea rsp, [rbx + 8]
 21550 0000F00C 5D                      	pop rbp
 21551 0000F00D FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 21552 0000F010 EB0A                    	jmp .L_if_end_030a
 21553                                  .L_if_else_030a:
 21554 0000F012 48B8-                   	mov rax, L_constants + 2
 21554 0000F014 [0200000000000000] 
 21555                                  .L_if_end_030a:
 21556                                  .L_or_end_0054:
 21557 0000F01C C9                      	leave
 21558 0000F01D C21800                  	ret AND_KILL_FRAME(1)
 21559                                  .L_lambda_simple_end_0421:	; new closure is in rax
 21560 0000F020 48890425[2C1A0000]      	mov qword [free_var_110], rax
 21561 0000F028 48B8-                   	mov rax, sob_void
 21561 0000F02A [0000000000000000] 
 21562                                  
 21563 0000F032 4889C7                  	mov rdi, rax
 21564 0000F035 E801640000              	call print_sexpr_if_not_void
 21565                                  
 21566                                  	; preparing a non-tail-call
 21567 0000F03A 488B0425[D61A0000]      	mov rax, qword [free_var_120]	; free var make-vector
 21568 0000F042 803805                  	cmp byte [rax], T_undefined
 21569 0000F045 0F846E600000            	je L_error_fvar_undefined
 21570 0000F04B 50                      	push rax
 21571 0000F04C 6A01                    	push 1	; arg count
 21572 0000F04E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21573 0000F053 E88E610000              	call malloc
 21574 0000F058 50                      	push rax
 21575 0000F059 BF00000000              	mov rdi, 8 * 0	; new rib
 21576 0000F05E E883610000              	call malloc
 21577 0000F063 50                      	push rax
 21578 0000F064 BF08000000              	mov rdi, 8 * 1	; extended env
 21579 0000F069 E878610000              	call malloc
 21580 0000F06E 488B7D10                	mov rdi, ENV
 21581 0000F072 BE00000000              	mov rsi, 0
 21582 0000F077 BA01000000              	mov rdx, 1
 21583                                  .L_lambda_simple_env_loop_0422:	; ext_env[i + 1] <-- env[i]
 21584 0000F07C 4883FE00                	cmp rsi, 0
 21585 0000F080 7410                    	je .L_lambda_simple_env_end_0422
 21586 0000F082 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21587 0000F086 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21588 0000F08A 48FFC6                  	inc rsi
 21589 0000F08D 48FFC2                  	inc rdx
 21590 0000F090 EBEA                    	jmp .L_lambda_simple_env_loop_0422
 21591                                  .L_lambda_simple_env_end_0422:
 21592 0000F092 5B                      	pop rbx
 21593 0000F093 BE00000000              	mov rsi, 0
 21594                                  .L_lambda_simple_params_loop_0422:	; copy params
 21595 0000F098 4883FE00                	cmp rsi, 0
 21596 0000F09C 740E                    	je .L_lambda_simple_params_end_0422
 21597 0000F09E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21598 0000F0A3 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21599 0000F0A7 48FFC6                  	inc rsi
 21600 0000F0AA EBEC                    	jmp .L_lambda_simple_params_loop_0422
 21601                                  .L_lambda_simple_params_end_0422:
 21602 0000F0AC 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 21603 0000F0AF 4889C3                  	mov rbx, rax
 21604 0000F0B2 58                      	pop rax
 21605 0000F0B3 C60004                  	mov byte [rax], T_closure
 21606 0000F0B6 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21607 0000F0BA 48C74009[C7F00000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0422
 21608 0000F0C2 E9D9030000              	jmp .L_lambda_simple_end_0422
 21609                                  .L_lambda_simple_code_0422:	; lambda-simple body
 21610 0000F0C7 48837C241001            	cmp qword [rsp + 8 * 2], 1
 21611 0000F0CD 740B                    	je .L_lambda_simple_arity_check_ok_0422
 21612 0000F0CF FF742410                	push qword [rsp + 8 * 2]
 21613 0000F0D3 6A01                    	push 1
 21614 0000F0D5 E9C5600000              	jmp L_error_incorrect_arity_simple
 21615                                  .L_lambda_simple_arity_check_ok_0422:
 21616 0000F0DA C8000000                	enter 0, 0
 21617 0000F0DE BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21618 0000F0E3 E8FE600000              	call malloc
 21619 0000F0E8 50                      	push rax
 21620 0000F0E9 BF08000000              	mov rdi, 8 * 1	; new rib
 21621 0000F0EE E8F3600000              	call malloc
 21622 0000F0F3 50                      	push rax
 21623 0000F0F4 BF10000000              	mov rdi, 8 * 2	; extended env
 21624 0000F0F9 E8E8600000              	call malloc
 21625 0000F0FE 488B7D10                	mov rdi, ENV
 21626 0000F102 BE00000000              	mov rsi, 0
 21627 0000F107 BA01000000              	mov rdx, 1
 21628                                  .L_lambda_opt_env_loop_008d:	; ext_env[i + 1] <-- env[i]
 21629 0000F10C 4883FE01                	cmp rsi, 1
 21630 0000F110 7410                    	je .L_lambda_opt_env_end_008d
 21631 0000F112 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21632 0000F116 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21633 0000F11A 48FFC6                  	inc rsi
 21634 0000F11D 48FFC2                  	inc rdx
 21635 0000F120 EBEA                    	jmp .L_lambda_opt_env_loop_008d
 21636                                  .L_lambda_opt_env_end_008d:
 21637 0000F122 5B                      	pop rbx
 21638 0000F123 BE00000000              	mov rsi, 0
 21639                                  .L_lambda_opt_params_loop_008d:	; copy params
 21640 0000F128 4883FE01                	cmp rsi, 1
 21641 0000F12C 740E                    	je .L_lambda_opt_params_end_008d
 21642 0000F12E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21643 0000F133 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21644 0000F137 48FFC6                  	inc rsi
 21645 0000F13A EBEC                    	jmp .L_lambda_opt_params_loop_008d
 21646                                  .L_lambda_opt_params_end_008d:
 21647 0000F13C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 21648 0000F13F 4889C3                  	mov rbx, rax
 21649 0000F142 58                      	pop rax
 21650 0000F143 C60004                  	mov byte [rax], T_closure
 21651 0000F146 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21652 0000F14A 48C74009[57F10000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_008d
 21653 0000F152 E945030000              	jmp .L_lambda_opt_end_008d
 21654                                  .L_lambda_opt_code_008d:	; lambda-simple body
 21655 0000F157 48837C241001            	cmp qword [rsp + 8 * 2], 1 ;	 check num of args
 21656 0000F15D 740D                    	je .L_lambda_opt_arity_check_exact_008d ;	 if equal, go to exact arity
 21657 0000F15F 7F42                    	jg .L_lambda_opt_arity_check_more_008d ;	 if greater than, go to arity more
 21658 0000F161 FF742410                	push qword [rsp + 8 * 2] ;	 else, throw opt arity error
 21659 0000F165 6A01                    	push 1
 21660 0000F167 E947600000              	jmp L_error_incorrect_arity_opt
 21661                                  .L_lambda_opt_arity_check_exact_008d:
 21662 0000F16C 488B442410              	mov rax, qword [rsp + 8 * 2] ;	 number of args
 21663 0000F171 488D5CC410              	lea rbx, [rsp + 8 * (2 + rax)] ;	 address of last element
 21664 0000F176 4883EC08                	sub rsp, 8
 21665 0000F17A 488D0C24                	lea rcx, [rsp + 0] ;	 new start
 21666                                  .L_lambda_opt_shift_entry_008d:
 21667 0000F17E 488B5108                	mov rdx, [rcx + 8]
 21668 0000F182 488911                  	mov [rcx], rdx
 21669 0000F185 4883C108                	add rcx, 8
 21670 0000F189 4839CB                  	cmp rbx, rcx
 21671 0000F18C 75F0                    	jne .L_lambda_opt_shift_entry_008d
 21672                                  .L_lambda_opt_shift_exit_008d:
 21673 0000F18E 48C703[01000000]        	mov qword[rbx], sob_nil ;	 place nil
 21674 0000F195 4883C001                	add rax, 1
 21675 0000F199 4889442410              	mov qword [rsp + 8 * 2], rax
 21676 0000F19E E987000000              	jmp .L_lambda_opt_stack_adjusted_008d
 21677                                  .L_lambda_opt_arity_check_more_008d:
 21678 0000F1A3 48BA-                   	mov rdx, sob_nil ;	 base cdr
 21678 0000F1A5 [0100000000000000] 
 21679 0000F1AD 48837C241002            	cmp qword [rsp + 8 * 2], 2
 21680 0000F1B3 7451                    	je .L_lambda_opt_stack_shrink_loop_exit_008d
 21681                                  .L_lambda_opt_stack_shrink_loop_008d:
 21682 0000F1B5 BF11000000              	mov rdi, (1 + 8 + 8)
 21683 0000F1BA E827600000              	call malloc
 21684 0000F1BF C60021                  	mov byte[rax], T_pair
 21685 0000F1C2 48895009                	mov SOB_PAIR_CDR(rax), rdx
 21686 0000F1C6 4889C2                  	mov rdx, rax
 21687 0000F1C9 488B442410              	mov rax, qword [rsp + 8 * 2]
 21688 0000F1CE 488B5CC410              	mov rbx, qword [rsp + 8 * (2 + rax)]
 21689 0000F1D3 48895A01                	mov SOB_PAIR_CAR(rdx), rbx
 21690 0000F1D7 488D5CC408              	lea rbx, [rsp + 8 * (2 + rax - 1)]
 21691                                  .L_lambda_opt_extra_shift_process_008d:
 21692 0000F1DC 488B0B                  	mov rcx, [rbx]
 21693 0000F1DF 48894B08                	mov [rbx + 8], rcx
 21694 0000F1E3 4883EB08                	sub rbx, 8
 21695 0000F1E7 4839DC                  	cmp rsp, rbx
 21696 0000F1EA 7EF0                    	jle .L_lambda_opt_extra_shift_process_008d
 21697                                  .L_lambda_opt_extra_shift_process_end_008d:
 21698 0000F1EC 4883C408                	add rsp, 8
 21699 0000F1F0 488B5C2410              	mov rbx, [rsp + 8 * 2]
 21700 0000F1F5 4883EB01                	sub rbx, 1
 21701 0000F1F9 48895C2410              	mov [rsp + 8 * 2], rbx
 21702 0000F1FE 48837C241002            	cmp qword [rsp + 8 * 2], 2
 21703 0000F204 7FAF                    	jg .L_lambda_opt_stack_shrink_loop_008d
 21704                                  .L_lambda_opt_stack_shrink_loop_exit_008d:
 21705 0000F206 488B4C2410              	mov rcx, [rsp + 8 * 2]
 21706 0000F20B 488B5CCC10              	mov rbx, qword [rsp + 8 * (2 + rcx)]
 21707 0000F210 BF11000000              	mov rdi, (1 + 8 + 8)
 21708 0000F215 E8CC5F0000              	call malloc
 21709 0000F21A C60021                  	mov byte[rax], T_pair
 21710 0000F21D 48895009                	mov SOB_PAIR_CDR(rax), rdx
 21711 0000F221 48895801                	mov SOB_PAIR_CAR(rax), rbx
 21712 0000F225 488944CC10              	mov [rsp + 8 * (2 + rcx)], rax
 21713                                  .L_lambda_opt_stack_adjusted_008d:
 21714 0000F22A C8000000                	enter 0, 0
 21715                                  	; preparing a tail-call
 21716                                  	; preparing a non-tail-call
 21717 0000F22E 488B4528                	mov rax, PARAM(1)	; param xs
 21718 0000F232 50                      	push rax
 21719 0000F233 6A01                    	push 1	; arg count
 21720 0000F235 488B0425[3C1B0000]      	mov rax, qword [free_var_126]	; free var null?
 21721 0000F23D 803805                  	cmp byte [rax], T_undefined
 21722 0000F240 0F84735E0000            	je L_error_fvar_undefined
 21723 0000F246 803804                  	cmp byte [rax], T_closure
 21724 0000F249 0F85EE5E0000            	jne L_error_non_closure
 21725 0000F24F FF7001                  	push SOB_CLOSURE_ENV(rax)
 21726 0000F252 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21727 0000F255 483D[02000000]          	cmp rax, sob_boolean_false
 21728 0000F25B 740F                    	je .L_if_else_030d
 21729 0000F25D 48B8-                   	mov rax, L_constants + 0
 21729 0000F25F [0000000000000000] 
 21730 0000F267 E9EE000000              	jmp .L_if_end_030d
 21731                                  .L_if_else_030d:
 21732                                  	; preparing a non-tail-call
 21733 0000F26C 488B4528                	mov rax, PARAM(1)	; param xs
 21734 0000F270 50                      	push rax
 21735 0000F271 6A01                    	push 1	; arg count
 21736 0000F273 488B0425[911B0000]      	mov rax, qword [free_var_131]	; free var pair?
 21737 0000F27B 803805                  	cmp byte [rax], T_undefined
 21738 0000F27E 0F84355E0000            	je L_error_fvar_undefined
 21739 0000F284 803804                  	cmp byte [rax], T_closure
 21740 0000F287 0F85B05E0000            	jne L_error_non_closure
 21741 0000F28D FF7001                  	push SOB_CLOSURE_ENV(rax)
 21742 0000F290 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21743 0000F293 483D[02000000]          	cmp rax, sob_boolean_false
 21744 0000F299 744C                    	je .L_if_else_030b
 21745                                  	; preparing a non-tail-call
 21746                                  	; preparing a non-tail-call
 21747 0000F29B 488B4528                	mov rax, PARAM(1)	; param xs
 21748 0000F29F 50                      	push rax
 21749 0000F2A0 6A01                    	push 1	; arg count
 21750 0000F2A2 488B0425[73170000]      	mov rax, qword [free_var_69]	; free var cdr
 21751 0000F2AA 803805                  	cmp byte [rax], T_undefined
 21752 0000F2AD 0F84065E0000            	je L_error_fvar_undefined
 21753 0000F2B3 803804                  	cmp byte [rax], T_closure
 21754 0000F2B6 0F85815E0000            	jne L_error_non_closure
 21755 0000F2BC FF7001                  	push SOB_CLOSURE_ENV(rax)
 21756 0000F2BF FF5009                  	call SOB_CLOSURE_CODE(rax)
 21757 0000F2C2 50                      	push rax
 21758 0000F2C3 6A01                    	push 1	; arg count
 21759 0000F2C5 488B0425[3C1B0000]      	mov rax, qword [free_var_126]	; free var null?
 21760 0000F2CD 803805                  	cmp byte [rax], T_undefined
 21761 0000F2D0 0F84E35D0000            	je L_error_fvar_undefined
 21762 0000F2D6 803804                  	cmp byte [rax], T_closure
 21763 0000F2D9 0F855E5E0000            	jne L_error_non_closure
 21764 0000F2DF FF7001                  	push SOB_CLOSURE_ENV(rax)
 21765 0000F2E2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21766 0000F2E5 EB0A                    	jmp .L_if_end_030b
 21767                                  .L_if_else_030b:
 21768 0000F2E7 48B8-                   	mov rax, L_constants + 2
 21768 0000F2E9 [0200000000000000] 
 21769                                  .L_if_end_030b:
 21770 0000F2F1 483D[02000000]          	cmp rax, sob_boolean_false
 21771 0000F2F7 7429                    	je .L_if_else_030c
 21772                                  	; preparing a non-tail-call
 21773 0000F2F9 488B4528                	mov rax, PARAM(1)	; param xs
 21774 0000F2FD 50                      	push rax
 21775 0000F2FE 6A01                    	push 1	; arg count
 21776 0000F300 488B0425[74160000]      	mov rax, qword [free_var_54]	; free var car
 21777 0000F308 803805                  	cmp byte [rax], T_undefined
 21778 0000F30B 0F84A85D0000            	je L_error_fvar_undefined
 21779 0000F311 803804                  	cmp byte [rax], T_closure
 21780 0000F314 0F85235E0000            	jne L_error_non_closure
 21781 0000F31A FF7001                  	push SOB_CLOSURE_ENV(rax)
 21782 0000F31D FF5009                  	call SOB_CLOSURE_CODE(rax)
 21783 0000F320 EB38                    	jmp .L_if_end_030c
 21784                                  .L_if_else_030c:
 21785                                  	; preparing a non-tail-call
 21786 0000F322 48B8-                   	mov rax, L_constants + 3936
 21786 0000F324 [600F000000000000] 
 21787 0000F32C 50                      	push rax
 21788 0000F32D 48B8-                   	mov rax, L_constants + 3927
 21788 0000F32F [570F000000000000] 
 21789 0000F337 50                      	push rax
 21790 0000F338 6A02                    	push 2	; arg count
 21791 0000F33A 488B0425[D8180000]      	mov rax, qword [free_var_90]	; free var error
 21792 0000F342 803805                  	cmp byte [rax], T_undefined
 21793 0000F345 0F846E5D0000            	je L_error_fvar_undefined
 21794 0000F34B 803804                  	cmp byte [rax], T_closure
 21795 0000F34E 0F85E95D0000            	jne L_error_non_closure
 21796 0000F354 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21797 0000F357 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21798                                  .L_if_end_030c:
 21799                                  .L_if_end_030d:
 21800 0000F35A 50                      	push rax
 21801 0000F35B 6A01                    	push 1	; arg count
 21802 0000F35D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21803 0000F362 E87F5E0000              	call malloc
 21804 0000F367 50                      	push rax
 21805 0000F368 BF10000000              	mov rdi, 8 * 2	; new rib
 21806 0000F36D E8745E0000              	call malloc
 21807 0000F372 50                      	push rax
 21808 0000F373 BF18000000              	mov rdi, 8 * 3	; extended env
 21809 0000F378 E8695E0000              	call malloc
 21810 0000F37D 488B7D10                	mov rdi, ENV
 21811 0000F381 BE00000000              	mov rsi, 0
 21812 0000F386 BA01000000              	mov rdx, 1
 21813                                  .L_lambda_simple_env_loop_0423:	; ext_env[i + 1] <-- env[i]
 21814 0000F38B 4883FE02                	cmp rsi, 2
 21815 0000F38F 7410                    	je .L_lambda_simple_env_end_0423
 21816 0000F391 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21817 0000F395 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21818 0000F399 48FFC6                  	inc rsi
 21819 0000F39C 48FFC2                  	inc rdx
 21820 0000F39F EBEA                    	jmp .L_lambda_simple_env_loop_0423
 21821                                  .L_lambda_simple_env_end_0423:
 21822 0000F3A1 5B                      	pop rbx
 21823 0000F3A2 BE00000000              	mov rsi, 0
 21824                                  .L_lambda_simple_params_loop_0423:	; copy params
 21825 0000F3A7 4883FE02                	cmp rsi, 2
 21826 0000F3AB 740E                    	je .L_lambda_simple_params_end_0423
 21827 0000F3AD 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21828 0000F3B2 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21829 0000F3B6 48FFC6                  	inc rsi
 21830 0000F3B9 EBEC                    	jmp .L_lambda_simple_params_loop_0423
 21831                                  .L_lambda_simple_params_end_0423:
 21832 0000F3BB 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 21833 0000F3BE 4889C3                  	mov rbx, rax
 21834 0000F3C1 58                      	pop rax
 21835 0000F3C2 C60004                  	mov byte [rax], T_closure
 21836 0000F3C5 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21837 0000F3C9 48C74009[D6F30000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0423
 21838 0000F3D1 E97D000000              	jmp .L_lambda_simple_end_0423
 21839                                  .L_lambda_simple_code_0423:	; lambda-simple body
 21840 0000F3D6 48837C241001            	cmp qword [rsp + 8 * 2], 1
 21841 0000F3DC 740B                    	je .L_lambda_simple_arity_check_ok_0423
 21842 0000F3DE FF742410                	push qword [rsp + 8 * 2]
 21843 0000F3E2 6A01                    	push 1
 21844 0000F3E4 E9B65D0000              	jmp L_error_incorrect_arity_simple
 21845                                  .L_lambda_simple_arity_check_ok_0423:
 21846 0000F3E9 C8000000                	enter 0, 0
 21847                                  	; preparing a tail-call
 21848 0000F3ED 488B4520                	mov rax, PARAM(0)	; param x
 21849 0000F3F1 50                      	push rax
 21850 0000F3F2 488B4510                	mov rax, ENV
 21851 0000F3F6 488B00                  	mov rax, qword [rax + 8 * 0]
 21852 0000F3F9 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var n
 21853 0000F3FC 50                      	push rax
 21854 0000F3FD 6A02                    	push 2	; arg count
 21855 0000F3FF 488B4510                	mov rax, ENV
 21856 0000F403 488B4008                	mov rax, qword [rax + 8 * 1]
 21857 0000F407 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var asm-make-vector
 21858 0000F40A 803804                  	cmp byte [rax], T_closure
 21859 0000F40D 0F852A5D0000            	jne L_error_non_closure
 21860 0000F413 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21861                                  
 21862                                  	; recycling the current frame
 21863 0000F416 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 21864 0000F419 FF7500                  	push qword [rbp]	; old frame-pointer
 21865 0000F41C B906000000              	mov rcx, 6
 21866 0000F421 488B5D18                	mov rbx, COUNT
 21867 0000F425 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 21868 0000F42A 488D55F8                	lea rdx, [rbp - 8]
 21869                                  .L_tc_recycle_frame_loop_0571:
 21870 0000F42E 4883F900                	cmp rcx, 0
 21871 0000F432 7413                    	je .L_tc_recycle_frame_done_0571
 21872 0000F434 488B32                  	mov rsi, qword [rdx]
 21873 0000F437 488933                  	mov qword [rbx], rsi
 21874 0000F43A 48FFC9                  	dec rcx
 21875 0000F43D 4883EB08                	sub rbx, 8
 21876 0000F441 4883EA08                	sub rdx, 8
 21877 0000F445 EBE7                    	jmp .L_tc_recycle_frame_loop_0571
 21878                                  .L_tc_recycle_frame_done_0571:
 21879 0000F447 488D6308                	lea rsp, [rbx + 8]
 21880 0000F44B 5D                      	pop rbp
 21881 0000F44C FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 21882 0000F44F C9                      	leave
 21883 0000F450 C21800                  	ret AND_KILL_FRAME(1)
 21884                                  .L_lambda_simple_end_0423:	; new closure is in rax
 21885 0000F453 803804                  	cmp byte [rax], T_closure
 21886 0000F456 0F85E15C0000            	jne L_error_non_closure
 21887 0000F45C FF7001                  	push SOB_CLOSURE_ENV(rax)
 21888                                  
 21889                                  	; recycling the current frame
 21890 0000F45F FF7508                  	push qword [rbp + 8 * 1]	; old return address
 21891 0000F462 FF7500                  	push qword [rbp]	; old frame-pointer
 21892 0000F465 B905000000              	mov rcx, 5
 21893 0000F46A 488B5D18                	mov rbx, COUNT
 21894 0000F46E 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 21895 0000F473 488D55F8                	lea rdx, [rbp - 8]
 21896                                  .L_tc_recycle_frame_loop_0572:
 21897 0000F477 4883F900                	cmp rcx, 0
 21898 0000F47B 7413                    	je .L_tc_recycle_frame_done_0572
 21899 0000F47D 488B32                  	mov rsi, qword [rdx]
 21900 0000F480 488933                  	mov qword [rbx], rsi
 21901 0000F483 48FFC9                  	dec rcx
 21902 0000F486 4883EB08                	sub rbx, 8
 21903 0000F48A 4883EA08                	sub rdx, 8
 21904 0000F48E EBE7                    	jmp .L_tc_recycle_frame_loop_0572
 21905                                  .L_tc_recycle_frame_done_0572:
 21906 0000F490 488D6308                	lea rsp, [rbx + 8]
 21907 0000F494 5D                      	pop rbp
 21908 0000F495 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 21909 0000F498 C9                      	leave
 21910 0000F499 C22000                  	ret AND_KILL_FRAME(2)
 21911                                  .L_lambda_opt_end_008d:	; new closure is in rax
 21912 0000F49C C9                      	leave
 21913 0000F49D C21800                  	ret AND_KILL_FRAME(1)
 21914                                  .L_lambda_simple_end_0422:	; new closure is in rax
 21915 0000F4A0 803804                  	cmp byte [rax], T_closure
 21916 0000F4A3 0F85945C0000            	jne L_error_non_closure
 21917 0000F4A9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21918 0000F4AC FF5009                  	call SOB_CLOSURE_CODE(rax)
 21919 0000F4AF 48890425[D61A0000]      	mov qword [free_var_120], rax
 21920 0000F4B7 48B8-                   	mov rax, sob_void
 21920 0000F4B9 [0000000000000000] 
 21921                                  
 21922 0000F4C1 4889C7                  	mov rdi, rax
 21923 0000F4C4 E8725F0000              	call print_sexpr_if_not_void
 21924                                  
 21925                                  	; preparing a non-tail-call
 21926 0000F4C9 488B0425[B41A0000]      	mov rax, qword [free_var_118]	; free var make-string
 21927 0000F4D1 803805                  	cmp byte [rax], T_undefined
 21928 0000F4D4 0F84DF5B0000            	je L_error_fvar_undefined
 21929 0000F4DA 50                      	push rax
 21930 0000F4DB 6A01                    	push 1	; arg count
 21931 0000F4DD BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21932 0000F4E2 E8FF5C0000              	call malloc
 21933 0000F4E7 50                      	push rax
 21934 0000F4E8 BF00000000              	mov rdi, 8 * 0	; new rib
 21935 0000F4ED E8F45C0000              	call malloc
 21936 0000F4F2 50                      	push rax
 21937 0000F4F3 BF08000000              	mov rdi, 8 * 1	; extended env
 21938 0000F4F8 E8E95C0000              	call malloc
 21939 0000F4FD 488B7D10                	mov rdi, ENV
 21940 0000F501 BE00000000              	mov rsi, 0
 21941 0000F506 BA01000000              	mov rdx, 1
 21942                                  .L_lambda_simple_env_loop_0424:	; ext_env[i + 1] <-- env[i]
 21943 0000F50B 4883FE00                	cmp rsi, 0
 21944 0000F50F 7410                    	je .L_lambda_simple_env_end_0424
 21945 0000F511 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21946 0000F515 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21947 0000F519 48FFC6                  	inc rsi
 21948 0000F51C 48FFC2                  	inc rdx
 21949 0000F51F EBEA                    	jmp .L_lambda_simple_env_loop_0424
 21950                                  .L_lambda_simple_env_end_0424:
 21951 0000F521 5B                      	pop rbx
 21952 0000F522 BE00000000              	mov rsi, 0
 21953                                  .L_lambda_simple_params_loop_0424:	; copy params
 21954 0000F527 4883FE00                	cmp rsi, 0
 21955 0000F52B 740E                    	je .L_lambda_simple_params_end_0424
 21956 0000F52D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21957 0000F532 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21958 0000F536 48FFC6                  	inc rsi
 21959 0000F539 EBEC                    	jmp .L_lambda_simple_params_loop_0424
 21960                                  .L_lambda_simple_params_end_0424:
 21961 0000F53B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 21962 0000F53E 4889C3                  	mov rbx, rax
 21963 0000F541 58                      	pop rax
 21964 0000F542 C60004                  	mov byte [rax], T_closure
 21965 0000F545 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21966 0000F549 48C74009[56F50000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0424
 21967 0000F551 E9D9030000              	jmp .L_lambda_simple_end_0424
 21968                                  .L_lambda_simple_code_0424:	; lambda-simple body
 21969 0000F556 48837C241001            	cmp qword [rsp + 8 * 2], 1
 21970 0000F55C 740B                    	je .L_lambda_simple_arity_check_ok_0424
 21971 0000F55E FF742410                	push qword [rsp + 8 * 2]
 21972 0000F562 6A01                    	push 1
 21973 0000F564 E9365C0000              	jmp L_error_incorrect_arity_simple
 21974                                  .L_lambda_simple_arity_check_ok_0424:
 21975 0000F569 C8000000                	enter 0, 0
 21976 0000F56D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21977 0000F572 E86F5C0000              	call malloc
 21978 0000F577 50                      	push rax
 21979 0000F578 BF08000000              	mov rdi, 8 * 1	; new rib
 21980 0000F57D E8645C0000              	call malloc
 21981 0000F582 50                      	push rax
 21982 0000F583 BF10000000              	mov rdi, 8 * 2	; extended env
 21983 0000F588 E8595C0000              	call malloc
 21984 0000F58D 488B7D10                	mov rdi, ENV
 21985 0000F591 BE00000000              	mov rsi, 0
 21986 0000F596 BA01000000              	mov rdx, 1
 21987                                  .L_lambda_opt_env_loop_008e:	; ext_env[i + 1] <-- env[i]
 21988 0000F59B 4883FE01                	cmp rsi, 1
 21989 0000F59F 7410                    	je .L_lambda_opt_env_end_008e
 21990 0000F5A1 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21991 0000F5A5 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21992 0000F5A9 48FFC6                  	inc rsi
 21993 0000F5AC 48FFC2                  	inc rdx
 21994 0000F5AF EBEA                    	jmp .L_lambda_opt_env_loop_008e
 21995                                  .L_lambda_opt_env_end_008e:
 21996 0000F5B1 5B                      	pop rbx
 21997 0000F5B2 BE00000000              	mov rsi, 0
 21998                                  .L_lambda_opt_params_loop_008e:	; copy params
 21999 0000F5B7 4883FE01                	cmp rsi, 1
 22000 0000F5BB 740E                    	je .L_lambda_opt_params_end_008e
 22001 0000F5BD 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22002 0000F5C2 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22003 0000F5C6 48FFC6                  	inc rsi
 22004 0000F5C9 EBEC                    	jmp .L_lambda_opt_params_loop_008e
 22005                                  .L_lambda_opt_params_end_008e:
 22006 0000F5CB 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 22007 0000F5CE 4889C3                  	mov rbx, rax
 22008 0000F5D1 58                      	pop rax
 22009 0000F5D2 C60004                  	mov byte [rax], T_closure
 22010 0000F5D5 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22011 0000F5D9 48C74009[E6F50000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_008e
 22012 0000F5E1 E945030000              	jmp .L_lambda_opt_end_008e
 22013                                  .L_lambda_opt_code_008e:	; lambda-simple body
 22014 0000F5E6 48837C241001            	cmp qword [rsp + 8 * 2], 1 ;	 check num of args
 22015 0000F5EC 740D                    	je .L_lambda_opt_arity_check_exact_008e ;	 if equal, go to exact arity
 22016 0000F5EE 7F42                    	jg .L_lambda_opt_arity_check_more_008e ;	 if greater than, go to arity more
 22017 0000F5F0 FF742410                	push qword [rsp + 8 * 2] ;	 else, throw opt arity error
 22018 0000F5F4 6A01                    	push 1
 22019 0000F5F6 E9B85B0000              	jmp L_error_incorrect_arity_opt
 22020                                  .L_lambda_opt_arity_check_exact_008e:
 22021 0000F5FB 488B442410              	mov rax, qword [rsp + 8 * 2] ;	 number of args
 22022 0000F600 488D5CC410              	lea rbx, [rsp + 8 * (2 + rax)] ;	 address of last element
 22023 0000F605 4883EC08                	sub rsp, 8
 22024 0000F609 488D0C24                	lea rcx, [rsp + 0] ;	 new start
 22025                                  .L_lambda_opt_shift_entry_008e:
 22026 0000F60D 488B5108                	mov rdx, [rcx + 8]
 22027 0000F611 488911                  	mov [rcx], rdx
 22028 0000F614 4883C108                	add rcx, 8
 22029 0000F618 4839CB                  	cmp rbx, rcx
 22030 0000F61B 75F0                    	jne .L_lambda_opt_shift_entry_008e
 22031                                  .L_lambda_opt_shift_exit_008e:
 22032 0000F61D 48C703[01000000]        	mov qword[rbx], sob_nil ;	 place nil
 22033 0000F624 4883C001                	add rax, 1
 22034 0000F628 4889442410              	mov qword [rsp + 8 * 2], rax
 22035 0000F62D E987000000              	jmp .L_lambda_opt_stack_adjusted_008e
 22036                                  .L_lambda_opt_arity_check_more_008e:
 22037 0000F632 48BA-                   	mov rdx, sob_nil ;	 base cdr
 22037 0000F634 [0100000000000000] 
 22038 0000F63C 48837C241002            	cmp qword [rsp + 8 * 2], 2
 22039 0000F642 7451                    	je .L_lambda_opt_stack_shrink_loop_exit_008e
 22040                                  .L_lambda_opt_stack_shrink_loop_008e:
 22041 0000F644 BF11000000              	mov rdi, (1 + 8 + 8)
 22042 0000F649 E8985B0000              	call malloc
 22043 0000F64E C60021                  	mov byte[rax], T_pair
 22044 0000F651 48895009                	mov SOB_PAIR_CDR(rax), rdx
 22045 0000F655 4889C2                  	mov rdx, rax
 22046 0000F658 488B442410              	mov rax, qword [rsp + 8 * 2]
 22047 0000F65D 488B5CC410              	mov rbx, qword [rsp + 8 * (2 + rax)]
 22048 0000F662 48895A01                	mov SOB_PAIR_CAR(rdx), rbx
 22049 0000F666 488D5CC408              	lea rbx, [rsp + 8 * (2 + rax - 1)]
 22050                                  .L_lambda_opt_extra_shift_process_008e:
 22051 0000F66B 488B0B                  	mov rcx, [rbx]
 22052 0000F66E 48894B08                	mov [rbx + 8], rcx
 22053 0000F672 4883EB08                	sub rbx, 8
 22054 0000F676 4839DC                  	cmp rsp, rbx
 22055 0000F679 7EF0                    	jle .L_lambda_opt_extra_shift_process_008e
 22056                                  .L_lambda_opt_extra_shift_process_end_008e:
 22057 0000F67B 4883C408                	add rsp, 8
 22058 0000F67F 488B5C2410              	mov rbx, [rsp + 8 * 2]
 22059 0000F684 4883EB01                	sub rbx, 1
 22060 0000F688 48895C2410              	mov [rsp + 8 * 2], rbx
 22061 0000F68D 48837C241002            	cmp qword [rsp + 8 * 2], 2
 22062 0000F693 7FAF                    	jg .L_lambda_opt_stack_shrink_loop_008e
 22063                                  .L_lambda_opt_stack_shrink_loop_exit_008e:
 22064 0000F695 488B4C2410              	mov rcx, [rsp + 8 * 2]
 22065 0000F69A 488B5CCC10              	mov rbx, qword [rsp + 8 * (2 + rcx)]
 22066 0000F69F BF11000000              	mov rdi, (1 + 8 + 8)
 22067 0000F6A4 E83D5B0000              	call malloc
 22068 0000F6A9 C60021                  	mov byte[rax], T_pair
 22069 0000F6AC 48895009                	mov SOB_PAIR_CDR(rax), rdx
 22070 0000F6B0 48895801                	mov SOB_PAIR_CAR(rax), rbx
 22071 0000F6B4 488944CC10              	mov [rsp + 8 * (2 + rcx)], rax
 22072                                  .L_lambda_opt_stack_adjusted_008e:
 22073 0000F6B9 C8000000                	enter 0, 0
 22074                                  	; preparing a tail-call
 22075                                  	; preparing a non-tail-call
 22076 0000F6BD 488B4528                	mov rax, PARAM(1)	; param chs
 22077 0000F6C1 50                      	push rax
 22078 0000F6C2 6A01                    	push 1	; arg count
 22079 0000F6C4 488B0425[3C1B0000]      	mov rax, qword [free_var_126]	; free var null?
 22080 0000F6CC 803805                  	cmp byte [rax], T_undefined
 22081 0000F6CF 0F84E4590000            	je L_error_fvar_undefined
 22082 0000F6D5 803804                  	cmp byte [rax], T_closure
 22083 0000F6D8 0F855F5A0000            	jne L_error_non_closure
 22084 0000F6DE FF7001                  	push SOB_CLOSURE_ENV(rax)
 22085 0000F6E1 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22086 0000F6E4 483D[02000000]          	cmp rax, sob_boolean_false
 22087 0000F6EA 740F                    	je .L_if_else_0310
 22088 0000F6EC 48B8-                   	mov rax, L_constants + 4
 22088 0000F6EE [0400000000000000] 
 22089 0000F6F6 E9EE000000              	jmp .L_if_end_0310
 22090                                  .L_if_else_0310:
 22091                                  	; preparing a non-tail-call
 22092 0000F6FB 488B4528                	mov rax, PARAM(1)	; param chs
 22093 0000F6FF 50                      	push rax
 22094 0000F700 6A01                    	push 1	; arg count
 22095 0000F702 488B0425[911B0000]      	mov rax, qword [free_var_131]	; free var pair?
 22096 0000F70A 803805                  	cmp byte [rax], T_undefined
 22097 0000F70D 0F84A6590000            	je L_error_fvar_undefined
 22098 0000F713 803804                  	cmp byte [rax], T_closure
 22099 0000F716 0F85215A0000            	jne L_error_non_closure
 22100 0000F71C FF7001                  	push SOB_CLOSURE_ENV(rax)
 22101 0000F71F FF5009                  	call SOB_CLOSURE_CODE(rax)
 22102 0000F722 483D[02000000]          	cmp rax, sob_boolean_false
 22103 0000F728 744C                    	je .L_if_else_030e
 22104                                  	; preparing a non-tail-call
 22105                                  	; preparing a non-tail-call
 22106 0000F72A 488B4528                	mov rax, PARAM(1)	; param chs
 22107 0000F72E 50                      	push rax
 22108 0000F72F 6A01                    	push 1	; arg count
 22109 0000F731 488B0425[73170000]      	mov rax, qword [free_var_69]	; free var cdr
 22110 0000F739 803805                  	cmp byte [rax], T_undefined
 22111 0000F73C 0F8477590000            	je L_error_fvar_undefined
 22112 0000F742 803804                  	cmp byte [rax], T_closure
 22113 0000F745 0F85F2590000            	jne L_error_non_closure
 22114 0000F74B FF7001                  	push SOB_CLOSURE_ENV(rax)
 22115 0000F74E FF5009                  	call SOB_CLOSURE_CODE(rax)
 22116 0000F751 50                      	push rax
 22117 0000F752 6A01                    	push 1	; arg count
 22118 0000F754 488B0425[3C1B0000]      	mov rax, qword [free_var_126]	; free var null?
 22119 0000F75C 803805                  	cmp byte [rax], T_undefined
 22120 0000F75F 0F8454590000            	je L_error_fvar_undefined
 22121 0000F765 803804                  	cmp byte [rax], T_closure
 22122 0000F768 0F85CF590000            	jne L_error_non_closure
 22123 0000F76E FF7001                  	push SOB_CLOSURE_ENV(rax)
 22124 0000F771 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22125 0000F774 EB0A                    	jmp .L_if_end_030e
 22126                                  .L_if_else_030e:
 22127 0000F776 48B8-                   	mov rax, L_constants + 2
 22127 0000F778 [0200000000000000] 
 22128                                  .L_if_end_030e:
 22129 0000F780 483D[02000000]          	cmp rax, sob_boolean_false
 22130 0000F786 7429                    	je .L_if_else_030f
 22131                                  	; preparing a non-tail-call
 22132 0000F788 488B4528                	mov rax, PARAM(1)	; param chs
 22133 0000F78C 50                      	push rax
 22134 0000F78D 6A01                    	push 1	; arg count
 22135 0000F78F 488B0425[74160000]      	mov rax, qword [free_var_54]	; free var car
 22136 0000F797 803805                  	cmp byte [rax], T_undefined
 22137 0000F79A 0F8419590000            	je L_error_fvar_undefined
 22138 0000F7A0 803804                  	cmp byte [rax], T_closure
 22139 0000F7A3 0F8594590000            	jne L_error_non_closure
 22140 0000F7A9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22141 0000F7AC FF5009                  	call SOB_CLOSURE_CODE(rax)
 22142 0000F7AF EB38                    	jmp .L_if_end_030f
 22143                                  .L_if_else_030f:
 22144                                  	; preparing a non-tail-call
 22145 0000F7B1 48B8-                   	mov rax, L_constants + 3997
 22145 0000F7B3 [9D0F000000000000] 
 22146 0000F7BB 50                      	push rax
 22147 0000F7BC 48B8-                   	mov rax, L_constants + 3988
 22147 0000F7BE [940F000000000000] 
 22148 0000F7C6 50                      	push rax
 22149 0000F7C7 6A02                    	push 2	; arg count
 22150 0000F7C9 488B0425[D8180000]      	mov rax, qword [free_var_90]	; free var error
 22151 0000F7D1 803805                  	cmp byte [rax], T_undefined
 22152 0000F7D4 0F84DF580000            	je L_error_fvar_undefined
 22153 0000F7DA 803804                  	cmp byte [rax], T_closure
 22154 0000F7DD 0F855A590000            	jne L_error_non_closure
 22155 0000F7E3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22156 0000F7E6 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22157                                  .L_if_end_030f:
 22158                                  .L_if_end_0310:
 22159 0000F7E9 50                      	push rax
 22160 0000F7EA 6A01                    	push 1	; arg count
 22161 0000F7EC BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22162 0000F7F1 E8F0590000              	call malloc
 22163 0000F7F6 50                      	push rax
 22164 0000F7F7 BF10000000              	mov rdi, 8 * 2	; new rib
 22165 0000F7FC E8E5590000              	call malloc
 22166 0000F801 50                      	push rax
 22167 0000F802 BF18000000              	mov rdi, 8 * 3	; extended env
 22168 0000F807 E8DA590000              	call malloc
 22169 0000F80C 488B7D10                	mov rdi, ENV
 22170 0000F810 BE00000000              	mov rsi, 0
 22171 0000F815 BA01000000              	mov rdx, 1
 22172                                  .L_lambda_simple_env_loop_0425:	; ext_env[i + 1] <-- env[i]
 22173 0000F81A 4883FE02                	cmp rsi, 2
 22174 0000F81E 7410                    	je .L_lambda_simple_env_end_0425
 22175 0000F820 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22176 0000F824 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22177 0000F828 48FFC6                  	inc rsi
 22178 0000F82B 48FFC2                  	inc rdx
 22179 0000F82E EBEA                    	jmp .L_lambda_simple_env_loop_0425
 22180                                  .L_lambda_simple_env_end_0425:
 22181 0000F830 5B                      	pop rbx
 22182 0000F831 BE00000000              	mov rsi, 0
 22183                                  .L_lambda_simple_params_loop_0425:	; copy params
 22184 0000F836 4883FE02                	cmp rsi, 2
 22185 0000F83A 740E                    	je .L_lambda_simple_params_end_0425
 22186 0000F83C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22187 0000F841 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22188 0000F845 48FFC6                  	inc rsi
 22189 0000F848 EBEC                    	jmp .L_lambda_simple_params_loop_0425
 22190                                  .L_lambda_simple_params_end_0425:
 22191 0000F84A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 22192 0000F84D 4889C3                  	mov rbx, rax
 22193 0000F850 58                      	pop rax
 22194 0000F851 C60004                  	mov byte [rax], T_closure
 22195 0000F854 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22196 0000F858 48C74009[65F80000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0425
 22197 0000F860 E97D000000              	jmp .L_lambda_simple_end_0425
 22198                                  .L_lambda_simple_code_0425:	; lambda-simple body
 22199 0000F865 48837C241001            	cmp qword [rsp + 8 * 2], 1
 22200 0000F86B 740B                    	je .L_lambda_simple_arity_check_ok_0425
 22201 0000F86D FF742410                	push qword [rsp + 8 * 2]
 22202 0000F871 6A01                    	push 1
 22203 0000F873 E927590000              	jmp L_error_incorrect_arity_simple
 22204                                  .L_lambda_simple_arity_check_ok_0425:
 22205 0000F878 C8000000                	enter 0, 0
 22206                                  	; preparing a tail-call
 22207 0000F87C 488B4520                	mov rax, PARAM(0)	; param ch
 22208 0000F880 50                      	push rax
 22209 0000F881 488B4510                	mov rax, ENV
 22210 0000F885 488B00                  	mov rax, qword [rax + 8 * 0]
 22211 0000F888 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var n
 22212 0000F88B 50                      	push rax
 22213 0000F88C 6A02                    	push 2	; arg count
 22214 0000F88E 488B4510                	mov rax, ENV
 22215 0000F892 488B4008                	mov rax, qword [rax + 8 * 1]
 22216 0000F896 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var asm-make-string
 22217 0000F899 803804                  	cmp byte [rax], T_closure
 22218 0000F89C 0F859B580000            	jne L_error_non_closure
 22219 0000F8A2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22220                                  
 22221                                  	; recycling the current frame
 22222 0000F8A5 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 22223 0000F8A8 FF7500                  	push qword [rbp]	; old frame-pointer
 22224 0000F8AB B906000000              	mov rcx, 6
 22225 0000F8B0 488B5D18                	mov rbx, COUNT
 22226 0000F8B4 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 22227 0000F8B9 488D55F8                	lea rdx, [rbp - 8]
 22228                                  .L_tc_recycle_frame_loop_0573:
 22229 0000F8BD 4883F900                	cmp rcx, 0
 22230 0000F8C1 7413                    	je .L_tc_recycle_frame_done_0573
 22231 0000F8C3 488B32                  	mov rsi, qword [rdx]
 22232 0000F8C6 488933                  	mov qword [rbx], rsi
 22233 0000F8C9 48FFC9                  	dec rcx
 22234 0000F8CC 4883EB08                	sub rbx, 8
 22235 0000F8D0 4883EA08                	sub rdx, 8
 22236 0000F8D4 EBE7                    	jmp .L_tc_recycle_frame_loop_0573
 22237                                  .L_tc_recycle_frame_done_0573:
 22238 0000F8D6 488D6308                	lea rsp, [rbx + 8]
 22239 0000F8DA 5D                      	pop rbp
 22240 0000F8DB FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 22241 0000F8DE C9                      	leave
 22242 0000F8DF C21800                  	ret AND_KILL_FRAME(1)
 22243                                  .L_lambda_simple_end_0425:	; new closure is in rax
 22244 0000F8E2 803804                  	cmp byte [rax], T_closure
 22245 0000F8E5 0F8552580000            	jne L_error_non_closure
 22246 0000F8EB FF7001                  	push SOB_CLOSURE_ENV(rax)
 22247                                  
 22248                                  	; recycling the current frame
 22249 0000F8EE FF7508                  	push qword [rbp + 8 * 1]	; old return address
 22250 0000F8F1 FF7500                  	push qword [rbp]	; old frame-pointer
 22251 0000F8F4 B905000000              	mov rcx, 5
 22252 0000F8F9 488B5D18                	mov rbx, COUNT
 22253 0000F8FD 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 22254 0000F902 488D55F8                	lea rdx, [rbp - 8]
 22255                                  .L_tc_recycle_frame_loop_0574:
 22256 0000F906 4883F900                	cmp rcx, 0
 22257 0000F90A 7413                    	je .L_tc_recycle_frame_done_0574
 22258 0000F90C 488B32                  	mov rsi, qword [rdx]
 22259 0000F90F 488933                  	mov qword [rbx], rsi
 22260 0000F912 48FFC9                  	dec rcx
 22261 0000F915 4883EB08                	sub rbx, 8
 22262 0000F919 4883EA08                	sub rdx, 8
 22263 0000F91D EBE7                    	jmp .L_tc_recycle_frame_loop_0574
 22264                                  .L_tc_recycle_frame_done_0574:
 22265 0000F91F 488D6308                	lea rsp, [rbx + 8]
 22266 0000F923 5D                      	pop rbp
 22267 0000F924 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 22268 0000F927 C9                      	leave
 22269 0000F928 C22000                  	ret AND_KILL_FRAME(2)
 22270                                  .L_lambda_opt_end_008e:	; new closure is in rax
 22271 0000F92B C9                      	leave
 22272 0000F92C C21800                  	ret AND_KILL_FRAME(1)
 22273                                  .L_lambda_simple_end_0424:	; new closure is in rax
 22274 0000F92F 803804                  	cmp byte [rax], T_closure
 22275 0000F932 0F8505580000            	jne L_error_non_closure
 22276 0000F938 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22277 0000F93B FF5009                  	call SOB_CLOSURE_CODE(rax)
 22278 0000F93E 48890425[B41A0000]      	mov qword [free_var_118], rax
 22279 0000F946 48B8-                   	mov rax, sob_void
 22279 0000F948 [0000000000000000] 
 22280                                  
 22281 0000F950 4889C7                  	mov rdi, rax
 22282 0000F953 E8E35A0000              	call print_sexpr_if_not_void
 22283                                  
 22284                                  	; preparing a non-tail-call
 22285 0000F958 48B8-                   	mov rax, L_constants + 2335
 22285 0000F95A [1F09000000000000] 
 22286 0000F962 50                      	push rax
 22287 0000F963 6A01                    	push 1	; arg count
 22288 0000F965 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22289 0000F96A E877580000              	call malloc
 22290 0000F96F 50                      	push rax
 22291 0000F970 BF00000000              	mov rdi, 8 * 0	; new rib
 22292 0000F975 E86C580000              	call malloc
 22293 0000F97A 50                      	push rax
 22294 0000F97B BF08000000              	mov rdi, 8 * 1	; extended env
 22295 0000F980 E861580000              	call malloc
 22296 0000F985 488B7D10                	mov rdi, ENV
 22297 0000F989 BE00000000              	mov rsi, 0
 22298 0000F98E BA01000000              	mov rdx, 1
 22299                                  .L_lambda_simple_env_loop_0426:	; ext_env[i + 1] <-- env[i]
 22300 0000F993 4883FE00                	cmp rsi, 0
 22301 0000F997 7410                    	je .L_lambda_simple_env_end_0426
 22302 0000F999 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22303 0000F99D 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22304 0000F9A1 48FFC6                  	inc rsi
 22305 0000F9A4 48FFC2                  	inc rdx
 22306 0000F9A7 EBEA                    	jmp .L_lambda_simple_env_loop_0426
 22307                                  .L_lambda_simple_env_end_0426:
 22308 0000F9A9 5B                      	pop rbx
 22309 0000F9AA BE00000000              	mov rsi, 0
 22310                                  .L_lambda_simple_params_loop_0426:	; copy params
 22311 0000F9AF 4883FE00                	cmp rsi, 0
 22312 0000F9B3 740E                    	je .L_lambda_simple_params_end_0426
 22313 0000F9B5 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22314 0000F9BA 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22315 0000F9BE 48FFC6                  	inc rsi
 22316 0000F9C1 EBEC                    	jmp .L_lambda_simple_params_loop_0426
 22317                                  .L_lambda_simple_params_end_0426:
 22318 0000F9C3 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 22319 0000F9C6 4889C3                  	mov rbx, rax
 22320 0000F9C9 58                      	pop rax
 22321 0000F9CA C60004                  	mov byte [rax], T_closure
 22322 0000F9CD 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22323 0000F9D1 48C74009[DEF90000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0426
 22324 0000F9D9 E92D040000              	jmp .L_lambda_simple_end_0426
 22325                                  .L_lambda_simple_code_0426:	; lambda-simple body
 22326 0000F9DE 48837C241001            	cmp qword [rsp + 8 * 2], 1
 22327 0000F9E4 740B                    	je .L_lambda_simple_arity_check_ok_0426
 22328 0000F9E6 FF742410                	push qword [rsp + 8 * 2]
 22329 0000F9EA 6A01                    	push 1
 22330 0000F9EC E9AE570000              	jmp L_error_incorrect_arity_simple
 22331                                  .L_lambda_simple_arity_check_ok_0426:
 22332 0000F9F1 C8000000                	enter 0, 0
 22333                                  
 22334 0000F9F5 BF08000000              	mov rdi, 8
 22335 0000F9FA E8E7570000              	call malloc
 22336 0000F9FF 488B5D20                	mov rbx, PARAM(0)	; param run
 22337 0000FA03 488918                  	mov [rax], rbx	; box run
 22338 0000FA06 48894520                	mov PARAM(0), rax	; replace param with box
 22339 0000FA0A 48B8-                   	mov rax, sob_void
 22339 0000FA0C [0000000000000000] 
 22340                                  
 22341 0000FA14 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22342 0000FA19 E8C8570000              	call malloc
 22343 0000FA1E 50                      	push rax
 22344 0000FA1F BF08000000              	mov rdi, 8 * 1	; new rib
 22345 0000FA24 E8BD570000              	call malloc
 22346 0000FA29 50                      	push rax
 22347 0000FA2A BF10000000              	mov rdi, 8 * 2	; extended env
 22348 0000FA2F E8B2570000              	call malloc
 22349 0000FA34 488B7D10                	mov rdi, ENV
 22350 0000FA38 BE00000000              	mov rsi, 0
 22351 0000FA3D BA01000000              	mov rdx, 1
 22352                                  .L_lambda_simple_env_loop_0427:	; ext_env[i + 1] <-- env[i]
 22353 0000FA42 4883FE01                	cmp rsi, 1
 22354 0000FA46 7410                    	je .L_lambda_simple_env_end_0427
 22355 0000FA48 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22356 0000FA4C 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22357 0000FA50 48FFC6                  	inc rsi
 22358 0000FA53 48FFC2                  	inc rdx
 22359 0000FA56 EBEA                    	jmp .L_lambda_simple_env_loop_0427
 22360                                  .L_lambda_simple_env_end_0427:
 22361 0000FA58 5B                      	pop rbx
 22362 0000FA59 BE00000000              	mov rsi, 0
 22363                                  .L_lambda_simple_params_loop_0427:	; copy params
 22364 0000FA5E 4883FE01                	cmp rsi, 1
 22365 0000FA62 740E                    	je .L_lambda_simple_params_end_0427
 22366 0000FA64 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22367 0000FA69 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22368 0000FA6D 48FFC6                  	inc rsi
 22369 0000FA70 EBEC                    	jmp .L_lambda_simple_params_loop_0427
 22370                                  .L_lambda_simple_params_end_0427:
 22371 0000FA72 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 22372 0000FA75 4889C3                  	mov rbx, rax
 22373 0000FA78 58                      	pop rax
 22374 0000FA79 C60004                  	mov byte [rax], T_closure
 22375 0000FA7C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22376 0000FA80 48C74009[8DFA0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0427
 22377 0000FA88 E971020000              	jmp .L_lambda_simple_end_0427
 22378                                  .L_lambda_simple_code_0427:	; lambda-simple body
 22379 0000FA8D 48837C241002            	cmp qword [rsp + 8 * 2], 2
 22380 0000FA93 740B                    	je .L_lambda_simple_arity_check_ok_0427
 22381 0000FA95 FF742410                	push qword [rsp + 8 * 2]
 22382 0000FA99 6A02                    	push 2
 22383 0000FA9B E9FF560000              	jmp L_error_incorrect_arity_simple
 22384                                  .L_lambda_simple_arity_check_ok_0427:
 22385 0000FAA0 C8000000                	enter 0, 0
 22386                                  	; preparing a non-tail-call
 22387 0000FAA4 488B4520                	mov rax, PARAM(0)	; param s
 22388 0000FAA8 50                      	push rax
 22389 0000FAA9 6A01                    	push 1	; arg count
 22390 0000FAAB 488B0425[3C1B0000]      	mov rax, qword [free_var_126]	; free var null?
 22391 0000FAB3 803805                  	cmp byte [rax], T_undefined
 22392 0000FAB6 0F84FD550000            	je L_error_fvar_undefined
 22393 0000FABC 803804                  	cmp byte [rax], T_closure
 22394 0000FABF 0F8578560000            	jne L_error_non_closure
 22395 0000FAC5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22396 0000FAC8 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22397 0000FACB 483D[02000000]          	cmp rax, sob_boolean_false
 22398 0000FAD1 746D                    	je .L_if_else_0311
 22399                                  	; preparing a tail-call
 22400 0000FAD3 48B8-                   	mov rax, L_constants + 0
 22400 0000FAD5 [0000000000000000] 
 22401 0000FADD 50                      	push rax
 22402 0000FADE 488B4528                	mov rax, PARAM(1)	; param i
 22403 0000FAE2 50                      	push rax
 22404 0000FAE3 6A02                    	push 2	; arg count
 22405 0000FAE5 488B0425[D61A0000]      	mov rax, qword [free_var_120]	; free var make-vector
 22406 0000FAED 803805                  	cmp byte [rax], T_undefined
 22407 0000FAF0 0F84C3550000            	je L_error_fvar_undefined
 22408 0000FAF6 803804                  	cmp byte [rax], T_closure
 22409 0000FAF9 0F853E560000            	jne L_error_non_closure
 22410 0000FAFF FF7001                  	push SOB_CLOSURE_ENV(rax)
 22411                                  
 22412                                  	; recycling the current frame
 22413 0000FB02 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 22414 0000FB05 FF7500                  	push qword [rbp]	; old frame-pointer
 22415 0000FB08 B906000000              	mov rcx, 6
 22416 0000FB0D 488B5D18                	mov rbx, COUNT
 22417 0000FB11 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 22418 0000FB16 488D55F8                	lea rdx, [rbp - 8]
 22419                                  .L_tc_recycle_frame_loop_0575:
 22420 0000FB1A 4883F900                	cmp rcx, 0
 22421 0000FB1E 7413                    	je .L_tc_recycle_frame_done_0575
 22422 0000FB20 488B32                  	mov rsi, qword [rdx]
 22423 0000FB23 488933                  	mov qword [rbx], rsi
 22424 0000FB26 48FFC9                  	dec rcx
 22425 0000FB29 4883EB08                	sub rbx, 8
 22426 0000FB2D 4883EA08                	sub rdx, 8
 22427 0000FB31 EBE7                    	jmp .L_tc_recycle_frame_loop_0575
 22428                                  .L_tc_recycle_frame_done_0575:
 22429 0000FB33 488D6308                	lea rsp, [rbx + 8]
 22430 0000FB37 5D                      	pop rbp
 22431 0000FB38 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 22432 0000FB3B E9BA010000              	jmp .L_if_end_0311
 22433                                  .L_if_else_0311:
 22434                                  	; preparing a tail-call
 22435                                  	; preparing a non-tail-call
 22436                                  	; preparing a non-tail-call
 22437 0000FB40 48B8-                   	mov rax, L_constants + 2810
 22437 0000FB42 [FA0A000000000000] 
 22438 0000FB4A 50                      	push rax
 22439 0000FB4B 488B4528                	mov rax, PARAM(1)	; param i
 22440 0000FB4F 50                      	push rax
 22441 0000FB50 6A02                    	push 2	; arg count
 22442 0000FB52 488B0425[EF120000]      	mov rax, qword [free_var_1]	; free var +
 22443 0000FB5A 803805                  	cmp byte [rax], T_undefined
 22444 0000FB5D 0F8456550000            	je L_error_fvar_undefined
 22445 0000FB63 803804                  	cmp byte [rax], T_closure
 22446 0000FB66 0F85D1550000            	jne L_error_non_closure
 22447 0000FB6C FF7001                  	push SOB_CLOSURE_ENV(rax)
 22448 0000FB6F FF5009                  	call SOB_CLOSURE_CODE(rax)
 22449 0000FB72 50                      	push rax
 22450                                  	; preparing a non-tail-call
 22451 0000FB73 488B4520                	mov rax, PARAM(0)	; param s
 22452 0000FB77 50                      	push rax
 22453 0000FB78 6A01                    	push 1	; arg count
 22454 0000FB7A 488B0425[73170000]      	mov rax, qword [free_var_69]	; free var cdr
 22455 0000FB82 803805                  	cmp byte [rax], T_undefined
 22456 0000FB85 0F842E550000            	je L_error_fvar_undefined
 22457 0000FB8B 803804                  	cmp byte [rax], T_closure
 22458 0000FB8E 0F85A9550000            	jne L_error_non_closure
 22459 0000FB94 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22460 0000FB97 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22461 0000FB9A 50                      	push rax
 22462 0000FB9B 6A02                    	push 2	; arg count
 22463 0000FB9D 488B4510                	mov rax, ENV
 22464 0000FBA1 488B00                  	mov rax, qword [rax + 8 * 0]
 22465 0000FBA4 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 22466 0000FBA7 488B00                  	mov rax, qword [rax]
 22467 0000FBAA 803804                  	cmp byte [rax], T_closure
 22468 0000FBAD 0F858A550000            	jne L_error_non_closure
 22469 0000FBB3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22470 0000FBB6 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22471 0000FBB9 50                      	push rax
 22472 0000FBBA 6A01                    	push 1	; arg count
 22473 0000FBBC BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22474 0000FBC1 E820560000              	call malloc
 22475 0000FBC6 50                      	push rax
 22476 0000FBC7 BF10000000              	mov rdi, 8 * 2	; new rib
 22477 0000FBCC E815560000              	call malloc
 22478 0000FBD1 50                      	push rax
 22479 0000FBD2 BF18000000              	mov rdi, 8 * 3	; extended env
 22480 0000FBD7 E80A560000              	call malloc
 22481 0000FBDC 488B7D10                	mov rdi, ENV
 22482 0000FBE0 BE00000000              	mov rsi, 0
 22483 0000FBE5 BA01000000              	mov rdx, 1
 22484                                  .L_lambda_simple_env_loop_0428:	; ext_env[i + 1] <-- env[i]
 22485 0000FBEA 4883FE02                	cmp rsi, 2
 22486 0000FBEE 7410                    	je .L_lambda_simple_env_end_0428
 22487 0000FBF0 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22488 0000FBF4 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22489 0000FBF8 48FFC6                  	inc rsi
 22490 0000FBFB 48FFC2                  	inc rdx
 22491 0000FBFE EBEA                    	jmp .L_lambda_simple_env_loop_0428
 22492                                  .L_lambda_simple_env_end_0428:
 22493 0000FC00 5B                      	pop rbx
 22494 0000FC01 BE00000000              	mov rsi, 0
 22495                                  .L_lambda_simple_params_loop_0428:	; copy params
 22496 0000FC06 4883FE02                	cmp rsi, 2
 22497 0000FC0A 740E                    	je .L_lambda_simple_params_end_0428
 22498 0000FC0C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22499 0000FC11 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22500 0000FC15 48FFC6                  	inc rsi
 22501 0000FC18 EBEC                    	jmp .L_lambda_simple_params_loop_0428
 22502                                  .L_lambda_simple_params_end_0428:
 22503 0000FC1A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 22504 0000FC1D 4889C3                  	mov rbx, rax
 22505 0000FC20 58                      	pop rax
 22506 0000FC21 C60004                  	mov byte [rax], T_closure
 22507 0000FC24 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22508 0000FC28 48C74009[35FC0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0428
 22509 0000FC30 E980000000              	jmp .L_lambda_simple_end_0428
 22510                                  .L_lambda_simple_code_0428:	; lambda-simple body
 22511 0000FC35 48837C241001            	cmp qword [rsp + 8 * 2], 1
 22512 0000FC3B 740B                    	je .L_lambda_simple_arity_check_ok_0428
 22513 0000FC3D FF742410                	push qword [rsp + 8 * 2]
 22514 0000FC41 6A01                    	push 1
 22515 0000FC43 E957550000              	jmp L_error_incorrect_arity_simple
 22516                                  .L_lambda_simple_arity_check_ok_0428:
 22517 0000FC48 C8000000                	enter 0, 0
 22518                                  	; preparing a non-tail-call
 22519                                  	; preparing a non-tail-call
 22520 0000FC4C 488B4510                	mov rax, ENV
 22521 0000FC50 488B00                  	mov rax, qword [rax + 8 * 0]
 22522 0000FC53 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var s
 22523 0000FC56 50                      	push rax
 22524 0000FC57 6A01                    	push 1	; arg count
 22525 0000FC59 488B0425[74160000]      	mov rax, qword [free_var_54]	; free var car
 22526 0000FC61 803805                  	cmp byte [rax], T_undefined
 22527 0000FC64 0F844F540000            	je L_error_fvar_undefined
 22528 0000FC6A 803804                  	cmp byte [rax], T_closure
 22529 0000FC6D 0F85CA540000            	jne L_error_non_closure
 22530 0000FC73 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22531 0000FC76 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22532 0000FC79 50                      	push rax
 22533 0000FC7A 488B4510                	mov rax, ENV
 22534 0000FC7E 488B00                  	mov rax, qword [rax + 8 * 0]
 22535 0000FC81 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var i
 22536 0000FC85 50                      	push rax
 22537 0000FC86 488B4520                	mov rax, PARAM(0)	; param v
 22538 0000FC8A 50                      	push rax
 22539 0000FC8B 6A03                    	push 3	; arg count
 22540 0000FC8D 488B0425[8E1E0000]      	mov rax, qword [free_var_176]	; free var vector-set!
 22541 0000FC95 803805                  	cmp byte [rax], T_undefined
 22542 0000FC98 0F841B540000            	je L_error_fvar_undefined
 22543 0000FC9E 803804                  	cmp byte [rax], T_closure
 22544 0000FCA1 0F8596540000            	jne L_error_non_closure
 22545 0000FCA7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22546 0000FCAA FF5009                  	call SOB_CLOSURE_CODE(rax)
 22547                                  
 22548 0000FCAD 488B4520                	mov rax, PARAM(0)	; param v
 22549 0000FCB1 C9                      	leave
 22550 0000FCB2 C21800                  	ret AND_KILL_FRAME(1)
 22551                                  .L_lambda_simple_end_0428:	; new closure is in rax
 22552 0000FCB5 803804                  	cmp byte [rax], T_closure
 22553 0000FCB8 0F857F540000            	jne L_error_non_closure
 22554 0000FCBE FF7001                  	push SOB_CLOSURE_ENV(rax)
 22555                                  
 22556                                  	; recycling the current frame
 22557 0000FCC1 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 22558 0000FCC4 FF7500                  	push qword [rbp]	; old frame-pointer
 22559 0000FCC7 B905000000              	mov rcx, 5
 22560 0000FCCC 488B5D18                	mov rbx, COUNT
 22561 0000FCD0 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 22562 0000FCD5 488D55F8                	lea rdx, [rbp - 8]
 22563                                  .L_tc_recycle_frame_loop_0576:
 22564 0000FCD9 4883F900                	cmp rcx, 0
 22565 0000FCDD 7413                    	je .L_tc_recycle_frame_done_0576
 22566 0000FCDF 488B32                  	mov rsi, qword [rdx]
 22567 0000FCE2 488933                  	mov qword [rbx], rsi
 22568 0000FCE5 48FFC9                  	dec rcx
 22569 0000FCE8 4883EB08                	sub rbx, 8
 22570 0000FCEC 4883EA08                	sub rdx, 8
 22571 0000FCF0 EBE7                    	jmp .L_tc_recycle_frame_loop_0576
 22572                                  .L_tc_recycle_frame_done_0576:
 22573 0000FCF2 488D6308                	lea rsp, [rbx + 8]
 22574 0000FCF6 5D                      	pop rbp
 22575 0000FCF7 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 22576                                  .L_if_end_0311:
 22577 0000FCFA C9                      	leave
 22578 0000FCFB C22000                  	ret AND_KILL_FRAME(2)
 22579                                  .L_lambda_simple_end_0427:	; new closure is in rax
 22580                                  
 22581 0000FCFE 50                      	push rax
 22582 0000FCFF 488B4520                	mov rax, PARAM(0)	; param run
 22583                                  
 22584 0000FD03 8F00                    	pop qword[rax]
 22585 0000FD05 48B8-                   	mov rax, sob_void
 22585 0000FD07 [0000000000000000] 
 22586                                  
 22587 0000FD0F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22588 0000FD14 E8CD540000              	call malloc
 22589 0000FD19 50                      	push rax
 22590 0000FD1A BF08000000              	mov rdi, 8 * 1	; new rib
 22591 0000FD1F E8C2540000              	call malloc
 22592 0000FD24 50                      	push rax
 22593 0000FD25 BF10000000              	mov rdi, 8 * 2	; extended env
 22594 0000FD2A E8B7540000              	call malloc
 22595 0000FD2F 488B7D10                	mov rdi, ENV
 22596 0000FD33 BE00000000              	mov rsi, 0
 22597 0000FD38 BA01000000              	mov rdx, 1
 22598                                  .L_lambda_simple_env_loop_0429:	; ext_env[i + 1] <-- env[i]
 22599 0000FD3D 4883FE01                	cmp rsi, 1
 22600 0000FD41 7410                    	je .L_lambda_simple_env_end_0429
 22601 0000FD43 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22602 0000FD47 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22603 0000FD4B 48FFC6                  	inc rsi
 22604 0000FD4E 48FFC2                  	inc rdx
 22605 0000FD51 EBEA                    	jmp .L_lambda_simple_env_loop_0429
 22606                                  .L_lambda_simple_env_end_0429:
 22607 0000FD53 5B                      	pop rbx
 22608 0000FD54 BE00000000              	mov rsi, 0
 22609                                  .L_lambda_simple_params_loop_0429:	; copy params
 22610 0000FD59 4883FE01                	cmp rsi, 1
 22611 0000FD5D 740E                    	je .L_lambda_simple_params_end_0429
 22612 0000FD5F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22613 0000FD64 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22614 0000FD68 48FFC6                  	inc rsi
 22615 0000FD6B EBEC                    	jmp .L_lambda_simple_params_loop_0429
 22616                                  .L_lambda_simple_params_end_0429:
 22617 0000FD6D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 22618 0000FD70 4889C3                  	mov rbx, rax
 22619 0000FD73 58                      	pop rax
 22620 0000FD74 C60004                  	mov byte [rax], T_closure
 22621 0000FD77 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22622 0000FD7B 48C74009[88FD0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0429
 22623 0000FD83 E97F000000              	jmp .L_lambda_simple_end_0429
 22624                                  .L_lambda_simple_code_0429:	; lambda-simple body
 22625 0000FD88 48837C241001            	cmp qword [rsp + 8 * 2], 1
 22626 0000FD8E 740B                    	je .L_lambda_simple_arity_check_ok_0429
 22627 0000FD90 FF742410                	push qword [rsp + 8 * 2]
 22628 0000FD94 6A01                    	push 1
 22629 0000FD96 E904540000              	jmp L_error_incorrect_arity_simple
 22630                                  .L_lambda_simple_arity_check_ok_0429:
 22631 0000FD9B C8000000                	enter 0, 0
 22632                                  	; preparing a tail-call
 22633 0000FD9F 48B8-                   	mov rax, L_constants + 2558
 22633 0000FDA1 [FE09000000000000] 
 22634 0000FDA9 50                      	push rax
 22635 0000FDAA 488B4520                	mov rax, PARAM(0)	; param s
 22636 0000FDAE 50                      	push rax
 22637 0000FDAF 6A02                    	push 2	; arg count
 22638 0000FDB1 488B4510                	mov rax, ENV
 22639 0000FDB5 488B00                  	mov rax, qword [rax + 8 * 0]
 22640 0000FDB8 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 22641 0000FDBB 488B00                  	mov rax, qword [rax]
 22642 0000FDBE 803804                  	cmp byte [rax], T_closure
 22643 0000FDC1 0F8576530000            	jne L_error_non_closure
 22644 0000FDC7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22645                                  
 22646                                  	; recycling the current frame
 22647 0000FDCA FF7508                  	push qword [rbp + 8 * 1]	; old return address
 22648 0000FDCD FF7500                  	push qword [rbp]	; old frame-pointer
 22649 0000FDD0 B906000000              	mov rcx, 6
 22650 0000FDD5 488B5D18                	mov rbx, COUNT
 22651 0000FDD9 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 22652 0000FDDE 488D55F8                	lea rdx, [rbp - 8]
 22653                                  .L_tc_recycle_frame_loop_0577:
 22654 0000FDE2 4883F900                	cmp rcx, 0
 22655 0000FDE6 7413                    	je .L_tc_recycle_frame_done_0577
 22656 0000FDE8 488B32                  	mov rsi, qword [rdx]
 22657 0000FDEB 488933                  	mov qword [rbx], rsi
 22658 0000FDEE 48FFC9                  	dec rcx
 22659 0000FDF1 4883EB08                	sub rbx, 8
 22660 0000FDF5 4883EA08                	sub rdx, 8
 22661 0000FDF9 EBE7                    	jmp .L_tc_recycle_frame_loop_0577
 22662                                  .L_tc_recycle_frame_done_0577:
 22663 0000FDFB 488D6308                	lea rsp, [rbx + 8]
 22664 0000FDFF 5D                      	pop rbp
 22665 0000FE00 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 22666 0000FE03 C9                      	leave
 22667 0000FE04 C21800                  	ret AND_KILL_FRAME(1)
 22668                                  .L_lambda_simple_end_0429:	; new closure is in rax
 22669 0000FE07 C9                      	leave
 22670 0000FE08 C21800                  	ret AND_KILL_FRAME(1)
 22671                                  .L_lambda_simple_end_0426:	; new closure is in rax
 22672 0000FE0B 803804                  	cmp byte [rax], T_closure
 22673 0000FE0E 0F8529530000            	jne L_error_non_closure
 22674 0000FE14 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22675 0000FE17 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22676 0000FE1A 48890425[1B1A0000]      	mov qword [free_var_109], rax
 22677 0000FE22 48B8-                   	mov rax, sob_void
 22677 0000FE24 [0000000000000000] 
 22678                                  
 22679 0000FE2C 4889C7                  	mov rdi, rax
 22680 0000FE2F E807560000              	call print_sexpr_if_not_void
 22681                                  
 22682                                  	; preparing a non-tail-call
 22683 0000FE34 48B8-                   	mov rax, L_constants + 2335
 22683 0000FE36 [1F09000000000000] 
 22684 0000FE3E 50                      	push rax
 22685 0000FE3F 6A01                    	push 1	; arg count
 22686 0000FE41 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22687 0000FE46 E89B530000              	call malloc
 22688 0000FE4B 50                      	push rax
 22689 0000FE4C BF00000000              	mov rdi, 8 * 0	; new rib
 22690 0000FE51 E890530000              	call malloc
 22691 0000FE56 50                      	push rax
 22692 0000FE57 BF08000000              	mov rdi, 8 * 1	; extended env
 22693 0000FE5C E885530000              	call malloc
 22694 0000FE61 488B7D10                	mov rdi, ENV
 22695 0000FE65 BE00000000              	mov rsi, 0
 22696 0000FE6A BA01000000              	mov rdx, 1
 22697                                  .L_lambda_simple_env_loop_042a:	; ext_env[i + 1] <-- env[i]
 22698 0000FE6F 4883FE00                	cmp rsi, 0
 22699 0000FE73 7410                    	je .L_lambda_simple_env_end_042a
 22700 0000FE75 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22701 0000FE79 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22702 0000FE7D 48FFC6                  	inc rsi
 22703 0000FE80 48FFC2                  	inc rdx
 22704 0000FE83 EBEA                    	jmp .L_lambda_simple_env_loop_042a
 22705                                  .L_lambda_simple_env_end_042a:
 22706 0000FE85 5B                      	pop rbx
 22707 0000FE86 BE00000000              	mov rsi, 0
 22708                                  .L_lambda_simple_params_loop_042a:	; copy params
 22709 0000FE8B 4883FE00                	cmp rsi, 0
 22710 0000FE8F 740E                    	je .L_lambda_simple_params_end_042a
 22711 0000FE91 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22712 0000FE96 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22713 0000FE9A 48FFC6                  	inc rsi
 22714 0000FE9D EBEC                    	jmp .L_lambda_simple_params_loop_042a
 22715                                  .L_lambda_simple_params_end_042a:
 22716 0000FE9F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 22717 0000FEA2 4889C3                  	mov rbx, rax
 22718 0000FEA5 58                      	pop rax
 22719 0000FEA6 C60004                  	mov byte [rax], T_closure
 22720 0000FEA9 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22721 0000FEAD 48C74009[BAFE0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_042a
 22722 0000FEB5 E92D040000              	jmp .L_lambda_simple_end_042a
 22723                                  .L_lambda_simple_code_042a:	; lambda-simple body
 22724 0000FEBA 48837C241001            	cmp qword [rsp + 8 * 2], 1
 22725 0000FEC0 740B                    	je .L_lambda_simple_arity_check_ok_042a
 22726 0000FEC2 FF742410                	push qword [rsp + 8 * 2]
 22727 0000FEC6 6A01                    	push 1
 22728 0000FEC8 E9D2520000              	jmp L_error_incorrect_arity_simple
 22729                                  .L_lambda_simple_arity_check_ok_042a:
 22730 0000FECD C8000000                	enter 0, 0
 22731                                  
 22732 0000FED1 BF08000000              	mov rdi, 8
 22733 0000FED6 E80B530000              	call malloc
 22734 0000FEDB 488B5D20                	mov rbx, PARAM(0)	; param run
 22735 0000FEDF 488918                  	mov [rax], rbx	; box run
 22736 0000FEE2 48894520                	mov PARAM(0), rax	; replace param with box
 22737 0000FEE6 48B8-                   	mov rax, sob_void
 22737 0000FEE8 [0000000000000000] 
 22738                                  
 22739 0000FEF0 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22740 0000FEF5 E8EC520000              	call malloc
 22741 0000FEFA 50                      	push rax
 22742 0000FEFB BF08000000              	mov rdi, 8 * 1	; new rib
 22743 0000FF00 E8E1520000              	call malloc
 22744 0000FF05 50                      	push rax
 22745 0000FF06 BF10000000              	mov rdi, 8 * 2	; extended env
 22746 0000FF0B E8D6520000              	call malloc
 22747 0000FF10 488B7D10                	mov rdi, ENV
 22748 0000FF14 BE00000000              	mov rsi, 0
 22749 0000FF19 BA01000000              	mov rdx, 1
 22750                                  .L_lambda_simple_env_loop_042b:	; ext_env[i + 1] <-- env[i]
 22751 0000FF1E 4883FE01                	cmp rsi, 1
 22752 0000FF22 7410                    	je .L_lambda_simple_env_end_042b
 22753 0000FF24 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22754 0000FF28 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22755 0000FF2C 48FFC6                  	inc rsi
 22756 0000FF2F 48FFC2                  	inc rdx
 22757 0000FF32 EBEA                    	jmp .L_lambda_simple_env_loop_042b
 22758                                  .L_lambda_simple_env_end_042b:
 22759 0000FF34 5B                      	pop rbx
 22760 0000FF35 BE00000000              	mov rsi, 0
 22761                                  .L_lambda_simple_params_loop_042b:	; copy params
 22762 0000FF3A 4883FE01                	cmp rsi, 1
 22763 0000FF3E 740E                    	je .L_lambda_simple_params_end_042b
 22764 0000FF40 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22765 0000FF45 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22766 0000FF49 48FFC6                  	inc rsi
 22767 0000FF4C EBEC                    	jmp .L_lambda_simple_params_loop_042b
 22768                                  .L_lambda_simple_params_end_042b:
 22769 0000FF4E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 22770 0000FF51 4889C3                  	mov rbx, rax
 22771 0000FF54 58                      	pop rax
 22772 0000FF55 C60004                  	mov byte [rax], T_closure
 22773 0000FF58 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22774 0000FF5C 48C74009[69FF0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_042b
 22775 0000FF64 E971020000              	jmp .L_lambda_simple_end_042b
 22776                                  .L_lambda_simple_code_042b:	; lambda-simple body
 22777 0000FF69 48837C241002            	cmp qword [rsp + 8 * 2], 2
 22778 0000FF6F 740B                    	je .L_lambda_simple_arity_check_ok_042b
 22779 0000FF71 FF742410                	push qword [rsp + 8 * 2]
 22780 0000FF75 6A02                    	push 2
 22781 0000FF77 E923520000              	jmp L_error_incorrect_arity_simple
 22782                                  .L_lambda_simple_arity_check_ok_042b:
 22783 0000FF7C C8000000                	enter 0, 0
 22784                                  	; preparing a non-tail-call
 22785 0000FF80 488B4520                	mov rax, PARAM(0)	; param s
 22786 0000FF84 50                      	push rax
 22787 0000FF85 6A01                    	push 1	; arg count
 22788 0000FF87 488B0425[3C1B0000]      	mov rax, qword [free_var_126]	; free var null?
 22789 0000FF8F 803805                  	cmp byte [rax], T_undefined
 22790 0000FF92 0F8421510000            	je L_error_fvar_undefined
 22791 0000FF98 803804                  	cmp byte [rax], T_closure
 22792 0000FF9B 0F859C510000            	jne L_error_non_closure
 22793 0000FFA1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22794 0000FFA4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22795 0000FFA7 483D[02000000]          	cmp rax, sob_boolean_false
 22796 0000FFAD 746D                    	je .L_if_else_0312
 22797                                  	; preparing a tail-call
 22798 0000FFAF 48B8-                   	mov rax, L_constants + 4
 22798 0000FFB1 [0400000000000000] 
 22799 0000FFB9 50                      	push rax
 22800 0000FFBA 488B4528                	mov rax, PARAM(1)	; param i
 22801 0000FFBE 50                      	push rax
 22802 0000FFBF 6A02                    	push 2	; arg count
 22803 0000FFC1 488B0425[B41A0000]      	mov rax, qword [free_var_118]	; free var make-string
 22804 0000FFC9 803805                  	cmp byte [rax], T_undefined
 22805 0000FFCC 0F84E7500000            	je L_error_fvar_undefined
 22806 0000FFD2 803804                  	cmp byte [rax], T_closure
 22807 0000FFD5 0F8562510000            	jne L_error_non_closure
 22808 0000FFDB FF7001                  	push SOB_CLOSURE_ENV(rax)
 22809                                  
 22810                                  	; recycling the current frame
 22811 0000FFDE FF7508                  	push qword [rbp + 8 * 1]	; old return address
 22812 0000FFE1 FF7500                  	push qword [rbp]	; old frame-pointer
 22813 0000FFE4 B906000000              	mov rcx, 6
 22814 0000FFE9 488B5D18                	mov rbx, COUNT
 22815 0000FFED 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 22816 0000FFF2 488D55F8                	lea rdx, [rbp - 8]
 22817                                  .L_tc_recycle_frame_loop_0578:
 22818 0000FFF6 4883F900                	cmp rcx, 0
 22819 0000FFFA 7413                    	je .L_tc_recycle_frame_done_0578
 22820 0000FFFC 488B32                  	mov rsi, qword [rdx]
 22821 0000FFFF 488933                  	mov qword [rbx], rsi
 22822 00010002 48FFC9                  	dec rcx
 22823 00010005 4883EB08                	sub rbx, 8
 22824 00010009 4883EA08                	sub rdx, 8
 22825 0001000D EBE7                    	jmp .L_tc_recycle_frame_loop_0578
 22826                                  .L_tc_recycle_frame_done_0578:
 22827 0001000F 488D6308                	lea rsp, [rbx + 8]
 22828 00010013 5D                      	pop rbp
 22829 00010014 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 22830 00010017 E9BA010000              	jmp .L_if_end_0312
 22831                                  .L_if_else_0312:
 22832                                  	; preparing a tail-call
 22833                                  	; preparing a non-tail-call
 22834                                  	; preparing a non-tail-call
 22835 0001001C 48B8-                   	mov rax, L_constants + 2810
 22835 0001001E [FA0A000000000000] 
 22836 00010026 50                      	push rax
 22837 00010027 488B4528                	mov rax, PARAM(1)	; param i
 22838 0001002B 50                      	push rax
 22839 0001002C 6A02                    	push 2	; arg count
 22840 0001002E 488B0425[EF120000]      	mov rax, qword [free_var_1]	; free var +
 22841 00010036 803805                  	cmp byte [rax], T_undefined
 22842 00010039 0F847A500000            	je L_error_fvar_undefined
 22843 0001003F 803804                  	cmp byte [rax], T_closure
 22844 00010042 0F85F5500000            	jne L_error_non_closure
 22845 00010048 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22846 0001004B FF5009                  	call SOB_CLOSURE_CODE(rax)
 22847 0001004E 50                      	push rax
 22848                                  	; preparing a non-tail-call
 22849 0001004F 488B4520                	mov rax, PARAM(0)	; param s
 22850 00010053 50                      	push rax
 22851 00010054 6A01                    	push 1	; arg count
 22852 00010056 488B0425[73170000]      	mov rax, qword [free_var_69]	; free var cdr
 22853 0001005E 803805                  	cmp byte [rax], T_undefined
 22854 00010061 0F8452500000            	je L_error_fvar_undefined
 22855 00010067 803804                  	cmp byte [rax], T_closure
 22856 0001006A 0F85CD500000            	jne L_error_non_closure
 22857 00010070 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22858 00010073 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22859 00010076 50                      	push rax
 22860 00010077 6A02                    	push 2	; arg count
 22861 00010079 488B4510                	mov rax, ENV
 22862 0001007D 488B00                  	mov rax, qword [rax + 8 * 0]
 22863 00010080 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 22864 00010083 488B00                  	mov rax, qword [rax]
 22865 00010086 803804                  	cmp byte [rax], T_closure
 22866 00010089 0F85AE500000            	jne L_error_non_closure
 22867 0001008F FF7001                  	push SOB_CLOSURE_ENV(rax)
 22868 00010092 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22869 00010095 50                      	push rax
 22870 00010096 6A01                    	push 1	; arg count
 22871 00010098 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22872 0001009D E844510000              	call malloc
 22873 000100A2 50                      	push rax
 22874 000100A3 BF10000000              	mov rdi, 8 * 2	; new rib
 22875 000100A8 E839510000              	call malloc
 22876 000100AD 50                      	push rax
 22877 000100AE BF18000000              	mov rdi, 8 * 3	; extended env
 22878 000100B3 E82E510000              	call malloc
 22879 000100B8 488B7D10                	mov rdi, ENV
 22880 000100BC BE00000000              	mov rsi, 0
 22881 000100C1 BA01000000              	mov rdx, 1
 22882                                  .L_lambda_simple_env_loop_042c:	; ext_env[i + 1] <-- env[i]
 22883 000100C6 4883FE02                	cmp rsi, 2
 22884 000100CA 7410                    	je .L_lambda_simple_env_end_042c
 22885 000100CC 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22886 000100D0 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22887 000100D4 48FFC6                  	inc rsi
 22888 000100D7 48FFC2                  	inc rdx
 22889 000100DA EBEA                    	jmp .L_lambda_simple_env_loop_042c
 22890                                  .L_lambda_simple_env_end_042c:
 22891 000100DC 5B                      	pop rbx
 22892 000100DD BE00000000              	mov rsi, 0
 22893                                  .L_lambda_simple_params_loop_042c:	; copy params
 22894 000100E2 4883FE02                	cmp rsi, 2
 22895 000100E6 740E                    	je .L_lambda_simple_params_end_042c
 22896 000100E8 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22897 000100ED 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22898 000100F1 48FFC6                  	inc rsi
 22899 000100F4 EBEC                    	jmp .L_lambda_simple_params_loop_042c
 22900                                  .L_lambda_simple_params_end_042c:
 22901 000100F6 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 22902 000100F9 4889C3                  	mov rbx, rax
 22903 000100FC 58                      	pop rax
 22904 000100FD C60004                  	mov byte [rax], T_closure
 22905 00010100 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22906 00010104 48C74009[11010100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_042c
 22907 0001010C E980000000              	jmp .L_lambda_simple_end_042c
 22908                                  .L_lambda_simple_code_042c:	; lambda-simple body
 22909 00010111 48837C241001            	cmp qword [rsp + 8 * 2], 1
 22910 00010117 740B                    	je .L_lambda_simple_arity_check_ok_042c
 22911 00010119 FF742410                	push qword [rsp + 8 * 2]
 22912 0001011D 6A01                    	push 1
 22913 0001011F E97B500000              	jmp L_error_incorrect_arity_simple
 22914                                  .L_lambda_simple_arity_check_ok_042c:
 22915 00010124 C8000000                	enter 0, 0
 22916                                  	; preparing a non-tail-call
 22917                                  	; preparing a non-tail-call
 22918 00010128 488B4510                	mov rax, ENV
 22919 0001012C 488B00                  	mov rax, qword [rax + 8 * 0]
 22920 0001012F 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var s
 22921 00010132 50                      	push rax
 22922 00010133 6A01                    	push 1	; arg count
 22923 00010135 488B0425[74160000]      	mov rax, qword [free_var_54]	; free var car
 22924 0001013D 803805                  	cmp byte [rax], T_undefined
 22925 00010140 0F84734F0000            	je L_error_fvar_undefined
 22926 00010146 803804                  	cmp byte [rax], T_closure
 22927 00010149 0F85EE4F0000            	jne L_error_non_closure
 22928 0001014F FF7001                  	push SOB_CLOSURE_ENV(rax)
 22929 00010152 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22930 00010155 50                      	push rax
 22931 00010156 488B4510                	mov rax, ENV
 22932 0001015A 488B00                  	mov rax, qword [rax + 8 * 0]
 22933 0001015D 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var i
 22934 00010161 50                      	push rax
 22935 00010162 488B4520                	mov rax, PARAM(0)	; param str
 22936 00010166 50                      	push rax
 22937 00010167 6A03                    	push 3	; arg count
 22938 00010169 488B0425[5C1D0000]      	mov rax, qword [free_var_158]	; free var string-set!
 22939 00010171 803805                  	cmp byte [rax], T_undefined
 22940 00010174 0F843F4F0000            	je L_error_fvar_undefined
 22941 0001017A 803804                  	cmp byte [rax], T_closure
 22942 0001017D 0F85BA4F0000            	jne L_error_non_closure
 22943 00010183 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22944 00010186 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22945                                  
 22946 00010189 488B4520                	mov rax, PARAM(0)	; param str
 22947 0001018D C9                      	leave
 22948 0001018E C21800                  	ret AND_KILL_FRAME(1)
 22949                                  .L_lambda_simple_end_042c:	; new closure is in rax
 22950 00010191 803804                  	cmp byte [rax], T_closure
 22951 00010194 0F85A34F0000            	jne L_error_non_closure
 22952 0001019A FF7001                  	push SOB_CLOSURE_ENV(rax)
 22953                                  
 22954                                  	; recycling the current frame
 22955 0001019D FF7508                  	push qword [rbp + 8 * 1]	; old return address
 22956 000101A0 FF7500                  	push qword [rbp]	; old frame-pointer
 22957 000101A3 B905000000              	mov rcx, 5
 22958 000101A8 488B5D18                	mov rbx, COUNT
 22959 000101AC 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 22960 000101B1 488D55F8                	lea rdx, [rbp - 8]
 22961                                  .L_tc_recycle_frame_loop_0579:
 22962 000101B5 4883F900                	cmp rcx, 0
 22963 000101B9 7413                    	je .L_tc_recycle_frame_done_0579
 22964 000101BB 488B32                  	mov rsi, qword [rdx]
 22965 000101BE 488933                  	mov qword [rbx], rsi
 22966 000101C1 48FFC9                  	dec rcx
 22967 000101C4 4883EB08                	sub rbx, 8
 22968 000101C8 4883EA08                	sub rdx, 8
 22969 000101CC EBE7                    	jmp .L_tc_recycle_frame_loop_0579
 22970                                  .L_tc_recycle_frame_done_0579:
 22971 000101CE 488D6308                	lea rsp, [rbx + 8]
 22972 000101D2 5D                      	pop rbp
 22973 000101D3 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 22974                                  .L_if_end_0312:
 22975 000101D6 C9                      	leave
 22976 000101D7 C22000                  	ret AND_KILL_FRAME(2)
 22977                                  .L_lambda_simple_end_042b:	; new closure is in rax
 22978                                  
 22979 000101DA 50                      	push rax
 22980 000101DB 488B4520                	mov rax, PARAM(0)	; param run
 22981                                  
 22982 000101DF 8F00                    	pop qword[rax]
 22983 000101E1 48B8-                   	mov rax, sob_void
 22983 000101E3 [0000000000000000] 
 22984                                  
 22985 000101EB BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22986 000101F0 E8F14F0000              	call malloc
 22987 000101F5 50                      	push rax
 22988 000101F6 BF08000000              	mov rdi, 8 * 1	; new rib
 22989 000101FB E8E64F0000              	call malloc
 22990 00010200 50                      	push rax
 22991 00010201 BF10000000              	mov rdi, 8 * 2	; extended env
 22992 00010206 E8DB4F0000              	call malloc
 22993 0001020B 488B7D10                	mov rdi, ENV
 22994 0001020F BE00000000              	mov rsi, 0
 22995 00010214 BA01000000              	mov rdx, 1
 22996                                  .L_lambda_simple_env_loop_042d:	; ext_env[i + 1] <-- env[i]
 22997 00010219 4883FE01                	cmp rsi, 1
 22998 0001021D 7410                    	je .L_lambda_simple_env_end_042d
 22999 0001021F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23000 00010223 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23001 00010227 48FFC6                  	inc rsi
 23002 0001022A 48FFC2                  	inc rdx
 23003 0001022D EBEA                    	jmp .L_lambda_simple_env_loop_042d
 23004                                  .L_lambda_simple_env_end_042d:
 23005 0001022F 5B                      	pop rbx
 23006 00010230 BE00000000              	mov rsi, 0
 23007                                  .L_lambda_simple_params_loop_042d:	; copy params
 23008 00010235 4883FE01                	cmp rsi, 1
 23009 00010239 740E                    	je .L_lambda_simple_params_end_042d
 23010 0001023B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23011 00010240 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23012 00010244 48FFC6                  	inc rsi
 23013 00010247 EBEC                    	jmp .L_lambda_simple_params_loop_042d
 23014                                  .L_lambda_simple_params_end_042d:
 23015 00010249 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 23016 0001024C 4889C3                  	mov rbx, rax
 23017 0001024F 58                      	pop rax
 23018 00010250 C60004                  	mov byte [rax], T_closure
 23019 00010253 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23020 00010257 48C74009[64020100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_042d
 23021 0001025F E97F000000              	jmp .L_lambda_simple_end_042d
 23022                                  .L_lambda_simple_code_042d:	; lambda-simple body
 23023 00010264 48837C241001            	cmp qword [rsp + 8 * 2], 1
 23024 0001026A 740B                    	je .L_lambda_simple_arity_check_ok_042d
 23025 0001026C FF742410                	push qword [rsp + 8 * 2]
 23026 00010270 6A01                    	push 1
 23027 00010272 E9284F0000              	jmp L_error_incorrect_arity_simple
 23028                                  .L_lambda_simple_arity_check_ok_042d:
 23029 00010277 C8000000                	enter 0, 0
 23030                                  	; preparing a tail-call
 23031 0001027B 48B8-                   	mov rax, L_constants + 2558
 23031 0001027D [FE09000000000000] 
 23032 00010285 50                      	push rax
 23033 00010286 488B4520                	mov rax, PARAM(0)	; param s
 23034 0001028A 50                      	push rax
 23035 0001028B 6A02                    	push 2	; arg count
 23036 0001028D 488B4510                	mov rax, ENV
 23037 00010291 488B00                  	mov rax, qword [rax + 8 * 0]
 23038 00010294 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 23039 00010297 488B00                  	mov rax, qword [rax]
 23040 0001029A 803804                  	cmp byte [rax], T_closure
 23041 0001029D 0F859A4E0000            	jne L_error_non_closure
 23042 000102A3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23043                                  
 23044                                  	; recycling the current frame
 23045 000102A6 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 23046 000102A9 FF7500                  	push qword [rbp]	; old frame-pointer
 23047 000102AC B906000000              	mov rcx, 6
 23048 000102B1 488B5D18                	mov rbx, COUNT
 23049 000102B5 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 23050 000102BA 488D55F8                	lea rdx, [rbp - 8]
 23051                                  .L_tc_recycle_frame_loop_057a:
 23052 000102BE 4883F900                	cmp rcx, 0
 23053 000102C2 7413                    	je .L_tc_recycle_frame_done_057a
 23054 000102C4 488B32                  	mov rsi, qword [rdx]
 23055 000102C7 488933                  	mov qword [rbx], rsi
 23056 000102CA 48FFC9                  	dec rcx
 23057 000102CD 4883EB08                	sub rbx, 8
 23058 000102D1 4883EA08                	sub rdx, 8
 23059 000102D5 EBE7                    	jmp .L_tc_recycle_frame_loop_057a
 23060                                  .L_tc_recycle_frame_done_057a:
 23061 000102D7 488D6308                	lea rsp, [rbx + 8]
 23062 000102DB 5D                      	pop rbp
 23063 000102DC FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 23064 000102DF C9                      	leave
 23065 000102E0 C21800                  	ret AND_KILL_FRAME(1)
 23066                                  .L_lambda_simple_end_042d:	; new closure is in rax
 23067 000102E3 C9                      	leave
 23068 000102E4 C21800                  	ret AND_KILL_FRAME(1)
 23069                                  .L_lambda_simple_end_042a:	; new closure is in rax
 23070 000102E7 803804                  	cmp byte [rax], T_closure
 23071 000102EA 0F854D4E0000            	jne L_error_non_closure
 23072 000102F0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23073 000102F3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23074 000102F6 48890425[0A1A0000]      	mov qword [free_var_108], rax
 23075 000102FE 48B8-                   	mov rax, sob_void
 23075 00010300 [0000000000000000] 
 23076                                  
 23077 00010308 4889C7                  	mov rdi, rax
 23078 0001030B E82B510000              	call print_sexpr_if_not_void
 23079                                  
 23080 00010310 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23081 00010315 E8CC4E0000              	call malloc
 23082 0001031A 50                      	push rax
 23083 0001031B BF00000000              	mov rdi, 8 * 0	; new rib
 23084 00010320 E8C14E0000              	call malloc
 23085 00010325 50                      	push rax
 23086 00010326 BF08000000              	mov rdi, 8 * 1	; extended env
 23087 0001032B E8B64E0000              	call malloc
 23088 00010330 488B7D10                	mov rdi, ENV
 23089 00010334 BE00000000              	mov rsi, 0
 23090 00010339 BA01000000              	mov rdx, 1
 23091                                  .L_lambda_opt_env_loop_008f:	; ext_env[i + 1] <-- env[i]
 23092 0001033E 4883FE00                	cmp rsi, 0
 23093 00010342 7410                    	je .L_lambda_opt_env_end_008f
 23094 00010344 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23095 00010348 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23096 0001034C 48FFC6                  	inc rsi
 23097 0001034F 48FFC2                  	inc rdx
 23098 00010352 EBEA                    	jmp .L_lambda_opt_env_loop_008f
 23099                                  .L_lambda_opt_env_end_008f:
 23100 00010354 5B                      	pop rbx
 23101 00010355 BE00000000              	mov rsi, 0
 23102                                  .L_lambda_opt_params_loop_008f:	; copy params
 23103 0001035A 4883FE00                	cmp rsi, 0
 23104 0001035E 740E                    	je .L_lambda_opt_params_end_008f
 23105 00010360 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23106 00010365 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23107 00010369 48FFC6                  	inc rsi
 23108 0001036C EBEC                    	jmp .L_lambda_opt_params_loop_008f
 23109                                  .L_lambda_opt_params_end_008f:
 23110 0001036E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 23111 00010371 4889C3                  	mov rbx, rax
 23112 00010374 58                      	pop rax
 23113 00010375 C60004                  	mov byte [rax], T_closure
 23114 00010378 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23115 0001037C 48C74009[89030100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_008f
 23116 00010384 E938010000              	jmp .L_lambda_opt_end_008f
 23117                                  .L_lambda_opt_code_008f:	; lambda-simple body
 23118 00010389 48837C241000            	cmp qword [rsp + 8 * 2], 0 ;	 check num of args
 23119 0001038F 740D                    	je .L_lambda_opt_arity_check_exact_008f ;	 if equal, go to exact arity
 23120 00010391 7F42                    	jg .L_lambda_opt_arity_check_more_008f ;	 if greater than, go to arity more
 23121 00010393 FF742410                	push qword [rsp + 8 * 2] ;	 else, throw opt arity error
 23122 00010397 6A00                    	push 0
 23123 00010399 E9154E0000              	jmp L_error_incorrect_arity_opt
 23124                                  .L_lambda_opt_arity_check_exact_008f:
 23125 0001039E 488B442410              	mov rax, qword [rsp + 8 * 2] ;	 number of args
 23126 000103A3 488D5CC410              	lea rbx, [rsp + 8 * (2 + rax)] ;	 address of last element
 23127 000103A8 4883EC08                	sub rsp, 8
 23128 000103AC 488D0C24                	lea rcx, [rsp + 0] ;	 new start
 23129                                  .L_lambda_opt_shift_entry_008f:
 23130 000103B0 488B5108                	mov rdx, [rcx + 8]
 23131 000103B4 488911                  	mov [rcx], rdx
 23132 000103B7 4883C108                	add rcx, 8
 23133 000103BB 4839CB                  	cmp rbx, rcx
 23134 000103BE 75F0                    	jne .L_lambda_opt_shift_entry_008f
 23135                                  .L_lambda_opt_shift_exit_008f:
 23136 000103C0 48C703[01000000]        	mov qword[rbx], sob_nil ;	 place nil
 23137 000103C7 4883C001                	add rax, 1
 23138 000103CB 4889442410              	mov qword [rsp + 8 * 2], rax
 23139 000103D0 E987000000              	jmp .L_lambda_opt_stack_adjusted_008f
 23140                                  .L_lambda_opt_arity_check_more_008f:
 23141 000103D5 48BA-                   	mov rdx, sob_nil ;	 base cdr
 23141 000103D7 [0100000000000000] 
 23142 000103DF 48837C241001            	cmp qword [rsp + 8 * 2], 1
 23143 000103E5 7451                    	je .L_lambda_opt_stack_shrink_loop_exit_008f
 23144                                  .L_lambda_opt_stack_shrink_loop_008f:
 23145 000103E7 BF11000000              	mov rdi, (1 + 8 + 8)
 23146 000103EC E8F54D0000              	call malloc
 23147 000103F1 C60021                  	mov byte[rax], T_pair
 23148 000103F4 48895009                	mov SOB_PAIR_CDR(rax), rdx
 23149 000103F8 4889C2                  	mov rdx, rax
 23150 000103FB 488B442410              	mov rax, qword [rsp + 8 * 2]
 23151 00010400 488B5CC410              	mov rbx, qword [rsp + 8 * (2 + rax)]
 23152 00010405 48895A01                	mov SOB_PAIR_CAR(rdx), rbx
 23153 00010409 488D5CC408              	lea rbx, [rsp + 8 * (2 + rax - 1)]
 23154                                  .L_lambda_opt_extra_shift_process_008f:
 23155 0001040E 488B0B                  	mov rcx, [rbx]
 23156 00010411 48894B08                	mov [rbx + 8], rcx
 23157 00010415 4883EB08                	sub rbx, 8
 23158 00010419 4839DC                  	cmp rsp, rbx
 23159 0001041C 7EF0                    	jle .L_lambda_opt_extra_shift_process_008f
 23160                                  .L_lambda_opt_extra_shift_process_end_008f:
 23161 0001041E 4883C408                	add rsp, 8
 23162 00010422 488B5C2410              	mov rbx, [rsp + 8 * 2]
 23163 00010427 4883EB01                	sub rbx, 1
 23164 0001042B 48895C2410              	mov [rsp + 8 * 2], rbx
 23165 00010430 48837C241001            	cmp qword [rsp + 8 * 2], 1
 23166 00010436 7FAF                    	jg .L_lambda_opt_stack_shrink_loop_008f
 23167                                  .L_lambda_opt_stack_shrink_loop_exit_008f:
 23168 00010438 488B4C2410              	mov rcx, [rsp + 8 * 2]
 23169 0001043D 488B5CCC10              	mov rbx, qword [rsp + 8 * (2 + rcx)]
 23170 00010442 BF11000000              	mov rdi, (1 + 8 + 8)
 23171 00010447 E89A4D0000              	call malloc
 23172 0001044C C60021                  	mov byte[rax], T_pair
 23173 0001044F 48895009                	mov SOB_PAIR_CDR(rax), rdx
 23174 00010453 48895801                	mov SOB_PAIR_CAR(rax), rbx
 23175 00010457 488944CC10              	mov [rsp + 8 * (2 + rcx)], rax
 23176                                  .L_lambda_opt_stack_adjusted_008f:
 23177 0001045C C8000000                	enter 0, 0
 23178                                  	; preparing a tail-call
 23179 00010460 488B4520                	mov rax, PARAM(0)	; param s
 23180 00010464 50                      	push rax
 23181 00010465 6A01                    	push 1	; arg count
 23182 00010467 488B0425[1B1A0000]      	mov rax, qword [free_var_109]	; free var list->vector
 23183 0001046F 803805                  	cmp byte [rax], T_undefined
 23184 00010472 0F84414C0000            	je L_error_fvar_undefined
 23185 00010478 803804                  	cmp byte [rax], T_closure
 23186 0001047B 0F85BC4C0000            	jne L_error_non_closure
 23187 00010481 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23188                                  
 23189                                  	; recycling the current frame
 23190 00010484 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 23191 00010487 FF7500                  	push qword [rbp]	; old frame-pointer
 23192 0001048A B905000000              	mov rcx, 5
 23193 0001048F 488B5D18                	mov rbx, COUNT
 23194 00010493 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 23195 00010498 488D55F8                	lea rdx, [rbp - 8]
 23196                                  .L_tc_recycle_frame_loop_057b:
 23197 0001049C 4883F900                	cmp rcx, 0
 23198 000104A0 7413                    	je .L_tc_recycle_frame_done_057b
 23199 000104A2 488B32                  	mov rsi, qword [rdx]
 23200 000104A5 488933                  	mov qword [rbx], rsi
 23201 000104A8 48FFC9                  	dec rcx
 23202 000104AB 4883EB08                	sub rbx, 8
 23203 000104AF 4883EA08                	sub rdx, 8
 23204 000104B3 EBE7                    	jmp .L_tc_recycle_frame_loop_057b
 23205                                  .L_tc_recycle_frame_done_057b:
 23206 000104B5 488D6308                	lea rsp, [rbx + 8]
 23207 000104B9 5D                      	pop rbp
 23208 000104BA FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 23209 000104BD C9                      	leave
 23210 000104BE C21800                  	ret AND_KILL_FRAME(1)
 23211                                  .L_lambda_opt_end_008f:	; new closure is in rax
 23212 000104C1 48890425[171E0000]      	mov qword [free_var_169], rax
 23213 000104C9 48B8-                   	mov rax, sob_void
 23213 000104CB [0000000000000000] 
 23214                                  
 23215 000104D3 4889C7                  	mov rdi, rax
 23216 000104D6 E8604F0000              	call print_sexpr_if_not_void
 23217                                  
 23218                                  	; preparing a non-tail-call
 23219 000104DB 48B8-                   	mov rax, L_constants + 2335
 23219 000104DD [1F09000000000000] 
 23220 000104E5 50                      	push rax
 23221 000104E6 6A01                    	push 1	; arg count
 23222 000104E8 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23223 000104ED E8F44C0000              	call malloc
 23224 000104F2 50                      	push rax
 23225 000104F3 BF00000000              	mov rdi, 8 * 0	; new rib
 23226 000104F8 E8E94C0000              	call malloc
 23227 000104FD 50                      	push rax
 23228 000104FE BF08000000              	mov rdi, 8 * 1	; extended env
 23229 00010503 E8DE4C0000              	call malloc
 23230 00010508 488B7D10                	mov rdi, ENV
 23231 0001050C BE00000000              	mov rsi, 0
 23232 00010511 BA01000000              	mov rdx, 1
 23233                                  .L_lambda_simple_env_loop_042e:	; ext_env[i + 1] <-- env[i]
 23234 00010516 4883FE00                	cmp rsi, 0
 23235 0001051A 7410                    	je .L_lambda_simple_env_end_042e
 23236 0001051C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23237 00010520 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23238 00010524 48FFC6                  	inc rsi
 23239 00010527 48FFC2                  	inc rdx
 23240 0001052A EBEA                    	jmp .L_lambda_simple_env_loop_042e
 23241                                  .L_lambda_simple_env_end_042e:
 23242 0001052C 5B                      	pop rbx
 23243 0001052D BE00000000              	mov rsi, 0
 23244                                  .L_lambda_simple_params_loop_042e:	; copy params
 23245 00010532 4883FE00                	cmp rsi, 0
 23246 00010536 740E                    	je .L_lambda_simple_params_end_042e
 23247 00010538 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23248 0001053D 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23249 00010541 48FFC6                  	inc rsi
 23250 00010544 EBEC                    	jmp .L_lambda_simple_params_loop_042e
 23251                                  .L_lambda_simple_params_end_042e:
 23252 00010546 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 23253 00010549 4889C3                  	mov rbx, rax
 23254 0001054C 58                      	pop rax
 23255 0001054D C60004                  	mov byte [rax], T_closure
 23256 00010550 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23257 00010554 48C74009[61050100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_042e
 23258 0001055C E924030000              	jmp .L_lambda_simple_end_042e
 23259                                  .L_lambda_simple_code_042e:	; lambda-simple body
 23260 00010561 48837C241001            	cmp qword [rsp + 8 * 2], 1
 23261 00010567 740B                    	je .L_lambda_simple_arity_check_ok_042e
 23262 00010569 FF742410                	push qword [rsp + 8 * 2]
 23263 0001056D 6A01                    	push 1
 23264 0001056F E92B4C0000              	jmp L_error_incorrect_arity_simple
 23265                                  .L_lambda_simple_arity_check_ok_042e:
 23266 00010574 C8000000                	enter 0, 0
 23267                                  
 23268 00010578 BF08000000              	mov rdi, 8
 23269 0001057D E8644C0000              	call malloc
 23270 00010582 488B5D20                	mov rbx, PARAM(0)	; param run
 23271 00010586 488918                  	mov [rax], rbx	; box run
 23272 00010589 48894520                	mov PARAM(0), rax	; replace param with box
 23273 0001058D 48B8-                   	mov rax, sob_void
 23273 0001058F [0000000000000000] 
 23274                                  
 23275 00010597 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23276 0001059C E8454C0000              	call malloc
 23277 000105A1 50                      	push rax
 23278 000105A2 BF08000000              	mov rdi, 8 * 1	; new rib
 23279 000105A7 E83A4C0000              	call malloc
 23280 000105AC 50                      	push rax
 23281 000105AD BF10000000              	mov rdi, 8 * 2	; extended env
 23282 000105B2 E82F4C0000              	call malloc
 23283 000105B7 488B7D10                	mov rdi, ENV
 23284 000105BB BE00000000              	mov rsi, 0
 23285 000105C0 BA01000000              	mov rdx, 1
 23286                                  .L_lambda_simple_env_loop_042f:	; ext_env[i + 1] <-- env[i]
 23287 000105C5 4883FE01                	cmp rsi, 1
 23288 000105C9 7410                    	je .L_lambda_simple_env_end_042f
 23289 000105CB 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23290 000105CF 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23291 000105D3 48FFC6                  	inc rsi
 23292 000105D6 48FFC2                  	inc rdx
 23293 000105D9 EBEA                    	jmp .L_lambda_simple_env_loop_042f
 23294                                  .L_lambda_simple_env_end_042f:
 23295 000105DB 5B                      	pop rbx
 23296 000105DC BE00000000              	mov rsi, 0
 23297                                  .L_lambda_simple_params_loop_042f:	; copy params
 23298 000105E1 4883FE01                	cmp rsi, 1
 23299 000105E5 740E                    	je .L_lambda_simple_params_end_042f
 23300 000105E7 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23301 000105EC 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23302 000105F0 48FFC6                  	inc rsi
 23303 000105F3 EBEC                    	jmp .L_lambda_simple_params_loop_042f
 23304                                  .L_lambda_simple_params_end_042f:
 23305 000105F5 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 23306 000105F8 4889C3                  	mov rbx, rax
 23307 000105FB 58                      	pop rax
 23308 000105FC C60004                  	mov byte [rax], T_closure
 23309 000105FF 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23310 00010603 48C74009[10060100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_042f
 23311 0001060B E940010000              	jmp .L_lambda_simple_end_042f
 23312                                  .L_lambda_simple_code_042f:	; lambda-simple body
 23313 00010610 48837C241003            	cmp qword [rsp + 8 * 2], 3
 23314 00010616 740B                    	je .L_lambda_simple_arity_check_ok_042f
 23315 00010618 FF742410                	push qword [rsp + 8 * 2]
 23316 0001061C 6A03                    	push 3
 23317 0001061E E97C4B0000              	jmp L_error_incorrect_arity_simple
 23318                                  .L_lambda_simple_arity_check_ok_042f:
 23319 00010623 C8000000                	enter 0, 0
 23320                                  	; preparing a non-tail-call
 23321 00010627 488B4530                	mov rax, PARAM(2)	; param n
 23322 0001062B 50                      	push rax
 23323 0001062C 488B4528                	mov rax, PARAM(1)	; param i
 23324 00010630 50                      	push rax
 23325 00010631 6A02                    	push 2	; arg count
 23326 00010633 488B0425[22130000]      	mov rax, qword [free_var_4]	; free var <
 23327 0001063B 803805                  	cmp byte [rax], T_undefined
 23328 0001063E 0F84754A0000            	je L_error_fvar_undefined
 23329 00010644 803804                  	cmp byte [rax], T_closure
 23330 00010647 0F85F04A0000            	jne L_error_non_closure
 23331 0001064D FF7001                  	push SOB_CLOSURE_ENV(rax)
 23332 00010650 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23333 00010653 483D[02000000]          	cmp rax, sob_boolean_false
 23334 00010659 0F84E3000000            	je .L_if_else_0313
 23335                                  	; preparing a tail-call
 23336                                  	; preparing a non-tail-call
 23337 0001065F 488B4530                	mov rax, PARAM(2)	; param n
 23338 00010663 50                      	push rax
 23339                                  	; preparing a non-tail-call
 23340 00010664 48B8-                   	mov rax, L_constants + 2810
 23340 00010666 [FA0A000000000000] 
 23341 0001066E 50                      	push rax
 23342 0001066F 488B4528                	mov rax, PARAM(1)	; param i
 23343 00010673 50                      	push rax
 23344 00010674 6A02                    	push 2	; arg count
 23345 00010676 488B0425[EF120000]      	mov rax, qword [free_var_1]	; free var +
 23346 0001067E 803805                  	cmp byte [rax], T_undefined
 23347 00010681 0F84324A0000            	je L_error_fvar_undefined
 23348 00010687 803804                  	cmp byte [rax], T_closure
 23349 0001068A 0F85AD4A0000            	jne L_error_non_closure
 23350 00010690 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23351 00010693 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23352 00010696 50                      	push rax
 23353 00010697 488B4520                	mov rax, PARAM(0)	; param str
 23354 0001069B 50                      	push rax
 23355 0001069C 6A03                    	push 3	; arg count
 23356 0001069E 488B4510                	mov rax, ENV
 23357 000106A2 488B00                  	mov rax, qword [rax + 8 * 0]
 23358 000106A5 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 23359 000106A8 488B00                  	mov rax, qword [rax]
 23360 000106AB 803804                  	cmp byte [rax], T_closure
 23361 000106AE 0F85894A0000            	jne L_error_non_closure
 23362 000106B4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23363 000106B7 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23364 000106BA 50                      	push rax
 23365                                  	; preparing a non-tail-call
 23366 000106BB 488B4528                	mov rax, PARAM(1)	; param i
 23367 000106BF 50                      	push rax
 23368 000106C0 488B4520                	mov rax, PARAM(0)	; param str
 23369 000106C4 50                      	push rax
 23370 000106C5 6A02                    	push 2	; arg count
 23371 000106C7 488B0425[291D0000]      	mov rax, qword [free_var_155]	; free var string-ref
 23372 000106CF 803805                  	cmp byte [rax], T_undefined
 23373 000106D2 0F84E1490000            	je L_error_fvar_undefined
 23374 000106D8 803804                  	cmp byte [rax], T_closure
 23375 000106DB 0F855C4A0000            	jne L_error_non_closure
 23376 000106E1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23377 000106E4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23378 000106E7 50                      	push rax
 23379 000106E8 6A02                    	push 2	; arg count
 23380 000106EA 488B0425[83180000]      	mov rax, qword [free_var_85]	; free var cons
 23381 000106F2 803805                  	cmp byte [rax], T_undefined
 23382 000106F5 0F84BE490000            	je L_error_fvar_undefined
 23383 000106FB 803804                  	cmp byte [rax], T_closure
 23384 000106FE 0F85394A0000            	jne L_error_non_closure
 23385 00010704 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23386                                  
 23387                                  	; recycling the current frame
 23388 00010707 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 23389 0001070A FF7500                  	push qword [rbp]	; old frame-pointer
 23390 0001070D B906000000              	mov rcx, 6
 23391 00010712 488B5D18                	mov rbx, COUNT
 23392 00010716 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 23393 0001071B 488D55F8                	lea rdx, [rbp - 8]
 23394                                  .L_tc_recycle_frame_loop_057c:
 23395 0001071F 4883F900                	cmp rcx, 0
 23396 00010723 7413                    	je .L_tc_recycle_frame_done_057c
 23397 00010725 488B32                  	mov rsi, qword [rdx]
 23398 00010728 488933                  	mov qword [rbx], rsi
 23399 0001072B 48FFC9                  	dec rcx
 23400 0001072E 4883EB08                	sub rbx, 8
 23401 00010732 4883EA08                	sub rdx, 8
 23402 00010736 EBE7                    	jmp .L_tc_recycle_frame_loop_057c
 23403                                  .L_tc_recycle_frame_done_057c:
 23404 00010738 488D6308                	lea rsp, [rbx + 8]
 23405 0001073C 5D                      	pop rbp
 23406 0001073D FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 23407 00010740 EB0A                    	jmp .L_if_end_0313
 23408                                  .L_if_else_0313:
 23409 00010742 48B8-                   	mov rax, L_constants + 1
 23409 00010744 [0100000000000000] 
 23410                                  .L_if_end_0313:
 23411 0001074C C9                      	leave
 23412 0001074D C22800                  	ret AND_KILL_FRAME(3)
 23413                                  .L_lambda_simple_end_042f:	; new closure is in rax
 23414                                  
 23415 00010750 50                      	push rax
 23416 00010751 488B4520                	mov rax, PARAM(0)	; param run
 23417                                  
 23418 00010755 8F00                    	pop qword[rax]
 23419 00010757 48B8-                   	mov rax, sob_void
 23419 00010759 [0000000000000000] 
 23420                                  
 23421 00010761 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23422 00010766 E87B4A0000              	call malloc
 23423 0001076B 50                      	push rax
 23424 0001076C BF08000000              	mov rdi, 8 * 1	; new rib
 23425 00010771 E8704A0000              	call malloc
 23426 00010776 50                      	push rax
 23427 00010777 BF10000000              	mov rdi, 8 * 2	; extended env
 23428 0001077C E8654A0000              	call malloc
 23429 00010781 488B7D10                	mov rdi, ENV
 23430 00010785 BE00000000              	mov rsi, 0
 23431 0001078A BA01000000              	mov rdx, 1
 23432                                  .L_lambda_simple_env_loop_0430:	; ext_env[i + 1] <-- env[i]
 23433 0001078F 4883FE01                	cmp rsi, 1
 23434 00010793 7410                    	je .L_lambda_simple_env_end_0430
 23435 00010795 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23436 00010799 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23437 0001079D 48FFC6                  	inc rsi
 23438 000107A0 48FFC2                  	inc rdx
 23439 000107A3 EBEA                    	jmp .L_lambda_simple_env_loop_0430
 23440                                  .L_lambda_simple_env_end_0430:
 23441 000107A5 5B                      	pop rbx
 23442 000107A6 BE00000000              	mov rsi, 0
 23443                                  .L_lambda_simple_params_loop_0430:	; copy params
 23444 000107AB 4883FE01                	cmp rsi, 1
 23445 000107AF 740E                    	je .L_lambda_simple_params_end_0430
 23446 000107B1 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23447 000107B6 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23448 000107BA 48FFC6                  	inc rsi
 23449 000107BD EBEC                    	jmp .L_lambda_simple_params_loop_0430
 23450                                  .L_lambda_simple_params_end_0430:
 23451 000107BF 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 23452 000107C2 4889C3                  	mov rbx, rax
 23453 000107C5 58                      	pop rax
 23454 000107C6 C60004                  	mov byte [rax], T_closure
 23455 000107C9 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23456 000107CD 48C74009[DA070100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0430
 23457 000107D5 E9A7000000              	jmp .L_lambda_simple_end_0430
 23458                                  .L_lambda_simple_code_0430:	; lambda-simple body
 23459 000107DA 48837C241001            	cmp qword [rsp + 8 * 2], 1
 23460 000107E0 740B                    	je .L_lambda_simple_arity_check_ok_0430
 23461 000107E2 FF742410                	push qword [rsp + 8 * 2]
 23462 000107E6 6A01                    	push 1
 23463 000107E8 E9B2490000              	jmp L_error_incorrect_arity_simple
 23464                                  .L_lambda_simple_arity_check_ok_0430:
 23465 000107ED C8000000                	enter 0, 0
 23466                                  	; preparing a tail-call
 23467                                  	; preparing a non-tail-call
 23468 000107F1 488B4520                	mov rax, PARAM(0)	; param str
 23469 000107F5 50                      	push rax
 23470 000107F6 6A01                    	push 1	; arg count
 23471 000107F8 488B0425[181D0000]      	mov rax, qword [free_var_154]	; free var string-length
 23472 00010800 803805                  	cmp byte [rax], T_undefined
 23473 00010803 0F84B0480000            	je L_error_fvar_undefined
 23474 00010809 803804                  	cmp byte [rax], T_closure
 23475 0001080C 0F852B490000            	jne L_error_non_closure
 23476 00010812 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23477 00010815 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23478 00010818 50                      	push rax
 23479 00010819 48B8-                   	mov rax, L_constants + 2558
 23479 0001081B [FE09000000000000] 
 23480 00010823 50                      	push rax
 23481 00010824 488B4520                	mov rax, PARAM(0)	; param str
 23482 00010828 50                      	push rax
 23483 00010829 6A03                    	push 3	; arg count
 23484 0001082B 488B4510                	mov rax, ENV
 23485 0001082F 488B00                  	mov rax, qword [rax + 8 * 0]
 23486 00010832 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 23487 00010835 488B00                  	mov rax, qword [rax]
 23488 00010838 803804                  	cmp byte [rax], T_closure
 23489 0001083B 0F85FC480000            	jne L_error_non_closure
 23490 00010841 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23491                                  
 23492                                  	; recycling the current frame
 23493 00010844 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 23494 00010847 FF7500                  	push qword [rbp]	; old frame-pointer
 23495 0001084A B907000000              	mov rcx, 7
 23496 0001084F 488B5D18                	mov rbx, COUNT
 23497 00010853 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 23498 00010858 488D55F8                	lea rdx, [rbp - 8]
 23499                                  .L_tc_recycle_frame_loop_057d:
 23500 0001085C 4883F900                	cmp rcx, 0
 23501 00010860 7413                    	je .L_tc_recycle_frame_done_057d
 23502 00010862 488B32                  	mov rsi, qword [rdx]
 23503 00010865 488933                  	mov qword [rbx], rsi
 23504 00010868 48FFC9                  	dec rcx
 23505 0001086B 4883EB08                	sub rbx, 8
 23506 0001086F 4883EA08                	sub rdx, 8
 23507 00010873 EBE7                    	jmp .L_tc_recycle_frame_loop_057d
 23508                                  .L_tc_recycle_frame_done_057d:
 23509 00010875 488D6308                	lea rsp, [rbx + 8]
 23510 00010879 5D                      	pop rbp
 23511 0001087A FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 23512 0001087D C9                      	leave
 23513 0001087E C21800                  	ret AND_KILL_FRAME(1)
 23514                                  .L_lambda_simple_end_0430:	; new closure is in rax
 23515 00010881 C9                      	leave
 23516 00010882 C21800                  	ret AND_KILL_FRAME(1)
 23517                                  .L_lambda_simple_end_042e:	; new closure is in rax
 23518 00010885 803804                  	cmp byte [rax], T_closure
 23519 00010888 0F85AF480000            	jne L_error_non_closure
 23520 0001088E FF7001                  	push SOB_CLOSURE_ENV(rax)
 23521 00010891 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23522 00010894 48890425[901C0000]      	mov qword [free_var_146], rax
 23523 0001089C 48B8-                   	mov rax, sob_void
 23523 0001089E [0000000000000000] 
 23524                                  
 23525 000108A6 4889C7                  	mov rdi, rax
 23526 000108A9 E88D4B0000              	call print_sexpr_if_not_void
 23527                                  
 23528                                  	; preparing a non-tail-call
 23529 000108AE 48B8-                   	mov rax, L_constants + 2335
 23529 000108B0 [1F09000000000000] 
 23530 000108B8 50                      	push rax
 23531 000108B9 6A01                    	push 1	; arg count
 23532 000108BB BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23533 000108C0 E821490000              	call malloc
 23534 000108C5 50                      	push rax
 23535 000108C6 BF00000000              	mov rdi, 8 * 0	; new rib
 23536 000108CB E816490000              	call malloc
 23537 000108D0 50                      	push rax
 23538 000108D1 BF08000000              	mov rdi, 8 * 1	; extended env
 23539 000108D6 E80B490000              	call malloc
 23540 000108DB 488B7D10                	mov rdi, ENV
 23541 000108DF BE00000000              	mov rsi, 0
 23542 000108E4 BA01000000              	mov rdx, 1
 23543                                  .L_lambda_simple_env_loop_0431:	; ext_env[i + 1] <-- env[i]
 23544 000108E9 4883FE00                	cmp rsi, 0
 23545 000108ED 7410                    	je .L_lambda_simple_env_end_0431
 23546 000108EF 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23547 000108F3 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23548 000108F7 48FFC6                  	inc rsi
 23549 000108FA 48FFC2                  	inc rdx
 23550 000108FD EBEA                    	jmp .L_lambda_simple_env_loop_0431
 23551                                  .L_lambda_simple_env_end_0431:
 23552 000108FF 5B                      	pop rbx
 23553 00010900 BE00000000              	mov rsi, 0
 23554                                  .L_lambda_simple_params_loop_0431:	; copy params
 23555 00010905 4883FE00                	cmp rsi, 0
 23556 00010909 740E                    	je .L_lambda_simple_params_end_0431
 23557 0001090B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23558 00010910 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23559 00010914 48FFC6                  	inc rsi
 23560 00010917 EBEC                    	jmp .L_lambda_simple_params_loop_0431
 23561                                  .L_lambda_simple_params_end_0431:
 23562 00010919 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 23563 0001091C 4889C3                  	mov rbx, rax
 23564 0001091F 58                      	pop rax
 23565 00010920 C60004                  	mov byte [rax], T_closure
 23566 00010923 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23567 00010927 48C74009[34090100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0431
 23568 0001092F E924030000              	jmp .L_lambda_simple_end_0431
 23569                                  .L_lambda_simple_code_0431:	; lambda-simple body
 23570 00010934 48837C241001            	cmp qword [rsp + 8 * 2], 1
 23571 0001093A 740B                    	je .L_lambda_simple_arity_check_ok_0431
 23572 0001093C FF742410                	push qword [rsp + 8 * 2]
 23573 00010940 6A01                    	push 1
 23574 00010942 E958480000              	jmp L_error_incorrect_arity_simple
 23575                                  .L_lambda_simple_arity_check_ok_0431:
 23576 00010947 C8000000                	enter 0, 0
 23577                                  
 23578 0001094B BF08000000              	mov rdi, 8
 23579 00010950 E891480000              	call malloc
 23580 00010955 488B5D20                	mov rbx, PARAM(0)	; param run
 23581 00010959 488918                  	mov [rax], rbx	; box run
 23582 0001095C 48894520                	mov PARAM(0), rax	; replace param with box
 23583 00010960 48B8-                   	mov rax, sob_void
 23583 00010962 [0000000000000000] 
 23584                                  
 23585 0001096A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23586 0001096F E872480000              	call malloc
 23587 00010974 50                      	push rax
 23588 00010975 BF08000000              	mov rdi, 8 * 1	; new rib
 23589 0001097A E867480000              	call malloc
 23590 0001097F 50                      	push rax
 23591 00010980 BF10000000              	mov rdi, 8 * 2	; extended env
 23592 00010985 E85C480000              	call malloc
 23593 0001098A 488B7D10                	mov rdi, ENV
 23594 0001098E BE00000000              	mov rsi, 0
 23595 00010993 BA01000000              	mov rdx, 1
 23596                                  .L_lambda_simple_env_loop_0432:	; ext_env[i + 1] <-- env[i]
 23597 00010998 4883FE01                	cmp rsi, 1
 23598 0001099C 7410                    	je .L_lambda_simple_env_end_0432
 23599 0001099E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23600 000109A2 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23601 000109A6 48FFC6                  	inc rsi
 23602 000109A9 48FFC2                  	inc rdx
 23603 000109AC EBEA                    	jmp .L_lambda_simple_env_loop_0432
 23604                                  .L_lambda_simple_env_end_0432:
 23605 000109AE 5B                      	pop rbx
 23606 000109AF BE00000000              	mov rsi, 0
 23607                                  .L_lambda_simple_params_loop_0432:	; copy params
 23608 000109B4 4883FE01                	cmp rsi, 1
 23609 000109B8 740E                    	je .L_lambda_simple_params_end_0432
 23610 000109BA 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23611 000109BF 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23612 000109C3 48FFC6                  	inc rsi
 23613 000109C6 EBEC                    	jmp .L_lambda_simple_params_loop_0432
 23614                                  .L_lambda_simple_params_end_0432:
 23615 000109C8 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 23616 000109CB 4889C3                  	mov rbx, rax
 23617 000109CE 58                      	pop rax
 23618 000109CF C60004                  	mov byte [rax], T_closure
 23619 000109D2 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23620 000109D6 48C74009[E3090100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0432
 23621 000109DE E940010000              	jmp .L_lambda_simple_end_0432
 23622                                  .L_lambda_simple_code_0432:	; lambda-simple body
 23623 000109E3 48837C241003            	cmp qword [rsp + 8 * 2], 3
 23624 000109E9 740B                    	je .L_lambda_simple_arity_check_ok_0432
 23625 000109EB FF742410                	push qword [rsp + 8 * 2]
 23626 000109EF 6A03                    	push 3
 23627 000109F1 E9A9470000              	jmp L_error_incorrect_arity_simple
 23628                                  .L_lambda_simple_arity_check_ok_0432:
 23629 000109F6 C8000000                	enter 0, 0
 23630                                  	; preparing a non-tail-call
 23631 000109FA 488B4530                	mov rax, PARAM(2)	; param n
 23632 000109FE 50                      	push rax
 23633 000109FF 488B4528                	mov rax, PARAM(1)	; param i
 23634 00010A03 50                      	push rax
 23635 00010A04 6A02                    	push 2	; arg count
 23636 00010A06 488B0425[22130000]      	mov rax, qword [free_var_4]	; free var <
 23637 00010A0E 803805                  	cmp byte [rax], T_undefined
 23638 00010A11 0F84A2460000            	je L_error_fvar_undefined
 23639 00010A17 803804                  	cmp byte [rax], T_closure
 23640 00010A1A 0F851D470000            	jne L_error_non_closure
 23641 00010A20 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23642 00010A23 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23643 00010A26 483D[02000000]          	cmp rax, sob_boolean_false
 23644 00010A2C 0F84E3000000            	je .L_if_else_0314
 23645                                  	; preparing a tail-call
 23646                                  	; preparing a non-tail-call
 23647 00010A32 488B4530                	mov rax, PARAM(2)	; param n
 23648 00010A36 50                      	push rax
 23649                                  	; preparing a non-tail-call
 23650 00010A37 48B8-                   	mov rax, L_constants + 2810
 23650 00010A39 [FA0A000000000000] 
 23651 00010A41 50                      	push rax
 23652 00010A42 488B4528                	mov rax, PARAM(1)	; param i
 23653 00010A46 50                      	push rax
 23654 00010A47 6A02                    	push 2	; arg count
 23655 00010A49 488B0425[EF120000]      	mov rax, qword [free_var_1]	; free var +
 23656 00010A51 803805                  	cmp byte [rax], T_undefined
 23657 00010A54 0F845F460000            	je L_error_fvar_undefined
 23658 00010A5A 803804                  	cmp byte [rax], T_closure
 23659 00010A5D 0F85DA460000            	jne L_error_non_closure
 23660 00010A63 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23661 00010A66 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23662 00010A69 50                      	push rax
 23663 00010A6A 488B4520                	mov rax, PARAM(0)	; param v
 23664 00010A6E 50                      	push rax
 23665 00010A6F 6A03                    	push 3	; arg count
 23666 00010A71 488B4510                	mov rax, ENV
 23667 00010A75 488B00                  	mov rax, qword [rax + 8 * 0]
 23668 00010A78 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 23669 00010A7B 488B00                  	mov rax, qword [rax]
 23670 00010A7E 803804                  	cmp byte [rax], T_closure
 23671 00010A81 0F85B6460000            	jne L_error_non_closure
 23672 00010A87 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23673 00010A8A FF5009                  	call SOB_CLOSURE_CODE(rax)
 23674 00010A8D 50                      	push rax
 23675                                  	; preparing a non-tail-call
 23676 00010A8E 488B4528                	mov rax, PARAM(1)	; param i
 23677 00010A92 50                      	push rax
 23678 00010A93 488B4520                	mov rax, PARAM(0)	; param v
 23679 00010A97 50                      	push rax
 23680 00010A98 6A02                    	push 2	; arg count
 23681 00010A9A 488B0425[5B1E0000]      	mov rax, qword [free_var_173]	; free var vector-ref
 23682 00010AA2 803805                  	cmp byte [rax], T_undefined
 23683 00010AA5 0F840E460000            	je L_error_fvar_undefined
 23684 00010AAB 803804                  	cmp byte [rax], T_closure
 23685 00010AAE 0F8589460000            	jne L_error_non_closure
 23686 00010AB4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23687 00010AB7 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23688 00010ABA 50                      	push rax
 23689 00010ABB 6A02                    	push 2	; arg count
 23690 00010ABD 488B0425[83180000]      	mov rax, qword [free_var_85]	; free var cons
 23691 00010AC5 803805                  	cmp byte [rax], T_undefined
 23692 00010AC8 0F84EB450000            	je L_error_fvar_undefined
 23693 00010ACE 803804                  	cmp byte [rax], T_closure
 23694 00010AD1 0F8566460000            	jne L_error_non_closure
 23695 00010AD7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23696                                  
 23697                                  	; recycling the current frame
 23698 00010ADA FF7508                  	push qword [rbp + 8 * 1]	; old return address
 23699 00010ADD FF7500                  	push qword [rbp]	; old frame-pointer
 23700 00010AE0 B906000000              	mov rcx, 6
 23701 00010AE5 488B5D18                	mov rbx, COUNT
 23702 00010AE9 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 23703 00010AEE 488D55F8                	lea rdx, [rbp - 8]
 23704                                  .L_tc_recycle_frame_loop_057e:
 23705 00010AF2 4883F900                	cmp rcx, 0
 23706 00010AF6 7413                    	je .L_tc_recycle_frame_done_057e
 23707 00010AF8 488B32                  	mov rsi, qword [rdx]
 23708 00010AFB 488933                  	mov qword [rbx], rsi
 23709 00010AFE 48FFC9                  	dec rcx
 23710 00010B01 4883EB08                	sub rbx, 8
 23711 00010B05 4883EA08                	sub rdx, 8
 23712 00010B09 EBE7                    	jmp .L_tc_recycle_frame_loop_057e
 23713                                  .L_tc_recycle_frame_done_057e:
 23714 00010B0B 488D6308                	lea rsp, [rbx + 8]
 23715 00010B0F 5D                      	pop rbp
 23716 00010B10 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 23717 00010B13 EB0A                    	jmp .L_if_end_0314
 23718                                  .L_if_else_0314:
 23719 00010B15 48B8-                   	mov rax, L_constants + 1
 23719 00010B17 [0100000000000000] 
 23720                                  .L_if_end_0314:
 23721 00010B1F C9                      	leave
 23722 00010B20 C22800                  	ret AND_KILL_FRAME(3)
 23723                                  .L_lambda_simple_end_0432:	; new closure is in rax
 23724                                  
 23725 00010B23 50                      	push rax
 23726 00010B24 488B4520                	mov rax, PARAM(0)	; param run
 23727                                  
 23728 00010B28 8F00                    	pop qword[rax]
 23729 00010B2A 48B8-                   	mov rax, sob_void
 23729 00010B2C [0000000000000000] 
 23730                                  
 23731 00010B34 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23732 00010B39 E8A8460000              	call malloc
 23733 00010B3E 50                      	push rax
 23734 00010B3F BF08000000              	mov rdi, 8 * 1	; new rib
 23735 00010B44 E89D460000              	call malloc
 23736 00010B49 50                      	push rax
 23737 00010B4A BF10000000              	mov rdi, 8 * 2	; extended env
 23738 00010B4F E892460000              	call malloc
 23739 00010B54 488B7D10                	mov rdi, ENV
 23740 00010B58 BE00000000              	mov rsi, 0
 23741 00010B5D BA01000000              	mov rdx, 1
 23742                                  .L_lambda_simple_env_loop_0433:	; ext_env[i + 1] <-- env[i]
 23743 00010B62 4883FE01                	cmp rsi, 1
 23744 00010B66 7410                    	je .L_lambda_simple_env_end_0433
 23745 00010B68 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23746 00010B6C 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23747 00010B70 48FFC6                  	inc rsi
 23748 00010B73 48FFC2                  	inc rdx
 23749 00010B76 EBEA                    	jmp .L_lambda_simple_env_loop_0433
 23750                                  .L_lambda_simple_env_end_0433:
 23751 00010B78 5B                      	pop rbx
 23752 00010B79 BE00000000              	mov rsi, 0
 23753                                  .L_lambda_simple_params_loop_0433:	; copy params
 23754 00010B7E 4883FE01                	cmp rsi, 1
 23755 00010B82 740E                    	je .L_lambda_simple_params_end_0433
 23756 00010B84 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23757 00010B89 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23758 00010B8D 48FFC6                  	inc rsi
 23759 00010B90 EBEC                    	jmp .L_lambda_simple_params_loop_0433
 23760                                  .L_lambda_simple_params_end_0433:
 23761 00010B92 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 23762 00010B95 4889C3                  	mov rbx, rax
 23763 00010B98 58                      	pop rax
 23764 00010B99 C60004                  	mov byte [rax], T_closure
 23765 00010B9C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23766 00010BA0 48C74009[AD0B0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0433
 23767 00010BA8 E9A7000000              	jmp .L_lambda_simple_end_0433
 23768                                  .L_lambda_simple_code_0433:	; lambda-simple body
 23769 00010BAD 48837C241001            	cmp qword [rsp + 8 * 2], 1
 23770 00010BB3 740B                    	je .L_lambda_simple_arity_check_ok_0433
 23771 00010BB5 FF742410                	push qword [rsp + 8 * 2]
 23772 00010BB9 6A01                    	push 1
 23773 00010BBB E9DF450000              	jmp L_error_incorrect_arity_simple
 23774                                  .L_lambda_simple_arity_check_ok_0433:
 23775 00010BC0 C8000000                	enter 0, 0
 23776                                  	; preparing a tail-call
 23777                                  	; preparing a non-tail-call
 23778 00010BC4 488B4520                	mov rax, PARAM(0)	; param v
 23779 00010BC8 50                      	push rax
 23780 00010BC9 6A01                    	push 1	; arg count
 23781 00010BCB 488B0425[4A1E0000]      	mov rax, qword [free_var_172]	; free var vector-length
 23782 00010BD3 803805                  	cmp byte [rax], T_undefined
 23783 00010BD6 0F84DD440000            	je L_error_fvar_undefined
 23784 00010BDC 803804                  	cmp byte [rax], T_closure
 23785 00010BDF 0F8558450000            	jne L_error_non_closure
 23786 00010BE5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23787 00010BE8 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23788 00010BEB 50                      	push rax
 23789 00010BEC 48B8-                   	mov rax, L_constants + 2558
 23789 00010BEE [FE09000000000000] 
 23790 00010BF6 50                      	push rax
 23791 00010BF7 488B4520                	mov rax, PARAM(0)	; param v
 23792 00010BFB 50                      	push rax
 23793 00010BFC 6A03                    	push 3	; arg count
 23794 00010BFE 488B4510                	mov rax, ENV
 23795 00010C02 488B00                  	mov rax, qword [rax + 8 * 0]
 23796 00010C05 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 23797 00010C08 488B00                  	mov rax, qword [rax]
 23798 00010C0B 803804                  	cmp byte [rax], T_closure
 23799 00010C0E 0F8529450000            	jne L_error_non_closure
 23800 00010C14 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23801                                  
 23802                                  	; recycling the current frame
 23803 00010C17 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 23804 00010C1A FF7500                  	push qword [rbp]	; old frame-pointer
 23805 00010C1D B907000000              	mov rcx, 7
 23806 00010C22 488B5D18                	mov rbx, COUNT
 23807 00010C26 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 23808 00010C2B 488D55F8                	lea rdx, [rbp - 8]
 23809                                  .L_tc_recycle_frame_loop_057f:
 23810 00010C2F 4883F900                	cmp rcx, 0
 23811 00010C33 7413                    	je .L_tc_recycle_frame_done_057f
 23812 00010C35 488B32                  	mov rsi, qword [rdx]
 23813 00010C38 488933                  	mov qword [rbx], rsi
 23814 00010C3B 48FFC9                  	dec rcx
 23815 00010C3E 4883EB08                	sub rbx, 8
 23816 00010C42 4883EA08                	sub rdx, 8
 23817 00010C46 EBE7                    	jmp .L_tc_recycle_frame_loop_057f
 23818                                  .L_tc_recycle_frame_done_057f:
 23819 00010C48 488D6308                	lea rsp, [rbx + 8]
 23820 00010C4C 5D                      	pop rbp
 23821 00010C4D FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 23822 00010C50 C9                      	leave
 23823 00010C51 C21800                  	ret AND_KILL_FRAME(1)
 23824                                  .L_lambda_simple_end_0433:	; new closure is in rax
 23825 00010C54 C9                      	leave
 23826 00010C55 C21800                  	ret AND_KILL_FRAME(1)
 23827                                  .L_lambda_simple_end_0431:	; new closure is in rax
 23828 00010C58 803804                  	cmp byte [rax], T_closure
 23829 00010C5B 0F85DC440000            	jne L_error_non_closure
 23830 00010C61 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23831 00010C64 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23832 00010C67 48890425[281E0000]      	mov qword [free_var_170], rax
 23833 00010C6F 48B8-                   	mov rax, sob_void
 23833 00010C71 [0000000000000000] 
 23834                                  
 23835 00010C79 4889C7                  	mov rdi, rax
 23836 00010C7C E8BA470000              	call print_sexpr_if_not_void
 23837                                  
 23838 00010C81 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23839 00010C86 E85B450000              	call malloc
 23840 00010C8B 50                      	push rax
 23841 00010C8C BF00000000              	mov rdi, 8 * 0	; new rib
 23842 00010C91 E850450000              	call malloc
 23843 00010C96 50                      	push rax
 23844 00010C97 BF08000000              	mov rdi, 8 * 1	; extended env
 23845 00010C9C E845450000              	call malloc
 23846 00010CA1 488B7D10                	mov rdi, ENV
 23847 00010CA5 BE00000000              	mov rsi, 0
 23848 00010CAA BA01000000              	mov rdx, 1
 23849                                  .L_lambda_simple_env_loop_0434:	; ext_env[i + 1] <-- env[i]
 23850 00010CAF 4883FE00                	cmp rsi, 0
 23851 00010CB3 7410                    	je .L_lambda_simple_env_end_0434
 23852 00010CB5 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23853 00010CB9 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23854 00010CBD 48FFC6                  	inc rsi
 23855 00010CC0 48FFC2                  	inc rdx
 23856 00010CC3 EBEA                    	jmp .L_lambda_simple_env_loop_0434
 23857                                  .L_lambda_simple_env_end_0434:
 23858 00010CC5 5B                      	pop rbx
 23859 00010CC6 BE00000000              	mov rsi, 0
 23860                                  .L_lambda_simple_params_loop_0434:	; copy params
 23861 00010CCB 4883FE00                	cmp rsi, 0
 23862 00010CCF 740E                    	je .L_lambda_simple_params_end_0434
 23863 00010CD1 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23864 00010CD6 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23865 00010CDA 48FFC6                  	inc rsi
 23866 00010CDD EBEC                    	jmp .L_lambda_simple_params_loop_0434
 23867                                  .L_lambda_simple_params_end_0434:
 23868 00010CDF 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 23869 00010CE2 4889C3                  	mov rbx, rax
 23870 00010CE5 58                      	pop rax
 23871 00010CE6 C60004                  	mov byte [rax], T_closure
 23872 00010CE9 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23873 00010CED 48C74009[FA0C0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0434
 23874 00010CF5 E99B000000              	jmp .L_lambda_simple_end_0434
 23875                                  .L_lambda_simple_code_0434:	; lambda-simple body
 23876 00010CFA 48837C241001            	cmp qword [rsp + 8 * 2], 1
 23877 00010D00 740B                    	je .L_lambda_simple_arity_check_ok_0434
 23878 00010D02 FF742410                	push qword [rsp + 8 * 2]
 23879 00010D06 6A01                    	push 1
 23880 00010D08 E992440000              	jmp L_error_incorrect_arity_simple
 23881                                  .L_lambda_simple_arity_check_ok_0434:
 23882 00010D0D C8000000                	enter 0, 0
 23883                                  	; preparing a tail-call
 23884 00010D11 488B4520                	mov rax, PARAM(0)	; param n
 23885 00010D15 50                      	push rax
 23886                                  	; preparing a non-tail-call
 23887 00010D16 6A00                    	push 0	; arg count
 23888 00010D18 488B0425[F51D0000]      	mov rax, qword [free_var_167]	; free var trng
 23889 00010D20 803805                  	cmp byte [rax], T_undefined
 23890 00010D23 0F8490430000            	je L_error_fvar_undefined
 23891 00010D29 803804                  	cmp byte [rax], T_closure
 23892 00010D2C 0F850B440000            	jne L_error_non_closure
 23893 00010D32 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23894 00010D35 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23895 00010D38 50                      	push rax
 23896 00010D39 6A02                    	push 2	; arg count
 23897 00010D3B 488B0425[3B1C0000]      	mov rax, qword [free_var_141]	; free var remainder
 23898 00010D43 803805                  	cmp byte [rax], T_undefined
 23899 00010D46 0F846D430000            	je L_error_fvar_undefined
 23900 00010D4C 803804                  	cmp byte [rax], T_closure
 23901 00010D4F 0F85E8430000            	jne L_error_non_closure
 23902 00010D55 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23903                                  
 23904                                  	; recycling the current frame
 23905 00010D58 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 23906 00010D5B FF7500                  	push qword [rbp]	; old frame-pointer
 23907 00010D5E B906000000              	mov rcx, 6
 23908 00010D63 488B5D18                	mov rbx, COUNT
 23909 00010D67 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 23910 00010D6C 488D55F8                	lea rdx, [rbp - 8]
 23911                                  .L_tc_recycle_frame_loop_0580:
 23912 00010D70 4883F900                	cmp rcx, 0
 23913 00010D74 7413                    	je .L_tc_recycle_frame_done_0580
 23914 00010D76 488B32                  	mov rsi, qword [rdx]
 23915 00010D79 488933                  	mov qword [rbx], rsi
 23916 00010D7C 48FFC9                  	dec rcx
 23917 00010D7F 4883EB08                	sub rbx, 8
 23918 00010D83 4883EA08                	sub rdx, 8
 23919 00010D87 EBE7                    	jmp .L_tc_recycle_frame_loop_0580
 23920                                  .L_tc_recycle_frame_done_0580:
 23921 00010D89 488D6308                	lea rsp, [rbx + 8]
 23922 00010D8D 5D                      	pop rbp
 23923 00010D8E FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 23924 00010D91 C9                      	leave
 23925 00010D92 C21800                  	ret AND_KILL_FRAME(1)
 23926                                  .L_lambda_simple_end_0434:	; new closure is in rax
 23927 00010D95 48890425[E61B0000]      	mov qword [free_var_136], rax
 23928 00010D9D 48B8-                   	mov rax, sob_void
 23928 00010D9F [0000000000000000] 
 23929                                  
 23930 00010DA7 4889C7                  	mov rdi, rax
 23931 00010DAA E88C460000              	call print_sexpr_if_not_void
 23932                                  
 23933 00010DAF BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23934 00010DB4 E82D440000              	call malloc
 23935 00010DB9 50                      	push rax
 23936 00010DBA BF00000000              	mov rdi, 8 * 0	; new rib
 23937 00010DBF E822440000              	call malloc
 23938 00010DC4 50                      	push rax
 23939 00010DC5 BF08000000              	mov rdi, 8 * 1	; extended env
 23940 00010DCA E817440000              	call malloc
 23941 00010DCF 488B7D10                	mov rdi, ENV
 23942 00010DD3 BE00000000              	mov rsi, 0
 23943 00010DD8 BA01000000              	mov rdx, 1
 23944                                  .L_lambda_simple_env_loop_0435:	; ext_env[i + 1] <-- env[i]
 23945 00010DDD 4883FE00                	cmp rsi, 0
 23946 00010DE1 7410                    	je .L_lambda_simple_env_end_0435
 23947 00010DE3 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23948 00010DE7 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23949 00010DEB 48FFC6                  	inc rsi
 23950 00010DEE 48FFC2                  	inc rdx
 23951 00010DF1 EBEA                    	jmp .L_lambda_simple_env_loop_0435
 23952                                  .L_lambda_simple_env_end_0435:
 23953 00010DF3 5B                      	pop rbx
 23954 00010DF4 BE00000000              	mov rsi, 0
 23955                                  .L_lambda_simple_params_loop_0435:	; copy params
 23956 00010DF9 4883FE00                	cmp rsi, 0
 23957 00010DFD 740E                    	je .L_lambda_simple_params_end_0435
 23958 00010DFF 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23959 00010E04 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23960 00010E08 48FFC6                  	inc rsi
 23961 00010E0B EBEC                    	jmp .L_lambda_simple_params_loop_0435
 23962                                  .L_lambda_simple_params_end_0435:
 23963 00010E0D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 23964 00010E10 4889C3                  	mov rbx, rax
 23965 00010E13 58                      	pop rax
 23966 00010E14 C60004                  	mov byte [rax], T_closure
 23967 00010E17 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23968 00010E1B 48C74009[280E0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0435
 23969 00010E23 E983000000              	jmp .L_lambda_simple_end_0435
 23970                                  .L_lambda_simple_code_0435:	; lambda-simple body
 23971 00010E28 48837C241001            	cmp qword [rsp + 8 * 2], 1
 23972 00010E2E 740B                    	je .L_lambda_simple_arity_check_ok_0435
 23973 00010E30 FF742410                	push qword [rsp + 8 * 2]
 23974 00010E34 6A01                    	push 1
 23975 00010E36 E964430000              	jmp L_error_incorrect_arity_simple
 23976                                  .L_lambda_simple_arity_check_ok_0435:
 23977 00010E3B C8000000                	enter 0, 0
 23978                                  	; preparing a tail-call
 23979 00010E3F 488B4520                	mov rax, PARAM(0)	; param x
 23980 00010E43 50                      	push rax
 23981 00010E44 48B8-                   	mov rax, L_constants + 2558
 23981 00010E46 [FE09000000000000] 
 23982 00010E4E 50                      	push rax
 23983 00010E4F 6A02                    	push 2	; arg count
 23984 00010E51 488B0425[22130000]      	mov rax, qword [free_var_4]	; free var <
 23985 00010E59 803805                  	cmp byte [rax], T_undefined
 23986 00010E5C 0F8457420000            	je L_error_fvar_undefined
 23987 00010E62 803804                  	cmp byte [rax], T_closure
 23988 00010E65 0F85D2420000            	jne L_error_non_closure
 23989 00010E6B FF7001                  	push SOB_CLOSURE_ENV(rax)
 23990                                  
 23991                                  	; recycling the current frame
 23992 00010E6E FF7508                  	push qword [rbp + 8 * 1]	; old return address
 23993 00010E71 FF7500                  	push qword [rbp]	; old frame-pointer
 23994 00010E74 B906000000              	mov rcx, 6
 23995 00010E79 488B5D18                	mov rbx, COUNT
 23996 00010E7D 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 23997 00010E82 488D55F8                	lea rdx, [rbp - 8]
 23998                                  .L_tc_recycle_frame_loop_0581:
 23999 00010E86 4883F900                	cmp rcx, 0
 24000 00010E8A 7413                    	je .L_tc_recycle_frame_done_0581
 24001 00010E8C 488B32                  	mov rsi, qword [rdx]
 24002 00010E8F 488933                  	mov qword [rbx], rsi
 24003 00010E92 48FFC9                  	dec rcx
 24004 00010E95 4883EB08                	sub rbx, 8
 24005 00010E99 4883EA08                	sub rdx, 8
 24006 00010E9D EBE7                    	jmp .L_tc_recycle_frame_loop_0581
 24007                                  .L_tc_recycle_frame_done_0581:
 24008 00010E9F 488D6308                	lea rsp, [rbx + 8]
 24009 00010EA3 5D                      	pop rbp
 24010 00010EA4 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 24011 00010EA7 C9                      	leave
 24012 00010EA8 C21800                  	ret AND_KILL_FRAME(1)
 24013                                  .L_lambda_simple_end_0435:	; new closure is in rax
 24014 00010EAB 48890425[A21B0000]      	mov qword [free_var_132], rax
 24015 00010EB3 48B8-                   	mov rax, sob_void
 24015 00010EB5 [0000000000000000] 
 24016                                  
 24017 00010EBD 4889C7                  	mov rdi, rax
 24018 00010EC0 E876450000              	call print_sexpr_if_not_void
 24019                                  
 24020 00010EC5 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 24021 00010ECA E817430000              	call malloc
 24022 00010ECF 50                      	push rax
 24023 00010ED0 BF00000000              	mov rdi, 8 * 0	; new rib
 24024 00010ED5 E80C430000              	call malloc
 24025 00010EDA 50                      	push rax
 24026 00010EDB BF08000000              	mov rdi, 8 * 1	; extended env
 24027 00010EE0 E801430000              	call malloc
 24028 00010EE5 488B7D10                	mov rdi, ENV
 24029 00010EE9 BE00000000              	mov rsi, 0
 24030 00010EEE BA01000000              	mov rdx, 1
 24031                                  .L_lambda_simple_env_loop_0436:	; ext_env[i + 1] <-- env[i]
 24032 00010EF3 4883FE00                	cmp rsi, 0
 24033 00010EF7 7410                    	je .L_lambda_simple_env_end_0436
 24034 00010EF9 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 24035 00010EFD 48890CD0                	mov qword [rax + 8 * rdx], rcx
 24036 00010F01 48FFC6                  	inc rsi
 24037 00010F04 48FFC2                  	inc rdx
 24038 00010F07 EBEA                    	jmp .L_lambda_simple_env_loop_0436
 24039                                  .L_lambda_simple_env_end_0436:
 24040 00010F09 5B                      	pop rbx
 24041 00010F0A BE00000000              	mov rsi, 0
 24042                                  .L_lambda_simple_params_loop_0436:	; copy params
 24043 00010F0F 4883FE00                	cmp rsi, 0
 24044 00010F13 740E                    	je .L_lambda_simple_params_end_0436
 24045 00010F15 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 24046 00010F1A 488914F3                	mov qword [rbx + 8 * rsi], rdx
 24047 00010F1E 48FFC6                  	inc rsi
 24048 00010F21 EBEC                    	jmp .L_lambda_simple_params_loop_0436
 24049                                  .L_lambda_simple_params_end_0436:
 24050 00010F23 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 24051 00010F26 4889C3                  	mov rbx, rax
 24052 00010F29 58                      	pop rax
 24053 00010F2A C60004                  	mov byte [rax], T_closure
 24054 00010F2D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 24055 00010F31 48C74009[3E0F0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0436
 24056 00010F39 E983000000              	jmp .L_lambda_simple_end_0436
 24057                                  .L_lambda_simple_code_0436:	; lambda-simple body
 24058 00010F3E 48837C241001            	cmp qword [rsp + 8 * 2], 1
 24059 00010F44 740B                    	je .L_lambda_simple_arity_check_ok_0436
 24060 00010F46 FF742410                	push qword [rsp + 8 * 2]
 24061 00010F4A 6A01                    	push 1
 24062 00010F4C E94E420000              	jmp L_error_incorrect_arity_simple
 24063                                  .L_lambda_simple_arity_check_ok_0436:
 24064 00010F51 C8000000                	enter 0, 0
 24065                                  	; preparing a tail-call
 24066 00010F55 48B8-                   	mov rax, L_constants + 2558
 24066 00010F57 [FE09000000000000] 
 24067 00010F5F 50                      	push rax
 24068 00010F60 488B4520                	mov rax, PARAM(0)	; param x
 24069 00010F64 50                      	push rax
 24070 00010F65 6A02                    	push 2	; arg count
 24071 00010F67 488B0425[22130000]      	mov rax, qword [free_var_4]	; free var <
 24072 00010F6F 803805                  	cmp byte [rax], T_undefined
 24073 00010F72 0F8441410000            	je L_error_fvar_undefined
 24074 00010F78 803804                  	cmp byte [rax], T_closure
 24075 00010F7B 0F85BC410000            	jne L_error_non_closure
 24076 00010F81 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24077                                  
 24078                                  	; recycling the current frame
 24079 00010F84 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 24080 00010F87 FF7500                  	push qword [rbp]	; old frame-pointer
 24081 00010F8A B906000000              	mov rcx, 6
 24082 00010F8F 488B5D18                	mov rbx, COUNT
 24083 00010F93 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 24084 00010F98 488D55F8                	lea rdx, [rbp - 8]
 24085                                  .L_tc_recycle_frame_loop_0582:
 24086 00010F9C 4883F900                	cmp rcx, 0
 24087 00010FA0 7413                    	je .L_tc_recycle_frame_done_0582
 24088 00010FA2 488B32                  	mov rsi, qword [rdx]
 24089 00010FA5 488933                  	mov qword [rbx], rsi
 24090 00010FA8 48FFC9                  	dec rcx
 24091 00010FAB 4883EB08                	sub rbx, 8
 24092 00010FAF 4883EA08                	sub rdx, 8
 24093 00010FB3 EBE7                    	jmp .L_tc_recycle_frame_loop_0582
 24094                                  .L_tc_recycle_frame_done_0582:
 24095 00010FB5 488D6308                	lea rsp, [rbx + 8]
 24096 00010FB9 5D                      	pop rbp
 24097 00010FBA FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 24098 00010FBD C9                      	leave
 24099 00010FBE C21800                  	ret AND_KILL_FRAME(1)
 24100                                  .L_lambda_simple_end_0436:	; new closure is in rax
 24101 00010FC1 48890425[091B0000]      	mov qword [free_var_123], rax
 24102 00010FC9 48B8-                   	mov rax, sob_void
 24102 00010FCB [0000000000000000] 
 24103                                  
 24104 00010FD3 4889C7                  	mov rdi, rax
 24105 00010FD6 E860440000              	call print_sexpr_if_not_void
 24106                                  
 24107 00010FDB BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 24108 00010FE0 E801420000              	call malloc
 24109 00010FE5 50                      	push rax
 24110 00010FE6 BF00000000              	mov rdi, 8 * 0	; new rib
 24111 00010FEB E8F6410000              	call malloc
 24112 00010FF0 50                      	push rax
 24113 00010FF1 BF08000000              	mov rdi, 8 * 1	; extended env
 24114 00010FF6 E8EB410000              	call malloc
 24115 00010FFB 488B7D10                	mov rdi, ENV
 24116 00010FFF BE00000000              	mov rsi, 0
 24117 00011004 BA01000000              	mov rdx, 1
 24118                                  .L_lambda_simple_env_loop_0437:	; ext_env[i + 1] <-- env[i]
 24119 00011009 4883FE00                	cmp rsi, 0
 24120 0001100D 7410                    	je .L_lambda_simple_env_end_0437
 24121 0001100F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 24122 00011013 48890CD0                	mov qword [rax + 8 * rdx], rcx
 24123 00011017 48FFC6                  	inc rsi
 24124 0001101A 48FFC2                  	inc rdx
 24125 0001101D EBEA                    	jmp .L_lambda_simple_env_loop_0437
 24126                                  .L_lambda_simple_env_end_0437:
 24127 0001101F 5B                      	pop rbx
 24128 00011020 BE00000000              	mov rsi, 0
 24129                                  .L_lambda_simple_params_loop_0437:	; copy params
 24130 00011025 4883FE00                	cmp rsi, 0
 24131 00011029 740E                    	je .L_lambda_simple_params_end_0437
 24132 0001102B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 24133 00011030 488914F3                	mov qword [rbx + 8 * rsi], rdx
 24134 00011034 48FFC6                  	inc rsi
 24135 00011037 EBEC                    	jmp .L_lambda_simple_params_loop_0437
 24136                                  .L_lambda_simple_params_end_0437:
 24137 00011039 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 24138 0001103C 4889C3                  	mov rbx, rax
 24139 0001103F 58                      	pop rax
 24140 00011040 C60004                  	mov byte [rax], T_closure
 24141 00011043 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 24142 00011047 48C74009[54100100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0437
 24143 0001104F E9A6000000              	jmp .L_lambda_simple_end_0437
 24144                                  .L_lambda_simple_code_0437:	; lambda-simple body
 24145 00011054 48837C241001            	cmp qword [rsp + 8 * 2], 1
 24146 0001105A 740B                    	je .L_lambda_simple_arity_check_ok_0437
 24147 0001105C FF742410                	push qword [rsp + 8 * 2]
 24148 00011060 6A01                    	push 1
 24149 00011062 E938410000              	jmp L_error_incorrect_arity_simple
 24150                                  .L_lambda_simple_arity_check_ok_0437:
 24151 00011067 C8000000                	enter 0, 0
 24152                                  	; preparing a tail-call
 24153                                  	; preparing a non-tail-call
 24154 0001106B 48B8-                   	mov rax, L_constants + 4288
 24154 0001106D [C010000000000000] 
 24155 00011075 50                      	push rax
 24156 00011076 488B4520                	mov rax, PARAM(0)	; param n
 24157 0001107A 50                      	push rax
 24158 0001107B 6A02                    	push 2	; arg count
 24159 0001107D 488B0425[3B1C0000]      	mov rax, qword [free_var_141]	; free var remainder
 24160 00011085 803805                  	cmp byte [rax], T_undefined
 24161 00011088 0F842B400000            	je L_error_fvar_undefined
 24162 0001108E 803804                  	cmp byte [rax], T_closure
 24163 00011091 0F85A6400000            	jne L_error_non_closure
 24164 00011097 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24165 0001109A FF5009                  	call SOB_CLOSURE_CODE(rax)
 24166 0001109D 50                      	push rax
 24167 0001109E 6A01                    	push 1	; arg count
 24168 000110A0 488B0425[E31E0000]      	mov rax, qword [free_var_181]	; free var zero?
 24169 000110A8 803805                  	cmp byte [rax], T_undefined
 24170 000110AB 0F8408400000            	je L_error_fvar_undefined
 24171 000110B1 803804                  	cmp byte [rax], T_closure
 24172 000110B4 0F8583400000            	jne L_error_non_closure
 24173 000110BA FF7001                  	push SOB_CLOSURE_ENV(rax)
 24174                                  
 24175                                  	; recycling the current frame
 24176 000110BD FF7508                  	push qword [rbp + 8 * 1]	; old return address
 24177 000110C0 FF7500                  	push qword [rbp]	; old frame-pointer
 24178 000110C3 B905000000              	mov rcx, 5
 24179 000110C8 488B5D18                	mov rbx, COUNT
 24180 000110CC 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 24181 000110D1 488D55F8                	lea rdx, [rbp - 8]
 24182                                  .L_tc_recycle_frame_loop_0583:
 24183 000110D5 4883F900                	cmp rcx, 0
 24184 000110D9 7413                    	je .L_tc_recycle_frame_done_0583
 24185 000110DB 488B32                  	mov rsi, qword [rdx]
 24186 000110DE 488933                  	mov qword [rbx], rsi
 24187 000110E1 48FFC9                  	dec rcx
 24188 000110E4 4883EB08                	sub rbx, 8
 24189 000110E8 4883EA08                	sub rdx, 8
 24190 000110EC EBE7                    	jmp .L_tc_recycle_frame_loop_0583
 24191                                  .L_tc_recycle_frame_done_0583:
 24192 000110EE 488D6308                	lea rsp, [rbx + 8]
 24193 000110F2 5D                      	pop rbp
 24194 000110F3 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 24195 000110F6 C9                      	leave
 24196 000110F7 C21800                  	ret AND_KILL_FRAME(1)
 24197                                  .L_lambda_simple_end_0437:	; new closure is in rax
 24198 000110FA 48890425[E9180000]      	mov qword [free_var_91], rax
 24199 00011102 48B8-                   	mov rax, sob_void
 24199 00011104 [0000000000000000] 
 24200                                  
 24201 0001110C 4889C7                  	mov rdi, rax
 24202 0001110F E827430000              	call print_sexpr_if_not_void
 24203                                  
 24204 00011114 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 24205 00011119 E8C8400000              	call malloc
 24206 0001111E 50                      	push rax
 24207 0001111F BF00000000              	mov rdi, 8 * 0	; new rib
 24208 00011124 E8BD400000              	call malloc
 24209 00011129 50                      	push rax
 24210 0001112A BF08000000              	mov rdi, 8 * 1	; extended env
 24211 0001112F E8B2400000              	call malloc
 24212 00011134 488B7D10                	mov rdi, ENV
 24213 00011138 BE00000000              	mov rsi, 0
 24214 0001113D BA01000000              	mov rdx, 1
 24215                                  .L_lambda_simple_env_loop_0438:	; ext_env[i + 1] <-- env[i]
 24216 00011142 4883FE00                	cmp rsi, 0
 24217 00011146 7410                    	je .L_lambda_simple_env_end_0438
 24218 00011148 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 24219 0001114C 48890CD0                	mov qword [rax + 8 * rdx], rcx
 24220 00011150 48FFC6                  	inc rsi
 24221 00011153 48FFC2                  	inc rdx
 24222 00011156 EBEA                    	jmp .L_lambda_simple_env_loop_0438
 24223                                  .L_lambda_simple_env_end_0438:
 24224 00011158 5B                      	pop rbx
 24225 00011159 BE00000000              	mov rsi, 0
 24226                                  .L_lambda_simple_params_loop_0438:	; copy params
 24227 0001115E 4883FE00                	cmp rsi, 0
 24228 00011162 740E                    	je .L_lambda_simple_params_end_0438
 24229 00011164 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 24230 00011169 488914F3                	mov qword [rbx + 8 * rsi], rdx
 24231 0001116D 48FFC6                  	inc rsi
 24232 00011170 EBEC                    	jmp .L_lambda_simple_params_loop_0438
 24233                                  .L_lambda_simple_params_end_0438:
 24234 00011172 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 24235 00011175 4889C3                  	mov rbx, rax
 24236 00011178 58                      	pop rax
 24237 00011179 C60004                  	mov byte [rax], T_closure
 24238 0001117C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 24239 00011180 48C74009[8D110100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0438
 24240 00011188 E99B000000              	jmp .L_lambda_simple_end_0438
 24241                                  .L_lambda_simple_code_0438:	; lambda-simple body
 24242 0001118D 48837C241001            	cmp qword [rsp + 8 * 2], 1
 24243 00011193 740B                    	je .L_lambda_simple_arity_check_ok_0438
 24244 00011195 FF742410                	push qword [rsp + 8 * 2]
 24245 00011199 6A01                    	push 1
 24246 0001119B E9FF3F0000              	jmp L_error_incorrect_arity_simple
 24247                                  .L_lambda_simple_arity_check_ok_0438:
 24248 000111A0 C8000000                	enter 0, 0
 24249                                  	; preparing a tail-call
 24250                                  	; preparing a non-tail-call
 24251 000111A4 488B4520                	mov rax, PARAM(0)	; param n
 24252 000111A8 50                      	push rax
 24253 000111A9 6A01                    	push 1	; arg count
 24254 000111AB 488B0425[E9180000]      	mov rax, qword [free_var_91]	; free var even?
 24255 000111B3 803805                  	cmp byte [rax], T_undefined
 24256 000111B6 0F84FD3E0000            	je L_error_fvar_undefined
 24257 000111BC 803804                  	cmp byte [rax], T_closure
 24258 000111BF 0F85783F0000            	jne L_error_non_closure
 24259 000111C5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24260 000111C8 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24261 000111CB 50                      	push rax
 24262 000111CC 6A01                    	push 1	; arg count
 24263 000111CE 488B0425[2B1B0000]      	mov rax, qword [free_var_125]	; free var not
 24264 000111D6 803805                  	cmp byte [rax], T_undefined
 24265 000111D9 0F84DA3E0000            	je L_error_fvar_undefined
 24266 000111DF 803804                  	cmp byte [rax], T_closure
 24267 000111E2 0F85553F0000            	jne L_error_non_closure
 24268 000111E8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24269                                  
 24270                                  	; recycling the current frame
 24271 000111EB FF7508                  	push qword [rbp + 8 * 1]	; old return address
 24272 000111EE FF7500                  	push qword [rbp]	; old frame-pointer
 24273 000111F1 B905000000              	mov rcx, 5
 24274 000111F6 488B5D18                	mov rbx, COUNT
 24275 000111FA 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 24276 000111FF 488D55F8                	lea rdx, [rbp - 8]
 24277                                  .L_tc_recycle_frame_loop_0584:
 24278 00011203 4883F900                	cmp rcx, 0
 24279 00011207 7413                    	je .L_tc_recycle_frame_done_0584
 24280 00011209 488B32                  	mov rsi, qword [rdx]
 24281 0001120C 488933                  	mov qword [rbx], rsi
 24282 0001120F 48FFC9                  	dec rcx
 24283 00011212 4883EB08                	sub rbx, 8
 24284 00011216 4883EA08                	sub rdx, 8
 24285 0001121A EBE7                    	jmp .L_tc_recycle_frame_loop_0584
 24286                                  .L_tc_recycle_frame_done_0584:
 24287 0001121C 488D6308                	lea rsp, [rbx + 8]
 24288 00011220 5D                      	pop rbp
 24289 00011221 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 24290 00011224 C9                      	leave
 24291 00011225 C21800                  	ret AND_KILL_FRAME(1)
 24292                                  .L_lambda_simple_end_0438:	; new closure is in rax
 24293 00011228 48890425[6F1B0000]      	mov qword [free_var_129], rax
 24294 00011230 48B8-                   	mov rax, sob_void
 24294 00011232 [0000000000000000] 
 24295                                  
 24296 0001123A 4889C7                  	mov rdi, rax
 24297 0001123D E8F9410000              	call print_sexpr_if_not_void
 24298                                  
 24299 00011242 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 24300 00011247 E89A3F0000              	call malloc
 24301 0001124C 50                      	push rax
 24302 0001124D BF00000000              	mov rdi, 8 * 0	; new rib
 24303 00011252 E88F3F0000              	call malloc
 24304 00011257 50                      	push rax
 24305 00011258 BF08000000              	mov rdi, 8 * 1	; extended env
 24306 0001125D E8843F0000              	call malloc
 24307 00011262 488B7D10                	mov rdi, ENV
 24308 00011266 BE00000000              	mov rsi, 0
 24309 0001126B BA01000000              	mov rdx, 1
 24310                                  .L_lambda_simple_env_loop_0439:	; ext_env[i + 1] <-- env[i]
 24311 00011270 4883FE00                	cmp rsi, 0
 24312 00011274 7410                    	je .L_lambda_simple_env_end_0439
 24313 00011276 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 24314 0001127A 48890CD0                	mov qword [rax + 8 * rdx], rcx
 24315 0001127E 48FFC6                  	inc rsi
 24316 00011281 48FFC2                  	inc rdx
 24317 00011284 EBEA                    	jmp .L_lambda_simple_env_loop_0439
 24318                                  .L_lambda_simple_env_end_0439:
 24319 00011286 5B                      	pop rbx
 24320 00011287 BE00000000              	mov rsi, 0
 24321                                  .L_lambda_simple_params_loop_0439:	; copy params
 24322 0001128C 4883FE00                	cmp rsi, 0
 24323 00011290 740E                    	je .L_lambda_simple_params_end_0439
 24324 00011292 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 24325 00011297 488914F3                	mov qword [rbx + 8 * rsi], rdx
 24326 0001129B 48FFC6                  	inc rsi
 24327 0001129E EBEC                    	jmp .L_lambda_simple_params_loop_0439
 24328                                  .L_lambda_simple_params_end_0439:
 24329 000112A0 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 24330 000112A3 4889C3                  	mov rbx, rax
 24331 000112A6 58                      	pop rax
 24332 000112A7 C60004                  	mov byte [rax], T_closure
 24333 000112AA 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 24334 000112AE 48C74009[BB120100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0439
 24335 000112B6 E9AD000000              	jmp .L_lambda_simple_end_0439
 24336                                  .L_lambda_simple_code_0439:	; lambda-simple body
 24337 000112BB 48837C241001            	cmp qword [rsp + 8 * 2], 1
 24338 000112C1 740B                    	je .L_lambda_simple_arity_check_ok_0439
 24339 000112C3 FF742410                	push qword [rsp + 8 * 2]
 24340 000112C7 6A01                    	push 1
 24341 000112C9 E9D13E0000              	jmp L_error_incorrect_arity_simple
 24342                                  .L_lambda_simple_arity_check_ok_0439:
 24343 000112CE C8000000                	enter 0, 0
 24344                                  	; preparing a non-tail-call
 24345 000112D2 488B4520                	mov rax, PARAM(0)	; param x
 24346 000112D6 50                      	push rax
 24347 000112D7 6A01                    	push 1	; arg count
 24348 000112D9 488B0425[091B0000]      	mov rax, qword [free_var_123]	; free var negative?
 24349 000112E1 803805                  	cmp byte [rax], T_undefined
 24350 000112E4 0F84CF3D0000            	je L_error_fvar_undefined
 24351 000112EA 803804                  	cmp byte [rax], T_closure
 24352 000112ED 0F854A3E0000            	jne L_error_non_closure
 24353 000112F3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24354 000112F6 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24355 000112F9 483D[02000000]          	cmp rax, sob_boolean_false
 24356 000112FF 745F                    	je .L_if_else_0315
 24357                                  	; preparing a tail-call
 24358 00011301 488B4520                	mov rax, PARAM(0)	; param x
 24359 00011305 50                      	push rax
 24360 00011306 6A01                    	push 1	; arg count
 24361 00011308 488B0425[00130000]      	mov rax, qword [free_var_2]	; free var -
 24362 00011310 803805                  	cmp byte [rax], T_undefined
 24363 00011313 0F84A03D0000            	je L_error_fvar_undefined
 24364 00011319 803804                  	cmp byte [rax], T_closure
 24365 0001131C 0F851B3E0000            	jne L_error_non_closure
 24366 00011322 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24367                                  
 24368                                  	; recycling the current frame
 24369 00011325 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 24370 00011328 FF7500                  	push qword [rbp]	; old frame-pointer
 24371 0001132B B905000000              	mov rcx, 5
 24372 00011330 488B5D18                	mov rbx, COUNT
 24373 00011334 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 24374 00011339 488D55F8                	lea rdx, [rbp - 8]
 24375                                  .L_tc_recycle_frame_loop_0585:
 24376 0001133D 4883F900                	cmp rcx, 0
 24377 00011341 7413                    	je .L_tc_recycle_frame_done_0585
 24378 00011343 488B32                  	mov rsi, qword [rdx]
 24379 00011346 488933                  	mov qword [rbx], rsi
 24380 00011349 48FFC9                  	dec rcx
 24381 0001134C 4883EB08                	sub rbx, 8
 24382 00011350 4883EA08                	sub rdx, 8
 24383 00011354 EBE7                    	jmp .L_tc_recycle_frame_loop_0585
 24384                                  .L_tc_recycle_frame_done_0585:
 24385 00011356 488D6308                	lea rsp, [rbx + 8]
 24386 0001135A 5D                      	pop rbp
 24387 0001135B FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 24388 0001135E EB04                    	jmp .L_if_end_0315
 24389                                  .L_if_else_0315:
 24390 00011360 488B4520                	mov rax, PARAM(0)	; param x
 24391                                  .L_if_end_0315:
 24392 00011364 C9                      	leave
 24393 00011365 C21800                  	ret AND_KILL_FRAME(1)
 24394                                  .L_lambda_simple_end_0439:	; new closure is in rax
 24395 00011368 48890425[DC140000]      	mov qword [free_var_30], rax
 24396 00011370 48B8-                   	mov rax, sob_void
 24396 00011372 [0000000000000000] 
 24397                                  
 24398 0001137A 4889C7                  	mov rdi, rax
 24399 0001137D E8B9400000              	call print_sexpr_if_not_void
 24400                                  
 24401 00011382 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 24402 00011387 E85A3E0000              	call malloc
 24403 0001138C 50                      	push rax
 24404 0001138D BF00000000              	mov rdi, 8 * 0	; new rib
 24405 00011392 E84F3E0000              	call malloc
 24406 00011397 50                      	push rax
 24407 00011398 BF08000000              	mov rdi, 8 * 1	; extended env
 24408 0001139D E8443E0000              	call malloc
 24409 000113A2 488B7D10                	mov rdi, ENV
 24410 000113A6 BE00000000              	mov rsi, 0
 24411 000113AB BA01000000              	mov rdx, 1
 24412                                  .L_lambda_simple_env_loop_043a:	; ext_env[i + 1] <-- env[i]
 24413 000113B0 4883FE00                	cmp rsi, 0
 24414 000113B4 7410                    	je .L_lambda_simple_env_end_043a
 24415 000113B6 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 24416 000113BA 48890CD0                	mov qword [rax + 8 * rdx], rcx
 24417 000113BE 48FFC6                  	inc rsi
 24418 000113C1 48FFC2                  	inc rdx
 24419 000113C4 EBEA                    	jmp .L_lambda_simple_env_loop_043a
 24420                                  .L_lambda_simple_env_end_043a:
 24421 000113C6 5B                      	pop rbx
 24422 000113C7 BE00000000              	mov rsi, 0
 24423                                  .L_lambda_simple_params_loop_043a:	; copy params
 24424 000113CC 4883FE00                	cmp rsi, 0
 24425 000113D0 740E                    	je .L_lambda_simple_params_end_043a
 24426 000113D2 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 24427 000113D7 488914F3                	mov qword [rbx + 8 * rsi], rdx
 24428 000113DB 48FFC6                  	inc rsi
 24429 000113DE EBEC                    	jmp .L_lambda_simple_params_loop_043a
 24430                                  .L_lambda_simple_params_end_043a:
 24431 000113E0 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 24432 000113E3 4889C3                  	mov rbx, rax
 24433 000113E6 58                      	pop rax
 24434 000113E7 C60004                  	mov byte [rax], T_closure
 24435 000113EA 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 24436 000113EE 48C74009[FB130100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_043a
 24437 000113F6 E9C1060000              	jmp .L_lambda_simple_end_043a
 24438                                  .L_lambda_simple_code_043a:	; lambda-simple body
 24439 000113FB 48837C241002            	cmp qword [rsp + 8 * 2], 2
 24440 00011401 740B                    	je .L_lambda_simple_arity_check_ok_043a
 24441 00011403 FF742410                	push qword [rsp + 8 * 2]
 24442 00011407 6A02                    	push 2
 24443 00011409 E9913D0000              	jmp L_error_incorrect_arity_simple
 24444                                  .L_lambda_simple_arity_check_ok_043a:
 24445 0001140E C8000000                	enter 0, 0
 24446                                  	; preparing a non-tail-call
 24447 00011412 488B4520                	mov rax, PARAM(0)	; param e1
 24448 00011416 50                      	push rax
 24449 00011417 6A01                    	push 1	; arg count
 24450 00011419 488B0425[911B0000]      	mov rax, qword [free_var_131]	; free var pair?
 24451 00011421 803805                  	cmp byte [rax], T_undefined
 24452 00011424 0F848F3C0000            	je L_error_fvar_undefined
 24453 0001142A 803804                  	cmp byte [rax], T_closure
 24454 0001142D 0F850A3D0000            	jne L_error_non_closure
 24455 00011433 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24456 00011436 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24457 00011439 483D[02000000]          	cmp rax, sob_boolean_false
 24458 0001143F 7429                    	je .L_if_else_0316
 24459                                  	; preparing a non-tail-call
 24460 00011441 488B4528                	mov rax, PARAM(1)	; param e2
 24461 00011445 50                      	push rax
 24462 00011446 6A01                    	push 1	; arg count
 24463 00011448 488B0425[911B0000]      	mov rax, qword [free_var_131]	; free var pair?
 24464 00011450 803805                  	cmp byte [rax], T_undefined
 24465 00011453 0F84603C0000            	je L_error_fvar_undefined
 24466 00011459 803804                  	cmp byte [rax], T_closure
 24467 0001145C 0F85DB3C0000            	jne L_error_non_closure
 24468 00011462 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24469 00011465 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24470 00011468 EB0A                    	jmp .L_if_end_0316
 24471                                  .L_if_else_0316:
 24472 0001146A 48B8-                   	mov rax, L_constants + 2
 24472 0001146C [0200000000000000] 
 24473                                  .L_if_end_0316:
 24474 00011474 483D[02000000]          	cmp rax, sob_boolean_false
 24475 0001147A 0F8437010000            	je .L_if_else_0322
 24476                                  	; preparing a non-tail-call
 24477                                  	; preparing a non-tail-call
 24478 00011480 488B4528                	mov rax, PARAM(1)	; param e2
 24479 00011484 50                      	push rax
 24480 00011485 6A01                    	push 1	; arg count
 24481 00011487 488B0425[74160000]      	mov rax, qword [free_var_54]	; free var car
 24482 0001148F 803805                  	cmp byte [rax], T_undefined
 24483 00011492 0F84213C0000            	je L_error_fvar_undefined
 24484 00011498 803804                  	cmp byte [rax], T_closure
 24485 0001149B 0F859C3C0000            	jne L_error_non_closure
 24486 000114A1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24487 000114A4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24488 000114A7 50                      	push rax
 24489                                  	; preparing a non-tail-call
 24490 000114A8 488B4520                	mov rax, PARAM(0)	; param e1
 24491 000114AC 50                      	push rax
 24492 000114AD 6A01                    	push 1	; arg count
 24493 000114AF 488B0425[74160000]      	mov rax, qword [free_var_54]	; free var car
 24494 000114B7 803805                  	cmp byte [rax], T_undefined
 24495 000114BA 0F84F93B0000            	je L_error_fvar_undefined
 24496 000114C0 803804                  	cmp byte [rax], T_closure
 24497 000114C3 0F85743C0000            	jne L_error_non_closure
 24498 000114C9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24499 000114CC FF5009                  	call SOB_CLOSURE_CODE(rax)
 24500 000114CF 50                      	push rax
 24501 000114D0 6A02                    	push 2	; arg count
 24502 000114D2 488B0425[C7180000]      	mov rax, qword [free_var_89]	; free var equal?
 24503 000114DA 803805                  	cmp byte [rax], T_undefined
 24504 000114DD 0F84D63B0000            	je L_error_fvar_undefined
 24505 000114E3 803804                  	cmp byte [rax], T_closure
 24506 000114E6 0F85513C0000            	jne L_error_non_closure
 24507 000114EC FF7001                  	push SOB_CLOSURE_ENV(rax)
 24508 000114EF FF5009                  	call SOB_CLOSURE_CODE(rax)
 24509 000114F2 483D[02000000]          	cmp rax, sob_boolean_false
 24510 000114F8 0F84AA000000            	je .L_if_else_0317
 24511                                  	; preparing a tail-call
 24512                                  	; preparing a non-tail-call
 24513 000114FE 488B4528                	mov rax, PARAM(1)	; param e2
 24514 00011502 50                      	push rax
 24515 00011503 6A01                    	push 1	; arg count
 24516 00011505 488B0425[73170000]      	mov rax, qword [free_var_69]	; free var cdr
 24517 0001150D 803805                  	cmp byte [rax], T_undefined
 24518 00011510 0F84A33B0000            	je L_error_fvar_undefined
 24519 00011516 803804                  	cmp byte [rax], T_closure
 24520 00011519 0F851E3C0000            	jne L_error_non_closure
 24521 0001151F FF7001                  	push SOB_CLOSURE_ENV(rax)
 24522 00011522 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24523 00011525 50                      	push rax
 24524                                  	; preparing a non-tail-call
 24525 00011526 488B4520                	mov rax, PARAM(0)	; param e1
 24526 0001152A 50                      	push rax
 24527 0001152B 6A01                    	push 1	; arg count
 24528 0001152D 488B0425[73170000]      	mov rax, qword [free_var_69]	; free var cdr
 24529 00011535 803805                  	cmp byte [rax], T_undefined
 24530 00011538 0F847B3B0000            	je L_error_fvar_undefined
 24531 0001153E 803804                  	cmp byte [rax], T_closure
 24532 00011541 0F85F63B0000            	jne L_error_non_closure
 24533 00011547 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24534 0001154A FF5009                  	call SOB_CLOSURE_CODE(rax)
 24535 0001154D 50                      	push rax
 24536 0001154E 6A02                    	push 2	; arg count
 24537 00011550 488B0425[C7180000]      	mov rax, qword [free_var_89]	; free var equal?
 24538 00011558 803805                  	cmp byte [rax], T_undefined
 24539 0001155B 0F84583B0000            	je L_error_fvar_undefined
 24540 00011561 803804                  	cmp byte [rax], T_closure
 24541 00011564 0F85D33B0000            	jne L_error_non_closure
 24542 0001156A FF7001                  	push SOB_CLOSURE_ENV(rax)
 24543                                  
 24544                                  	; recycling the current frame
 24545 0001156D FF7508                  	push qword [rbp + 8 * 1]	; old return address
 24546 00011570 FF7500                  	push qword [rbp]	; old frame-pointer
 24547 00011573 B906000000              	mov rcx, 6
 24548 00011578 488B5D18                	mov rbx, COUNT
 24549 0001157C 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 24550 00011581 488D55F8                	lea rdx, [rbp - 8]
 24551                                  .L_tc_recycle_frame_loop_0586:
 24552 00011585 4883F900                	cmp rcx, 0
 24553 00011589 7413                    	je .L_tc_recycle_frame_done_0586
 24554 0001158B 488B32                  	mov rsi, qword [rdx]
 24555 0001158E 488933                  	mov qword [rbx], rsi
 24556 00011591 48FFC9                  	dec rcx
 24557 00011594 4883EB08                	sub rbx, 8
 24558 00011598 4883EA08                	sub rdx, 8
 24559 0001159C EBE7                    	jmp .L_tc_recycle_frame_loop_0586
 24560                                  .L_tc_recycle_frame_done_0586:
 24561 0001159E 488D6308                	lea rsp, [rbx + 8]
 24562 000115A2 5D                      	pop rbp
 24563 000115A3 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 24564 000115A6 EB0A                    	jmp .L_if_end_0317
 24565                                  .L_if_else_0317:
 24566 000115A8 48B8-                   	mov rax, L_constants + 2
 24566 000115AA [0200000000000000] 
 24567                                  .L_if_end_0317:
 24568 000115B2 E901050000              	jmp .L_if_end_0322
 24569                                  .L_if_else_0322:
 24570                                  	; preparing a non-tail-call
 24571 000115B7 488B4520                	mov rax, PARAM(0)	; param e1
 24572 000115BB 50                      	push rax
 24573 000115BC 6A01                    	push 1	; arg count
 24574 000115BE 488B0425[9F1E0000]      	mov rax, qword [free_var_177]	; free var vector?
 24575 000115C6 803805                  	cmp byte [rax], T_undefined
 24576 000115C9 0F84EA3A0000            	je L_error_fvar_undefined
 24577 000115CF 803804                  	cmp byte [rax], T_closure
 24578 000115D2 0F85653B0000            	jne L_error_non_closure
 24579 000115D8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24580 000115DB FF5009                  	call SOB_CLOSURE_CODE(rax)
 24581 000115DE 483D[02000000]          	cmp rax, sob_boolean_false
 24582 000115E4 0F84AF000000            	je .L_if_else_0319
 24583                                  	; preparing a non-tail-call
 24584 000115EA 488B4528                	mov rax, PARAM(1)	; param e2
 24585 000115EE 50                      	push rax
 24586 000115EF 6A01                    	push 1	; arg count
 24587 000115F1 488B0425[9F1E0000]      	mov rax, qword [free_var_177]	; free var vector?
 24588 000115F9 803805                  	cmp byte [rax], T_undefined
 24589 000115FC 0F84B73A0000            	je L_error_fvar_undefined
 24590 00011602 803804                  	cmp byte [rax], T_closure
 24591 00011605 0F85323B0000            	jne L_error_non_closure
 24592 0001160B FF7001                  	push SOB_CLOSURE_ENV(rax)
 24593 0001160E FF5009                  	call SOB_CLOSURE_CODE(rax)
 24594 00011611 483D[02000000]          	cmp rax, sob_boolean_false
 24595 00011617 7474                    	je .L_if_else_0318
 24596                                  	; preparing a non-tail-call
 24597                                  	; preparing a non-tail-call
 24598 00011619 488B4528                	mov rax, PARAM(1)	; param e2
 24599 0001161D 50                      	push rax
 24600 0001161E 6A01                    	push 1	; arg count
 24601 00011620 488B0425[4A1E0000]      	mov rax, qword [free_var_172]	; free var vector-length
 24602 00011628 803805                  	cmp byte [rax], T_undefined
 24603 0001162B 0F84883A0000            	je L_error_fvar_undefined
 24604 00011631 803804                  	cmp byte [rax], T_closure
 24605 00011634 0F85033B0000            	jne L_error_non_closure
 24606 0001163A FF7001                  	push SOB_CLOSURE_ENV(rax)
 24607 0001163D FF5009                  	call SOB_CLOSURE_CODE(rax)
 24608 00011640 50                      	push rax
 24609                                  	; preparing a non-tail-call
 24610 00011641 488B4520                	mov rax, PARAM(0)	; param e1
 24611 00011645 50                      	push rax
 24612 00011646 6A01                    	push 1	; arg count
 24613 00011648 488B0425[4A1E0000]      	mov rax, qword [free_var_172]	; free var vector-length
 24614 00011650 803805                  	cmp byte [rax], T_undefined
 24615 00011653 0F84603A0000            	je L_error_fvar_undefined
 24616 00011659 803804                  	cmp byte [rax], T_closure
 24617 0001165C 0F85DB3A0000            	jne L_error_non_closure
 24618 00011662 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24619 00011665 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24620 00011668 50                      	push rax
 24621 00011669 6A02                    	push 2	; arg count
 24622 0001166B 488B0425[44130000]      	mov rax, qword [free_var_6]	; free var =
 24623 00011673 803805                  	cmp byte [rax], T_undefined
 24624 00011676 0F843D3A0000            	je L_error_fvar_undefined
 24625 0001167C 803804                  	cmp byte [rax], T_closure
 24626 0001167F 0F85B83A0000            	jne L_error_non_closure
 24627 00011685 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24628 00011688 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24629 0001168B EB0A                    	jmp .L_if_end_0318
 24630                                  .L_if_else_0318:
 24631 0001168D 48B8-                   	mov rax, L_constants + 2
 24631 0001168F [0200000000000000] 
 24632                                  .L_if_end_0318:
 24633 00011697 EB0A                    	jmp .L_if_end_0319
 24634                                  .L_if_else_0319:
 24635 00011699 48B8-                   	mov rax, L_constants + 2
 24635 0001169B [0200000000000000] 
 24636                                  .L_if_end_0319:
 24637 000116A3 483D[02000000]          	cmp rax, sob_boolean_false
 24638 000116A9 0F84AD000000            	je .L_if_else_0321
 24639                                  	; preparing a tail-call
 24640                                  	; preparing a non-tail-call
 24641 000116AF 488B4528                	mov rax, PARAM(1)	; param e2
 24642 000116B3 50                      	push rax
 24643 000116B4 6A01                    	push 1	; arg count
 24644 000116B6 488B0425[281E0000]      	mov rax, qword [free_var_170]	; free var vector->list
 24645 000116BE 803805                  	cmp byte [rax], T_undefined
 24646 000116C1 0F84F2390000            	je L_error_fvar_undefined
 24647 000116C7 803804                  	cmp byte [rax], T_closure
 24648 000116CA 0F856D3A0000            	jne L_error_non_closure
 24649 000116D0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24650 000116D3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24651 000116D6 50                      	push rax
 24652                                  	; preparing a non-tail-call
 24653 000116D7 488B4520                	mov rax, PARAM(0)	; param e1
 24654 000116DB 50                      	push rax
 24655 000116DC 6A01                    	push 1	; arg count
 24656 000116DE 488B0425[281E0000]      	mov rax, qword [free_var_170]	; free var vector->list
 24657 000116E6 803805                  	cmp byte [rax], T_undefined
 24658 000116E9 0F84CA390000            	je L_error_fvar_undefined
 24659 000116EF 803804                  	cmp byte [rax], T_closure
 24660 000116F2 0F85453A0000            	jne L_error_non_closure
 24661 000116F8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24662 000116FB FF5009                  	call SOB_CLOSURE_CODE(rax)
 24663 000116FE 50                      	push rax
 24664 000116FF 6A02                    	push 2	; arg count
 24665 00011701 488B0425[C7180000]      	mov rax, qword [free_var_89]	; free var equal?
 24666 00011709 803805                  	cmp byte [rax], T_undefined
 24667 0001170C 0F84A7390000            	je L_error_fvar_undefined
 24668 00011712 803804                  	cmp byte [rax], T_closure
 24669 00011715 0F85223A0000            	jne L_error_non_closure
 24670 0001171B FF7001                  	push SOB_CLOSURE_ENV(rax)
 24671                                  
 24672                                  	; recycling the current frame
 24673 0001171E FF7508                  	push qword [rbp + 8 * 1]	; old return address
 24674 00011721 FF7500                  	push qword [rbp]	; old frame-pointer
 24675 00011724 B906000000              	mov rcx, 6
 24676 00011729 488B5D18                	mov rbx, COUNT
 24677 0001172D 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 24678 00011732 488D55F8                	lea rdx, [rbp - 8]
 24679                                  .L_tc_recycle_frame_loop_0587:
 24680 00011736 4883F900                	cmp rcx, 0
 24681 0001173A 7413                    	je .L_tc_recycle_frame_done_0587
 24682 0001173C 488B32                  	mov rsi, qword [rdx]
 24683 0001173F 488933                  	mov qword [rbx], rsi
 24684 00011742 48FFC9                  	dec rcx
 24685 00011745 4883EB08                	sub rbx, 8
 24686 00011749 4883EA08                	sub rdx, 8
 24687 0001174D EBE7                    	jmp .L_tc_recycle_frame_loop_0587
 24688                                  .L_tc_recycle_frame_done_0587:
 24689 0001174F 488D6308                	lea rsp, [rbx + 8]
 24690 00011753 5D                      	pop rbp
 24691 00011754 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 24692 00011757 E95C030000              	jmp .L_if_end_0321
 24693                                  .L_if_else_0321:
 24694                                  	; preparing a non-tail-call
 24695 0001175C 488B4520                	mov rax, PARAM(0)	; param e1
 24696 00011760 50                      	push rax
 24697 00011761 6A01                    	push 1	; arg count
 24698 00011763 488B0425[D31D0000]      	mov rax, qword [free_var_165]	; free var string?
 24699 0001176B 803805                  	cmp byte [rax], T_undefined
 24700 0001176E 0F8445390000            	je L_error_fvar_undefined
 24701 00011774 803804                  	cmp byte [rax], T_closure
 24702 00011777 0F85C0390000            	jne L_error_non_closure
 24703 0001177D FF7001                  	push SOB_CLOSURE_ENV(rax)
 24704 00011780 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24705 00011783 483D[02000000]          	cmp rax, sob_boolean_false
 24706 00011789 0F84AF000000            	je .L_if_else_031b
 24707                                  	; preparing a non-tail-call
 24708 0001178F 488B4528                	mov rax, PARAM(1)	; param e2
 24709 00011793 50                      	push rax
 24710 00011794 6A01                    	push 1	; arg count
 24711 00011796 488B0425[D31D0000]      	mov rax, qword [free_var_165]	; free var string?
 24712 0001179E 803805                  	cmp byte [rax], T_undefined
 24713 000117A1 0F8412390000            	je L_error_fvar_undefined
 24714 000117A7 803804                  	cmp byte [rax], T_closure
 24715 000117AA 0F858D390000            	jne L_error_non_closure
 24716 000117B0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24717 000117B3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24718 000117B6 483D[02000000]          	cmp rax, sob_boolean_false
 24719 000117BC 7474                    	je .L_if_else_031a
 24720                                  	; preparing a non-tail-call
 24721                                  	; preparing a non-tail-call
 24722 000117BE 488B4528                	mov rax, PARAM(1)	; param e2
 24723 000117C2 50                      	push rax
 24724 000117C3 6A01                    	push 1	; arg count
 24725 000117C5 488B0425[181D0000]      	mov rax, qword [free_var_154]	; free var string-length
 24726 000117CD 803805                  	cmp byte [rax], T_undefined
 24727 000117D0 0F84E3380000            	je L_error_fvar_undefined
 24728 000117D6 803804                  	cmp byte [rax], T_closure
 24729 000117D9 0F855E390000            	jne L_error_non_closure
 24730 000117DF FF7001                  	push SOB_CLOSURE_ENV(rax)
 24731 000117E2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24732 000117E5 50                      	push rax
 24733                                  	; preparing a non-tail-call
 24734 000117E6 488B4520                	mov rax, PARAM(0)	; param e1
 24735 000117EA 50                      	push rax
 24736 000117EB 6A01                    	push 1	; arg count
 24737 000117ED 488B0425[181D0000]      	mov rax, qword [free_var_154]	; free var string-length
 24738 000117F5 803805                  	cmp byte [rax], T_undefined
 24739 000117F8 0F84BB380000            	je L_error_fvar_undefined
 24740 000117FE 803804                  	cmp byte [rax], T_closure
 24741 00011801 0F8536390000            	jne L_error_non_closure
 24742 00011807 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24743 0001180A FF5009                  	call SOB_CLOSURE_CODE(rax)
 24744 0001180D 50                      	push rax
 24745 0001180E 6A02                    	push 2	; arg count
 24746 00011810 488B0425[44130000]      	mov rax, qword [free_var_6]	; free var =
 24747 00011818 803805                  	cmp byte [rax], T_undefined
 24748 0001181B 0F8498380000            	je L_error_fvar_undefined
 24749 00011821 803804                  	cmp byte [rax], T_closure
 24750 00011824 0F8513390000            	jne L_error_non_closure
 24751 0001182A FF7001                  	push SOB_CLOSURE_ENV(rax)
 24752 0001182D FF5009                  	call SOB_CLOSURE_CODE(rax)
 24753 00011830 EB0A                    	jmp .L_if_end_031a
 24754                                  .L_if_else_031a:
 24755 00011832 48B8-                   	mov rax, L_constants + 2
 24755 00011834 [0200000000000000] 
 24756                                  .L_if_end_031a:
 24757 0001183C EB0A                    	jmp .L_if_end_031b
 24758                                  .L_if_else_031b:
 24759 0001183E 48B8-                   	mov rax, L_constants + 2
 24759 00011840 [0200000000000000] 
 24760                                  .L_if_end_031b:
 24761 00011848 483D[02000000]          	cmp rax, sob_boolean_false
 24762 0001184E 7467                    	je .L_if_else_0320
 24763                                  	; preparing a tail-call
 24764 00011850 488B4528                	mov rax, PARAM(1)	; param e2
 24765 00011854 50                      	push rax
 24766 00011855 488B4520                	mov rax, PARAM(0)	; param e1
 24767 00011859 50                      	push rax
 24768 0001185A 6A02                    	push 2	; arg count
 24769 0001185C 488B0425[A01D0000]      	mov rax, qword [free_var_162]	; free var string=?
 24770 00011864 803805                  	cmp byte [rax], T_undefined
 24771 00011867 0F844C380000            	je L_error_fvar_undefined
 24772 0001186D 803804                  	cmp byte [rax], T_closure
 24773 00011870 0F85C7380000            	jne L_error_non_closure
 24774 00011876 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24775                                  
 24776                                  	; recycling the current frame
 24777 00011879 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 24778 0001187C FF7500                  	push qword [rbp]	; old frame-pointer
 24779 0001187F B906000000              	mov rcx, 6
 24780 00011884 488B5D18                	mov rbx, COUNT
 24781 00011888 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 24782 0001188D 488D55F8                	lea rdx, [rbp - 8]
 24783                                  .L_tc_recycle_frame_loop_0588:
 24784 00011891 4883F900                	cmp rcx, 0
 24785 00011895 7413                    	je .L_tc_recycle_frame_done_0588
 24786 00011897 488B32                  	mov rsi, qword [rdx]
 24787 0001189A 488933                  	mov qword [rbx], rsi
 24788 0001189D 48FFC9                  	dec rcx
 24789 000118A0 4883EB08                	sub rbx, 8
 24790 000118A4 4883EA08                	sub rdx, 8
 24791 000118A8 EBE7                    	jmp .L_tc_recycle_frame_loop_0588
 24792                                  .L_tc_recycle_frame_done_0588:
 24793 000118AA 488D6308                	lea rsp, [rbx + 8]
 24794 000118AE 5D                      	pop rbp
 24795 000118AF FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 24796 000118B2 E901020000              	jmp .L_if_end_0320
 24797                                  .L_if_else_0320:
 24798                                  	; preparing a non-tail-call
 24799 000118B7 488B4520                	mov rax, PARAM(0)	; param e1
 24800 000118BB 50                      	push rax
 24801 000118BC 6A01                    	push 1	; arg count
 24802 000118BE 488B0425[4D1B0000]      	mov rax, qword [free_var_127]	; free var number?
 24803 000118C6 803805                  	cmp byte [rax], T_undefined
 24804 000118C9 0F84EA370000            	je L_error_fvar_undefined
 24805 000118CF 803804                  	cmp byte [rax], T_closure
 24806 000118D2 0F8565380000            	jne L_error_non_closure
 24807 000118D8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24808 000118DB FF5009                  	call SOB_CLOSURE_CODE(rax)
 24809 000118DE 483D[02000000]          	cmp rax, sob_boolean_false
 24810 000118E4 7429                    	je .L_if_else_031c
 24811                                  	; preparing a non-tail-call
 24812 000118E6 488B4528                	mov rax, PARAM(1)	; param e2
 24813 000118EA 50                      	push rax
 24814 000118EB 6A01                    	push 1	; arg count
 24815 000118ED 488B0425[4D1B0000]      	mov rax, qword [free_var_127]	; free var number?
 24816 000118F5 803805                  	cmp byte [rax], T_undefined
 24817 000118F8 0F84BB370000            	je L_error_fvar_undefined
 24818 000118FE 803804                  	cmp byte [rax], T_closure
 24819 00011901 0F8536380000            	jne L_error_non_closure
 24820 00011907 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24821 0001190A FF5009                  	call SOB_CLOSURE_CODE(rax)
 24822 0001190D EB0A                    	jmp .L_if_end_031c
 24823                                  .L_if_else_031c:
 24824 0001190F 48B8-                   	mov rax, L_constants + 2
 24824 00011911 [0200000000000000] 
 24825                                  .L_if_end_031c:
 24826 00011919 483D[02000000]          	cmp rax, sob_boolean_false
 24827 0001191F 7467                    	je .L_if_else_031f
 24828                                  	; preparing a tail-call
 24829 00011921 488B4528                	mov rax, PARAM(1)	; param e2
 24830 00011925 50                      	push rax
 24831 00011926 488B4520                	mov rax, PARAM(0)	; param e1
 24832 0001192A 50                      	push rax
 24833 0001192B 6A02                    	push 2	; arg count
 24834 0001192D 488B0425[44130000]      	mov rax, qword [free_var_6]	; free var =
 24835 00011935 803805                  	cmp byte [rax], T_undefined
 24836 00011938 0F847B370000            	je L_error_fvar_undefined
 24837 0001193E 803804                  	cmp byte [rax], T_closure
 24838 00011941 0F85F6370000            	jne L_error_non_closure
 24839 00011947 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24840                                  
 24841                                  	; recycling the current frame
 24842 0001194A FF7508                  	push qword [rbp + 8 * 1]	; old return address
 24843 0001194D FF7500                  	push qword [rbp]	; old frame-pointer
 24844 00011950 B906000000              	mov rcx, 6
 24845 00011955 488B5D18                	mov rbx, COUNT
 24846 00011959 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 24847 0001195E 488D55F8                	lea rdx, [rbp - 8]
 24848                                  .L_tc_recycle_frame_loop_0589:
 24849 00011962 4883F900                	cmp rcx, 0
 24850 00011966 7413                    	je .L_tc_recycle_frame_done_0589
 24851 00011968 488B32                  	mov rsi, qword [rdx]
 24852 0001196B 488933                  	mov qword [rbx], rsi
 24853 0001196E 48FFC9                  	dec rcx
 24854 00011971 4883EB08                	sub rbx, 8
 24855 00011975 4883EA08                	sub rdx, 8
 24856 00011979 EBE7                    	jmp .L_tc_recycle_frame_loop_0589
 24857                                  .L_tc_recycle_frame_done_0589:
 24858 0001197B 488D6308                	lea rsp, [rbx + 8]
 24859 0001197F 5D                      	pop rbp
 24860 00011980 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 24861 00011983 E930010000              	jmp .L_if_end_031f
 24862                                  .L_if_else_031f:
 24863                                  	; preparing a non-tail-call
 24864 00011988 488B4520                	mov rax, PARAM(0)	; param e1
 24865 0001198C 50                      	push rax
 24866 0001198D 6A01                    	push 1	; arg count
 24867 0001198F 488B0425[61180000]      	mov rax, qword [free_var_83]	; free var char?
 24868 00011997 803805                  	cmp byte [rax], T_undefined
 24869 0001199A 0F8419370000            	je L_error_fvar_undefined
 24870 000119A0 803804                  	cmp byte [rax], T_closure
 24871 000119A3 0F8594370000            	jne L_error_non_closure
 24872 000119A9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24873 000119AC FF5009                  	call SOB_CLOSURE_CODE(rax)
 24874 000119AF 483D[02000000]          	cmp rax, sob_boolean_false
 24875 000119B5 7429                    	je .L_if_else_031d
 24876                                  	; preparing a non-tail-call
 24877 000119B7 488B4528                	mov rax, PARAM(1)	; param e2
 24878 000119BB 50                      	push rax
 24879 000119BC 6A01                    	push 1	; arg count
 24880 000119BE 488B0425[61180000]      	mov rax, qword [free_var_83]	; free var char?
 24881 000119C6 803805                  	cmp byte [rax], T_undefined
 24882 000119C9 0F84EA360000            	je L_error_fvar_undefined
 24883 000119CF 803804                  	cmp byte [rax], T_closure
 24884 000119D2 0F8565370000            	jne L_error_non_closure
 24885 000119D8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24886 000119DB FF5009                  	call SOB_CLOSURE_CODE(rax)
 24887 000119DE EB0A                    	jmp .L_if_end_031d
 24888                                  .L_if_else_031d:
 24889 000119E0 48B8-                   	mov rax, L_constants + 2
 24889 000119E2 [0200000000000000] 
 24890                                  .L_if_end_031d:
 24891 000119EA 483D[02000000]          	cmp rax, sob_boolean_false
 24892 000119F0 7464                    	je .L_if_else_031e
 24893                                  	; preparing a tail-call
 24894 000119F2 488B4528                	mov rax, PARAM(1)	; param e2
 24895 000119F6 50                      	push rax
 24896 000119F7 488B4520                	mov rax, PARAM(0)	; param e1
 24897 000119FB 50                      	push rax
 24898 000119FC 6A02                    	push 2	; arg count
 24899 000119FE 488B0425[2E180000]      	mov rax, qword [free_var_80]	; free var char=?
 24900 00011A06 803805                  	cmp byte [rax], T_undefined
 24901 00011A09 0F84AA360000            	je L_error_fvar_undefined
 24902 00011A0F 803804                  	cmp byte [rax], T_closure
 24903 00011A12 0F8525370000            	jne L_error_non_closure
 24904 00011A18 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24905                                  
 24906                                  	; recycling the current frame
 24907 00011A1B FF7508                  	push qword [rbp + 8 * 1]	; old return address
 24908 00011A1E FF7500                  	push qword [rbp]	; old frame-pointer
 24909 00011A21 B906000000              	mov rcx, 6
 24910 00011A26 488B5D18                	mov rbx, COUNT
 24911 00011A2A 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 24912 00011A2F 488D55F8                	lea rdx, [rbp - 8]
 24913                                  .L_tc_recycle_frame_loop_058a:
 24914 00011A33 4883F900                	cmp rcx, 0
 24915 00011A37 7413                    	je .L_tc_recycle_frame_done_058a
 24916 00011A39 488B32                  	mov rsi, qword [rdx]
 24917 00011A3C 488933                  	mov qword [rbx], rsi
 24918 00011A3F 48FFC9                  	dec rcx
 24919 00011A42 4883EB08                	sub rbx, 8
 24920 00011A46 4883EA08                	sub rdx, 8
 24921 00011A4A EBE7                    	jmp .L_tc_recycle_frame_loop_058a
 24922                                  .L_tc_recycle_frame_done_058a:
 24923 00011A4C 488D6308                	lea rsp, [rbx + 8]
 24924 00011A50 5D                      	pop rbp
 24925 00011A51 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 24926 00011A54 EB62                    	jmp .L_if_end_031e
 24927                                  .L_if_else_031e:
 24928                                  	; preparing a tail-call
 24929 00011A56 488B4528                	mov rax, PARAM(1)	; param e2
 24930 00011A5A 50                      	push rax
 24931 00011A5B 488B4520                	mov rax, PARAM(0)	; param e1
 24932 00011A5F 50                      	push rax
 24933 00011A60 6A02                    	push 2	; arg count
 24934 00011A62 488B0425[B6180000]      	mov rax, qword [free_var_88]	; free var eq?
 24935 00011A6A 803805                  	cmp byte [rax], T_undefined
 24936 00011A6D 0F8446360000            	je L_error_fvar_undefined
 24937 00011A73 803804                  	cmp byte [rax], T_closure
 24938 00011A76 0F85C1360000            	jne L_error_non_closure
 24939 00011A7C FF7001                  	push SOB_CLOSURE_ENV(rax)
 24940                                  
 24941                                  	; recycling the current frame
 24942 00011A7F FF7508                  	push qword [rbp + 8 * 1]	; old return address
 24943 00011A82 FF7500                  	push qword [rbp]	; old frame-pointer
 24944 00011A85 B906000000              	mov rcx, 6
 24945 00011A8A 488B5D18                	mov rbx, COUNT
 24946 00011A8E 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 24947 00011A93 488D55F8                	lea rdx, [rbp - 8]
 24948                                  .L_tc_recycle_frame_loop_058b:
 24949 00011A97 4883F900                	cmp rcx, 0
 24950 00011A9B 7413                    	je .L_tc_recycle_frame_done_058b
 24951 00011A9D 488B32                  	mov rsi, qword [rdx]
 24952 00011AA0 488933                  	mov qword [rbx], rsi
 24953 00011AA3 48FFC9                  	dec rcx
 24954 00011AA6 4883EB08                	sub rbx, 8
 24955 00011AAA 4883EA08                	sub rdx, 8
 24956 00011AAE EBE7                    	jmp .L_tc_recycle_frame_loop_058b
 24957                                  .L_tc_recycle_frame_done_058b:
 24958 00011AB0 488D6308                	lea rsp, [rbx + 8]
 24959 00011AB4 5D                      	pop rbp
 24960 00011AB5 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 24961                                  .L_if_end_031e:
 24962                                  .L_if_end_031f:
 24963                                  .L_if_end_0320:
 24964                                  .L_if_end_0321:
 24965                                  .L_if_end_0322:
 24966 00011AB8 C9                      	leave
 24967 00011AB9 C22000                  	ret AND_KILL_FRAME(2)
 24968                                  .L_lambda_simple_end_043a:	; new closure is in rax
 24969 00011ABC 48890425[C7180000]      	mov qword [free_var_89], rax
 24970 00011AC4 48B8-                   	mov rax, sob_void
 24970 00011AC6 [0000000000000000] 
 24971                                  
 24972 00011ACE 4889C7                  	mov rdi, rax
 24973 00011AD1 E865390000              	call print_sexpr_if_not_void
 24974                                  
 24975 00011AD6 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 24976 00011ADB E806370000              	call malloc
 24977 00011AE0 50                      	push rax
 24978 00011AE1 BF00000000              	mov rdi, 8 * 0	; new rib
 24979 00011AE6 E8FB360000              	call malloc
 24980 00011AEB 50                      	push rax
 24981 00011AEC BF08000000              	mov rdi, 8 * 1	; extended env
 24982 00011AF1 E8F0360000              	call malloc
 24983 00011AF6 488B7D10                	mov rdi, ENV
 24984 00011AFA BE00000000              	mov rsi, 0
 24985 00011AFF BA01000000              	mov rdx, 1
 24986                                  .L_lambda_simple_env_loop_043b:	; ext_env[i + 1] <-- env[i]
 24987 00011B04 4883FE00                	cmp rsi, 0
 24988 00011B08 7410                    	je .L_lambda_simple_env_end_043b
 24989 00011B0A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 24990 00011B0E 48890CD0                	mov qword [rax + 8 * rdx], rcx
 24991 00011B12 48FFC6                  	inc rsi
 24992 00011B15 48FFC2                  	inc rdx
 24993 00011B18 EBEA                    	jmp .L_lambda_simple_env_loop_043b
 24994                                  .L_lambda_simple_env_end_043b:
 24995 00011B1A 5B                      	pop rbx
 24996 00011B1B BE00000000              	mov rsi, 0
 24997                                  .L_lambda_simple_params_loop_043b:	; copy params
 24998 00011B20 4883FE00                	cmp rsi, 0
 24999 00011B24 740E                    	je .L_lambda_simple_params_end_043b
 25000 00011B26 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 25001 00011B2B 488914F3                	mov qword [rbx + 8 * rsi], rdx
 25002 00011B2F 48FFC6                  	inc rsi
 25003 00011B32 EBEC                    	jmp .L_lambda_simple_params_loop_043b
 25004                                  .L_lambda_simple_params_end_043b:
 25005 00011B34 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 25006 00011B37 4889C3                  	mov rbx, rax
 25007 00011B3A 58                      	pop rax
 25008 00011B3B C60004                  	mov byte [rax], T_closure
 25009 00011B3E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 25010 00011B42 48C74009[4F1B0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_043b
 25011 00011B4A E997010000              	jmp .L_lambda_simple_end_043b
 25012                                  .L_lambda_simple_code_043b:	; lambda-simple body
 25013 00011B4F 48837C241002            	cmp qword [rsp + 8 * 2], 2
 25014 00011B55 740B                    	je .L_lambda_simple_arity_check_ok_043b
 25015 00011B57 FF742410                	push qword [rsp + 8 * 2]
 25016 00011B5B 6A02                    	push 2
 25017 00011B5D E93D360000              	jmp L_error_incorrect_arity_simple
 25018                                  .L_lambda_simple_arity_check_ok_043b:
 25019 00011B62 C8000000                	enter 0, 0
 25020                                  	; preparing a non-tail-call
 25021 00011B66 488B4528                	mov rax, PARAM(1)	; param s
 25022 00011B6A 50                      	push rax
 25023 00011B6B 6A01                    	push 1	; arg count
 25024 00011B6D 488B0425[3C1B0000]      	mov rax, qword [free_var_126]	; free var null?
 25025 00011B75 803805                  	cmp byte [rax], T_undefined
 25026 00011B78 0F843B350000            	je L_error_fvar_undefined
 25027 00011B7E 803804                  	cmp byte [rax], T_closure
 25028 00011B81 0F85B6350000            	jne L_error_non_closure
 25029 00011B87 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25030 00011B8A FF5009                  	call SOB_CLOSURE_CODE(rax)
 25031 00011B8D 483D[02000000]          	cmp rax, sob_boolean_false
 25032 00011B93 740F                    	je .L_if_else_0324
 25033 00011B95 48B8-                   	mov rax, L_constants + 2
 25033 00011B97 [0200000000000000] 
 25034 00011B9F E93E010000              	jmp .L_if_end_0324
 25035                                  .L_if_else_0324:
 25036                                  	; preparing a non-tail-call
 25037 00011BA4 488B4520                	mov rax, PARAM(0)	; param a
 25038 00011BA8 50                      	push rax
 25039                                  	; preparing a non-tail-call
 25040 00011BA9 488B4528                	mov rax, PARAM(1)	; param s
 25041 00011BAD 50                      	push rax
 25042 00011BAE 6A01                    	push 1	; arg count
 25043 00011BB0 488B0425[EC150000]      	mov rax, qword [free_var_46]	; free var caar
 25044 00011BB8 803805                  	cmp byte [rax], T_undefined
 25045 00011BBB 0F84F8340000            	je L_error_fvar_undefined
 25046 00011BC1 803804                  	cmp byte [rax], T_closure
 25047 00011BC4 0F8573350000            	jne L_error_non_closure
 25048 00011BCA FF7001                  	push SOB_CLOSURE_ENV(rax)
 25049 00011BCD FF5009                  	call SOB_CLOSURE_CODE(rax)
 25050 00011BD0 50                      	push rax
 25051 00011BD1 6A02                    	push 2	; arg count
 25052 00011BD3 488B0425[B6180000]      	mov rax, qword [free_var_88]	; free var eq?
 25053 00011BDB 803805                  	cmp byte [rax], T_undefined
 25054 00011BDE 0F84D5340000            	je L_error_fvar_undefined
 25055 00011BE4 803804                  	cmp byte [rax], T_closure
 25056 00011BE7 0F8550350000            	jne L_error_non_closure
 25057 00011BED FF7001                  	push SOB_CLOSURE_ENV(rax)
 25058 00011BF0 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25059 00011BF3 483D[02000000]          	cmp rax, sob_boolean_false
 25060 00011BF9 7462                    	je .L_if_else_0323
 25061                                  	; preparing a tail-call
 25062 00011BFB 488B4528                	mov rax, PARAM(1)	; param s
 25063 00011BFF 50                      	push rax
 25064 00011C00 6A01                    	push 1	; arg count
 25065 00011C02 488B0425[74160000]      	mov rax, qword [free_var_54]	; free var car
 25066 00011C0A 803805                  	cmp byte [rax], T_undefined
 25067 00011C0D 0F84A6340000            	je L_error_fvar_undefined
 25068 00011C13 803804                  	cmp byte [rax], T_closure
 25069 00011C16 0F8521350000            	jne L_error_non_closure
 25070 00011C1C FF7001                  	push SOB_CLOSURE_ENV(rax)
 25071                                  
 25072                                  	; recycling the current frame
 25073 00011C1F FF7508                  	push qword [rbp + 8 * 1]	; old return address
 25074 00011C22 FF7500                  	push qword [rbp]	; old frame-pointer
 25075 00011C25 B905000000              	mov rcx, 5
 25076 00011C2A 488B5D18                	mov rbx, COUNT
 25077 00011C2E 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 25078 00011C33 488D55F8                	lea rdx, [rbp - 8]
 25079                                  .L_tc_recycle_frame_loop_058c:
 25080 00011C37 4883F900                	cmp rcx, 0
 25081 00011C3B 7413                    	je .L_tc_recycle_frame_done_058c
 25082 00011C3D 488B32                  	mov rsi, qword [rdx]
 25083 00011C40 488933                  	mov qword [rbx], rsi
 25084 00011C43 48FFC9                  	dec rcx
 25085 00011C46 4883EB08                	sub rbx, 8
 25086 00011C4A 4883EA08                	sub rdx, 8
 25087 00011C4E EBE7                    	jmp .L_tc_recycle_frame_loop_058c
 25088                                  .L_tc_recycle_frame_done_058c:
 25089 00011C50 488D6308                	lea rsp, [rbx + 8]
 25090 00011C54 5D                      	pop rbp
 25091 00011C55 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 25092 00011C58 E985000000              	jmp .L_if_end_0323
 25093                                  .L_if_else_0323:
 25094                                  	; preparing a tail-call
 25095                                  	; preparing a non-tail-call
 25096 00011C5D 488B4528                	mov rax, PARAM(1)	; param s
 25097 00011C61 50                      	push rax
 25098 00011C62 6A01                    	push 1	; arg count
 25099 00011C64 488B0425[73170000]      	mov rax, qword [free_var_69]	; free var cdr
 25100 00011C6C 803805                  	cmp byte [rax], T_undefined
 25101 00011C6F 0F8444340000            	je L_error_fvar_undefined
 25102 00011C75 803804                  	cmp byte [rax], T_closure
 25103 00011C78 0F85BF340000            	jne L_error_non_closure
 25104 00011C7E FF7001                  	push SOB_CLOSURE_ENV(rax)
 25105 00011C81 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25106 00011C84 50                      	push rax
 25107 00011C85 488B4520                	mov rax, PARAM(0)	; param a
 25108 00011C89 50                      	push rax
 25109 00011C8A 6A02                    	push 2	; arg count
 25110 00011C8C 488B0425[31150000]      	mov rax, qword [free_var_35]	; free var assoc
 25111 00011C94 803805                  	cmp byte [rax], T_undefined
 25112 00011C97 0F841C340000            	je L_error_fvar_undefined
 25113 00011C9D 803804                  	cmp byte [rax], T_closure
 25114 00011CA0 0F8597340000            	jne L_error_non_closure
 25115 00011CA6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25116                                  
 25117                                  	; recycling the current frame
 25118 00011CA9 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 25119 00011CAC FF7500                  	push qword [rbp]	; old frame-pointer
 25120 00011CAF B906000000              	mov rcx, 6
 25121 00011CB4 488B5D18                	mov rbx, COUNT
 25122 00011CB8 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 25123 00011CBD 488D55F8                	lea rdx, [rbp - 8]
 25124                                  .L_tc_recycle_frame_loop_058d:
 25125 00011CC1 4883F900                	cmp rcx, 0
 25126 00011CC5 7413                    	je .L_tc_recycle_frame_done_058d
 25127 00011CC7 488B32                  	mov rsi, qword [rdx]
 25128 00011CCA 488933                  	mov qword [rbx], rsi
 25129 00011CCD 48FFC9                  	dec rcx
 25130 00011CD0 4883EB08                	sub rbx, 8
 25131 00011CD4 4883EA08                	sub rdx, 8
 25132 00011CD8 EBE7                    	jmp .L_tc_recycle_frame_loop_058d
 25133                                  .L_tc_recycle_frame_done_058d:
 25134 00011CDA 488D6308                	lea rsp, [rbx + 8]
 25135 00011CDE 5D                      	pop rbp
 25136 00011CDF FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 25137                                  .L_if_end_0323:
 25138                                  .L_if_end_0324:
 25139 00011CE2 C9                      	leave
 25140 00011CE3 C22000                  	ret AND_KILL_FRAME(2)
 25141                                  .L_lambda_simple_end_043b:	; new closure is in rax
 25142 00011CE6 48890425[31150000]      	mov qword [free_var_35], rax
 25143 00011CEE 48B8-                   	mov rax, sob_void
 25143 00011CF0 [0000000000000000] 
 25144                                  
 25145 00011CF8 4889C7                  	mov rdi, rax
 25146 00011CFB E83B370000              	call print_sexpr_if_not_void
 25147                                  
 25148                                  	; preparing a non-tail-call
 25149 00011D00 48B8-                   	mov rax, L_constants + 2335
 25149 00011D02 [1F09000000000000] 
 25150 00011D0A 50                      	push rax
 25151 00011D0B 48B8-                   	mov rax, L_constants + 2335
 25151 00011D0D [1F09000000000000] 
 25152 00011D15 50                      	push rax
 25153 00011D16 6A02                    	push 2	; arg count
 25154 00011D18 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 25155 00011D1D E8C4340000              	call malloc
 25156 00011D22 50                      	push rax
 25157 00011D23 BF00000000              	mov rdi, 8 * 0	; new rib
 25158 00011D28 E8B9340000              	call malloc
 25159 00011D2D 50                      	push rax
 25160 00011D2E BF08000000              	mov rdi, 8 * 1	; extended env
 25161 00011D33 E8AE340000              	call malloc
 25162 00011D38 488B7D10                	mov rdi, ENV
 25163 00011D3C BE00000000              	mov rsi, 0
 25164 00011D41 BA01000000              	mov rdx, 1
 25165                                  .L_lambda_simple_env_loop_043c:	; ext_env[i + 1] <-- env[i]
 25166 00011D46 4883FE00                	cmp rsi, 0
 25167 00011D4A 7410                    	je .L_lambda_simple_env_end_043c
 25168 00011D4C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 25169 00011D50 48890CD0                	mov qword [rax + 8 * rdx], rcx
 25170 00011D54 48FFC6                  	inc rsi
 25171 00011D57 48FFC2                  	inc rdx
 25172 00011D5A EBEA                    	jmp .L_lambda_simple_env_loop_043c
 25173                                  .L_lambda_simple_env_end_043c:
 25174 00011D5C 5B                      	pop rbx
 25175 00011D5D BE00000000              	mov rsi, 0
 25176                                  .L_lambda_simple_params_loop_043c:	; copy params
 25177 00011D62 4883FE00                	cmp rsi, 0
 25178 00011D66 740E                    	je .L_lambda_simple_params_end_043c
 25179 00011D68 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 25180 00011D6D 488914F3                	mov qword [rbx + 8 * rsi], rdx
 25181 00011D71 48FFC6                  	inc rsi
 25182 00011D74 EBEC                    	jmp .L_lambda_simple_params_loop_043c
 25183                                  .L_lambda_simple_params_end_043c:
 25184 00011D76 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 25185 00011D79 4889C3                  	mov rbx, rax
 25186 00011D7C 58                      	pop rax
 25187 00011D7D C60004                  	mov byte [rax], T_closure
 25188 00011D80 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 25189 00011D84 48C74009[911D0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_043c
 25190 00011D8C E99D070000              	jmp .L_lambda_simple_end_043c
 25191                                  .L_lambda_simple_code_043c:	; lambda-simple body
 25192 00011D91 48837C241002            	cmp qword [rsp + 8 * 2], 2
 25193 00011D97 740B                    	je .L_lambda_simple_arity_check_ok_043c
 25194 00011D99 FF742410                	push qword [rsp + 8 * 2]
 25195 00011D9D 6A02                    	push 2
 25196 00011D9F E9FB330000              	jmp L_error_incorrect_arity_simple
 25197                                  .L_lambda_simple_arity_check_ok_043c:
 25198 00011DA4 C8000000                	enter 0, 0
 25199                                  
 25200 00011DA8 BF08000000              	mov rdi, 8
 25201 00011DAD E834340000              	call malloc
 25202 00011DB2 488B5D20                	mov rbx, PARAM(0)	; param run
 25203 00011DB6 488918                  	mov [rax], rbx	; box run
 25204 00011DB9 48894520                	mov PARAM(0), rax	; replace param with box
 25205 00011DBD 48B8-                   	mov rax, sob_void
 25205 00011DBF [0000000000000000] 
 25206                                  
 25207                                  
 25208 00011DC7 BF08000000              	mov rdi, 8
 25209 00011DCC E815340000              	call malloc
 25210 00011DD1 488B5D28                	mov rbx, PARAM(1)	; param add
 25211 00011DD5 488918                  	mov [rax], rbx	; box add
 25212 00011DD8 48894528                	mov PARAM(1), rax	; replace param with box
 25213 00011DDC 48B8-                   	mov rax, sob_void
 25213 00011DDE [0000000000000000] 
 25214                                  
 25215 00011DE6 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 25216 00011DEB E8F6330000              	call malloc
 25217 00011DF0 50                      	push rax
 25218 00011DF1 BF10000000              	mov rdi, 8 * 2	; new rib
 25219 00011DF6 E8EB330000              	call malloc
 25220 00011DFB 50                      	push rax
 25221 00011DFC BF10000000              	mov rdi, 8 * 2	; extended env
 25222 00011E01 E8E0330000              	call malloc
 25223 00011E06 488B7D10                	mov rdi, ENV
 25224 00011E0A BE00000000              	mov rsi, 0
 25225 00011E0F BA01000000              	mov rdx, 1
 25226                                  .L_lambda_simple_env_loop_043d:	; ext_env[i + 1] <-- env[i]
 25227 00011E14 4883FE01                	cmp rsi, 1
 25228 00011E18 7410                    	je .L_lambda_simple_env_end_043d
 25229 00011E1A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 25230 00011E1E 48890CD0                	mov qword [rax + 8 * rdx], rcx
 25231 00011E22 48FFC6                  	inc rsi
 25232 00011E25 48FFC2                  	inc rdx
 25233 00011E28 EBEA                    	jmp .L_lambda_simple_env_loop_043d
 25234                                  .L_lambda_simple_env_end_043d:
 25235 00011E2A 5B                      	pop rbx
 25236 00011E2B BE00000000              	mov rsi, 0
 25237                                  .L_lambda_simple_params_loop_043d:	; copy params
 25238 00011E30 4883FE02                	cmp rsi, 2
 25239 00011E34 740E                    	je .L_lambda_simple_params_end_043d
 25240 00011E36 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 25241 00011E3B 488914F3                	mov qword [rbx + 8 * rsi], rdx
 25242 00011E3F 48FFC6                  	inc rsi
 25243 00011E42 EBEC                    	jmp .L_lambda_simple_params_loop_043d
 25244                                  .L_lambda_simple_params_end_043d:
 25245 00011E44 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 25246 00011E47 4889C3                  	mov rbx, rax
 25247 00011E4A 58                      	pop rax
 25248 00011E4B C60004                  	mov byte [rax], T_closure
 25249 00011E4E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 25250 00011E52 48C74009[5F1E0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_043d
 25251 00011E5A E96A020000              	jmp .L_lambda_simple_end_043d
 25252                                  .L_lambda_simple_code_043d:	; lambda-simple body
 25253 00011E5F 48837C241003            	cmp qword [rsp + 8 * 2], 3
 25254 00011E65 740B                    	je .L_lambda_simple_arity_check_ok_043d
 25255 00011E67 FF742410                	push qword [rsp + 8 * 2]
 25256 00011E6B 6A03                    	push 3
 25257 00011E6D E92D330000              	jmp L_error_incorrect_arity_simple
 25258                                  .L_lambda_simple_arity_check_ok_043d:
 25259 00011E72 C8000000                	enter 0, 0
 25260                                  	; preparing a non-tail-call
 25261 00011E76 488B4530                	mov rax, PARAM(2)	; param s
 25262 00011E7A 50                      	push rax
 25263 00011E7B 6A01                    	push 1	; arg count
 25264 00011E7D 488B0425[3C1B0000]      	mov rax, qword [free_var_126]	; free var null?
 25265 00011E85 803805                  	cmp byte [rax], T_undefined
 25266 00011E88 0F842B320000            	je L_error_fvar_undefined
 25267 00011E8E 803804                  	cmp byte [rax], T_closure
 25268 00011E91 0F85A6320000            	jne L_error_non_closure
 25269 00011E97 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25270 00011E9A FF5009                  	call SOB_CLOSURE_CODE(rax)
 25271 00011E9D 483D[02000000]          	cmp rax, sob_boolean_false
 25272 00011EA3 7409                    	je .L_if_else_0325
 25273 00011EA5 488B4520                	mov rax, PARAM(0)	; param target
 25274 00011EA9 E917020000              	jmp .L_if_end_0325
 25275                                  .L_if_else_0325:
 25276                                  	; preparing a tail-call
 25277                                  	; preparing a non-tail-call
 25278                                  	; preparing a non-tail-call
 25279                                  	; preparing a non-tail-call
 25280 00011EAE 488B4530                	mov rax, PARAM(2)	; param s
 25281 00011EB2 50                      	push rax
 25282 00011EB3 6A01                    	push 1	; arg count
 25283 00011EB5 488B0425[74160000]      	mov rax, qword [free_var_54]	; free var car
 25284 00011EBD 803805                  	cmp byte [rax], T_undefined
 25285 00011EC0 0F84F3310000            	je L_error_fvar_undefined
 25286 00011EC6 803804                  	cmp byte [rax], T_closure
 25287 00011EC9 0F856E320000            	jne L_error_non_closure
 25288 00011ECF FF7001                  	push SOB_CLOSURE_ENV(rax)
 25289 00011ED2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25290 00011ED5 50                      	push rax
 25291 00011ED6 6A01                    	push 1	; arg count
 25292 00011ED8 488B0425[181D0000]      	mov rax, qword [free_var_154]	; free var string-length
 25293 00011EE0 803805                  	cmp byte [rax], T_undefined
 25294 00011EE3 0F84D0310000            	je L_error_fvar_undefined
 25295 00011EE9 803804                  	cmp byte [rax], T_closure
 25296 00011EEC 0F854B320000            	jne L_error_non_closure
 25297 00011EF2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25298 00011EF5 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25299 00011EF8 50                      	push rax
 25300 00011EF9 48B8-                   	mov rax, L_constants + 2558
 25300 00011EFB [FE09000000000000] 
 25301 00011F03 50                      	push rax
 25302                                  	; preparing a non-tail-call
 25303 00011F04 488B4530                	mov rax, PARAM(2)	; param s
 25304 00011F08 50                      	push rax
 25305 00011F09 6A01                    	push 1	; arg count
 25306 00011F0B 488B0425[74160000]      	mov rax, qword [free_var_54]	; free var car
 25307 00011F13 803805                  	cmp byte [rax], T_undefined
 25308 00011F16 0F849D310000            	je L_error_fvar_undefined
 25309 00011F1C 803804                  	cmp byte [rax], T_closure
 25310 00011F1F 0F8518320000            	jne L_error_non_closure
 25311 00011F25 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25312 00011F28 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25313 00011F2B 50                      	push rax
 25314 00011F2C 488B4528                	mov rax, PARAM(1)	; param i
 25315 00011F30 50                      	push rax
 25316 00011F31 488B4520                	mov rax, PARAM(0)	; param target
 25317 00011F35 50                      	push rax
 25318 00011F36 6A05                    	push 5	; arg count
 25319 00011F38 488B4510                	mov rax, ENV
 25320 00011F3C 488B00                  	mov rax, qword [rax + 8 * 0]
 25321 00011F3F 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var add
 25322 00011F43 488B00                  	mov rax, qword [rax]
 25323 00011F46 803804                  	cmp byte [rax], T_closure
 25324 00011F49 0F85EE310000            	jne L_error_non_closure
 25325 00011F4F FF7001                  	push SOB_CLOSURE_ENV(rax)
 25326 00011F52 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25327 00011F55 50                      	push rax
 25328 00011F56 6A01                    	push 1	; arg count
 25329 00011F58 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 25330 00011F5D E884320000              	call malloc
 25331 00011F62 50                      	push rax
 25332 00011F63 BF18000000              	mov rdi, 8 * 3	; new rib
 25333 00011F68 E879320000              	call malloc
 25334 00011F6D 50                      	push rax
 25335 00011F6E BF18000000              	mov rdi, 8 * 3	; extended env
 25336 00011F73 E86E320000              	call malloc
 25337 00011F78 488B7D10                	mov rdi, ENV
 25338 00011F7C BE00000000              	mov rsi, 0
 25339 00011F81 BA01000000              	mov rdx, 1
 25340                                  .L_lambda_simple_env_loop_043e:	; ext_env[i + 1] <-- env[i]
 25341 00011F86 4883FE02                	cmp rsi, 2
 25342 00011F8A 7410                    	je .L_lambda_simple_env_end_043e
 25343 00011F8C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 25344 00011F90 48890CD0                	mov qword [rax + 8 * rdx], rcx
 25345 00011F94 48FFC6                  	inc rsi
 25346 00011F97 48FFC2                  	inc rdx
 25347 00011F9A EBEA                    	jmp .L_lambda_simple_env_loop_043e
 25348                                  .L_lambda_simple_env_end_043e:
 25349 00011F9C 5B                      	pop rbx
 25350 00011F9D BE00000000              	mov rsi, 0
 25351                                  .L_lambda_simple_params_loop_043e:	; copy params
 25352 00011FA2 4883FE03                	cmp rsi, 3
 25353 00011FA6 740E                    	je .L_lambda_simple_params_end_043e
 25354 00011FA8 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 25355 00011FAD 488914F3                	mov qword [rbx + 8 * rsi], rdx
 25356 00011FB1 48FFC6                  	inc rsi
 25357 00011FB4 EBEC                    	jmp .L_lambda_simple_params_loop_043e
 25358                                  .L_lambda_simple_params_end_043e:
 25359 00011FB6 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 25360 00011FB9 4889C3                  	mov rbx, rax
 25361 00011FBC 58                      	pop rax
 25362 00011FBD C60004                  	mov byte [rax], T_closure
 25363 00011FC0 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 25364 00011FC4 48C74009[D11F0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_043e
 25365 00011FCC E9AF000000              	jmp .L_lambda_simple_end_043e
 25366                                  .L_lambda_simple_code_043e:	; lambda-simple body
 25367 00011FD1 48837C241001            	cmp qword [rsp + 8 * 2], 1
 25368 00011FD7 740B                    	je .L_lambda_simple_arity_check_ok_043e
 25369 00011FD9 FF742410                	push qword [rsp + 8 * 2]
 25370 00011FDD 6A01                    	push 1
 25371 00011FDF E9BB310000              	jmp L_error_incorrect_arity_simple
 25372                                  .L_lambda_simple_arity_check_ok_043e:
 25373 00011FE4 C8000000                	enter 0, 0
 25374                                  	; preparing a tail-call
 25375                                  	; preparing a non-tail-call
 25376 00011FE8 488B4510                	mov rax, ENV
 25377 00011FEC 488B00                  	mov rax, qword [rax + 8 * 0]
 25378 00011FEF 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var s
 25379 00011FF3 50                      	push rax
 25380 00011FF4 6A01                    	push 1	; arg count
 25381 00011FF6 488B0425[73170000]      	mov rax, qword [free_var_69]	; free var cdr
 25382 00011FFE 803805                  	cmp byte [rax], T_undefined
 25383 00012001 0F84B2300000            	je L_error_fvar_undefined
 25384 00012007 803804                  	cmp byte [rax], T_closure
 25385 0001200A 0F852D310000            	jne L_error_non_closure
 25386 00012010 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25387 00012013 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25388 00012016 50                      	push rax
 25389 00012017 488B4520                	mov rax, PARAM(0)	; param i
 25390 0001201B 50                      	push rax
 25391 0001201C 488B4510                	mov rax, ENV
 25392 00012020 488B00                  	mov rax, qword [rax + 8 * 0]
 25393 00012023 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var target
 25394 00012026 50                      	push rax
 25395 00012027 6A03                    	push 3	; arg count
 25396 00012029 488B4510                	mov rax, ENV
 25397 0001202D 488B4008                	mov rax, qword [rax + 8 * 1]
 25398 00012031 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 25399 00012034 488B00                  	mov rax, qword [rax]
 25400 00012037 803804                  	cmp byte [rax], T_closure
 25401 0001203A 0F85FD300000            	jne L_error_non_closure
 25402 00012040 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25403                                  
 25404                                  	; recycling the current frame
 25405 00012043 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 25406 00012046 FF7500                  	push qword [rbp]	; old frame-pointer
 25407 00012049 B907000000              	mov rcx, 7
 25408 0001204E 488B5D18                	mov rbx, COUNT
 25409 00012052 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 25410 00012057 488D55F8                	lea rdx, [rbp - 8]
 25411                                  .L_tc_recycle_frame_loop_058e:
 25412 0001205B 4883F900                	cmp rcx, 0
 25413 0001205F 7413                    	je .L_tc_recycle_frame_done_058e
 25414 00012061 488B32                  	mov rsi, qword [rdx]
 25415 00012064 488933                  	mov qword [rbx], rsi
 25416 00012067 48FFC9                  	dec rcx
 25417 0001206A 4883EB08                	sub rbx, 8
 25418 0001206E 4883EA08                	sub rdx, 8
 25419 00012072 EBE7                    	jmp .L_tc_recycle_frame_loop_058e
 25420                                  .L_tc_recycle_frame_done_058e:
 25421 00012074 488D6308                	lea rsp, [rbx + 8]
 25422 00012078 5D                      	pop rbp
 25423 00012079 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 25424 0001207C C9                      	leave
 25425 0001207D C21800                  	ret AND_KILL_FRAME(1)
 25426                                  .L_lambda_simple_end_043e:	; new closure is in rax
 25427 00012080 803804                  	cmp byte [rax], T_closure
 25428 00012083 0F85B4300000            	jne L_error_non_closure
 25429 00012089 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25430                                  
 25431                                  	; recycling the current frame
 25432 0001208C FF7508                  	push qword [rbp + 8 * 1]	; old return address
 25433 0001208F FF7500                  	push qword [rbp]	; old frame-pointer
 25434 00012092 B905000000              	mov rcx, 5
 25435 00012097 488B5D18                	mov rbx, COUNT
 25436 0001209B 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 25437 000120A0 488D55F8                	lea rdx, [rbp - 8]
 25438                                  .L_tc_recycle_frame_loop_058f:
 25439 000120A4 4883F900                	cmp rcx, 0
 25440 000120A8 7413                    	je .L_tc_recycle_frame_done_058f
 25441 000120AA 488B32                  	mov rsi, qword [rdx]
 25442 000120AD 488933                  	mov qword [rbx], rsi
 25443 000120B0 48FFC9                  	dec rcx
 25444 000120B3 4883EB08                	sub rbx, 8
 25445 000120B7 4883EA08                	sub rdx, 8
 25446 000120BB EBE7                    	jmp .L_tc_recycle_frame_loop_058f
 25447                                  .L_tc_recycle_frame_done_058f:
 25448 000120BD 488D6308                	lea rsp, [rbx + 8]
 25449 000120C1 5D                      	pop rbp
 25450 000120C2 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 25451                                  .L_if_end_0325:
 25452 000120C5 C9                      	leave
 25453 000120C6 C22800                  	ret AND_KILL_FRAME(3)
 25454                                  .L_lambda_simple_end_043d:	; new closure is in rax
 25455                                  
 25456 000120C9 50                      	push rax
 25457 000120CA 488B4520                	mov rax, PARAM(0)	; param run
 25458                                  
 25459 000120CE 8F00                    	pop qword[rax]
 25460 000120D0 48B8-                   	mov rax, sob_void
 25460 000120D2 [0000000000000000] 
 25461                                  
 25462 000120DA BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 25463 000120DF E802310000              	call malloc
 25464 000120E4 50                      	push rax
 25465 000120E5 BF10000000              	mov rdi, 8 * 2	; new rib
 25466 000120EA E8F7300000              	call malloc
 25467 000120EF 50                      	push rax
 25468 000120F0 BF10000000              	mov rdi, 8 * 2	; extended env
 25469 000120F5 E8EC300000              	call malloc
 25470 000120FA 488B7D10                	mov rdi, ENV
 25471 000120FE BE00000000              	mov rsi, 0
 25472 00012103 BA01000000              	mov rdx, 1
 25473                                  .L_lambda_simple_env_loop_043f:	; ext_env[i + 1] <-- env[i]
 25474 00012108 4883FE01                	cmp rsi, 1
 25475 0001210C 7410                    	je .L_lambda_simple_env_end_043f
 25476 0001210E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 25477 00012112 48890CD0                	mov qword [rax + 8 * rdx], rcx
 25478 00012116 48FFC6                  	inc rsi
 25479 00012119 48FFC2                  	inc rdx
 25480 0001211C EBEA                    	jmp .L_lambda_simple_env_loop_043f
 25481                                  .L_lambda_simple_env_end_043f:
 25482 0001211E 5B                      	pop rbx
 25483 0001211F BE00000000              	mov rsi, 0
 25484                                  .L_lambda_simple_params_loop_043f:	; copy params
 25485 00012124 4883FE02                	cmp rsi, 2
 25486 00012128 740E                    	je .L_lambda_simple_params_end_043f
 25487 0001212A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 25488 0001212F 488914F3                	mov qword [rbx + 8 * rsi], rdx
 25489 00012133 48FFC6                  	inc rsi
 25490 00012136 EBEC                    	jmp .L_lambda_simple_params_loop_043f
 25491                                  .L_lambda_simple_params_end_043f:
 25492 00012138 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 25493 0001213B 4889C3                  	mov rbx, rax
 25494 0001213E 58                      	pop rax
 25495 0001213F C60004                  	mov byte [rax], T_closure
 25496 00012142 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 25497 00012146 48C74009[53210100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_043f
 25498 0001214E E97C010000              	jmp .L_lambda_simple_end_043f
 25499                                  .L_lambda_simple_code_043f:	; lambda-simple body
 25500 00012153 48837C241005            	cmp qword [rsp + 8 * 2], 5
 25501 00012159 740B                    	je .L_lambda_simple_arity_check_ok_043f
 25502 0001215B FF742410                	push qword [rsp + 8 * 2]
 25503 0001215F 6A05                    	push 5
 25504 00012161 E939300000              	jmp L_error_incorrect_arity_simple
 25505                                  .L_lambda_simple_arity_check_ok_043f:
 25506 00012166 C8000000                	enter 0, 0
 25507                                  	; preparing a non-tail-call
 25508 0001216A 488B4540                	mov rax, PARAM(4)	; param limit
 25509 0001216E 50                      	push rax
 25510 0001216F 488B4538                	mov rax, PARAM(3)	; param j
 25511 00012173 50                      	push rax
 25512 00012174 6A02                    	push 2	; arg count
 25513 00012176 488B0425[22130000]      	mov rax, qword [free_var_4]	; free var <
 25514 0001217E 803805                  	cmp byte [rax], T_undefined
 25515 00012181 0F84322F0000            	je L_error_fvar_undefined
 25516 00012187 803804                  	cmp byte [rax], T_closure
 25517 0001218A 0F85AD2F0000            	jne L_error_non_closure
 25518 00012190 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25519 00012193 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25520 00012196 483D[02000000]          	cmp rax, sob_boolean_false
 25521 0001219C 0F8425010000            	je .L_if_else_0326
 25522                                  	; preparing a non-tail-call
 25523                                  	; preparing a non-tail-call
 25524 000121A2 488B4538                	mov rax, PARAM(3)	; param j
 25525 000121A6 50                      	push rax
 25526 000121A7 488B4530                	mov rax, PARAM(2)	; param str
 25527 000121AB 50                      	push rax
 25528 000121AC 6A02                    	push 2	; arg count
 25529 000121AE 488B0425[291D0000]      	mov rax, qword [free_var_155]	; free var string-ref
 25530 000121B6 803805                  	cmp byte [rax], T_undefined
 25531 000121B9 0F84FA2E0000            	je L_error_fvar_undefined
 25532 000121BF 803804                  	cmp byte [rax], T_closure
 25533 000121C2 0F85752F0000            	jne L_error_non_closure
 25534 000121C8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25535 000121CB FF5009                  	call SOB_CLOSURE_CODE(rax)
 25536 000121CE 50                      	push rax
 25537 000121CF 488B4528                	mov rax, PARAM(1)	; param i
 25538 000121D3 50                      	push rax
 25539 000121D4 488B4520                	mov rax, PARAM(0)	; param target
 25540 000121D8 50                      	push rax
 25541 000121D9 6A03                    	push 3	; arg count
 25542 000121DB 488B0425[5C1D0000]      	mov rax, qword [free_var_158]	; free var string-set!
 25543 000121E3 803805                  	cmp byte [rax], T_undefined
 25544 000121E6 0F84CD2E0000            	je L_error_fvar_undefined
 25545 000121EC 803804                  	cmp byte [rax], T_closure
 25546 000121EF 0F85482F0000            	jne L_error_non_closure
 25547 000121F5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25548 000121F8 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25549                                  
 25550                                  	; preparing a tail-call
 25551 000121FB 488B4540                	mov rax, PARAM(4)	; param limit
 25552 000121FF 50                      	push rax
 25553                                  	; preparing a non-tail-call
 25554 00012200 48B8-                   	mov rax, L_constants + 2810
 25554 00012202 [FA0A000000000000] 
 25555 0001220A 50                      	push rax
 25556 0001220B 488B4538                	mov rax, PARAM(3)	; param j
 25557 0001220F 50                      	push rax
 25558 00012210 6A02                    	push 2	; arg count
 25559 00012212 488B0425[EF120000]      	mov rax, qword [free_var_1]	; free var +
 25560 0001221A 803805                  	cmp byte [rax], T_undefined
 25561 0001221D 0F84962E0000            	je L_error_fvar_undefined
 25562 00012223 803804                  	cmp byte [rax], T_closure
 25563 00012226 0F85112F0000            	jne L_error_non_closure
 25564 0001222C FF7001                  	push SOB_CLOSURE_ENV(rax)
 25565 0001222F FF5009                  	call SOB_CLOSURE_CODE(rax)
 25566 00012232 50                      	push rax
 25567 00012233 488B4530                	mov rax, PARAM(2)	; param str
 25568 00012237 50                      	push rax
 25569                                  	; preparing a non-tail-call
 25570 00012238 48B8-                   	mov rax, L_constants + 2810
 25570 0001223A [FA0A000000000000] 
 25571 00012242 50                      	push rax
 25572 00012243 488B4528                	mov rax, PARAM(1)	; param i
 25573 00012247 50                      	push rax
 25574 00012248 6A02                    	push 2	; arg count
 25575 0001224A 488B0425[EF120000]      	mov rax, qword [free_var_1]	; free var +
 25576 00012252 803805                  	cmp byte [rax], T_undefined
 25577 00012255 0F845E2E0000            	je L_error_fvar_undefined
 25578 0001225B 803804                  	cmp byte [rax], T_closure
 25579 0001225E 0F85D92E0000            	jne L_error_non_closure
 25580 00012264 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25581 00012267 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25582 0001226A 50                      	push rax
 25583 0001226B 488B4520                	mov rax, PARAM(0)	; param target
 25584 0001226F 50                      	push rax
 25585 00012270 6A05                    	push 5	; arg count
 25586 00012272 488B4510                	mov rax, ENV
 25587 00012276 488B00                  	mov rax, qword [rax + 8 * 0]
 25588 00012279 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var add
 25589 0001227D 488B00                  	mov rax, qword [rax]
 25590 00012280 803804                  	cmp byte [rax], T_closure
 25591 00012283 0F85B42E0000            	jne L_error_non_closure
 25592 00012289 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25593                                  
 25594                                  	; recycling the current frame
 25595 0001228C FF7508                  	push qword [rbp + 8 * 1]	; old return address
 25596 0001228F FF7500                  	push qword [rbp]	; old frame-pointer
 25597 00012292 B909000000              	mov rcx, 9
 25598 00012297 488B5D18                	mov rbx, COUNT
 25599 0001229B 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 25600 000122A0 488D55F8                	lea rdx, [rbp - 8]
 25601                                  .L_tc_recycle_frame_loop_0590:
 25602 000122A4 4883F900                	cmp rcx, 0
 25603 000122A8 7413                    	je .L_tc_recycle_frame_done_0590
 25604 000122AA 488B32                  	mov rsi, qword [rdx]
 25605 000122AD 488933                  	mov qword [rbx], rsi
 25606 000122B0 48FFC9                  	dec rcx
 25607 000122B3 4883EB08                	sub rbx, 8
 25608 000122B7 4883EA08                	sub rdx, 8
 25609 000122BB EBE7                    	jmp .L_tc_recycle_frame_loop_0590
 25610                                  .L_tc_recycle_frame_done_0590:
 25611 000122BD 488D6308                	lea rsp, [rbx + 8]
 25612 000122C1 5D                      	pop rbp
 25613 000122C2 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 25614 000122C5 EB04                    	jmp .L_if_end_0326
 25615                                  .L_if_else_0326:
 25616 000122C7 488B4528                	mov rax, PARAM(1)	; param i
 25617                                  .L_if_end_0326:
 25618 000122CB C9                      	leave
 25619 000122CC C23800                  	ret AND_KILL_FRAME(5)
 25620                                  .L_lambda_simple_end_043f:	; new closure is in rax
 25621                                  
 25622 000122CF 50                      	push rax
 25623 000122D0 488B4528                	mov rax, PARAM(1)	; param add
 25624                                  
 25625 000122D4 8F00                    	pop qword[rax]
 25626 000122D6 48B8-                   	mov rax, sob_void
 25626 000122D8 [0000000000000000] 
 25627                                  
 25628 000122E0 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 25629 000122E5 E8FC2E0000              	call malloc
 25630 000122EA 50                      	push rax
 25631 000122EB BF10000000              	mov rdi, 8 * 2	; new rib
 25632 000122F0 E8F12E0000              	call malloc
 25633 000122F5 50                      	push rax
 25634 000122F6 BF10000000              	mov rdi, 8 * 2	; extended env
 25635 000122FB E8E62E0000              	call malloc
 25636 00012300 488B7D10                	mov rdi, ENV
 25637 00012304 BE00000000              	mov rsi, 0
 25638 00012309 BA01000000              	mov rdx, 1
 25639                                  .L_lambda_opt_env_loop_0090:	; ext_env[i + 1] <-- env[i]
 25640 0001230E 4883FE01                	cmp rsi, 1
 25641 00012312 7410                    	je .L_lambda_opt_env_end_0090
 25642 00012314 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 25643 00012318 48890CD0                	mov qword [rax + 8 * rdx], rcx
 25644 0001231C 48FFC6                  	inc rsi
 25645 0001231F 48FFC2                  	inc rdx
 25646 00012322 EBEA                    	jmp .L_lambda_opt_env_loop_0090
 25647                                  .L_lambda_opt_env_end_0090:
 25648 00012324 5B                      	pop rbx
 25649 00012325 BE00000000              	mov rsi, 0
 25650                                  .L_lambda_opt_params_loop_0090:	; copy params
 25651 0001232A 4883FE02                	cmp rsi, 2
 25652 0001232E 740E                    	je .L_lambda_opt_params_end_0090
 25653 00012330 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 25654 00012335 488914F3                	mov qword [rbx + 8 * rsi], rdx
 25655 00012339 48FFC6                  	inc rsi
 25656 0001233C EBEC                    	jmp .L_lambda_opt_params_loop_0090
 25657                                  .L_lambda_opt_params_end_0090:
 25658 0001233E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 25659 00012341 4889C3                  	mov rbx, rax
 25660 00012344 58                      	pop rax
 25661 00012345 C60004                  	mov byte [rax], T_closure
 25662 00012348 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 25663 0001234C 48C74009[59230100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0090
 25664 00012354 E9D1010000              	jmp .L_lambda_opt_end_0090
 25665                                  .L_lambda_opt_code_0090:	; lambda-simple body
 25666 00012359 48837C241000            	cmp qword [rsp + 8 * 2], 0 ;	 check num of args
 25667 0001235F 740D                    	je .L_lambda_opt_arity_check_exact_0090 ;	 if equal, go to exact arity
 25668 00012361 7F42                    	jg .L_lambda_opt_arity_check_more_0090 ;	 if greater than, go to arity more
 25669 00012363 FF742410                	push qword [rsp + 8 * 2] ;	 else, throw opt arity error
 25670 00012367 6A00                    	push 0
 25671 00012369 E9452E0000              	jmp L_error_incorrect_arity_opt
 25672                                  .L_lambda_opt_arity_check_exact_0090:
 25673 0001236E 488B442410              	mov rax, qword [rsp + 8 * 2] ;	 number of args
 25674 00012373 488D5CC410              	lea rbx, [rsp + 8 * (2 + rax)] ;	 address of last element
 25675 00012378 4883EC08                	sub rsp, 8
 25676 0001237C 488D0C24                	lea rcx, [rsp + 0] ;	 new start
 25677                                  .L_lambda_opt_shift_entry_0090:
 25678 00012380 488B5108                	mov rdx, [rcx + 8]
 25679 00012384 488911                  	mov [rcx], rdx
 25680 00012387 4883C108                	add rcx, 8
 25681 0001238B 4839CB                  	cmp rbx, rcx
 25682 0001238E 75F0                    	jne .L_lambda_opt_shift_entry_0090
 25683                                  .L_lambda_opt_shift_exit_0090:
 25684 00012390 48C703[01000000]        	mov qword[rbx], sob_nil ;	 place nil
 25685 00012397 4883C001                	add rax, 1
 25686 0001239B 4889442410              	mov qword [rsp + 8 * 2], rax
 25687 000123A0 E987000000              	jmp .L_lambda_opt_stack_adjusted_0090
 25688                                  .L_lambda_opt_arity_check_more_0090:
 25689 000123A5 48BA-                   	mov rdx, sob_nil ;	 base cdr
 25689 000123A7 [0100000000000000] 
 25690 000123AF 48837C241001            	cmp qword [rsp + 8 * 2], 1
 25691 000123B5 7451                    	je .L_lambda_opt_stack_shrink_loop_exit_0090
 25692                                  .L_lambda_opt_stack_shrink_loop_0090:
 25693 000123B7 BF11000000              	mov rdi, (1 + 8 + 8)
 25694 000123BC E8252E0000              	call malloc
 25695 000123C1 C60021                  	mov byte[rax], T_pair
 25696 000123C4 48895009                	mov SOB_PAIR_CDR(rax), rdx
 25697 000123C8 4889C2                  	mov rdx, rax
 25698 000123CB 488B442410              	mov rax, qword [rsp + 8 * 2]
 25699 000123D0 488B5CC410              	mov rbx, qword [rsp + 8 * (2 + rax)]
 25700 000123D5 48895A01                	mov SOB_PAIR_CAR(rdx), rbx
 25701 000123D9 488D5CC408              	lea rbx, [rsp + 8 * (2 + rax - 1)]
 25702                                  .L_lambda_opt_extra_shift_process_0090:
 25703 000123DE 488B0B                  	mov rcx, [rbx]
 25704 000123E1 48894B08                	mov [rbx + 8], rcx
 25705 000123E5 4883EB08                	sub rbx, 8
 25706 000123E9 4839DC                  	cmp rsp, rbx
 25707 000123EC 7EF0                    	jle .L_lambda_opt_extra_shift_process_0090
 25708                                  .L_lambda_opt_extra_shift_process_end_0090:
 25709 000123EE 4883C408                	add rsp, 8
 25710 000123F2 488B5C2410              	mov rbx, [rsp + 8 * 2]
 25711 000123F7 4883EB01                	sub rbx, 1
 25712 000123FB 48895C2410              	mov [rsp + 8 * 2], rbx
 25713 00012400 48837C241001            	cmp qword [rsp + 8 * 2], 1
 25714 00012406 7FAF                    	jg .L_lambda_opt_stack_shrink_loop_0090
 25715                                  .L_lambda_opt_stack_shrink_loop_exit_0090:
 25716 00012408 488B4C2410              	mov rcx, [rsp + 8 * 2]
 25717 0001240D 488B5CCC10              	mov rbx, qword [rsp + 8 * (2 + rcx)]
 25718 00012412 BF11000000              	mov rdi, (1 + 8 + 8)
 25719 00012417 E8CA2D0000              	call malloc
 25720 0001241C C60021                  	mov byte[rax], T_pair
 25721 0001241F 48895009                	mov SOB_PAIR_CDR(rax), rdx
 25722 00012423 48895801                	mov SOB_PAIR_CAR(rax), rbx
 25723 00012427 488944CC10              	mov [rsp + 8 * (2 + rcx)], rax
 25724                                  .L_lambda_opt_stack_adjusted_0090:
 25725 0001242C C8000000                	enter 0, 0
 25726                                  	; preparing a tail-call
 25727 00012430 488B4520                	mov rax, PARAM(0)	; param strings
 25728 00012434 50                      	push rax
 25729 00012435 48B8-                   	mov rax, L_constants + 2558
 25729 00012437 [FE09000000000000] 
 25730 0001243F 50                      	push rax
 25731                                  	; preparing a non-tail-call
 25732                                  	; preparing a non-tail-call
 25733                                  	; preparing a non-tail-call
 25734 00012440 488B4520                	mov rax, PARAM(0)	; param strings
 25735 00012444 50                      	push rax
 25736 00012445 488B0425[181D0000]      	mov rax, qword [free_var_154]	; free var string-length
 25737 0001244D 803805                  	cmp byte [rax], T_undefined
 25738 00012450 0F84632C0000            	je L_error_fvar_undefined
 25739 00012456 50                      	push rax
 25740 00012457 6A02                    	push 2	; arg count
 25741 00012459 488B0425[F81A0000]      	mov rax, qword [free_var_122]	; free var map
 25742 00012461 803805                  	cmp byte [rax], T_undefined
 25743 00012464 0F844F2C0000            	je L_error_fvar_undefined
 25744 0001246A 803804                  	cmp byte [rax], T_closure
 25745 0001246D 0F85CA2C0000            	jne L_error_non_closure
 25746 00012473 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25747 00012476 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25748 00012479 50                      	push rax
 25749 0001247A 488B0425[EF120000]      	mov rax, qword [free_var_1]	; free var +
 25750 00012482 803805                  	cmp byte [rax], T_undefined
 25751 00012485 0F842E2C0000            	je L_error_fvar_undefined
 25752 0001248B 50                      	push rax
 25753 0001248C 6A02                    	push 2	; arg count
 25754 0001248E 488B0425[0F150000]      	mov rax, qword [free_var_33]	; free var apply
 25755 00012496 803805                  	cmp byte [rax], T_undefined
 25756 00012499 0F841A2C0000            	je L_error_fvar_undefined
 25757 0001249F 803804                  	cmp byte [rax], T_closure
 25758 000124A2 0F85952C0000            	jne L_error_non_closure
 25759 000124A8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25760 000124AB FF5009                  	call SOB_CLOSURE_CODE(rax)
 25761 000124AE 50                      	push rax
 25762 000124AF 6A01                    	push 1	; arg count
 25763 000124B1 488B0425[B41A0000]      	mov rax, qword [free_var_118]	; free var make-string
 25764 000124B9 803805                  	cmp byte [rax], T_undefined
 25765 000124BC 0F84F72B0000            	je L_error_fvar_undefined
 25766 000124C2 803804                  	cmp byte [rax], T_closure
 25767 000124C5 0F85722C0000            	jne L_error_non_closure
 25768 000124CB FF7001                  	push SOB_CLOSURE_ENV(rax)
 25769 000124CE FF5009                  	call SOB_CLOSURE_CODE(rax)
 25770 000124D1 50                      	push rax
 25771 000124D2 6A03                    	push 3	; arg count
 25772 000124D4 488B4510                	mov rax, ENV
 25773 000124D8 488B00                  	mov rax, qword [rax + 8 * 0]
 25774 000124DB 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 25775 000124DE 488B00                  	mov rax, qword [rax]
 25776 000124E1 803804                  	cmp byte [rax], T_closure
 25777 000124E4 0F85532C0000            	jne L_error_non_closure
 25778 000124EA FF7001                  	push SOB_CLOSURE_ENV(rax)
 25779                                  
 25780                                  	; recycling the current frame
 25781 000124ED FF7508                  	push qword [rbp + 8 * 1]	; old return address
 25782 000124F0 FF7500                  	push qword [rbp]	; old frame-pointer
 25783 000124F3 B907000000              	mov rcx, 7
 25784 000124F8 488B5D18                	mov rbx, COUNT
 25785 000124FC 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 25786 00012501 488D55F8                	lea rdx, [rbp - 8]
 25787                                  .L_tc_recycle_frame_loop_0591:
 25788 00012505 4883F900                	cmp rcx, 0
 25789 00012509 7413                    	je .L_tc_recycle_frame_done_0591
 25790 0001250B 488B32                  	mov rsi, qword [rdx]
 25791 0001250E 488933                  	mov qword [rbx], rsi
 25792 00012511 48FFC9                  	dec rcx
 25793 00012514 4883EB08                	sub rbx, 8
 25794 00012518 4883EA08                	sub rdx, 8
 25795 0001251C EBE7                    	jmp .L_tc_recycle_frame_loop_0591
 25796                                  .L_tc_recycle_frame_done_0591:
 25797 0001251E 488D6308                	lea rsp, [rbx + 8]
 25798 00012522 5D                      	pop rbp
 25799 00012523 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 25800 00012526 C9                      	leave
 25801 00012527 C21800                  	ret AND_KILL_FRAME(1)
 25802                                  .L_lambda_opt_end_0090:	; new closure is in rax
 25803 0001252A C9                      	leave
 25804 0001252B C22000                  	ret AND_KILL_FRAME(2)
 25805                                  .L_lambda_simple_end_043c:	; new closure is in rax
 25806 0001252E 803804                  	cmp byte [rax], T_closure
 25807 00012531 0F85062C0000            	jne L_error_non_closure
 25808 00012537 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25809 0001253A FF5009                  	call SOB_CLOSURE_CODE(rax)
 25810 0001253D 48890425[A11C0000]      	mov qword [free_var_147], rax
 25811 00012545 48B8-                   	mov rax, sob_void
 25811 00012547 [0000000000000000] 
 25812                                  
 25813 0001254F 4889C7                  	mov rdi, rax
 25814 00012552 E8E42E0000              	call print_sexpr_if_not_void
 25815                                  
 25816                                  	; preparing a non-tail-call
 25817 00012557 48B8-                   	mov rax, L_constants + 2335
 25817 00012559 [1F09000000000000] 
 25818 00012561 50                      	push rax
 25819 00012562 48B8-                   	mov rax, L_constants + 2335
 25819 00012564 [1F09000000000000] 
 25820 0001256C 50                      	push rax
 25821 0001256D 6A02                    	push 2	; arg count
 25822 0001256F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 25823 00012574 E86D2C0000              	call malloc
 25824 00012579 50                      	push rax
 25825 0001257A BF00000000              	mov rdi, 8 * 0	; new rib
 25826 0001257F E8622C0000              	call malloc
 25827 00012584 50                      	push rax
 25828 00012585 BF08000000              	mov rdi, 8 * 1	; extended env
 25829 0001258A E8572C0000              	call malloc
 25830 0001258F 488B7D10                	mov rdi, ENV
 25831 00012593 BE00000000              	mov rsi, 0
 25832 00012598 BA01000000              	mov rdx, 1
 25833                                  .L_lambda_simple_env_loop_0440:	; ext_env[i + 1] <-- env[i]
 25834 0001259D 4883FE00                	cmp rsi, 0
 25835 000125A1 7410                    	je .L_lambda_simple_env_end_0440
 25836 000125A3 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 25837 000125A7 48890CD0                	mov qword [rax + 8 * rdx], rcx
 25838 000125AB 48FFC6                  	inc rsi
 25839 000125AE 48FFC2                  	inc rdx
 25840 000125B1 EBEA                    	jmp .L_lambda_simple_env_loop_0440
 25841                                  .L_lambda_simple_env_end_0440:
 25842 000125B3 5B                      	pop rbx
 25843 000125B4 BE00000000              	mov rsi, 0
 25844                                  .L_lambda_simple_params_loop_0440:	; copy params
 25845 000125B9 4883FE00                	cmp rsi, 0
 25846 000125BD 740E                    	je .L_lambda_simple_params_end_0440
 25847 000125BF 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 25848 000125C4 488914F3                	mov qword [rbx + 8 * rsi], rdx
 25849 000125C8 48FFC6                  	inc rsi
 25850 000125CB EBEC                    	jmp .L_lambda_simple_params_loop_0440
 25851                                  .L_lambda_simple_params_end_0440:
 25852 000125CD 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 25853 000125D0 4889C3                  	mov rbx, rax
 25854 000125D3 58                      	pop rax
 25855 000125D4 C60004                  	mov byte [rax], T_closure
 25856 000125D7 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 25857 000125DB 48C74009[E8250100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0440
 25858 000125E3 E99D070000              	jmp .L_lambda_simple_end_0440
 25859                                  .L_lambda_simple_code_0440:	; lambda-simple body
 25860 000125E8 48837C241002            	cmp qword [rsp + 8 * 2], 2
 25861 000125EE 740B                    	je .L_lambda_simple_arity_check_ok_0440
 25862 000125F0 FF742410                	push qword [rsp + 8 * 2]
 25863 000125F4 6A02                    	push 2
 25864 000125F6 E9A42B0000              	jmp L_error_incorrect_arity_simple
 25865                                  .L_lambda_simple_arity_check_ok_0440:
 25866 000125FB C8000000                	enter 0, 0
 25867                                  
 25868 000125FF BF08000000              	mov rdi, 8
 25869 00012604 E8DD2B0000              	call malloc
 25870 00012609 488B5D20                	mov rbx, PARAM(0)	; param run
 25871 0001260D 488918                  	mov [rax], rbx	; box run
 25872 00012610 48894520                	mov PARAM(0), rax	; replace param with box
 25873 00012614 48B8-                   	mov rax, sob_void
 25873 00012616 [0000000000000000] 
 25874                                  
 25875                                  
 25876 0001261E BF08000000              	mov rdi, 8
 25877 00012623 E8BE2B0000              	call malloc
 25878 00012628 488B5D28                	mov rbx, PARAM(1)	; param add
 25879 0001262C 488918                  	mov [rax], rbx	; box add
 25880 0001262F 48894528                	mov PARAM(1), rax	; replace param with box
 25881 00012633 48B8-                   	mov rax, sob_void
 25881 00012635 [0000000000000000] 
 25882                                  
 25883 0001263D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 25884 00012642 E89F2B0000              	call malloc
 25885 00012647 50                      	push rax
 25886 00012648 BF10000000              	mov rdi, 8 * 2	; new rib
 25887 0001264D E8942B0000              	call malloc
 25888 00012652 50                      	push rax
 25889 00012653 BF10000000              	mov rdi, 8 * 2	; extended env
 25890 00012658 E8892B0000              	call malloc
 25891 0001265D 488B7D10                	mov rdi, ENV
 25892 00012661 BE00000000              	mov rsi, 0
 25893 00012666 BA01000000              	mov rdx, 1
 25894                                  .L_lambda_simple_env_loop_0441:	; ext_env[i + 1] <-- env[i]
 25895 0001266B 4883FE01                	cmp rsi, 1
 25896 0001266F 7410                    	je .L_lambda_simple_env_end_0441
 25897 00012671 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 25898 00012675 48890CD0                	mov qword [rax + 8 * rdx], rcx
 25899 00012679 48FFC6                  	inc rsi
 25900 0001267C 48FFC2                  	inc rdx
 25901 0001267F EBEA                    	jmp .L_lambda_simple_env_loop_0441
 25902                                  .L_lambda_simple_env_end_0441:
 25903 00012681 5B                      	pop rbx
 25904 00012682 BE00000000              	mov rsi, 0
 25905                                  .L_lambda_simple_params_loop_0441:	; copy params
 25906 00012687 4883FE02                	cmp rsi, 2
 25907 0001268B 740E                    	je .L_lambda_simple_params_end_0441
 25908 0001268D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 25909 00012692 488914F3                	mov qword [rbx + 8 * rsi], rdx
 25910 00012696 48FFC6                  	inc rsi
 25911 00012699 EBEC                    	jmp .L_lambda_simple_params_loop_0441
 25912                                  .L_lambda_simple_params_end_0441:
 25913 0001269B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 25914 0001269E 4889C3                  	mov rbx, rax
 25915 000126A1 58                      	pop rax
 25916 000126A2 C60004                  	mov byte [rax], T_closure
 25917 000126A5 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 25918 000126A9 48C74009[B6260100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0441
 25919 000126B1 E96A020000              	jmp .L_lambda_simple_end_0441
 25920                                  .L_lambda_simple_code_0441:	; lambda-simple body
 25921 000126B6 48837C241003            	cmp qword [rsp + 8 * 2], 3
 25922 000126BC 740B                    	je .L_lambda_simple_arity_check_ok_0441
 25923 000126BE FF742410                	push qword [rsp + 8 * 2]
 25924 000126C2 6A03                    	push 3
 25925 000126C4 E9D62A0000              	jmp L_error_incorrect_arity_simple
 25926                                  .L_lambda_simple_arity_check_ok_0441:
 25927 000126C9 C8000000                	enter 0, 0
 25928                                  	; preparing a non-tail-call
 25929 000126CD 488B4530                	mov rax, PARAM(2)	; param s
 25930 000126D1 50                      	push rax
 25931 000126D2 6A01                    	push 1	; arg count
 25932 000126D4 488B0425[3C1B0000]      	mov rax, qword [free_var_126]	; free var null?
 25933 000126DC 803805                  	cmp byte [rax], T_undefined
 25934 000126DF 0F84D4290000            	je L_error_fvar_undefined
 25935 000126E5 803804                  	cmp byte [rax], T_closure
 25936 000126E8 0F854F2A0000            	jne L_error_non_closure
 25937 000126EE FF7001                  	push SOB_CLOSURE_ENV(rax)
 25938 000126F1 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25939 000126F4 483D[02000000]          	cmp rax, sob_boolean_false
 25940 000126FA 7409                    	je .L_if_else_0327
 25941 000126FC 488B4520                	mov rax, PARAM(0)	; param target
 25942 00012700 E917020000              	jmp .L_if_end_0327
 25943                                  .L_if_else_0327:
 25944                                  	; preparing a tail-call
 25945                                  	; preparing a non-tail-call
 25946                                  	; preparing a non-tail-call
 25947                                  	; preparing a non-tail-call
 25948 00012705 488B4530                	mov rax, PARAM(2)	; param s
 25949 00012709 50                      	push rax
 25950 0001270A 6A01                    	push 1	; arg count
 25951 0001270C 488B0425[74160000]      	mov rax, qword [free_var_54]	; free var car
 25952 00012714 803805                  	cmp byte [rax], T_undefined
 25953 00012717 0F849C290000            	je L_error_fvar_undefined
 25954 0001271D 803804                  	cmp byte [rax], T_closure
 25955 00012720 0F85172A0000            	jne L_error_non_closure
 25956 00012726 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25957 00012729 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25958 0001272C 50                      	push rax
 25959 0001272D 6A01                    	push 1	; arg count
 25960 0001272F 488B0425[4A1E0000]      	mov rax, qword [free_var_172]	; free var vector-length
 25961 00012737 803805                  	cmp byte [rax], T_undefined
 25962 0001273A 0F8479290000            	je L_error_fvar_undefined
 25963 00012740 803804                  	cmp byte [rax], T_closure
 25964 00012743 0F85F4290000            	jne L_error_non_closure
 25965 00012749 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25966 0001274C FF5009                  	call SOB_CLOSURE_CODE(rax)
 25967 0001274F 50                      	push rax
 25968 00012750 48B8-                   	mov rax, L_constants + 2558
 25968 00012752 [FE09000000000000] 
 25969 0001275A 50                      	push rax
 25970                                  	; preparing a non-tail-call
 25971 0001275B 488B4530                	mov rax, PARAM(2)	; param s
 25972 0001275F 50                      	push rax
 25973 00012760 6A01                    	push 1	; arg count
 25974 00012762 488B0425[74160000]      	mov rax, qword [free_var_54]	; free var car
 25975 0001276A 803805                  	cmp byte [rax], T_undefined
 25976 0001276D 0F8446290000            	je L_error_fvar_undefined
 25977 00012773 803804                  	cmp byte [rax], T_closure
 25978 00012776 0F85C1290000            	jne L_error_non_closure
 25979 0001277C FF7001                  	push SOB_CLOSURE_ENV(rax)
 25980 0001277F FF5009                  	call SOB_CLOSURE_CODE(rax)
 25981 00012782 50                      	push rax
 25982 00012783 488B4528                	mov rax, PARAM(1)	; param i
 25983 00012787 50                      	push rax
 25984 00012788 488B4520                	mov rax, PARAM(0)	; param target
 25985 0001278C 50                      	push rax
 25986 0001278D 6A05                    	push 5	; arg count
 25987 0001278F 488B4510                	mov rax, ENV
 25988 00012793 488B00                  	mov rax, qword [rax + 8 * 0]
 25989 00012796 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var add
 25990 0001279A 488B00                  	mov rax, qword [rax]
 25991 0001279D 803804                  	cmp byte [rax], T_closure
 25992 000127A0 0F8597290000            	jne L_error_non_closure
 25993 000127A6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25994 000127A9 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25995 000127AC 50                      	push rax
 25996 000127AD 6A01                    	push 1	; arg count
 25997 000127AF BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 25998 000127B4 E82D2A0000              	call malloc
 25999 000127B9 50                      	push rax
 26000 000127BA BF18000000              	mov rdi, 8 * 3	; new rib
 26001 000127BF E8222A0000              	call malloc
 26002 000127C4 50                      	push rax
 26003 000127C5 BF18000000              	mov rdi, 8 * 3	; extended env
 26004 000127CA E8172A0000              	call malloc
 26005 000127CF 488B7D10                	mov rdi, ENV
 26006 000127D3 BE00000000              	mov rsi, 0
 26007 000127D8 BA01000000              	mov rdx, 1
 26008                                  .L_lambda_simple_env_loop_0442:	; ext_env[i + 1] <-- env[i]
 26009 000127DD 4883FE02                	cmp rsi, 2
 26010 000127E1 7410                    	je .L_lambda_simple_env_end_0442
 26011 000127E3 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 26012 000127E7 48890CD0                	mov qword [rax + 8 * rdx], rcx
 26013 000127EB 48FFC6                  	inc rsi
 26014 000127EE 48FFC2                  	inc rdx
 26015 000127F1 EBEA                    	jmp .L_lambda_simple_env_loop_0442
 26016                                  .L_lambda_simple_env_end_0442:
 26017 000127F3 5B                      	pop rbx
 26018 000127F4 BE00000000              	mov rsi, 0
 26019                                  .L_lambda_simple_params_loop_0442:	; copy params
 26020 000127F9 4883FE03                	cmp rsi, 3
 26021 000127FD 740E                    	je .L_lambda_simple_params_end_0442
 26022 000127FF 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 26023 00012804 488914F3                	mov qword [rbx + 8 * rsi], rdx
 26024 00012808 48FFC6                  	inc rsi
 26025 0001280B EBEC                    	jmp .L_lambda_simple_params_loop_0442
 26026                                  .L_lambda_simple_params_end_0442:
 26027 0001280D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 26028 00012810 4889C3                  	mov rbx, rax
 26029 00012813 58                      	pop rax
 26030 00012814 C60004                  	mov byte [rax], T_closure
 26031 00012817 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 26032 0001281B 48C74009[28280100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0442
 26033 00012823 E9AF000000              	jmp .L_lambda_simple_end_0442
 26034                                  .L_lambda_simple_code_0442:	; lambda-simple body
 26035 00012828 48837C241001            	cmp qword [rsp + 8 * 2], 1
 26036 0001282E 740B                    	je .L_lambda_simple_arity_check_ok_0442
 26037 00012830 FF742410                	push qword [rsp + 8 * 2]
 26038 00012834 6A01                    	push 1
 26039 00012836 E964290000              	jmp L_error_incorrect_arity_simple
 26040                                  .L_lambda_simple_arity_check_ok_0442:
 26041 0001283B C8000000                	enter 0, 0
 26042                                  	; preparing a tail-call
 26043                                  	; preparing a non-tail-call
 26044 0001283F 488B4510                	mov rax, ENV
 26045 00012843 488B00                  	mov rax, qword [rax + 8 * 0]
 26046 00012846 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var s
 26047 0001284A 50                      	push rax
 26048 0001284B 6A01                    	push 1	; arg count
 26049 0001284D 488B0425[73170000]      	mov rax, qword [free_var_69]	; free var cdr
 26050 00012855 803805                  	cmp byte [rax], T_undefined
 26051 00012858 0F845B280000            	je L_error_fvar_undefined
 26052 0001285E 803804                  	cmp byte [rax], T_closure
 26053 00012861 0F85D6280000            	jne L_error_non_closure
 26054 00012867 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26055 0001286A FF5009                  	call SOB_CLOSURE_CODE(rax)
 26056 0001286D 50                      	push rax
 26057 0001286E 488B4520                	mov rax, PARAM(0)	; param i
 26058 00012872 50                      	push rax
 26059 00012873 488B4510                	mov rax, ENV
 26060 00012877 488B00                  	mov rax, qword [rax + 8 * 0]
 26061 0001287A 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var target
 26062 0001287D 50                      	push rax
 26063 0001287E 6A03                    	push 3	; arg count
 26064 00012880 488B4510                	mov rax, ENV
 26065 00012884 488B4008                	mov rax, qword [rax + 8 * 1]
 26066 00012888 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 26067 0001288B 488B00                  	mov rax, qword [rax]
 26068 0001288E 803804                  	cmp byte [rax], T_closure
 26069 00012891 0F85A6280000            	jne L_error_non_closure
 26070 00012897 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26071                                  
 26072                                  	; recycling the current frame
 26073 0001289A FF7508                  	push qword [rbp + 8 * 1]	; old return address
 26074 0001289D FF7500                  	push qword [rbp]	; old frame-pointer
 26075 000128A0 B907000000              	mov rcx, 7
 26076 000128A5 488B5D18                	mov rbx, COUNT
 26077 000128A9 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 26078 000128AE 488D55F8                	lea rdx, [rbp - 8]
 26079                                  .L_tc_recycle_frame_loop_0592:
 26080 000128B2 4883F900                	cmp rcx, 0
 26081 000128B6 7413                    	je .L_tc_recycle_frame_done_0592
 26082 000128B8 488B32                  	mov rsi, qword [rdx]
 26083 000128BB 488933                  	mov qword [rbx], rsi
 26084 000128BE 48FFC9                  	dec rcx
 26085 000128C1 4883EB08                	sub rbx, 8
 26086 000128C5 4883EA08                	sub rdx, 8
 26087 000128C9 EBE7                    	jmp .L_tc_recycle_frame_loop_0592
 26088                                  .L_tc_recycle_frame_done_0592:
 26089 000128CB 488D6308                	lea rsp, [rbx + 8]
 26090 000128CF 5D                      	pop rbp
 26091 000128D0 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 26092 000128D3 C9                      	leave
 26093 000128D4 C21800                  	ret AND_KILL_FRAME(1)
 26094                                  .L_lambda_simple_end_0442:	; new closure is in rax
 26095 000128D7 803804                  	cmp byte [rax], T_closure
 26096 000128DA 0F855D280000            	jne L_error_non_closure
 26097 000128E0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26098                                  
 26099                                  	; recycling the current frame
 26100 000128E3 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 26101 000128E6 FF7500                  	push qword [rbp]	; old frame-pointer
 26102 000128E9 B905000000              	mov rcx, 5
 26103 000128EE 488B5D18                	mov rbx, COUNT
 26104 000128F2 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 26105 000128F7 488D55F8                	lea rdx, [rbp - 8]
 26106                                  .L_tc_recycle_frame_loop_0593:
 26107 000128FB 4883F900                	cmp rcx, 0
 26108 000128FF 7413                    	je .L_tc_recycle_frame_done_0593
 26109 00012901 488B32                  	mov rsi, qword [rdx]
 26110 00012904 488933                  	mov qword [rbx], rsi
 26111 00012907 48FFC9                  	dec rcx
 26112 0001290A 4883EB08                	sub rbx, 8
 26113 0001290E 4883EA08                	sub rdx, 8
 26114 00012912 EBE7                    	jmp .L_tc_recycle_frame_loop_0593
 26115                                  .L_tc_recycle_frame_done_0593:
 26116 00012914 488D6308                	lea rsp, [rbx + 8]
 26117 00012918 5D                      	pop rbp
 26118 00012919 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 26119                                  .L_if_end_0327:
 26120 0001291C C9                      	leave
 26121 0001291D C22800                  	ret AND_KILL_FRAME(3)
 26122                                  .L_lambda_simple_end_0441:	; new closure is in rax
 26123                                  
 26124 00012920 50                      	push rax
 26125 00012921 488B4520                	mov rax, PARAM(0)	; param run
 26126                                  
 26127 00012925 8F00                    	pop qword[rax]
 26128 00012927 48B8-                   	mov rax, sob_void
 26128 00012929 [0000000000000000] 
 26129                                  
 26130 00012931 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 26131 00012936 E8AB280000              	call malloc
 26132 0001293B 50                      	push rax
 26133 0001293C BF10000000              	mov rdi, 8 * 2	; new rib
 26134 00012941 E8A0280000              	call malloc
 26135 00012946 50                      	push rax
 26136 00012947 BF10000000              	mov rdi, 8 * 2	; extended env
 26137 0001294C E895280000              	call malloc
 26138 00012951 488B7D10                	mov rdi, ENV
 26139 00012955 BE00000000              	mov rsi, 0
 26140 0001295A BA01000000              	mov rdx, 1
 26141                                  .L_lambda_simple_env_loop_0443:	; ext_env[i + 1] <-- env[i]
 26142 0001295F 4883FE01                	cmp rsi, 1
 26143 00012963 7410                    	je .L_lambda_simple_env_end_0443
 26144 00012965 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 26145 00012969 48890CD0                	mov qword [rax + 8 * rdx], rcx
 26146 0001296D 48FFC6                  	inc rsi
 26147 00012970 48FFC2                  	inc rdx
 26148 00012973 EBEA                    	jmp .L_lambda_simple_env_loop_0443
 26149                                  .L_lambda_simple_env_end_0443:
 26150 00012975 5B                      	pop rbx
 26151 00012976 BE00000000              	mov rsi, 0
 26152                                  .L_lambda_simple_params_loop_0443:	; copy params
 26153 0001297B 4883FE02                	cmp rsi, 2
 26154 0001297F 740E                    	je .L_lambda_simple_params_end_0443
 26155 00012981 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 26156 00012986 488914F3                	mov qword [rbx + 8 * rsi], rdx
 26157 0001298A 48FFC6                  	inc rsi
 26158 0001298D EBEC                    	jmp .L_lambda_simple_params_loop_0443
 26159                                  .L_lambda_simple_params_end_0443:
 26160 0001298F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 26161 00012992 4889C3                  	mov rbx, rax
 26162 00012995 58                      	pop rax
 26163 00012996 C60004                  	mov byte [rax], T_closure
 26164 00012999 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 26165 0001299D 48C74009[AA290100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0443
 26166 000129A5 E97C010000              	jmp .L_lambda_simple_end_0443
 26167                                  .L_lambda_simple_code_0443:	; lambda-simple body
 26168 000129AA 48837C241005            	cmp qword [rsp + 8 * 2], 5
 26169 000129B0 740B                    	je .L_lambda_simple_arity_check_ok_0443
 26170 000129B2 FF742410                	push qword [rsp + 8 * 2]
 26171 000129B6 6A05                    	push 5
 26172 000129B8 E9E2270000              	jmp L_error_incorrect_arity_simple
 26173                                  .L_lambda_simple_arity_check_ok_0443:
 26174 000129BD C8000000                	enter 0, 0
 26175                                  	; preparing a non-tail-call
 26176 000129C1 488B4540                	mov rax, PARAM(4)	; param limit
 26177 000129C5 50                      	push rax
 26178 000129C6 488B4538                	mov rax, PARAM(3)	; param j
 26179 000129CA 50                      	push rax
 26180 000129CB 6A02                    	push 2	; arg count
 26181 000129CD 488B0425[22130000]      	mov rax, qword [free_var_4]	; free var <
 26182 000129D5 803805                  	cmp byte [rax], T_undefined
 26183 000129D8 0F84DB260000            	je L_error_fvar_undefined
 26184 000129DE 803804                  	cmp byte [rax], T_closure
 26185 000129E1 0F8556270000            	jne L_error_non_closure
 26186 000129E7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26187 000129EA FF5009                  	call SOB_CLOSURE_CODE(rax)
 26188 000129ED 483D[02000000]          	cmp rax, sob_boolean_false
 26189 000129F3 0F8425010000            	je .L_if_else_0328
 26190                                  	; preparing a non-tail-call
 26191                                  	; preparing a non-tail-call
 26192 000129F9 488B4538                	mov rax, PARAM(3)	; param j
 26193 000129FD 50                      	push rax
 26194 000129FE 488B4530                	mov rax, PARAM(2)	; param vec
 26195 00012A02 50                      	push rax
 26196 00012A03 6A02                    	push 2	; arg count
 26197 00012A05 488B0425[5B1E0000]      	mov rax, qword [free_var_173]	; free var vector-ref
 26198 00012A0D 803805                  	cmp byte [rax], T_undefined
 26199 00012A10 0F84A3260000            	je L_error_fvar_undefined
 26200 00012A16 803804                  	cmp byte [rax], T_closure
 26201 00012A19 0F851E270000            	jne L_error_non_closure
 26202 00012A1F FF7001                  	push SOB_CLOSURE_ENV(rax)
 26203 00012A22 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26204 00012A25 50                      	push rax
 26205 00012A26 488B4528                	mov rax, PARAM(1)	; param i
 26206 00012A2A 50                      	push rax
 26207 00012A2B 488B4520                	mov rax, PARAM(0)	; param target
 26208 00012A2F 50                      	push rax
 26209 00012A30 6A03                    	push 3	; arg count
 26210 00012A32 488B0425[8E1E0000]      	mov rax, qword [free_var_176]	; free var vector-set!
 26211 00012A3A 803805                  	cmp byte [rax], T_undefined
 26212 00012A3D 0F8476260000            	je L_error_fvar_undefined
 26213 00012A43 803804                  	cmp byte [rax], T_closure
 26214 00012A46 0F85F1260000            	jne L_error_non_closure
 26215 00012A4C FF7001                  	push SOB_CLOSURE_ENV(rax)
 26216 00012A4F FF5009                  	call SOB_CLOSURE_CODE(rax)
 26217                                  
 26218                                  	; preparing a tail-call
 26219 00012A52 488B4540                	mov rax, PARAM(4)	; param limit
 26220 00012A56 50                      	push rax
 26221                                  	; preparing a non-tail-call
 26222 00012A57 48B8-                   	mov rax, L_constants + 2810
 26222 00012A59 [FA0A000000000000] 
 26223 00012A61 50                      	push rax
 26224 00012A62 488B4538                	mov rax, PARAM(3)	; param j
 26225 00012A66 50                      	push rax
 26226 00012A67 6A02                    	push 2	; arg count
 26227 00012A69 488B0425[EF120000]      	mov rax, qword [free_var_1]	; free var +
 26228 00012A71 803805                  	cmp byte [rax], T_undefined
 26229 00012A74 0F843F260000            	je L_error_fvar_undefined
 26230 00012A7A 803804                  	cmp byte [rax], T_closure
 26231 00012A7D 0F85BA260000            	jne L_error_non_closure
 26232 00012A83 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26233 00012A86 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26234 00012A89 50                      	push rax
 26235 00012A8A 488B4530                	mov rax, PARAM(2)	; param vec
 26236 00012A8E 50                      	push rax
 26237                                  	; preparing a non-tail-call
 26238 00012A8F 48B8-                   	mov rax, L_constants + 2810
 26238 00012A91 [FA0A000000000000] 
 26239 00012A99 50                      	push rax
 26240 00012A9A 488B4528                	mov rax, PARAM(1)	; param i
 26241 00012A9E 50                      	push rax
 26242 00012A9F 6A02                    	push 2	; arg count
 26243 00012AA1 488B0425[EF120000]      	mov rax, qword [free_var_1]	; free var +
 26244 00012AA9 803805                  	cmp byte [rax], T_undefined
 26245 00012AAC 0F8407260000            	je L_error_fvar_undefined
 26246 00012AB2 803804                  	cmp byte [rax], T_closure
 26247 00012AB5 0F8582260000            	jne L_error_non_closure
 26248 00012ABB FF7001                  	push SOB_CLOSURE_ENV(rax)
 26249 00012ABE FF5009                  	call SOB_CLOSURE_CODE(rax)
 26250 00012AC1 50                      	push rax
 26251 00012AC2 488B4520                	mov rax, PARAM(0)	; param target
 26252 00012AC6 50                      	push rax
 26253 00012AC7 6A05                    	push 5	; arg count
 26254 00012AC9 488B4510                	mov rax, ENV
 26255 00012ACD 488B00                  	mov rax, qword [rax + 8 * 0]
 26256 00012AD0 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var add
 26257 00012AD4 488B00                  	mov rax, qword [rax]
 26258 00012AD7 803804                  	cmp byte [rax], T_closure
 26259 00012ADA 0F855D260000            	jne L_error_non_closure
 26260 00012AE0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26261                                  
 26262                                  	; recycling the current frame
 26263 00012AE3 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 26264 00012AE6 FF7500                  	push qword [rbp]	; old frame-pointer
 26265 00012AE9 B909000000              	mov rcx, 9
 26266 00012AEE 488B5D18                	mov rbx, COUNT
 26267 00012AF2 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 26268 00012AF7 488D55F8                	lea rdx, [rbp - 8]
 26269                                  .L_tc_recycle_frame_loop_0594:
 26270 00012AFB 4883F900                	cmp rcx, 0
 26271 00012AFF 7413                    	je .L_tc_recycle_frame_done_0594
 26272 00012B01 488B32                  	mov rsi, qword [rdx]
 26273 00012B04 488933                  	mov qword [rbx], rsi
 26274 00012B07 48FFC9                  	dec rcx
 26275 00012B0A 4883EB08                	sub rbx, 8
 26276 00012B0E 4883EA08                	sub rdx, 8
 26277 00012B12 EBE7                    	jmp .L_tc_recycle_frame_loop_0594
 26278                                  .L_tc_recycle_frame_done_0594:
 26279 00012B14 488D6308                	lea rsp, [rbx + 8]
 26280 00012B18 5D                      	pop rbp
 26281 00012B19 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 26282 00012B1C EB04                    	jmp .L_if_end_0328
 26283                                  .L_if_else_0328:
 26284 00012B1E 488B4528                	mov rax, PARAM(1)	; param i
 26285                                  .L_if_end_0328:
 26286 00012B22 C9                      	leave
 26287 00012B23 C23800                  	ret AND_KILL_FRAME(5)
 26288                                  .L_lambda_simple_end_0443:	; new closure is in rax
 26289                                  
 26290 00012B26 50                      	push rax
 26291 00012B27 488B4528                	mov rax, PARAM(1)	; param add
 26292                                  
 26293 00012B2B 8F00                    	pop qword[rax]
 26294 00012B2D 48B8-                   	mov rax, sob_void
 26294 00012B2F [0000000000000000] 
 26295                                  
 26296 00012B37 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 26297 00012B3C E8A5260000              	call malloc
 26298 00012B41 50                      	push rax
 26299 00012B42 BF10000000              	mov rdi, 8 * 2	; new rib
 26300 00012B47 E89A260000              	call malloc
 26301 00012B4C 50                      	push rax
 26302 00012B4D BF10000000              	mov rdi, 8 * 2	; extended env
 26303 00012B52 E88F260000              	call malloc
 26304 00012B57 488B7D10                	mov rdi, ENV
 26305 00012B5B BE00000000              	mov rsi, 0
 26306 00012B60 BA01000000              	mov rdx, 1
 26307                                  .L_lambda_opt_env_loop_0091:	; ext_env[i + 1] <-- env[i]
 26308 00012B65 4883FE01                	cmp rsi, 1
 26309 00012B69 7410                    	je .L_lambda_opt_env_end_0091
 26310 00012B6B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 26311 00012B6F 48890CD0                	mov qword [rax + 8 * rdx], rcx
 26312 00012B73 48FFC6                  	inc rsi
 26313 00012B76 48FFC2                  	inc rdx
 26314 00012B79 EBEA                    	jmp .L_lambda_opt_env_loop_0091
 26315                                  .L_lambda_opt_env_end_0091:
 26316 00012B7B 5B                      	pop rbx
 26317 00012B7C BE00000000              	mov rsi, 0
 26318                                  .L_lambda_opt_params_loop_0091:	; copy params
 26319 00012B81 4883FE02                	cmp rsi, 2
 26320 00012B85 740E                    	je .L_lambda_opt_params_end_0091
 26321 00012B87 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 26322 00012B8C 488914F3                	mov qword [rbx + 8 * rsi], rdx
 26323 00012B90 48FFC6                  	inc rsi
 26324 00012B93 EBEC                    	jmp .L_lambda_opt_params_loop_0091
 26325                                  .L_lambda_opt_params_end_0091:
 26326 00012B95 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 26327 00012B98 4889C3                  	mov rbx, rax
 26328 00012B9B 58                      	pop rax
 26329 00012B9C C60004                  	mov byte [rax], T_closure
 26330 00012B9F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 26331 00012BA3 48C74009[B02B0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0091
 26332 00012BAB E9D1010000              	jmp .L_lambda_opt_end_0091
 26333                                  .L_lambda_opt_code_0091:	; lambda-simple body
 26334 00012BB0 48837C241000            	cmp qword [rsp + 8 * 2], 0 ;	 check num of args
 26335 00012BB6 740D                    	je .L_lambda_opt_arity_check_exact_0091 ;	 if equal, go to exact arity
 26336 00012BB8 7F42                    	jg .L_lambda_opt_arity_check_more_0091 ;	 if greater than, go to arity more
 26337 00012BBA FF742410                	push qword [rsp + 8 * 2] ;	 else, throw opt arity error
 26338 00012BBE 6A00                    	push 0
 26339 00012BC0 E9EE250000              	jmp L_error_incorrect_arity_opt
 26340                                  .L_lambda_opt_arity_check_exact_0091:
 26341 00012BC5 488B442410              	mov rax, qword [rsp + 8 * 2] ;	 number of args
 26342 00012BCA 488D5CC410              	lea rbx, [rsp + 8 * (2 + rax)] ;	 address of last element
 26343 00012BCF 4883EC08                	sub rsp, 8
 26344 00012BD3 488D0C24                	lea rcx, [rsp + 0] ;	 new start
 26345                                  .L_lambda_opt_shift_entry_0091:
 26346 00012BD7 488B5108                	mov rdx, [rcx + 8]
 26347 00012BDB 488911                  	mov [rcx], rdx
 26348 00012BDE 4883C108                	add rcx, 8
 26349 00012BE2 4839CB                  	cmp rbx, rcx
 26350 00012BE5 75F0                    	jne .L_lambda_opt_shift_entry_0091
 26351                                  .L_lambda_opt_shift_exit_0091:
 26352 00012BE7 48C703[01000000]        	mov qword[rbx], sob_nil ;	 place nil
 26353 00012BEE 4883C001                	add rax, 1
 26354 00012BF2 4889442410              	mov qword [rsp + 8 * 2], rax
 26355 00012BF7 E987000000              	jmp .L_lambda_opt_stack_adjusted_0091
 26356                                  .L_lambda_opt_arity_check_more_0091:
 26357 00012BFC 48BA-                   	mov rdx, sob_nil ;	 base cdr
 26357 00012BFE [0100000000000000] 
 26358 00012C06 48837C241001            	cmp qword [rsp + 8 * 2], 1
 26359 00012C0C 7451                    	je .L_lambda_opt_stack_shrink_loop_exit_0091
 26360                                  .L_lambda_opt_stack_shrink_loop_0091:
 26361 00012C0E BF11000000              	mov rdi, (1 + 8 + 8)
 26362 00012C13 E8CE250000              	call malloc
 26363 00012C18 C60021                  	mov byte[rax], T_pair
 26364 00012C1B 48895009                	mov SOB_PAIR_CDR(rax), rdx
 26365 00012C1F 4889C2                  	mov rdx, rax
 26366 00012C22 488B442410              	mov rax, qword [rsp + 8 * 2]
 26367 00012C27 488B5CC410              	mov rbx, qword [rsp + 8 * (2 + rax)]
 26368 00012C2C 48895A01                	mov SOB_PAIR_CAR(rdx), rbx
 26369 00012C30 488D5CC408              	lea rbx, [rsp + 8 * (2 + rax - 1)]
 26370                                  .L_lambda_opt_extra_shift_process_0091:
 26371 00012C35 488B0B                  	mov rcx, [rbx]
 26372 00012C38 48894B08                	mov [rbx + 8], rcx
 26373 00012C3C 4883EB08                	sub rbx, 8
 26374 00012C40 4839DC                  	cmp rsp, rbx
 26375 00012C43 7EF0                    	jle .L_lambda_opt_extra_shift_process_0091
 26376                                  .L_lambda_opt_extra_shift_process_end_0091:
 26377 00012C45 4883C408                	add rsp, 8
 26378 00012C49 488B5C2410              	mov rbx, [rsp + 8 * 2]
 26379 00012C4E 4883EB01                	sub rbx, 1
 26380 00012C52 48895C2410              	mov [rsp + 8 * 2], rbx
 26381 00012C57 48837C241001            	cmp qword [rsp + 8 * 2], 1
 26382 00012C5D 7FAF                    	jg .L_lambda_opt_stack_shrink_loop_0091
 26383                                  .L_lambda_opt_stack_shrink_loop_exit_0091:
 26384 00012C5F 488B4C2410              	mov rcx, [rsp + 8 * 2]
 26385 00012C64 488B5CCC10              	mov rbx, qword [rsp + 8 * (2 + rcx)]
 26386 00012C69 BF11000000              	mov rdi, (1 + 8 + 8)
 26387 00012C6E E873250000              	call malloc
 26388 00012C73 C60021                  	mov byte[rax], T_pair
 26389 00012C76 48895009                	mov SOB_PAIR_CDR(rax), rdx
 26390 00012C7A 48895801                	mov SOB_PAIR_CAR(rax), rbx
 26391 00012C7E 488944CC10              	mov [rsp + 8 * (2 + rcx)], rax
 26392                                  .L_lambda_opt_stack_adjusted_0091:
 26393 00012C83 C8000000                	enter 0, 0
 26394                                  	; preparing a tail-call
 26395 00012C87 488B4520                	mov rax, PARAM(0)	; param vectors
 26396 00012C8B 50                      	push rax
 26397 00012C8C 48B8-                   	mov rax, L_constants + 2558
 26397 00012C8E [FE09000000000000] 
 26398 00012C96 50                      	push rax
 26399                                  	; preparing a non-tail-call
 26400                                  	; preparing a non-tail-call
 26401                                  	; preparing a non-tail-call
 26402 00012C97 488B4520                	mov rax, PARAM(0)	; param vectors
 26403 00012C9B 50                      	push rax
 26404 00012C9C 488B0425[4A1E0000]      	mov rax, qword [free_var_172]	; free var vector-length
 26405 00012CA4 803805                  	cmp byte [rax], T_undefined
 26406 00012CA7 0F840C240000            	je L_error_fvar_undefined
 26407 00012CAD 50                      	push rax
 26408 00012CAE 6A02                    	push 2	; arg count
 26409 00012CB0 488B0425[F81A0000]      	mov rax, qword [free_var_122]	; free var map
 26410 00012CB8 803805                  	cmp byte [rax], T_undefined
 26411 00012CBB 0F84F8230000            	je L_error_fvar_undefined
 26412 00012CC1 803804                  	cmp byte [rax], T_closure
 26413 00012CC4 0F8573240000            	jne L_error_non_closure
 26414 00012CCA FF7001                  	push SOB_CLOSURE_ENV(rax)
 26415 00012CCD FF5009                  	call SOB_CLOSURE_CODE(rax)
 26416 00012CD0 50                      	push rax
 26417 00012CD1 488B0425[EF120000]      	mov rax, qword [free_var_1]	; free var +
 26418 00012CD9 803805                  	cmp byte [rax], T_undefined
 26419 00012CDC 0F84D7230000            	je L_error_fvar_undefined
 26420 00012CE2 50                      	push rax
 26421 00012CE3 6A02                    	push 2	; arg count
 26422 00012CE5 488B0425[0F150000]      	mov rax, qword [free_var_33]	; free var apply
 26423 00012CED 803805                  	cmp byte [rax], T_undefined
 26424 00012CF0 0F84C3230000            	je L_error_fvar_undefined
 26425 00012CF6 803804                  	cmp byte [rax], T_closure
 26426 00012CF9 0F853E240000            	jne L_error_non_closure
 26427 00012CFF FF7001                  	push SOB_CLOSURE_ENV(rax)
 26428 00012D02 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26429 00012D05 50                      	push rax
 26430 00012D06 6A01                    	push 1	; arg count
 26431 00012D08 488B0425[D61A0000]      	mov rax, qword [free_var_120]	; free var make-vector
 26432 00012D10 803805                  	cmp byte [rax], T_undefined
 26433 00012D13 0F84A0230000            	je L_error_fvar_undefined
 26434 00012D19 803804                  	cmp byte [rax], T_closure
 26435 00012D1C 0F851B240000            	jne L_error_non_closure
 26436 00012D22 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26437 00012D25 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26438 00012D28 50                      	push rax
 26439 00012D29 6A03                    	push 3	; arg count
 26440 00012D2B 488B4510                	mov rax, ENV
 26441 00012D2F 488B00                  	mov rax, qword [rax + 8 * 0]
 26442 00012D32 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 26443 00012D35 488B00                  	mov rax, qword [rax]
 26444 00012D38 803804                  	cmp byte [rax], T_closure
 26445 00012D3B 0F85FC230000            	jne L_error_non_closure
 26446 00012D41 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26447                                  
 26448                                  	; recycling the current frame
 26449 00012D44 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 26450 00012D47 FF7500                  	push qword [rbp]	; old frame-pointer
 26451 00012D4A B907000000              	mov rcx, 7
 26452 00012D4F 488B5D18                	mov rbx, COUNT
 26453 00012D53 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 26454 00012D58 488D55F8                	lea rdx, [rbp - 8]
 26455                                  .L_tc_recycle_frame_loop_0595:
 26456 00012D5C 4883F900                	cmp rcx, 0
 26457 00012D60 7413                    	je .L_tc_recycle_frame_done_0595
 26458 00012D62 488B32                  	mov rsi, qword [rdx]
 26459 00012D65 488933                  	mov qword [rbx], rsi
 26460 00012D68 48FFC9                  	dec rcx
 26461 00012D6B 4883EB08                	sub rbx, 8
 26462 00012D6F 4883EA08                	sub rdx, 8
 26463 00012D73 EBE7                    	jmp .L_tc_recycle_frame_loop_0595
 26464                                  .L_tc_recycle_frame_done_0595:
 26465 00012D75 488D6308                	lea rsp, [rbx + 8]
 26466 00012D79 5D                      	pop rbp
 26467 00012D7A FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 26468 00012D7D C9                      	leave
 26469 00012D7E C21800                  	ret AND_KILL_FRAME(1)
 26470                                  .L_lambda_opt_end_0091:	; new closure is in rax
 26471 00012D81 C9                      	leave
 26472 00012D82 C22000                  	ret AND_KILL_FRAME(2)
 26473                                  .L_lambda_simple_end_0440:	; new closure is in rax
 26474 00012D85 803804                  	cmp byte [rax], T_closure
 26475 00012D88 0F85AF230000            	jne L_error_non_closure
 26476 00012D8E FF7001                  	push SOB_CLOSURE_ENV(rax)
 26477 00012D91 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26478 00012D94 48890425[391E0000]      	mov qword [free_var_171], rax
 26479 00012D9C 48B8-                   	mov rax, sob_void
 26479 00012D9E [0000000000000000] 
 26480                                  
 26481 00012DA6 4889C7                  	mov rdi, rax
 26482 00012DA9 E88D260000              	call print_sexpr_if_not_void
 26483                                  
 26484 00012DAE BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 26485 00012DB3 E82E240000              	call malloc
 26486 00012DB8 50                      	push rax
 26487 00012DB9 BF00000000              	mov rdi, 8 * 0	; new rib
 26488 00012DBE E823240000              	call malloc
 26489 00012DC3 50                      	push rax
 26490 00012DC4 BF08000000              	mov rdi, 8 * 1	; extended env
 26491 00012DC9 E818240000              	call malloc
 26492 00012DCE 488B7D10                	mov rdi, ENV
 26493 00012DD2 BE00000000              	mov rsi, 0
 26494 00012DD7 BA01000000              	mov rdx, 1
 26495                                  .L_lambda_simple_env_loop_0444:	; ext_env[i + 1] <-- env[i]
 26496 00012DDC 4883FE00                	cmp rsi, 0
 26497 00012DE0 7410                    	je .L_lambda_simple_env_end_0444
 26498 00012DE2 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 26499 00012DE6 48890CD0                	mov qword [rax + 8 * rdx], rcx
 26500 00012DEA 48FFC6                  	inc rsi
 26501 00012DED 48FFC2                  	inc rdx
 26502 00012DF0 EBEA                    	jmp .L_lambda_simple_env_loop_0444
 26503                                  .L_lambda_simple_env_end_0444:
 26504 00012DF2 5B                      	pop rbx
 26505 00012DF3 BE00000000              	mov rsi, 0
 26506                                  .L_lambda_simple_params_loop_0444:	; copy params
 26507 00012DF8 4883FE00                	cmp rsi, 0
 26508 00012DFC 740E                    	je .L_lambda_simple_params_end_0444
 26509 00012DFE 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 26510 00012E03 488914F3                	mov qword [rbx + 8 * rsi], rdx
 26511 00012E07 48FFC6                  	inc rsi
 26512 00012E0A EBEC                    	jmp .L_lambda_simple_params_loop_0444
 26513                                  .L_lambda_simple_params_end_0444:
 26514 00012E0C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 26515 00012E0F 4889C3                  	mov rbx, rax
 26516 00012E12 58                      	pop rax
 26517 00012E13 C60004                  	mov byte [rax], T_closure
 26518 00012E16 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 26519 00012E1A 48C74009[272E0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0444
 26520 00012E22 E9BE000000              	jmp .L_lambda_simple_end_0444
 26521                                  .L_lambda_simple_code_0444:	; lambda-simple body
 26522 00012E27 48837C241001            	cmp qword [rsp + 8 * 2], 1
 26523 00012E2D 740B                    	je .L_lambda_simple_arity_check_ok_0444
 26524 00012E2F FF742410                	push qword [rsp + 8 * 2]
 26525 00012E33 6A01                    	push 1
 26526 00012E35 E965230000              	jmp L_error_incorrect_arity_simple
 26527                                  .L_lambda_simple_arity_check_ok_0444:
 26528 00012E3A C8000000                	enter 0, 0
 26529                                  	; preparing a tail-call
 26530                                  	; preparing a non-tail-call
 26531                                  	; preparing a non-tail-call
 26532 00012E3E 488B4520                	mov rax, PARAM(0)	; param str
 26533 00012E42 50                      	push rax
 26534 00012E43 6A01                    	push 1	; arg count
 26535 00012E45 488B0425[901C0000]      	mov rax, qword [free_var_146]	; free var string->list
 26536 00012E4D 803805                  	cmp byte [rax], T_undefined
 26537 00012E50 0F8463220000            	je L_error_fvar_undefined
 26538 00012E56 803804                  	cmp byte [rax], T_closure
 26539 00012E59 0F85DE220000            	jne L_error_non_closure
 26540 00012E5F FF7001                  	push SOB_CLOSURE_ENV(rax)
 26541 00012E62 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26542 00012E65 50                      	push rax
 26543 00012E66 6A01                    	push 1	; arg count
 26544 00012E68 488B0425[5D1C0000]      	mov rax, qword [free_var_143]	; free var reverse
 26545 00012E70 803805                  	cmp byte [rax], T_undefined
 26546 00012E73 0F8440220000            	je L_error_fvar_undefined
 26547 00012E79 803804                  	cmp byte [rax], T_closure
 26548 00012E7C 0F85BB220000            	jne L_error_non_closure
 26549 00012E82 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26550 00012E85 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26551 00012E88 50                      	push rax
 26552 00012E89 6A01                    	push 1	; arg count
 26553 00012E8B 488B0425[0A1A0000]      	mov rax, qword [free_var_108]	; free var list->string
 26554 00012E93 803805                  	cmp byte [rax], T_undefined
 26555 00012E96 0F841D220000            	je L_error_fvar_undefined
 26556 00012E9C 803804                  	cmp byte [rax], T_closure
 26557 00012E9F 0F8598220000            	jne L_error_non_closure
 26558 00012EA5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26559                                  
 26560                                  	; recycling the current frame
 26561 00012EA8 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 26562 00012EAB FF7500                  	push qword [rbp]	; old frame-pointer
 26563 00012EAE B905000000              	mov rcx, 5
 26564 00012EB3 488B5D18                	mov rbx, COUNT
 26565 00012EB7 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 26566 00012EBC 488D55F8                	lea rdx, [rbp - 8]
 26567                                  .L_tc_recycle_frame_loop_0596:
 26568 00012EC0 4883F900                	cmp rcx, 0
 26569 00012EC4 7413                    	je .L_tc_recycle_frame_done_0596
 26570 00012EC6 488B32                  	mov rsi, qword [rdx]
 26571 00012EC9 488933                  	mov qword [rbx], rsi
 26572 00012ECC 48FFC9                  	dec rcx
 26573 00012ECF 4883EB08                	sub rbx, 8
 26574 00012ED3 4883EA08                	sub rdx, 8
 26575 00012ED7 EBE7                    	jmp .L_tc_recycle_frame_loop_0596
 26576                                  .L_tc_recycle_frame_done_0596:
 26577 00012ED9 488D6308                	lea rsp, [rbx + 8]
 26578 00012EDD 5D                      	pop rbp
 26579 00012EDE FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 26580 00012EE1 C9                      	leave
 26581 00012EE2 C21800                  	ret AND_KILL_FRAME(1)
 26582                                  .L_lambda_simple_end_0444:	; new closure is in rax
 26583 00012EE5 48890425[3A1D0000]      	mov qword [free_var_156], rax
 26584 00012EED 48B8-                   	mov rax, sob_void
 26584 00012EEF [0000000000000000] 
 26585                                  
 26586 00012EF7 4889C7                  	mov rdi, rax
 26587 00012EFA E83C250000              	call print_sexpr_if_not_void
 26588                                  
 26589 00012EFF BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 26590 00012F04 E8DD220000              	call malloc
 26591 00012F09 50                      	push rax
 26592 00012F0A BF00000000              	mov rdi, 8 * 0	; new rib
 26593 00012F0F E8D2220000              	call malloc
 26594 00012F14 50                      	push rax
 26595 00012F15 BF08000000              	mov rdi, 8 * 1	; extended env
 26596 00012F1A E8C7220000              	call malloc
 26597 00012F1F 488B7D10                	mov rdi, ENV
 26598 00012F23 BE00000000              	mov rsi, 0
 26599 00012F28 BA01000000              	mov rdx, 1
 26600                                  .L_lambda_simple_env_loop_0445:	; ext_env[i + 1] <-- env[i]
 26601 00012F2D 4883FE00                	cmp rsi, 0
 26602 00012F31 7410                    	je .L_lambda_simple_env_end_0445
 26603 00012F33 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 26604 00012F37 48890CD0                	mov qword [rax + 8 * rdx], rcx
 26605 00012F3B 48FFC6                  	inc rsi
 26606 00012F3E 48FFC2                  	inc rdx
 26607 00012F41 EBEA                    	jmp .L_lambda_simple_env_loop_0445
 26608                                  .L_lambda_simple_env_end_0445:
 26609 00012F43 5B                      	pop rbx
 26610 00012F44 BE00000000              	mov rsi, 0
 26611                                  .L_lambda_simple_params_loop_0445:	; copy params
 26612 00012F49 4883FE00                	cmp rsi, 0
 26613 00012F4D 740E                    	je .L_lambda_simple_params_end_0445
 26614 00012F4F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 26615 00012F54 488914F3                	mov qword [rbx + 8 * rsi], rdx
 26616 00012F58 48FFC6                  	inc rsi
 26617 00012F5B EBEC                    	jmp .L_lambda_simple_params_loop_0445
 26618                                  .L_lambda_simple_params_end_0445:
 26619 00012F5D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 26620 00012F60 4889C3                  	mov rbx, rax
 26621 00012F63 58                      	pop rax
 26622 00012F64 C60004                  	mov byte [rax], T_closure
 26623 00012F67 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 26624 00012F6B 48C74009[782F0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0445
 26625 00012F73 E9BE000000              	jmp .L_lambda_simple_end_0445
 26626                                  .L_lambda_simple_code_0445:	; lambda-simple body
 26627 00012F78 48837C241001            	cmp qword [rsp + 8 * 2], 1
 26628 00012F7E 740B                    	je .L_lambda_simple_arity_check_ok_0445
 26629 00012F80 FF742410                	push qword [rsp + 8 * 2]
 26630 00012F84 6A01                    	push 1
 26631 00012F86 E914220000              	jmp L_error_incorrect_arity_simple
 26632                                  .L_lambda_simple_arity_check_ok_0445:
 26633 00012F8B C8000000                	enter 0, 0
 26634                                  	; preparing a tail-call
 26635                                  	; preparing a non-tail-call
 26636                                  	; preparing a non-tail-call
 26637 00012F8F 488B4520                	mov rax, PARAM(0)	; param vec
 26638 00012F93 50                      	push rax
 26639 00012F94 6A01                    	push 1	; arg count
 26640 00012F96 488B0425[281E0000]      	mov rax, qword [free_var_170]	; free var vector->list
 26641 00012F9E 803805                  	cmp byte [rax], T_undefined
 26642 00012FA1 0F8412210000            	je L_error_fvar_undefined
 26643 00012FA7 803804                  	cmp byte [rax], T_closure
 26644 00012FAA 0F858D210000            	jne L_error_non_closure
 26645 00012FB0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26646 00012FB3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26647 00012FB6 50                      	push rax
 26648 00012FB7 6A01                    	push 1	; arg count
 26649 00012FB9 488B0425[5D1C0000]      	mov rax, qword [free_var_143]	; free var reverse
 26650 00012FC1 803805                  	cmp byte [rax], T_undefined
 26651 00012FC4 0F84EF200000            	je L_error_fvar_undefined
 26652 00012FCA 803804                  	cmp byte [rax], T_closure
 26653 00012FCD 0F856A210000            	jne L_error_non_closure
 26654 00012FD3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26655 00012FD6 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26656 00012FD9 50                      	push rax
 26657 00012FDA 6A01                    	push 1	; arg count
 26658 00012FDC 488B0425[1B1A0000]      	mov rax, qword [free_var_109]	; free var list->vector
 26659 00012FE4 803805                  	cmp byte [rax], T_undefined
 26660 00012FE7 0F84CC200000            	je L_error_fvar_undefined
 26661 00012FED 803804                  	cmp byte [rax], T_closure
 26662 00012FF0 0F8547210000            	jne L_error_non_closure
 26663 00012FF6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26664                                  
 26665                                  	; recycling the current frame
 26666 00012FF9 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 26667 00012FFC FF7500                  	push qword [rbp]	; old frame-pointer
 26668 00012FFF B905000000              	mov rcx, 5
 26669 00013004 488B5D18                	mov rbx, COUNT
 26670 00013008 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 26671 0001300D 488D55F8                	lea rdx, [rbp - 8]
 26672                                  .L_tc_recycle_frame_loop_0597:
 26673 00013011 4883F900                	cmp rcx, 0
 26674 00013015 7413                    	je .L_tc_recycle_frame_done_0597
 26675 00013017 488B32                  	mov rsi, qword [rdx]
 26676 0001301A 488933                  	mov qword [rbx], rsi
 26677 0001301D 48FFC9                  	dec rcx
 26678 00013020 4883EB08                	sub rbx, 8
 26679 00013024 4883EA08                	sub rdx, 8
 26680 00013028 EBE7                    	jmp .L_tc_recycle_frame_loop_0597
 26681                                  .L_tc_recycle_frame_done_0597:
 26682 0001302A 488D6308                	lea rsp, [rbx + 8]
 26683 0001302E 5D                      	pop rbp
 26684 0001302F FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 26685 00013032 C9                      	leave
 26686 00013033 C21800                  	ret AND_KILL_FRAME(1)
 26687                                  .L_lambda_simple_end_0445:	; new closure is in rax
 26688 00013036 48890425[6C1E0000]      	mov qword [free_var_174], rax
 26689 0001303E 48B8-                   	mov rax, sob_void
 26689 00013040 [0000000000000000] 
 26690                                  
 26691 00013048 4889C7                  	mov rdi, rax
 26692 0001304B E8EB230000              	call print_sexpr_if_not_void
 26693                                  
 26694                                  	; preparing a non-tail-call
 26695 00013050 48B8-                   	mov rax, L_constants + 2335
 26695 00013052 [1F09000000000000] 
 26696 0001305A 50                      	push rax
 26697 0001305B 6A01                    	push 1	; arg count
 26698 0001305D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 26699 00013062 E87F210000              	call malloc
 26700 00013067 50                      	push rax
 26701 00013068 BF00000000              	mov rdi, 8 * 0	; new rib
 26702 0001306D E874210000              	call malloc
 26703 00013072 50                      	push rax
 26704 00013073 BF08000000              	mov rdi, 8 * 1	; extended env
 26705 00013078 E869210000              	call malloc
 26706 0001307D 488B7D10                	mov rdi, ENV
 26707 00013081 BE00000000              	mov rsi, 0
 26708 00013086 BA01000000              	mov rdx, 1
 26709                                  .L_lambda_simple_env_loop_0446:	; ext_env[i + 1] <-- env[i]
 26710 0001308B 4883FE00                	cmp rsi, 0
 26711 0001308F 7410                    	je .L_lambda_simple_env_end_0446
 26712 00013091 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 26713 00013095 48890CD0                	mov qword [rax + 8 * rdx], rcx
 26714 00013099 48FFC6                  	inc rsi
 26715 0001309C 48FFC2                  	inc rdx
 26716 0001309F EBEA                    	jmp .L_lambda_simple_env_loop_0446
 26717                                  .L_lambda_simple_env_end_0446:
 26718 000130A1 5B                      	pop rbx
 26719 000130A2 BE00000000              	mov rsi, 0
 26720                                  .L_lambda_simple_params_loop_0446:	; copy params
 26721 000130A7 4883FE00                	cmp rsi, 0
 26722 000130AB 740E                    	je .L_lambda_simple_params_end_0446
 26723 000130AD 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 26724 000130B2 488914F3                	mov qword [rbx + 8 * rsi], rdx
 26725 000130B6 48FFC6                  	inc rsi
 26726 000130B9 EBEC                    	jmp .L_lambda_simple_params_loop_0446
 26727                                  .L_lambda_simple_params_end_0446:
 26728 000130BB 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 26729 000130BE 4889C3                  	mov rbx, rax
 26730 000130C1 58                      	pop rax
 26731 000130C2 C60004                  	mov byte [rax], T_closure
 26732 000130C5 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 26733 000130C9 48C74009[D6300100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0446
 26734 000130D1 E91D060000              	jmp .L_lambda_simple_end_0446
 26735                                  .L_lambda_simple_code_0446:	; lambda-simple body
 26736 000130D6 48837C241001            	cmp qword [rsp + 8 * 2], 1
 26737 000130DC 740B                    	je .L_lambda_simple_arity_check_ok_0446
 26738 000130DE FF742410                	push qword [rsp + 8 * 2]
 26739 000130E2 6A01                    	push 1
 26740 000130E4 E9B6200000              	jmp L_error_incorrect_arity_simple
 26741                                  .L_lambda_simple_arity_check_ok_0446:
 26742 000130E9 C8000000                	enter 0, 0
 26743                                  
 26744 000130ED BF08000000              	mov rdi, 8
 26745 000130F2 E8EF200000              	call malloc
 26746 000130F7 488B5D20                	mov rbx, PARAM(0)	; param run
 26747 000130FB 488918                  	mov [rax], rbx	; box run
 26748 000130FE 48894520                	mov PARAM(0), rax	; replace param with box
 26749 00013102 48B8-                   	mov rax, sob_void
 26749 00013104 [0000000000000000] 
 26750                                  
 26751 0001310C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 26752 00013111 E8D0200000              	call malloc
 26753 00013116 50                      	push rax
 26754 00013117 BF08000000              	mov rdi, 8 * 1	; new rib
 26755 0001311C E8C5200000              	call malloc
 26756 00013121 50                      	push rax
 26757 00013122 BF10000000              	mov rdi, 8 * 2	; extended env
 26758 00013127 E8BA200000              	call malloc
 26759 0001312C 488B7D10                	mov rdi, ENV
 26760 00013130 BE00000000              	mov rsi, 0
 26761 00013135 BA01000000              	mov rdx, 1
 26762                                  .L_lambda_simple_env_loop_0447:	; ext_env[i + 1] <-- env[i]
 26763 0001313A 4883FE01                	cmp rsi, 1
 26764 0001313E 7410                    	je .L_lambda_simple_env_end_0447
 26765 00013140 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 26766 00013144 48890CD0                	mov qword [rax + 8 * rdx], rcx
 26767 00013148 48FFC6                  	inc rsi
 26768 0001314B 48FFC2                  	inc rdx
 26769 0001314E EBEA                    	jmp .L_lambda_simple_env_loop_0447
 26770                                  .L_lambda_simple_env_end_0447:
 26771 00013150 5B                      	pop rbx
 26772 00013151 BE00000000              	mov rsi, 0
 26773                                  .L_lambda_simple_params_loop_0447:	; copy params
 26774 00013156 4883FE01                	cmp rsi, 1
 26775 0001315A 740E                    	je .L_lambda_simple_params_end_0447
 26776 0001315C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 26777 00013161 488914F3                	mov qword [rbx + 8 * rsi], rdx
 26778 00013165 48FFC6                  	inc rsi
 26779 00013168 EBEC                    	jmp .L_lambda_simple_params_loop_0447
 26780                                  .L_lambda_simple_params_end_0447:
 26781 0001316A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 26782 0001316D 4889C3                  	mov rbx, rax
 26783 00013170 58                      	pop rax
 26784 00013171 C60004                  	mov byte [rax], T_closure
 26785 00013174 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 26786 00013178 48C74009[85310100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0447
 26787 00013180 E9E6020000              	jmp .L_lambda_simple_end_0447
 26788                                  .L_lambda_simple_code_0447:	; lambda-simple body
 26789 00013185 48837C241003            	cmp qword [rsp + 8 * 2], 3
 26790 0001318B 740B                    	je .L_lambda_simple_arity_check_ok_0447
 26791 0001318D FF742410                	push qword [rsp + 8 * 2]
 26792 00013191 6A03                    	push 3
 26793 00013193 E907200000              	jmp L_error_incorrect_arity_simple
 26794                                  .L_lambda_simple_arity_check_ok_0447:
 26795 00013198 C8000000                	enter 0, 0
 26796                                  	; preparing a non-tail-call
 26797 0001319C 488B4530                	mov rax, PARAM(2)	; param j
 26798 000131A0 50                      	push rax
 26799 000131A1 488B4528                	mov rax, PARAM(1)	; param i
 26800 000131A5 50                      	push rax
 26801 000131A6 6A02                    	push 2	; arg count
 26802 000131A8 488B0425[22130000]      	mov rax, qword [free_var_4]	; free var <
 26803 000131B0 803805                  	cmp byte [rax], T_undefined
 26804 000131B3 0F84001F0000            	je L_error_fvar_undefined
 26805 000131B9 803804                  	cmp byte [rax], T_closure
 26806 000131BC 0F857B1F0000            	jne L_error_non_closure
 26807 000131C2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26808 000131C5 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26809 000131C8 483D[02000000]          	cmp rax, sob_boolean_false
 26810 000131CE 0F848F020000            	je .L_if_else_0329
 26811                                  	; preparing a tail-call
 26812                                  	; preparing a non-tail-call
 26813 000131D4 488B4528                	mov rax, PARAM(1)	; param i
 26814 000131D8 50                      	push rax
 26815 000131D9 488B4520                	mov rax, PARAM(0)	; param str
 26816 000131DD 50                      	push rax
 26817 000131DE 6A02                    	push 2	; arg count
 26818 000131E0 488B0425[291D0000]      	mov rax, qword [free_var_155]	; free var string-ref
 26819 000131E8 803805                  	cmp byte [rax], T_undefined
 26820 000131EB 0F84C81E0000            	je L_error_fvar_undefined
 26821 000131F1 803804                  	cmp byte [rax], T_closure
 26822 000131F4 0F85431F0000            	jne L_error_non_closure
 26823 000131FA FF7001                  	push SOB_CLOSURE_ENV(rax)
 26824 000131FD FF5009                  	call SOB_CLOSURE_CODE(rax)
 26825 00013200 50                      	push rax
 26826 00013201 6A01                    	push 1	; arg count
 26827 00013203 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 26828 00013208 E8D91F0000              	call malloc
 26829 0001320D 50                      	push rax
 26830 0001320E BF18000000              	mov rdi, 8 * 3	; new rib
 26831 00013213 E8CE1F0000              	call malloc
 26832 00013218 50                      	push rax
 26833 00013219 BF18000000              	mov rdi, 8 * 3	; extended env
 26834 0001321E E8C31F0000              	call malloc
 26835 00013223 488B7D10                	mov rdi, ENV
 26836 00013227 BE00000000              	mov rsi, 0
 26837 0001322C BA01000000              	mov rdx, 1
 26838                                  .L_lambda_simple_env_loop_0448:	; ext_env[i + 1] <-- env[i]
 26839 00013231 4883FE02                	cmp rsi, 2
 26840 00013235 7410                    	je .L_lambda_simple_env_end_0448
 26841 00013237 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 26842 0001323B 48890CD0                	mov qword [rax + 8 * rdx], rcx
 26843 0001323F 48FFC6                  	inc rsi
 26844 00013242 48FFC2                  	inc rdx
 26845 00013245 EBEA                    	jmp .L_lambda_simple_env_loop_0448
 26846                                  .L_lambda_simple_env_end_0448:
 26847 00013247 5B                      	pop rbx
 26848 00013248 BE00000000              	mov rsi, 0
 26849                                  .L_lambda_simple_params_loop_0448:	; copy params
 26850 0001324D 4883FE03                	cmp rsi, 3
 26851 00013251 740E                    	je .L_lambda_simple_params_end_0448
 26852 00013253 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 26853 00013258 488914F3                	mov qword [rbx + 8 * rsi], rdx
 26854 0001325C 48FFC6                  	inc rsi
 26855 0001325F EBEC                    	jmp .L_lambda_simple_params_loop_0448
 26856                                  .L_lambda_simple_params_end_0448:
 26857 00013261 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 26858 00013264 4889C3                  	mov rbx, rax
 26859 00013267 58                      	pop rax
 26860 00013268 C60004                  	mov byte [rax], T_closure
 26861 0001326B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 26862 0001326F 48C74009[7C320100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0448
 26863 00013277 E9A0010000              	jmp .L_lambda_simple_end_0448
 26864                                  .L_lambda_simple_code_0448:	; lambda-simple body
 26865 0001327C 48837C241001            	cmp qword [rsp + 8 * 2], 1
 26866 00013282 740B                    	je .L_lambda_simple_arity_check_ok_0448
 26867 00013284 FF742410                	push qword [rsp + 8 * 2]
 26868 00013288 6A01                    	push 1
 26869 0001328A E9101F0000              	jmp L_error_incorrect_arity_simple
 26870                                  .L_lambda_simple_arity_check_ok_0448:
 26871 0001328F C8000000                	enter 0, 0
 26872                                  	; preparing a non-tail-call
 26873                                  	; preparing a non-tail-call
 26874 00013293 488B4510                	mov rax, ENV
 26875 00013297 488B00                  	mov rax, qword [rax + 8 * 0]
 26876 0001329A 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var j
 26877 0001329E 50                      	push rax
 26878 0001329F 488B4510                	mov rax, ENV
 26879 000132A3 488B00                  	mov rax, qword [rax + 8 * 0]
 26880 000132A6 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str
 26881 000132A9 50                      	push rax
 26882 000132AA 6A02                    	push 2	; arg count
 26883 000132AC 488B0425[291D0000]      	mov rax, qword [free_var_155]	; free var string-ref
 26884 000132B4 803805                  	cmp byte [rax], T_undefined
 26885 000132B7 0F84FC1D0000            	je L_error_fvar_undefined
 26886 000132BD 803804                  	cmp byte [rax], T_closure
 26887 000132C0 0F85771E0000            	jne L_error_non_closure
 26888 000132C6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26889 000132C9 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26890 000132CC 50                      	push rax
 26891 000132CD 488B4510                	mov rax, ENV
 26892 000132D1 488B00                  	mov rax, qword [rax + 8 * 0]
 26893 000132D4 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var i
 26894 000132D8 50                      	push rax
 26895 000132D9 488B4510                	mov rax, ENV
 26896 000132DD 488B00                  	mov rax, qword [rax + 8 * 0]
 26897 000132E0 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str
 26898 000132E3 50                      	push rax
 26899 000132E4 6A03                    	push 3	; arg count
 26900 000132E6 488B0425[5C1D0000]      	mov rax, qword [free_var_158]	; free var string-set!
 26901 000132EE 803805                  	cmp byte [rax], T_undefined
 26902 000132F1 0F84C21D0000            	je L_error_fvar_undefined
 26903 000132F7 803804                  	cmp byte [rax], T_closure
 26904 000132FA 0F853D1E0000            	jne L_error_non_closure
 26905 00013300 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26906 00013303 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26907                                  
 26908                                  	; preparing a non-tail-call
 26909 00013306 488B4520                	mov rax, PARAM(0)	; param ch
 26910 0001330A 50                      	push rax
 26911 0001330B 488B4510                	mov rax, ENV
 26912 0001330F 488B00                  	mov rax, qword [rax + 8 * 0]
 26913 00013312 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var j
 26914 00013316 50                      	push rax
 26915 00013317 488B4510                	mov rax, ENV
 26916 0001331B 488B00                  	mov rax, qword [rax + 8 * 0]
 26917 0001331E 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str
 26918 00013321 50                      	push rax
 26919 00013322 6A03                    	push 3	; arg count
 26920 00013324 488B0425[5C1D0000]      	mov rax, qword [free_var_158]	; free var string-set!
 26921 0001332C 803805                  	cmp byte [rax], T_undefined
 26922 0001332F 0F84841D0000            	je L_error_fvar_undefined
 26923 00013335 803804                  	cmp byte [rax], T_closure
 26924 00013338 0F85FF1D0000            	jne L_error_non_closure
 26925 0001333E FF7001                  	push SOB_CLOSURE_ENV(rax)
 26926 00013341 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26927                                  
 26928                                  	; preparing a tail-call
 26929                                  	; preparing a non-tail-call
 26930 00013344 48B8-                   	mov rax, L_constants + 2810
 26930 00013346 [FA0A000000000000] 
 26931 0001334E 50                      	push rax
 26932 0001334F 488B4510                	mov rax, ENV
 26933 00013353 488B00                  	mov rax, qword [rax + 8 * 0]
 26934 00013356 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var j
 26935 0001335A 50                      	push rax
 26936 0001335B 6A02                    	push 2	; arg count
 26937 0001335D 488B0425[00130000]      	mov rax, qword [free_var_2]	; free var -
 26938 00013365 803805                  	cmp byte [rax], T_undefined
 26939 00013368 0F844B1D0000            	je L_error_fvar_undefined
 26940 0001336E 803804                  	cmp byte [rax], T_closure
 26941 00013371 0F85C61D0000            	jne L_error_non_closure
 26942 00013377 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26943 0001337A FF5009                  	call SOB_CLOSURE_CODE(rax)
 26944 0001337D 50                      	push rax
 26945                                  	; preparing a non-tail-call
 26946 0001337E 48B8-                   	mov rax, L_constants + 2810
 26946 00013380 [FA0A000000000000] 
 26947 00013388 50                      	push rax
 26948 00013389 488B4510                	mov rax, ENV
 26949 0001338D 488B00                  	mov rax, qword [rax + 8 * 0]
 26950 00013390 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var i
 26951 00013394 50                      	push rax
 26952 00013395 6A02                    	push 2	; arg count
 26953 00013397 488B0425[EF120000]      	mov rax, qword [free_var_1]	; free var +
 26954 0001339F 803805                  	cmp byte [rax], T_undefined
 26955 000133A2 0F84111D0000            	je L_error_fvar_undefined
 26956 000133A8 803804                  	cmp byte [rax], T_closure
 26957 000133AB 0F858C1D0000            	jne L_error_non_closure
 26958 000133B1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26959 000133B4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26960 000133B7 50                      	push rax
 26961 000133B8 488B4510                	mov rax, ENV
 26962 000133BC 488B00                  	mov rax, qword [rax + 8 * 0]
 26963 000133BF 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str
 26964 000133C2 50                      	push rax
 26965 000133C3 6A03                    	push 3	; arg count
 26966 000133C5 488B4510                	mov rax, ENV
 26967 000133C9 488B4008                	mov rax, qword [rax + 8 * 1]
 26968 000133CD 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 26969 000133D0 488B00                  	mov rax, qword [rax]
 26970 000133D3 803804                  	cmp byte [rax], T_closure
 26971 000133D6 0F85611D0000            	jne L_error_non_closure
 26972 000133DC FF7001                  	push SOB_CLOSURE_ENV(rax)
 26973                                  
 26974                                  	; recycling the current frame
 26975 000133DF FF7508                  	push qword [rbp + 8 * 1]	; old return address
 26976 000133E2 FF7500                  	push qword [rbp]	; old frame-pointer
 26977 000133E5 B907000000              	mov rcx, 7
 26978 000133EA 488B5D18                	mov rbx, COUNT
 26979 000133EE 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 26980 000133F3 488D55F8                	lea rdx, [rbp - 8]
 26981                                  .L_tc_recycle_frame_loop_0598:
 26982 000133F7 4883F900                	cmp rcx, 0
 26983 000133FB 7413                    	je .L_tc_recycle_frame_done_0598
 26984 000133FD 488B32                  	mov rsi, qword [rdx]
 26985 00013400 488933                  	mov qword [rbx], rsi
 26986 00013403 48FFC9                  	dec rcx
 26987 00013406 4883EB08                	sub rbx, 8
 26988 0001340A 4883EA08                	sub rdx, 8
 26989 0001340E EBE7                    	jmp .L_tc_recycle_frame_loop_0598
 26990                                  .L_tc_recycle_frame_done_0598:
 26991 00013410 488D6308                	lea rsp, [rbx + 8]
 26992 00013414 5D                      	pop rbp
 26993 00013415 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 26994 00013418 C9                      	leave
 26995 00013419 C21800                  	ret AND_KILL_FRAME(1)
 26996                                  .L_lambda_simple_end_0448:	; new closure is in rax
 26997 0001341C 803804                  	cmp byte [rax], T_closure
 26998 0001341F 0F85181D0000            	jne L_error_non_closure
 26999 00013425 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27000                                  
 27001                                  	; recycling the current frame
 27002 00013428 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 27003 0001342B FF7500                  	push qword [rbp]	; old frame-pointer
 27004 0001342E B905000000              	mov rcx, 5
 27005 00013433 488B5D18                	mov rbx, COUNT
 27006 00013437 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 27007 0001343C 488D55F8                	lea rdx, [rbp - 8]
 27008                                  .L_tc_recycle_frame_loop_0599:
 27009 00013440 4883F900                	cmp rcx, 0
 27010 00013444 7413                    	je .L_tc_recycle_frame_done_0599
 27011 00013446 488B32                  	mov rsi, qword [rdx]
 27012 00013449 488933                  	mov qword [rbx], rsi
 27013 0001344C 48FFC9                  	dec rcx
 27014 0001344F 4883EB08                	sub rbx, 8
 27015 00013453 4883EA08                	sub rdx, 8
 27016 00013457 EBE7                    	jmp .L_tc_recycle_frame_loop_0599
 27017                                  .L_tc_recycle_frame_done_0599:
 27018 00013459 488D6308                	lea rsp, [rbx + 8]
 27019 0001345D 5D                      	pop rbp
 27020 0001345E FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 27021 00013461 EB04                    	jmp .L_if_end_0329
 27022                                  .L_if_else_0329:
 27023 00013463 488B4520                	mov rax, PARAM(0)	; param str
 27024                                  .L_if_end_0329:
 27025 00013467 C9                      	leave
 27026 00013468 C22800                  	ret AND_KILL_FRAME(3)
 27027                                  .L_lambda_simple_end_0447:	; new closure is in rax
 27028                                  
 27029 0001346B 50                      	push rax
 27030 0001346C 488B4520                	mov rax, PARAM(0)	; param run
 27031                                  
 27032 00013470 8F00                    	pop qword[rax]
 27033 00013472 48B8-                   	mov rax, sob_void
 27033 00013474 [0000000000000000] 
 27034                                  
 27035 0001347C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27036 00013481 E8601D0000              	call malloc
 27037 00013486 50                      	push rax
 27038 00013487 BF08000000              	mov rdi, 8 * 1	; new rib
 27039 0001348C E8551D0000              	call malloc
 27040 00013491 50                      	push rax
 27041 00013492 BF10000000              	mov rdi, 8 * 2	; extended env
 27042 00013497 E84A1D0000              	call malloc
 27043 0001349C 488B7D10                	mov rdi, ENV
 27044 000134A0 BE00000000              	mov rsi, 0
 27045 000134A5 BA01000000              	mov rdx, 1
 27046                                  .L_lambda_simple_env_loop_0449:	; ext_env[i + 1] <-- env[i]
 27047 000134AA 4883FE01                	cmp rsi, 1
 27048 000134AE 7410                    	je .L_lambda_simple_env_end_0449
 27049 000134B0 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27050 000134B4 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27051 000134B8 48FFC6                  	inc rsi
 27052 000134BB 48FFC2                  	inc rdx
 27053 000134BE EBEA                    	jmp .L_lambda_simple_env_loop_0449
 27054                                  .L_lambda_simple_env_end_0449:
 27055 000134C0 5B                      	pop rbx
 27056 000134C1 BE00000000              	mov rsi, 0
 27057                                  .L_lambda_simple_params_loop_0449:	; copy params
 27058 000134C6 4883FE01                	cmp rsi, 1
 27059 000134CA 740E                    	je .L_lambda_simple_params_end_0449
 27060 000134CC 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27061 000134D1 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27062 000134D5 48FFC6                  	inc rsi
 27063 000134D8 EBEC                    	jmp .L_lambda_simple_params_loop_0449
 27064                                  .L_lambda_simple_params_end_0449:
 27065 000134DA 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 27066 000134DD 4889C3                  	mov rbx, rax
 27067 000134E0 58                      	pop rax
 27068 000134E1 C60004                  	mov byte [rax], T_closure
 27069 000134E4 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27070 000134E8 48C74009[F5340100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0449
 27071 000134F0 E9FA010000              	jmp .L_lambda_simple_end_0449
 27072                                  .L_lambda_simple_code_0449:	; lambda-simple body
 27073 000134F5 48837C241001            	cmp qword [rsp + 8 * 2], 1
 27074 000134FB 740B                    	je .L_lambda_simple_arity_check_ok_0449
 27075 000134FD FF742410                	push qword [rsp + 8 * 2]
 27076 00013501 6A01                    	push 1
 27077 00013503 E9971C0000              	jmp L_error_incorrect_arity_simple
 27078                                  .L_lambda_simple_arity_check_ok_0449:
 27079 00013508 C8000000                	enter 0, 0
 27080                                  	; preparing a tail-call
 27081                                  	; preparing a non-tail-call
 27082 0001350C 488B4520                	mov rax, PARAM(0)	; param str
 27083 00013510 50                      	push rax
 27084 00013511 6A01                    	push 1	; arg count
 27085 00013513 488B0425[181D0000]      	mov rax, qword [free_var_154]	; free var string-length
 27086 0001351B 803805                  	cmp byte [rax], T_undefined
 27087 0001351E 0F84951B0000            	je L_error_fvar_undefined
 27088 00013524 803804                  	cmp byte [rax], T_closure
 27089 00013527 0F85101C0000            	jne L_error_non_closure
 27090 0001352D FF7001                  	push SOB_CLOSURE_ENV(rax)
 27091 00013530 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27092 00013533 50                      	push rax
 27093 00013534 6A01                    	push 1	; arg count
 27094 00013536 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27095 0001353B E8A61C0000              	call malloc
 27096 00013540 50                      	push rax
 27097 00013541 BF08000000              	mov rdi, 8 * 1	; new rib
 27098 00013546 E89B1C0000              	call malloc
 27099 0001354B 50                      	push rax
 27100 0001354C BF18000000              	mov rdi, 8 * 3	; extended env
 27101 00013551 E8901C0000              	call malloc
 27102 00013556 488B7D10                	mov rdi, ENV
 27103 0001355A BE00000000              	mov rsi, 0
 27104 0001355F BA01000000              	mov rdx, 1
 27105                                  .L_lambda_simple_env_loop_044a:	; ext_env[i + 1] <-- env[i]
 27106 00013564 4883FE02                	cmp rsi, 2
 27107 00013568 7410                    	je .L_lambda_simple_env_end_044a
 27108 0001356A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27109 0001356E 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27110 00013572 48FFC6                  	inc rsi
 27111 00013575 48FFC2                  	inc rdx
 27112 00013578 EBEA                    	jmp .L_lambda_simple_env_loop_044a
 27113                                  .L_lambda_simple_env_end_044a:
 27114 0001357A 5B                      	pop rbx
 27115 0001357B BE00000000              	mov rsi, 0
 27116                                  .L_lambda_simple_params_loop_044a:	; copy params
 27117 00013580 4883FE01                	cmp rsi, 1
 27118 00013584 740E                    	je .L_lambda_simple_params_end_044a
 27119 00013586 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27120 0001358B 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27121 0001358F 48FFC6                  	inc rsi
 27122 00013592 EBEC                    	jmp .L_lambda_simple_params_loop_044a
 27123                                  .L_lambda_simple_params_end_044a:
 27124 00013594 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 27125 00013597 4889C3                  	mov rbx, rax
 27126 0001359A 58                      	pop rax
 27127 0001359B C60004                  	mov byte [rax], T_closure
 27128 0001359E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27129 000135A2 48C74009[AF350100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_044a
 27130 000135AA E9F7000000              	jmp .L_lambda_simple_end_044a
 27131                                  .L_lambda_simple_code_044a:	; lambda-simple body
 27132 000135AF 48837C241001            	cmp qword [rsp + 8 * 2], 1
 27133 000135B5 740B                    	je .L_lambda_simple_arity_check_ok_044a
 27134 000135B7 FF742410                	push qword [rsp + 8 * 2]
 27135 000135BB 6A01                    	push 1
 27136 000135BD E9DD1B0000              	jmp L_error_incorrect_arity_simple
 27137                                  .L_lambda_simple_arity_check_ok_044a:
 27138 000135C2 C8000000                	enter 0, 0
 27139                                  	; preparing a non-tail-call
 27140 000135C6 488B4520                	mov rax, PARAM(0)	; param n
 27141 000135CA 50                      	push rax
 27142 000135CB 6A01                    	push 1	; arg count
 27143 000135CD 488B0425[E31E0000]      	mov rax, qword [free_var_181]	; free var zero?
 27144 000135D5 803805                  	cmp byte [rax], T_undefined
 27145 000135D8 0F84DB1A0000            	je L_error_fvar_undefined
 27146 000135DE 803804                  	cmp byte [rax], T_closure
 27147 000135E1 0F85561B0000            	jne L_error_non_closure
 27148 000135E7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27149 000135EA FF5009                  	call SOB_CLOSURE_CODE(rax)
 27150 000135ED 483D[02000000]          	cmp rax, sob_boolean_false
 27151 000135F3 740F                    	je .L_if_else_032a
 27152 000135F5 488B4510                	mov rax, ENV
 27153 000135F9 488B00                  	mov rax, qword [rax + 8 * 0]
 27154 000135FC 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str
 27155 000135FF E99E000000              	jmp .L_if_end_032a
 27156                                  .L_if_else_032a:
 27157                                  	; preparing a tail-call
 27158                                  	; preparing a non-tail-call
 27159 00013604 48B8-                   	mov rax, L_constants + 2810
 27159 00013606 [FA0A000000000000] 
 27160 0001360E 50                      	push rax
 27161 0001360F 488B4520                	mov rax, PARAM(0)	; param n
 27162 00013613 50                      	push rax
 27163 00013614 6A02                    	push 2	; arg count
 27164 00013616 488B0425[00130000]      	mov rax, qword [free_var_2]	; free var -
 27165 0001361E 803805                  	cmp byte [rax], T_undefined
 27166 00013621 0F84921A0000            	je L_error_fvar_undefined
 27167 00013627 803804                  	cmp byte [rax], T_closure
 27168 0001362A 0F850D1B0000            	jne L_error_non_closure
 27169 00013630 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27170 00013633 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27171 00013636 50                      	push rax
 27172 00013637 48B8-                   	mov rax, L_constants + 2558
 27172 00013639 [FE09000000000000] 
 27173 00013641 50                      	push rax
 27174 00013642 488B4510                	mov rax, ENV
 27175 00013646 488B00                  	mov rax, qword [rax + 8 * 0]
 27176 00013649 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str
 27177 0001364C 50                      	push rax
 27178 0001364D 6A03                    	push 3	; arg count
 27179 0001364F 488B4510                	mov rax, ENV
 27180 00013653 488B4008                	mov rax, qword [rax + 8 * 1]
 27181 00013657 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 27182 0001365A 488B00                  	mov rax, qword [rax]
 27183 0001365D 803804                  	cmp byte [rax], T_closure
 27184 00013660 0F85D71A0000            	jne L_error_non_closure
 27185 00013666 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27186                                  
 27187                                  	; recycling the current frame
 27188 00013669 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 27189 0001366C FF7500                  	push qword [rbp]	; old frame-pointer
 27190 0001366F B907000000              	mov rcx, 7
 27191 00013674 488B5D18                	mov rbx, COUNT
 27192 00013678 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 27193 0001367D 488D55F8                	lea rdx, [rbp - 8]
 27194                                  .L_tc_recycle_frame_loop_059a:
 27195 00013681 4883F900                	cmp rcx, 0
 27196 00013685 7413                    	je .L_tc_recycle_frame_done_059a
 27197 00013687 488B32                  	mov rsi, qword [rdx]
 27198 0001368A 488933                  	mov qword [rbx], rsi
 27199 0001368D 48FFC9                  	dec rcx
 27200 00013690 4883EB08                	sub rbx, 8
 27201 00013694 4883EA08                	sub rdx, 8
 27202 00013698 EBE7                    	jmp .L_tc_recycle_frame_loop_059a
 27203                                  .L_tc_recycle_frame_done_059a:
 27204 0001369A 488D6308                	lea rsp, [rbx + 8]
 27205 0001369E 5D                      	pop rbp
 27206 0001369F FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 27207                                  .L_if_end_032a:
 27208 000136A2 C9                      	leave
 27209 000136A3 C21800                  	ret AND_KILL_FRAME(1)
 27210                                  .L_lambda_simple_end_044a:	; new closure is in rax
 27211 000136A6 803804                  	cmp byte [rax], T_closure
 27212 000136A9 0F858E1A0000            	jne L_error_non_closure
 27213 000136AF FF7001                  	push SOB_CLOSURE_ENV(rax)
 27214                                  
 27215                                  	; recycling the current frame
 27216 000136B2 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 27217 000136B5 FF7500                  	push qword [rbp]	; old frame-pointer
 27218 000136B8 B905000000              	mov rcx, 5
 27219 000136BD 488B5D18                	mov rbx, COUNT
 27220 000136C1 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 27221 000136C6 488D55F8                	lea rdx, [rbp - 8]
 27222                                  .L_tc_recycle_frame_loop_059b:
 27223 000136CA 4883F900                	cmp rcx, 0
 27224 000136CE 7413                    	je .L_tc_recycle_frame_done_059b
 27225 000136D0 488B32                  	mov rsi, qword [rdx]
 27226 000136D3 488933                  	mov qword [rbx], rsi
 27227 000136D6 48FFC9                  	dec rcx
 27228 000136D9 4883EB08                	sub rbx, 8
 27229 000136DD 4883EA08                	sub rdx, 8
 27230 000136E1 EBE7                    	jmp .L_tc_recycle_frame_loop_059b
 27231                                  .L_tc_recycle_frame_done_059b:
 27232 000136E3 488D6308                	lea rsp, [rbx + 8]
 27233 000136E7 5D                      	pop rbp
 27234 000136E8 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 27235 000136EB C9                      	leave
 27236 000136EC C21800                  	ret AND_KILL_FRAME(1)
 27237                                  .L_lambda_simple_end_0449:	; new closure is in rax
 27238 000136EF C9                      	leave
 27239 000136F0 C21800                  	ret AND_KILL_FRAME(1)
 27240                                  .L_lambda_simple_end_0446:	; new closure is in rax
 27241 000136F3 803804                  	cmp byte [rax], T_closure
 27242 000136F6 0F85411A0000            	jne L_error_non_closure
 27243 000136FC FF7001                  	push SOB_CLOSURE_ENV(rax)
 27244 000136FF FF5009                  	call SOB_CLOSURE_CODE(rax)
 27245 00013702 48890425[4B1D0000]      	mov qword [free_var_157], rax
 27246 0001370A 48B8-                   	mov rax, sob_void
 27246 0001370C [0000000000000000] 
 27247                                  
 27248 00013714 4889C7                  	mov rdi, rax
 27249 00013717 E81F1D0000              	call print_sexpr_if_not_void
 27250                                  
 27251                                  	; preparing a non-tail-call
 27252 0001371C 48B8-                   	mov rax, L_constants + 2335
 27252 0001371E [1F09000000000000] 
 27253 00013726 50                      	push rax
 27254 00013727 6A01                    	push 1	; arg count
 27255 00013729 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27256 0001372E E8B31A0000              	call malloc
 27257 00013733 50                      	push rax
 27258 00013734 BF00000000              	mov rdi, 8 * 0	; new rib
 27259 00013739 E8A81A0000              	call malloc
 27260 0001373E 50                      	push rax
 27261 0001373F BF08000000              	mov rdi, 8 * 1	; extended env
 27262 00013744 E89D1A0000              	call malloc
 27263 00013749 488B7D10                	mov rdi, ENV
 27264 0001374D BE00000000              	mov rsi, 0
 27265 00013752 BA01000000              	mov rdx, 1
 27266                                  .L_lambda_simple_env_loop_044b:	; ext_env[i + 1] <-- env[i]
 27267 00013757 4883FE00                	cmp rsi, 0
 27268 0001375B 7410                    	je .L_lambda_simple_env_end_044b
 27269 0001375D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27270 00013761 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27271 00013765 48FFC6                  	inc rsi
 27272 00013768 48FFC2                  	inc rdx
 27273 0001376B EBEA                    	jmp .L_lambda_simple_env_loop_044b
 27274                                  .L_lambda_simple_env_end_044b:
 27275 0001376D 5B                      	pop rbx
 27276 0001376E BE00000000              	mov rsi, 0
 27277                                  .L_lambda_simple_params_loop_044b:	; copy params
 27278 00013773 4883FE00                	cmp rsi, 0
 27279 00013777 740E                    	je .L_lambda_simple_params_end_044b
 27280 00013779 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27281 0001377E 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27282 00013782 48FFC6                  	inc rsi
 27283 00013785 EBEC                    	jmp .L_lambda_simple_params_loop_044b
 27284                                  .L_lambda_simple_params_end_044b:
 27285 00013787 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 27286 0001378A 4889C3                  	mov rbx, rax
 27287 0001378D 58                      	pop rax
 27288 0001378E C60004                  	mov byte [rax], T_closure
 27289 00013791 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27290 00013795 48C74009[A2370100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_044b
 27291 0001379D E91D060000              	jmp .L_lambda_simple_end_044b
 27292                                  .L_lambda_simple_code_044b:	; lambda-simple body
 27293 000137A2 48837C241001            	cmp qword [rsp + 8 * 2], 1
 27294 000137A8 740B                    	je .L_lambda_simple_arity_check_ok_044b
 27295 000137AA FF742410                	push qword [rsp + 8 * 2]
 27296 000137AE 6A01                    	push 1
 27297 000137B0 E9EA190000              	jmp L_error_incorrect_arity_simple
 27298                                  .L_lambda_simple_arity_check_ok_044b:
 27299 000137B5 C8000000                	enter 0, 0
 27300                                  
 27301 000137B9 BF08000000              	mov rdi, 8
 27302 000137BE E8231A0000              	call malloc
 27303 000137C3 488B5D20                	mov rbx, PARAM(0)	; param run
 27304 000137C7 488918                  	mov [rax], rbx	; box run
 27305 000137CA 48894520                	mov PARAM(0), rax	; replace param with box
 27306 000137CE 48B8-                   	mov rax, sob_void
 27306 000137D0 [0000000000000000] 
 27307                                  
 27308 000137D8 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27309 000137DD E8041A0000              	call malloc
 27310 000137E2 50                      	push rax
 27311 000137E3 BF08000000              	mov rdi, 8 * 1	; new rib
 27312 000137E8 E8F9190000              	call malloc
 27313 000137ED 50                      	push rax
 27314 000137EE BF10000000              	mov rdi, 8 * 2	; extended env
 27315 000137F3 E8EE190000              	call malloc
 27316 000137F8 488B7D10                	mov rdi, ENV
 27317 000137FC BE00000000              	mov rsi, 0
 27318 00013801 BA01000000              	mov rdx, 1
 27319                                  .L_lambda_simple_env_loop_044c:	; ext_env[i + 1] <-- env[i]
 27320 00013806 4883FE01                	cmp rsi, 1
 27321 0001380A 7410                    	je .L_lambda_simple_env_end_044c
 27322 0001380C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27323 00013810 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27324 00013814 48FFC6                  	inc rsi
 27325 00013817 48FFC2                  	inc rdx
 27326 0001381A EBEA                    	jmp .L_lambda_simple_env_loop_044c
 27327                                  .L_lambda_simple_env_end_044c:
 27328 0001381C 5B                      	pop rbx
 27329 0001381D BE00000000              	mov rsi, 0
 27330                                  .L_lambda_simple_params_loop_044c:	; copy params
 27331 00013822 4883FE01                	cmp rsi, 1
 27332 00013826 740E                    	je .L_lambda_simple_params_end_044c
 27333 00013828 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27334 0001382D 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27335 00013831 48FFC6                  	inc rsi
 27336 00013834 EBEC                    	jmp .L_lambda_simple_params_loop_044c
 27337                                  .L_lambda_simple_params_end_044c:
 27338 00013836 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 27339 00013839 4889C3                  	mov rbx, rax
 27340 0001383C 58                      	pop rax
 27341 0001383D C60004                  	mov byte [rax], T_closure
 27342 00013840 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27343 00013844 48C74009[51380100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_044c
 27344 0001384C E9E6020000              	jmp .L_lambda_simple_end_044c
 27345                                  .L_lambda_simple_code_044c:	; lambda-simple body
 27346 00013851 48837C241003            	cmp qword [rsp + 8 * 2], 3
 27347 00013857 740B                    	je .L_lambda_simple_arity_check_ok_044c
 27348 00013859 FF742410                	push qword [rsp + 8 * 2]
 27349 0001385D 6A03                    	push 3
 27350 0001385F E93B190000              	jmp L_error_incorrect_arity_simple
 27351                                  .L_lambda_simple_arity_check_ok_044c:
 27352 00013864 C8000000                	enter 0, 0
 27353                                  	; preparing a non-tail-call
 27354 00013868 488B4530                	mov rax, PARAM(2)	; param j
 27355 0001386C 50                      	push rax
 27356 0001386D 488B4528                	mov rax, PARAM(1)	; param i
 27357 00013871 50                      	push rax
 27358 00013872 6A02                    	push 2	; arg count
 27359 00013874 488B0425[22130000]      	mov rax, qword [free_var_4]	; free var <
 27360 0001387C 803805                  	cmp byte [rax], T_undefined
 27361 0001387F 0F8434180000            	je L_error_fvar_undefined
 27362 00013885 803804                  	cmp byte [rax], T_closure
 27363 00013888 0F85AF180000            	jne L_error_non_closure
 27364 0001388E FF7001                  	push SOB_CLOSURE_ENV(rax)
 27365 00013891 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27366 00013894 483D[02000000]          	cmp rax, sob_boolean_false
 27367 0001389A 0F848F020000            	je .L_if_else_032b
 27368                                  	; preparing a tail-call
 27369                                  	; preparing a non-tail-call
 27370 000138A0 488B4528                	mov rax, PARAM(1)	; param i
 27371 000138A4 50                      	push rax
 27372 000138A5 488B4520                	mov rax, PARAM(0)	; param vec
 27373 000138A9 50                      	push rax
 27374 000138AA 6A02                    	push 2	; arg count
 27375 000138AC 488B0425[5B1E0000]      	mov rax, qword [free_var_173]	; free var vector-ref
 27376 000138B4 803805                  	cmp byte [rax], T_undefined
 27377 000138B7 0F84FC170000            	je L_error_fvar_undefined
 27378 000138BD 803804                  	cmp byte [rax], T_closure
 27379 000138C0 0F8577180000            	jne L_error_non_closure
 27380 000138C6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27381 000138C9 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27382 000138CC 50                      	push rax
 27383 000138CD 6A01                    	push 1	; arg count
 27384 000138CF BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27385 000138D4 E80D190000              	call malloc
 27386 000138D9 50                      	push rax
 27387 000138DA BF18000000              	mov rdi, 8 * 3	; new rib
 27388 000138DF E802190000              	call malloc
 27389 000138E4 50                      	push rax
 27390 000138E5 BF18000000              	mov rdi, 8 * 3	; extended env
 27391 000138EA E8F7180000              	call malloc
 27392 000138EF 488B7D10                	mov rdi, ENV
 27393 000138F3 BE00000000              	mov rsi, 0
 27394 000138F8 BA01000000              	mov rdx, 1
 27395                                  .L_lambda_simple_env_loop_044d:	; ext_env[i + 1] <-- env[i]
 27396 000138FD 4883FE02                	cmp rsi, 2
 27397 00013901 7410                    	je .L_lambda_simple_env_end_044d
 27398 00013903 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27399 00013907 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27400 0001390B 48FFC6                  	inc rsi
 27401 0001390E 48FFC2                  	inc rdx
 27402 00013911 EBEA                    	jmp .L_lambda_simple_env_loop_044d
 27403                                  .L_lambda_simple_env_end_044d:
 27404 00013913 5B                      	pop rbx
 27405 00013914 BE00000000              	mov rsi, 0
 27406                                  .L_lambda_simple_params_loop_044d:	; copy params
 27407 00013919 4883FE03                	cmp rsi, 3
 27408 0001391D 740E                    	je .L_lambda_simple_params_end_044d
 27409 0001391F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27410 00013924 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27411 00013928 48FFC6                  	inc rsi
 27412 0001392B EBEC                    	jmp .L_lambda_simple_params_loop_044d
 27413                                  .L_lambda_simple_params_end_044d:
 27414 0001392D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 27415 00013930 4889C3                  	mov rbx, rax
 27416 00013933 58                      	pop rax
 27417 00013934 C60004                  	mov byte [rax], T_closure
 27418 00013937 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27419 0001393B 48C74009[48390100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_044d
 27420 00013943 E9A0010000              	jmp .L_lambda_simple_end_044d
 27421                                  .L_lambda_simple_code_044d:	; lambda-simple body
 27422 00013948 48837C241001            	cmp qword [rsp + 8 * 2], 1
 27423 0001394E 740B                    	je .L_lambda_simple_arity_check_ok_044d
 27424 00013950 FF742410                	push qword [rsp + 8 * 2]
 27425 00013954 6A01                    	push 1
 27426 00013956 E944180000              	jmp L_error_incorrect_arity_simple
 27427                                  .L_lambda_simple_arity_check_ok_044d:
 27428 0001395B C8000000                	enter 0, 0
 27429                                  	; preparing a non-tail-call
 27430                                  	; preparing a non-tail-call
 27431 0001395F 488B4510                	mov rax, ENV
 27432 00013963 488B00                  	mov rax, qword [rax + 8 * 0]
 27433 00013966 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var j
 27434 0001396A 50                      	push rax
 27435 0001396B 488B4510                	mov rax, ENV
 27436 0001396F 488B00                  	mov rax, qword [rax + 8 * 0]
 27437 00013972 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var vec
 27438 00013975 50                      	push rax
 27439 00013976 6A02                    	push 2	; arg count
 27440 00013978 488B0425[5B1E0000]      	mov rax, qword [free_var_173]	; free var vector-ref
 27441 00013980 803805                  	cmp byte [rax], T_undefined
 27442 00013983 0F8430170000            	je L_error_fvar_undefined
 27443 00013989 803804                  	cmp byte [rax], T_closure
 27444 0001398C 0F85AB170000            	jne L_error_non_closure
 27445 00013992 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27446 00013995 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27447 00013998 50                      	push rax
 27448 00013999 488B4510                	mov rax, ENV
 27449 0001399D 488B00                  	mov rax, qword [rax + 8 * 0]
 27450 000139A0 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var i
 27451 000139A4 50                      	push rax
 27452 000139A5 488B4510                	mov rax, ENV
 27453 000139A9 488B00                  	mov rax, qword [rax + 8 * 0]
 27454 000139AC 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var vec
 27455 000139AF 50                      	push rax
 27456 000139B0 6A03                    	push 3	; arg count
 27457 000139B2 488B0425[8E1E0000]      	mov rax, qword [free_var_176]	; free var vector-set!
 27458 000139BA 803805                  	cmp byte [rax], T_undefined
 27459 000139BD 0F84F6160000            	je L_error_fvar_undefined
 27460 000139C3 803804                  	cmp byte [rax], T_closure
 27461 000139C6 0F8571170000            	jne L_error_non_closure
 27462 000139CC FF7001                  	push SOB_CLOSURE_ENV(rax)
 27463 000139CF FF5009                  	call SOB_CLOSURE_CODE(rax)
 27464                                  
 27465                                  	; preparing a non-tail-call
 27466 000139D2 488B4520                	mov rax, PARAM(0)	; param ch
 27467 000139D6 50                      	push rax
 27468 000139D7 488B4510                	mov rax, ENV
 27469 000139DB 488B00                  	mov rax, qword [rax + 8 * 0]
 27470 000139DE 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var j
 27471 000139E2 50                      	push rax
 27472 000139E3 488B4510                	mov rax, ENV
 27473 000139E7 488B00                  	mov rax, qword [rax + 8 * 0]
 27474 000139EA 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var vec
 27475 000139ED 50                      	push rax
 27476 000139EE 6A03                    	push 3	; arg count
 27477 000139F0 488B0425[8E1E0000]      	mov rax, qword [free_var_176]	; free var vector-set!
 27478 000139F8 803805                  	cmp byte [rax], T_undefined
 27479 000139FB 0F84B8160000            	je L_error_fvar_undefined
 27480 00013A01 803804                  	cmp byte [rax], T_closure
 27481 00013A04 0F8533170000            	jne L_error_non_closure
 27482 00013A0A FF7001                  	push SOB_CLOSURE_ENV(rax)
 27483 00013A0D FF5009                  	call SOB_CLOSURE_CODE(rax)
 27484                                  
 27485                                  	; preparing a tail-call
 27486                                  	; preparing a non-tail-call
 27487 00013A10 48B8-                   	mov rax, L_constants + 2810
 27487 00013A12 [FA0A000000000000] 
 27488 00013A1A 50                      	push rax
 27489 00013A1B 488B4510                	mov rax, ENV
 27490 00013A1F 488B00                  	mov rax, qword [rax + 8 * 0]
 27491 00013A22 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var j
 27492 00013A26 50                      	push rax
 27493 00013A27 6A02                    	push 2	; arg count
 27494 00013A29 488B0425[00130000]      	mov rax, qword [free_var_2]	; free var -
 27495 00013A31 803805                  	cmp byte [rax], T_undefined
 27496 00013A34 0F847F160000            	je L_error_fvar_undefined
 27497 00013A3A 803804                  	cmp byte [rax], T_closure
 27498 00013A3D 0F85FA160000            	jne L_error_non_closure
 27499 00013A43 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27500 00013A46 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27501 00013A49 50                      	push rax
 27502                                  	; preparing a non-tail-call
 27503 00013A4A 48B8-                   	mov rax, L_constants + 2810
 27503 00013A4C [FA0A000000000000] 
 27504 00013A54 50                      	push rax
 27505 00013A55 488B4510                	mov rax, ENV
 27506 00013A59 488B00                  	mov rax, qword [rax + 8 * 0]
 27507 00013A5C 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var i
 27508 00013A60 50                      	push rax
 27509 00013A61 6A02                    	push 2	; arg count
 27510 00013A63 488B0425[EF120000]      	mov rax, qword [free_var_1]	; free var +
 27511 00013A6B 803805                  	cmp byte [rax], T_undefined
 27512 00013A6E 0F8445160000            	je L_error_fvar_undefined
 27513 00013A74 803804                  	cmp byte [rax], T_closure
 27514 00013A77 0F85C0160000            	jne L_error_non_closure
 27515 00013A7D FF7001                  	push SOB_CLOSURE_ENV(rax)
 27516 00013A80 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27517 00013A83 50                      	push rax
 27518 00013A84 488B4510                	mov rax, ENV
 27519 00013A88 488B00                  	mov rax, qword [rax + 8 * 0]
 27520 00013A8B 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var vec
 27521 00013A8E 50                      	push rax
 27522 00013A8F 6A03                    	push 3	; arg count
 27523 00013A91 488B4510                	mov rax, ENV
 27524 00013A95 488B4008                	mov rax, qword [rax + 8 * 1]
 27525 00013A99 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 27526 00013A9C 488B00                  	mov rax, qword [rax]
 27527 00013A9F 803804                  	cmp byte [rax], T_closure
 27528 00013AA2 0F8595160000            	jne L_error_non_closure
 27529 00013AA8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27530                                  
 27531                                  	; recycling the current frame
 27532 00013AAB FF7508                  	push qword [rbp + 8 * 1]	; old return address
 27533 00013AAE FF7500                  	push qword [rbp]	; old frame-pointer
 27534 00013AB1 B907000000              	mov rcx, 7
 27535 00013AB6 488B5D18                	mov rbx, COUNT
 27536 00013ABA 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 27537 00013ABF 488D55F8                	lea rdx, [rbp - 8]
 27538                                  .L_tc_recycle_frame_loop_059c:
 27539 00013AC3 4883F900                	cmp rcx, 0
 27540 00013AC7 7413                    	je .L_tc_recycle_frame_done_059c
 27541 00013AC9 488B32                  	mov rsi, qword [rdx]
 27542 00013ACC 488933                  	mov qword [rbx], rsi
 27543 00013ACF 48FFC9                  	dec rcx
 27544 00013AD2 4883EB08                	sub rbx, 8
 27545 00013AD6 4883EA08                	sub rdx, 8
 27546 00013ADA EBE7                    	jmp .L_tc_recycle_frame_loop_059c
 27547                                  .L_tc_recycle_frame_done_059c:
 27548 00013ADC 488D6308                	lea rsp, [rbx + 8]
 27549 00013AE0 5D                      	pop rbp
 27550 00013AE1 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 27551 00013AE4 C9                      	leave
 27552 00013AE5 C21800                  	ret AND_KILL_FRAME(1)
 27553                                  .L_lambda_simple_end_044d:	; new closure is in rax
 27554 00013AE8 803804                  	cmp byte [rax], T_closure
 27555 00013AEB 0F854C160000            	jne L_error_non_closure
 27556 00013AF1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27557                                  
 27558                                  	; recycling the current frame
 27559 00013AF4 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 27560 00013AF7 FF7500                  	push qword [rbp]	; old frame-pointer
 27561 00013AFA B905000000              	mov rcx, 5
 27562 00013AFF 488B5D18                	mov rbx, COUNT
 27563 00013B03 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 27564 00013B08 488D55F8                	lea rdx, [rbp - 8]
 27565                                  .L_tc_recycle_frame_loop_059d:
 27566 00013B0C 4883F900                	cmp rcx, 0
 27567 00013B10 7413                    	je .L_tc_recycle_frame_done_059d
 27568 00013B12 488B32                  	mov rsi, qword [rdx]
 27569 00013B15 488933                  	mov qword [rbx], rsi
 27570 00013B18 48FFC9                  	dec rcx
 27571 00013B1B 4883EB08                	sub rbx, 8
 27572 00013B1F 4883EA08                	sub rdx, 8
 27573 00013B23 EBE7                    	jmp .L_tc_recycle_frame_loop_059d
 27574                                  .L_tc_recycle_frame_done_059d:
 27575 00013B25 488D6308                	lea rsp, [rbx + 8]
 27576 00013B29 5D                      	pop rbp
 27577 00013B2A FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 27578 00013B2D EB04                    	jmp .L_if_end_032b
 27579                                  .L_if_else_032b:
 27580 00013B2F 488B4520                	mov rax, PARAM(0)	; param vec
 27581                                  .L_if_end_032b:
 27582 00013B33 C9                      	leave
 27583 00013B34 C22800                  	ret AND_KILL_FRAME(3)
 27584                                  .L_lambda_simple_end_044c:	; new closure is in rax
 27585                                  
 27586 00013B37 50                      	push rax
 27587 00013B38 488B4520                	mov rax, PARAM(0)	; param run
 27588                                  
 27589 00013B3C 8F00                    	pop qword[rax]
 27590 00013B3E 48B8-                   	mov rax, sob_void
 27590 00013B40 [0000000000000000] 
 27591                                  
 27592 00013B48 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27593 00013B4D E894160000              	call malloc
 27594 00013B52 50                      	push rax
 27595 00013B53 BF08000000              	mov rdi, 8 * 1	; new rib
 27596 00013B58 E889160000              	call malloc
 27597 00013B5D 50                      	push rax
 27598 00013B5E BF10000000              	mov rdi, 8 * 2	; extended env
 27599 00013B63 E87E160000              	call malloc
 27600 00013B68 488B7D10                	mov rdi, ENV
 27601 00013B6C BE00000000              	mov rsi, 0
 27602 00013B71 BA01000000              	mov rdx, 1
 27603                                  .L_lambda_simple_env_loop_044e:	; ext_env[i + 1] <-- env[i]
 27604 00013B76 4883FE01                	cmp rsi, 1
 27605 00013B7A 7410                    	je .L_lambda_simple_env_end_044e
 27606 00013B7C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27607 00013B80 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27608 00013B84 48FFC6                  	inc rsi
 27609 00013B87 48FFC2                  	inc rdx
 27610 00013B8A EBEA                    	jmp .L_lambda_simple_env_loop_044e
 27611                                  .L_lambda_simple_env_end_044e:
 27612 00013B8C 5B                      	pop rbx
 27613 00013B8D BE00000000              	mov rsi, 0
 27614                                  .L_lambda_simple_params_loop_044e:	; copy params
 27615 00013B92 4883FE01                	cmp rsi, 1
 27616 00013B96 740E                    	je .L_lambda_simple_params_end_044e
 27617 00013B98 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27618 00013B9D 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27619 00013BA1 48FFC6                  	inc rsi
 27620 00013BA4 EBEC                    	jmp .L_lambda_simple_params_loop_044e
 27621                                  .L_lambda_simple_params_end_044e:
 27622 00013BA6 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 27623 00013BA9 4889C3                  	mov rbx, rax
 27624 00013BAC 58                      	pop rax
 27625 00013BAD C60004                  	mov byte [rax], T_closure
 27626 00013BB0 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27627 00013BB4 48C74009[C13B0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_044e
 27628 00013BBC E9FA010000              	jmp .L_lambda_simple_end_044e
 27629                                  .L_lambda_simple_code_044e:	; lambda-simple body
 27630 00013BC1 48837C241001            	cmp qword [rsp + 8 * 2], 1
 27631 00013BC7 740B                    	je .L_lambda_simple_arity_check_ok_044e
 27632 00013BC9 FF742410                	push qword [rsp + 8 * 2]
 27633 00013BCD 6A01                    	push 1
 27634 00013BCF E9CB150000              	jmp L_error_incorrect_arity_simple
 27635                                  .L_lambda_simple_arity_check_ok_044e:
 27636 00013BD4 C8000000                	enter 0, 0
 27637                                  	; preparing a tail-call
 27638                                  	; preparing a non-tail-call
 27639 00013BD8 488B4520                	mov rax, PARAM(0)	; param vec
 27640 00013BDC 50                      	push rax
 27641 00013BDD 6A01                    	push 1	; arg count
 27642 00013BDF 488B0425[4A1E0000]      	mov rax, qword [free_var_172]	; free var vector-length
 27643 00013BE7 803805                  	cmp byte [rax], T_undefined
 27644 00013BEA 0F84C9140000            	je L_error_fvar_undefined
 27645 00013BF0 803804                  	cmp byte [rax], T_closure
 27646 00013BF3 0F8544150000            	jne L_error_non_closure
 27647 00013BF9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27648 00013BFC FF5009                  	call SOB_CLOSURE_CODE(rax)
 27649 00013BFF 50                      	push rax
 27650 00013C00 6A01                    	push 1	; arg count
 27651 00013C02 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27652 00013C07 E8DA150000              	call malloc
 27653 00013C0C 50                      	push rax
 27654 00013C0D BF08000000              	mov rdi, 8 * 1	; new rib
 27655 00013C12 E8CF150000              	call malloc
 27656 00013C17 50                      	push rax
 27657 00013C18 BF18000000              	mov rdi, 8 * 3	; extended env
 27658 00013C1D E8C4150000              	call malloc
 27659 00013C22 488B7D10                	mov rdi, ENV
 27660 00013C26 BE00000000              	mov rsi, 0
 27661 00013C2B BA01000000              	mov rdx, 1
 27662                                  .L_lambda_simple_env_loop_044f:	; ext_env[i + 1] <-- env[i]
 27663 00013C30 4883FE02                	cmp rsi, 2
 27664 00013C34 7410                    	je .L_lambda_simple_env_end_044f
 27665 00013C36 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27666 00013C3A 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27667 00013C3E 48FFC6                  	inc rsi
 27668 00013C41 48FFC2                  	inc rdx
 27669 00013C44 EBEA                    	jmp .L_lambda_simple_env_loop_044f
 27670                                  .L_lambda_simple_env_end_044f:
 27671 00013C46 5B                      	pop rbx
 27672 00013C47 BE00000000              	mov rsi, 0
 27673                                  .L_lambda_simple_params_loop_044f:	; copy params
 27674 00013C4C 4883FE01                	cmp rsi, 1
 27675 00013C50 740E                    	je .L_lambda_simple_params_end_044f
 27676 00013C52 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27677 00013C57 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27678 00013C5B 48FFC6                  	inc rsi
 27679 00013C5E EBEC                    	jmp .L_lambda_simple_params_loop_044f
 27680                                  .L_lambda_simple_params_end_044f:
 27681 00013C60 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 27682 00013C63 4889C3                  	mov rbx, rax
 27683 00013C66 58                      	pop rax
 27684 00013C67 C60004                  	mov byte [rax], T_closure
 27685 00013C6A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27686 00013C6E 48C74009[7B3C0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_044f
 27687 00013C76 E9F7000000              	jmp .L_lambda_simple_end_044f
 27688                                  .L_lambda_simple_code_044f:	; lambda-simple body
 27689 00013C7B 48837C241001            	cmp qword [rsp + 8 * 2], 1
 27690 00013C81 740B                    	je .L_lambda_simple_arity_check_ok_044f
 27691 00013C83 FF742410                	push qword [rsp + 8 * 2]
 27692 00013C87 6A01                    	push 1
 27693 00013C89 E911150000              	jmp L_error_incorrect_arity_simple
 27694                                  .L_lambda_simple_arity_check_ok_044f:
 27695 00013C8E C8000000                	enter 0, 0
 27696                                  	; preparing a non-tail-call
 27697 00013C92 488B4520                	mov rax, PARAM(0)	; param n
 27698 00013C96 50                      	push rax
 27699 00013C97 6A01                    	push 1	; arg count
 27700 00013C99 488B0425[E31E0000]      	mov rax, qword [free_var_181]	; free var zero?
 27701 00013CA1 803805                  	cmp byte [rax], T_undefined
 27702 00013CA4 0F840F140000            	je L_error_fvar_undefined
 27703 00013CAA 803804                  	cmp byte [rax], T_closure
 27704 00013CAD 0F858A140000            	jne L_error_non_closure
 27705 00013CB3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27706 00013CB6 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27707 00013CB9 483D[02000000]          	cmp rax, sob_boolean_false
 27708 00013CBF 740F                    	je .L_if_else_032c
 27709 00013CC1 488B4510                	mov rax, ENV
 27710 00013CC5 488B00                  	mov rax, qword [rax + 8 * 0]
 27711 00013CC8 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var vec
 27712 00013CCB E99E000000              	jmp .L_if_end_032c
 27713                                  .L_if_else_032c:
 27714                                  	; preparing a tail-call
 27715                                  	; preparing a non-tail-call
 27716 00013CD0 48B8-                   	mov rax, L_constants + 2810
 27716 00013CD2 [FA0A000000000000] 
 27717 00013CDA 50                      	push rax
 27718 00013CDB 488B4520                	mov rax, PARAM(0)	; param n
 27719 00013CDF 50                      	push rax
 27720 00013CE0 6A02                    	push 2	; arg count
 27721 00013CE2 488B0425[00130000]      	mov rax, qword [free_var_2]	; free var -
 27722 00013CEA 803805                  	cmp byte [rax], T_undefined
 27723 00013CED 0F84C6130000            	je L_error_fvar_undefined
 27724 00013CF3 803804                  	cmp byte [rax], T_closure
 27725 00013CF6 0F8541140000            	jne L_error_non_closure
 27726 00013CFC FF7001                  	push SOB_CLOSURE_ENV(rax)
 27727 00013CFF FF5009                  	call SOB_CLOSURE_CODE(rax)
 27728 00013D02 50                      	push rax
 27729 00013D03 48B8-                   	mov rax, L_constants + 2558
 27729 00013D05 [FE09000000000000] 
 27730 00013D0D 50                      	push rax
 27731 00013D0E 488B4510                	mov rax, ENV
 27732 00013D12 488B00                  	mov rax, qword [rax + 8 * 0]
 27733 00013D15 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var vec
 27734 00013D18 50                      	push rax
 27735 00013D19 6A03                    	push 3	; arg count
 27736 00013D1B 488B4510                	mov rax, ENV
 27737 00013D1F 488B4008                	mov rax, qword [rax + 8 * 1]
 27738 00013D23 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 27739 00013D26 488B00                  	mov rax, qword [rax]
 27740 00013D29 803804                  	cmp byte [rax], T_closure
 27741 00013D2C 0F850B140000            	jne L_error_non_closure
 27742 00013D32 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27743                                  
 27744                                  	; recycling the current frame
 27745 00013D35 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 27746 00013D38 FF7500                  	push qword [rbp]	; old frame-pointer
 27747 00013D3B B907000000              	mov rcx, 7
 27748 00013D40 488B5D18                	mov rbx, COUNT
 27749 00013D44 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 27750 00013D49 488D55F8                	lea rdx, [rbp - 8]
 27751                                  .L_tc_recycle_frame_loop_059e:
 27752 00013D4D 4883F900                	cmp rcx, 0
 27753 00013D51 7413                    	je .L_tc_recycle_frame_done_059e
 27754 00013D53 488B32                  	mov rsi, qword [rdx]
 27755 00013D56 488933                  	mov qword [rbx], rsi
 27756 00013D59 48FFC9                  	dec rcx
 27757 00013D5C 4883EB08                	sub rbx, 8
 27758 00013D60 4883EA08                	sub rdx, 8
 27759 00013D64 EBE7                    	jmp .L_tc_recycle_frame_loop_059e
 27760                                  .L_tc_recycle_frame_done_059e:
 27761 00013D66 488D6308                	lea rsp, [rbx + 8]
 27762 00013D6A 5D                      	pop rbp
 27763 00013D6B FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 27764                                  .L_if_end_032c:
 27765 00013D6E C9                      	leave
 27766 00013D6F C21800                  	ret AND_KILL_FRAME(1)
 27767                                  .L_lambda_simple_end_044f:	; new closure is in rax
 27768 00013D72 803804                  	cmp byte [rax], T_closure
 27769 00013D75 0F85C2130000            	jne L_error_non_closure
 27770 00013D7B FF7001                  	push SOB_CLOSURE_ENV(rax)
 27771                                  
 27772                                  	; recycling the current frame
 27773 00013D7E FF7508                  	push qword [rbp + 8 * 1]	; old return address
 27774 00013D81 FF7500                  	push qword [rbp]	; old frame-pointer
 27775 00013D84 B905000000              	mov rcx, 5
 27776 00013D89 488B5D18                	mov rbx, COUNT
 27777 00013D8D 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 27778 00013D92 488D55F8                	lea rdx, [rbp - 8]
 27779                                  .L_tc_recycle_frame_loop_059f:
 27780 00013D96 4883F900                	cmp rcx, 0
 27781 00013D9A 7413                    	je .L_tc_recycle_frame_done_059f
 27782 00013D9C 488B32                  	mov rsi, qword [rdx]
 27783 00013D9F 488933                  	mov qword [rbx], rsi
 27784 00013DA2 48FFC9                  	dec rcx
 27785 00013DA5 4883EB08                	sub rbx, 8
 27786 00013DA9 4883EA08                	sub rdx, 8
 27787 00013DAD EBE7                    	jmp .L_tc_recycle_frame_loop_059f
 27788                                  .L_tc_recycle_frame_done_059f:
 27789 00013DAF 488D6308                	lea rsp, [rbx + 8]
 27790 00013DB3 5D                      	pop rbp
 27791 00013DB4 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 27792 00013DB7 C9                      	leave
 27793 00013DB8 C21800                  	ret AND_KILL_FRAME(1)
 27794                                  .L_lambda_simple_end_044e:	; new closure is in rax
 27795 00013DBB C9                      	leave
 27796 00013DBC C21800                  	ret AND_KILL_FRAME(1)
 27797                                  .L_lambda_simple_end_044b:	; new closure is in rax
 27798 00013DBF 803804                  	cmp byte [rax], T_closure
 27799 00013DC2 0F8575130000            	jne L_error_non_closure
 27800 00013DC8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27801 00013DCB FF5009                  	call SOB_CLOSURE_CODE(rax)
 27802 00013DCE 48890425[7D1E0000]      	mov qword [free_var_175], rax
 27803 00013DD6 48B8-                   	mov rax, sob_void
 27803 00013DD8 [0000000000000000] 
 27804                                  
 27805 00013DE0 4889C7                  	mov rdi, rax
 27806 00013DE3 E853160000              	call print_sexpr_if_not_void
 27807                                  
 27808 00013DE8 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27809 00013DED E8F4130000              	call malloc
 27810 00013DF2 50                      	push rax
 27811 00013DF3 BF00000000              	mov rdi, 8 * 0	; new rib
 27812 00013DF8 E8E9130000              	call malloc
 27813 00013DFD 50                      	push rax
 27814 00013DFE BF08000000              	mov rdi, 8 * 1	; extended env
 27815 00013E03 E8DE130000              	call malloc
 27816 00013E08 488B7D10                	mov rdi, ENV
 27817 00013E0C BE00000000              	mov rsi, 0
 27818 00013E11 BA01000000              	mov rdx, 1
 27819                                  .L_lambda_simple_env_loop_0450:	; ext_env[i + 1] <-- env[i]
 27820 00013E16 4883FE00                	cmp rsi, 0
 27821 00013E1A 7410                    	je .L_lambda_simple_env_end_0450
 27822 00013E1C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27823 00013E20 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27824 00013E24 48FFC6                  	inc rsi
 27825 00013E27 48FFC2                  	inc rdx
 27826 00013E2A EBEA                    	jmp .L_lambda_simple_env_loop_0450
 27827                                  .L_lambda_simple_env_end_0450:
 27828 00013E2C 5B                      	pop rbx
 27829 00013E2D BE00000000              	mov rsi, 0
 27830                                  .L_lambda_simple_params_loop_0450:	; copy params
 27831 00013E32 4883FE00                	cmp rsi, 0
 27832 00013E36 740E                    	je .L_lambda_simple_params_end_0450
 27833 00013E38 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27834 00013E3D 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27835 00013E41 48FFC6                  	inc rsi
 27836 00013E44 EBEC                    	jmp .L_lambda_simple_params_loop_0450
 27837                                  .L_lambda_simple_params_end_0450:
 27838 00013E46 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 27839 00013E49 4889C3                  	mov rbx, rax
 27840 00013E4C 58                      	pop rax
 27841 00013E4D C60004                  	mov byte [rax], T_closure
 27842 00013E50 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27843 00013E54 48C74009[613E0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0450
 27844 00013E5C E936030000              	jmp .L_lambda_simple_end_0450
 27845                                  .L_lambda_simple_code_0450:	; lambda-simple body
 27846 00013E61 48837C241002            	cmp qword [rsp + 8 * 2], 2
 27847 00013E67 740B                    	je .L_lambda_simple_arity_check_ok_0450
 27848 00013E69 FF742410                	push qword [rsp + 8 * 2]
 27849 00013E6D 6A02                    	push 2
 27850 00013E6F E92B130000              	jmp L_error_incorrect_arity_simple
 27851                                  .L_lambda_simple_arity_check_ok_0450:
 27852 00013E74 C8000000                	enter 0, 0
 27853                                  	; preparing a tail-call
 27854 00013E78 48B8-                   	mov rax, L_constants + 2335
 27854 00013E7A [1F09000000000000] 
 27855 00013E82 50                      	push rax
 27856 00013E83 6A01                    	push 1	; arg count
 27857 00013E85 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27858 00013E8A E857130000              	call malloc
 27859 00013E8F 50                      	push rax
 27860 00013E90 BF10000000              	mov rdi, 8 * 2	; new rib
 27861 00013E95 E84C130000              	call malloc
 27862 00013E9A 50                      	push rax
 27863 00013E9B BF10000000              	mov rdi, 8 * 2	; extended env
 27864 00013EA0 E841130000              	call malloc
 27865 00013EA5 488B7D10                	mov rdi, ENV
 27866 00013EA9 BE00000000              	mov rsi, 0
 27867 00013EAE BA01000000              	mov rdx, 1
 27868                                  .L_lambda_simple_env_loop_0451:	; ext_env[i + 1] <-- env[i]
 27869 00013EB3 4883FE01                	cmp rsi, 1
 27870 00013EB7 7410                    	je .L_lambda_simple_env_end_0451
 27871 00013EB9 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27872 00013EBD 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27873 00013EC1 48FFC6                  	inc rsi
 27874 00013EC4 48FFC2                  	inc rdx
 27875 00013EC7 EBEA                    	jmp .L_lambda_simple_env_loop_0451
 27876                                  .L_lambda_simple_env_end_0451:
 27877 00013EC9 5B                      	pop rbx
 27878 00013ECA BE00000000              	mov rsi, 0
 27879                                  .L_lambda_simple_params_loop_0451:	; copy params
 27880 00013ECF 4883FE02                	cmp rsi, 2
 27881 00013ED3 740E                    	je .L_lambda_simple_params_end_0451
 27882 00013ED5 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27883 00013EDA 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27884 00013EDE 48FFC6                  	inc rsi
 27885 00013EE1 EBEC                    	jmp .L_lambda_simple_params_loop_0451
 27886                                  .L_lambda_simple_params_end_0451:
 27887 00013EE3 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 27888 00013EE6 4889C3                  	mov rbx, rax
 27889 00013EE9 58                      	pop rax
 27890 00013EEA C60004                  	mov byte [rax], T_closure
 27891 00013EED 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27892 00013EF1 48C74009[FE3E0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0451
 27893 00013EF9 E950020000              	jmp .L_lambda_simple_end_0451
 27894                                  .L_lambda_simple_code_0451:	; lambda-simple body
 27895 00013EFE 48837C241001            	cmp qword [rsp + 8 * 2], 1
 27896 00013F04 740B                    	je .L_lambda_simple_arity_check_ok_0451
 27897 00013F06 FF742410                	push qword [rsp + 8 * 2]
 27898 00013F0A 6A01                    	push 1
 27899 00013F0C E98E120000              	jmp L_error_incorrect_arity_simple
 27900                                  .L_lambda_simple_arity_check_ok_0451:
 27901 00013F11 C8000000                	enter 0, 0
 27902                                  
 27903 00013F15 BF08000000              	mov rdi, 8
 27904 00013F1A E8C7120000              	call malloc
 27905 00013F1F 488B5D20                	mov rbx, PARAM(0)	; param run
 27906 00013F23 488918                  	mov [rax], rbx	; box run
 27907 00013F26 48894520                	mov PARAM(0), rax	; replace param with box
 27908 00013F2A 48B8-                   	mov rax, sob_void
 27908 00013F2C [0000000000000000] 
 27909                                  
 27910 00013F34 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27911 00013F39 E8A8120000              	call malloc
 27912 00013F3E 50                      	push rax
 27913 00013F3F BF08000000              	mov rdi, 8 * 1	; new rib
 27914 00013F44 E89D120000              	call malloc
 27915 00013F49 50                      	push rax
 27916 00013F4A BF18000000              	mov rdi, 8 * 3	; extended env
 27917 00013F4F E892120000              	call malloc
 27918 00013F54 488B7D10                	mov rdi, ENV
 27919 00013F58 BE00000000              	mov rsi, 0
 27920 00013F5D BA01000000              	mov rdx, 1
 27921                                  .L_lambda_simple_env_loop_0452:	; ext_env[i + 1] <-- env[i]
 27922 00013F62 4883FE02                	cmp rsi, 2
 27923 00013F66 7410                    	je .L_lambda_simple_env_end_0452
 27924 00013F68 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27925 00013F6C 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27926 00013F70 48FFC6                  	inc rsi
 27927 00013F73 48FFC2                  	inc rdx
 27928 00013F76 EBEA                    	jmp .L_lambda_simple_env_loop_0452
 27929                                  .L_lambda_simple_env_end_0452:
 27930 00013F78 5B                      	pop rbx
 27931 00013F79 BE00000000              	mov rsi, 0
 27932                                  .L_lambda_simple_params_loop_0452:	; copy params
 27933 00013F7E 4883FE01                	cmp rsi, 1
 27934 00013F82 740E                    	je .L_lambda_simple_params_end_0452
 27935 00013F84 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27936 00013F89 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27937 00013F8D 48FFC6                  	inc rsi
 27938 00013F90 EBEC                    	jmp .L_lambda_simple_params_loop_0452
 27939                                  .L_lambda_simple_params_end_0452:
 27940 00013F92 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 27941 00013F95 4889C3                  	mov rbx, rax
 27942 00013F98 58                      	pop rax
 27943 00013F99 C60004                  	mov byte [rax], T_closure
 27944 00013F9C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27945 00013FA0 48C74009[AD3F0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0452
 27946 00013FA8 E933010000              	jmp .L_lambda_simple_end_0452
 27947                                  .L_lambda_simple_code_0452:	; lambda-simple body
 27948 00013FAD 48837C241001            	cmp qword [rsp + 8 * 2], 1
 27949 00013FB3 740B                    	je .L_lambda_simple_arity_check_ok_0452
 27950 00013FB5 FF742410                	push qword [rsp + 8 * 2]
 27951 00013FB9 6A01                    	push 1
 27952 00013FBB E9DF110000              	jmp L_error_incorrect_arity_simple
 27953                                  .L_lambda_simple_arity_check_ok_0452:
 27954 00013FC0 C8000000                	enter 0, 0
 27955                                  	; preparing a non-tail-call
 27956 00013FC4 488B4510                	mov rax, ENV
 27957 00013FC8 488B4008                	mov rax, qword [rax + 8 * 1]
 27958 00013FCC 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var n
 27959 00013FCF 50                      	push rax
 27960 00013FD0 488B4520                	mov rax, PARAM(0)	; param i
 27961 00013FD4 50                      	push rax
 27962 00013FD5 6A02                    	push 2	; arg count
 27963 00013FD7 488B0425[22130000]      	mov rax, qword [free_var_4]	; free var <
 27964 00013FDF 803805                  	cmp byte [rax], T_undefined
 27965 00013FE2 0F84D1100000            	je L_error_fvar_undefined
 27966 00013FE8 803804                  	cmp byte [rax], T_closure
 27967 00013FEB 0F854C110000            	jne L_error_non_closure
 27968 00013FF1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27969 00013FF4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27970 00013FF7 483D[02000000]          	cmp rax, sob_boolean_false
 27971 00013FFD 0F84CF000000            	je .L_if_else_032d
 27972                                  	; preparing a tail-call
 27973                                  	; preparing a non-tail-call
 27974                                  	; preparing a non-tail-call
 27975 00014003 48B8-                   	mov rax, L_constants + 2810
 27975 00014005 [FA0A000000000000] 
 27976 0001400D 50                      	push rax
 27977 0001400E 488B4520                	mov rax, PARAM(0)	; param i
 27978 00014012 50                      	push rax
 27979 00014013 6A02                    	push 2	; arg count
 27980 00014015 488B0425[EF120000]      	mov rax, qword [free_var_1]	; free var +
 27981 0001401D 803805                  	cmp byte [rax], T_undefined
 27982 00014020 0F8493100000            	je L_error_fvar_undefined
 27983 00014026 803804                  	cmp byte [rax], T_closure
 27984 00014029 0F850E110000            	jne L_error_non_closure
 27985 0001402F FF7001                  	push SOB_CLOSURE_ENV(rax)
 27986 00014032 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27987 00014035 50                      	push rax
 27988 00014036 6A01                    	push 1	; arg count
 27989 00014038 488B4510                	mov rax, ENV
 27990 0001403C 488B00                  	mov rax, qword [rax + 8 * 0]
 27991 0001403F 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 27992 00014042 488B00                  	mov rax, qword [rax]
 27993 00014045 803804                  	cmp byte [rax], T_closure
 27994 00014048 0F85EF100000            	jne L_error_non_closure
 27995 0001404E FF7001                  	push SOB_CLOSURE_ENV(rax)
 27996 00014051 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27997 00014054 50                      	push rax
 27998                                  	; preparing a non-tail-call
 27999 00014055 488B4520                	mov rax, PARAM(0)	; param i
 28000 00014059 50                      	push rax
 28001 0001405A 6A01                    	push 1	; arg count
 28002 0001405C 488B4510                	mov rax, ENV
 28003 00014060 488B4008                	mov rax, qword [rax + 8 * 1]
 28004 00014064 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var thunk
 28005 00014068 803804                  	cmp byte [rax], T_closure
 28006 0001406B 0F85CC100000            	jne L_error_non_closure
 28007 00014071 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28008 00014074 FF5009                  	call SOB_CLOSURE_CODE(rax)
 28009 00014077 50                      	push rax
 28010 00014078 6A02                    	push 2	; arg count
 28011 0001407A 488B0425[83180000]      	mov rax, qword [free_var_85]	; free var cons
 28012 00014082 803805                  	cmp byte [rax], T_undefined
 28013 00014085 0F842E100000            	je L_error_fvar_undefined
 28014 0001408B 803804                  	cmp byte [rax], T_closure
 28015 0001408E 0F85A9100000            	jne L_error_non_closure
 28016 00014094 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28017                                  
 28018                                  	; recycling the current frame
 28019 00014097 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 28020 0001409A FF7500                  	push qword [rbp]	; old frame-pointer
 28021 0001409D B906000000              	mov rcx, 6
 28022 000140A2 488B5D18                	mov rbx, COUNT
 28023 000140A6 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 28024 000140AB 488D55F8                	lea rdx, [rbp - 8]
 28025                                  .L_tc_recycle_frame_loop_05a0:
 28026 000140AF 4883F900                	cmp rcx, 0
 28027 000140B3 7413                    	je .L_tc_recycle_frame_done_05a0
 28028 000140B5 488B32                  	mov rsi, qword [rdx]
 28029 000140B8 488933                  	mov qword [rbx], rsi
 28030 000140BB 48FFC9                  	dec rcx
 28031 000140BE 4883EB08                	sub rbx, 8
 28032 000140C2 4883EA08                	sub rdx, 8
 28033 000140C6 EBE7                    	jmp .L_tc_recycle_frame_loop_05a0
 28034                                  .L_tc_recycle_frame_done_05a0:
 28035 000140C8 488D6308                	lea rsp, [rbx + 8]
 28036 000140CC 5D                      	pop rbp
 28037 000140CD FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 28038 000140D0 EB0A                    	jmp .L_if_end_032d
 28039                                  .L_if_else_032d:
 28040 000140D2 48B8-                   	mov rax, L_constants + 1
 28040 000140D4 [0100000000000000] 
 28041                                  .L_if_end_032d:
 28042 000140DC C9                      	leave
 28043 000140DD C21800                  	ret AND_KILL_FRAME(1)
 28044                                  .L_lambda_simple_end_0452:	; new closure is in rax
 28045                                  
 28046 000140E0 50                      	push rax
 28047 000140E1 488B4520                	mov rax, PARAM(0)	; param run
 28048                                  
 28049 000140E5 8F00                    	pop qword[rax]
 28050 000140E7 48B8-                   	mov rax, sob_void
 28050 000140E9 [0000000000000000] 
 28051                                  
 28052                                  	; preparing a tail-call
 28053 000140F1 48B8-                   	mov rax, L_constants + 2558
 28053 000140F3 [FE09000000000000] 
 28054 000140FB 50                      	push rax
 28055 000140FC 6A01                    	push 1	; arg count
 28056 000140FE 488B4520                	mov rax, PARAM(0)	; param run
 28057 00014102 488B00                  	mov rax, qword [rax]
 28058 00014105 803804                  	cmp byte [rax], T_closure
 28059 00014108 0F852F100000            	jne L_error_non_closure
 28060 0001410E FF7001                  	push SOB_CLOSURE_ENV(rax)
 28061                                  
 28062                                  	; recycling the current frame
 28063 00014111 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 28064 00014114 FF7500                  	push qword [rbp]	; old frame-pointer
 28065 00014117 B905000000              	mov rcx, 5
 28066 0001411C 488B5D18                	mov rbx, COUNT
 28067 00014120 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 28068 00014125 488D55F8                	lea rdx, [rbp - 8]
 28069                                  .L_tc_recycle_frame_loop_05a1:
 28070 00014129 4883F900                	cmp rcx, 0
 28071 0001412D 7413                    	je .L_tc_recycle_frame_done_05a1
 28072 0001412F 488B32                  	mov rsi, qword [rdx]
 28073 00014132 488933                  	mov qword [rbx], rsi
 28074 00014135 48FFC9                  	dec rcx
 28075 00014138 4883EB08                	sub rbx, 8
 28076 0001413C 4883EA08                	sub rdx, 8
 28077 00014140 EBE7                    	jmp .L_tc_recycle_frame_loop_05a1
 28078                                  .L_tc_recycle_frame_done_05a1:
 28079 00014142 488D6308                	lea rsp, [rbx + 8]
 28080 00014146 5D                      	pop rbp
 28081 00014147 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 28082 0001414A C9                      	leave
 28083 0001414B C21800                  	ret AND_KILL_FRAME(1)
 28084                                  .L_lambda_simple_end_0451:	; new closure is in rax
 28085 0001414E 803804                  	cmp byte [rax], T_closure
 28086 00014151 0F85E60F0000            	jne L_error_non_closure
 28087 00014157 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28088                                  
 28089                                  	; recycling the current frame
 28090 0001415A FF7508                  	push qword [rbp + 8 * 1]	; old return address
 28091 0001415D FF7500                  	push qword [rbp]	; old frame-pointer
 28092 00014160 B905000000              	mov rcx, 5
 28093 00014165 488B5D18                	mov rbx, COUNT
 28094 00014169 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 28095 0001416E 488D55F8                	lea rdx, [rbp - 8]
 28096                                  .L_tc_recycle_frame_loop_05a2:
 28097 00014172 4883F900                	cmp rcx, 0
 28098 00014176 7413                    	je .L_tc_recycle_frame_done_05a2
 28099 00014178 488B32                  	mov rsi, qword [rdx]
 28100 0001417B 488933                  	mov qword [rbx], rsi
 28101 0001417E 48FFC9                  	dec rcx
 28102 00014181 4883EB08                	sub rbx, 8
 28103 00014185 4883EA08                	sub rdx, 8
 28104 00014189 EBE7                    	jmp .L_tc_recycle_frame_loop_05a2
 28105                                  .L_tc_recycle_frame_done_05a2:
 28106 0001418B 488D6308                	lea rsp, [rbx + 8]
 28107 0001418F 5D                      	pop rbp
 28108 00014190 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 28109 00014193 C9                      	leave
 28110 00014194 C22000                  	ret AND_KILL_FRAME(2)
 28111                                  .L_lambda_simple_end_0450:	; new closure is in rax
 28112 00014197 48890425[A31A0000]      	mov qword [free_var_117], rax
 28113 0001419F 48B8-                   	mov rax, sob_void
 28113 000141A1 [0000000000000000] 
 28114                                  
 28115 000141A9 4889C7                  	mov rdi, rax
 28116 000141AC E88A120000              	call print_sexpr_if_not_void
 28117                                  
 28118 000141B1 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 28119 000141B6 E82B100000              	call malloc
 28120 000141BB 50                      	push rax
 28121 000141BC BF00000000              	mov rdi, 8 * 0	; new rib
 28122 000141C1 E820100000              	call malloc
 28123 000141C6 50                      	push rax
 28124 000141C7 BF08000000              	mov rdi, 8 * 1	; extended env
 28125 000141CC E815100000              	call malloc
 28126 000141D1 488B7D10                	mov rdi, ENV
 28127 000141D5 BE00000000              	mov rsi, 0
 28128 000141DA BA01000000              	mov rdx, 1
 28129                                  .L_lambda_simple_env_loop_0453:	; ext_env[i + 1] <-- env[i]
 28130 000141DF 4883FE00                	cmp rsi, 0
 28131 000141E3 7410                    	je .L_lambda_simple_env_end_0453
 28132 000141E5 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 28133 000141E9 48890CD0                	mov qword [rax + 8 * rdx], rcx
 28134 000141ED 48FFC6                  	inc rsi
 28135 000141F0 48FFC2                  	inc rdx
 28136 000141F3 EBEA                    	jmp .L_lambda_simple_env_loop_0453
 28137                                  .L_lambda_simple_env_end_0453:
 28138 000141F5 5B                      	pop rbx
 28139 000141F6 BE00000000              	mov rsi, 0
 28140                                  .L_lambda_simple_params_loop_0453:	; copy params
 28141 000141FB 4883FE00                	cmp rsi, 0
 28142 000141FF 740E                    	je .L_lambda_simple_params_end_0453
 28143 00014201 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 28144 00014206 488914F3                	mov qword [rbx + 8 * rsi], rdx
 28145 0001420A 48FFC6                  	inc rsi
 28146 0001420D EBEC                    	jmp .L_lambda_simple_params_loop_0453
 28147                                  .L_lambda_simple_params_end_0453:
 28148 0001420F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 28149 00014212 4889C3                  	mov rbx, rax
 28150 00014215 58                      	pop rax
 28151 00014216 C60004                  	mov byte [rax], T_closure
 28152 00014219 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 28153 0001421D 48C74009[2A420100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0453
 28154 00014225 E94A040000              	jmp .L_lambda_simple_end_0453
 28155                                  .L_lambda_simple_code_0453:	; lambda-simple body
 28156 0001422A 48837C241002            	cmp qword [rsp + 8 * 2], 2
 28157 00014230 740B                    	je .L_lambda_simple_arity_check_ok_0453
 28158 00014232 FF742410                	push qword [rsp + 8 * 2]
 28159 00014236 6A02                    	push 2
 28160 00014238 E9620F0000              	jmp L_error_incorrect_arity_simple
 28161                                  .L_lambda_simple_arity_check_ok_0453:
 28162 0001423D C8000000                	enter 0, 0
 28163                                  	; preparing a tail-call
 28164                                  	; preparing a non-tail-call
 28165 00014241 488B4520                	mov rax, PARAM(0)	; param n
 28166 00014245 50                      	push rax
 28167 00014246 6A01                    	push 1	; arg count
 28168 00014248 488B0425[B41A0000]      	mov rax, qword [free_var_118]	; free var make-string
 28169 00014250 803805                  	cmp byte [rax], T_undefined
 28170 00014253 0F84600E0000            	je L_error_fvar_undefined
 28171 00014259 803804                  	cmp byte [rax], T_closure
 28172 0001425C 0F85DB0E0000            	jne L_error_non_closure
 28173 00014262 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28174 00014265 FF5009                  	call SOB_CLOSURE_CODE(rax)
 28175 00014268 50                      	push rax
 28176 00014269 6A01                    	push 1	; arg count
 28177 0001426B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 28178 00014270 E8710F0000              	call malloc
 28179 00014275 50                      	push rax
 28180 00014276 BF10000000              	mov rdi, 8 * 2	; new rib
 28181 0001427B E8660F0000              	call malloc
 28182 00014280 50                      	push rax
 28183 00014281 BF10000000              	mov rdi, 8 * 2	; extended env
 28184 00014286 E85B0F0000              	call malloc
 28185 0001428B 488B7D10                	mov rdi, ENV
 28186 0001428F BE00000000              	mov rsi, 0
 28187 00014294 BA01000000              	mov rdx, 1
 28188                                  .L_lambda_simple_env_loop_0454:	; ext_env[i + 1] <-- env[i]
 28189 00014299 4883FE01                	cmp rsi, 1
 28190 0001429D 7410                    	je .L_lambda_simple_env_end_0454
 28191 0001429F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 28192 000142A3 48890CD0                	mov qword [rax + 8 * rdx], rcx
 28193 000142A7 48FFC6                  	inc rsi
 28194 000142AA 48FFC2                  	inc rdx
 28195 000142AD EBEA                    	jmp .L_lambda_simple_env_loop_0454
 28196                                  .L_lambda_simple_env_end_0454:
 28197 000142AF 5B                      	pop rbx
 28198 000142B0 BE00000000              	mov rsi, 0
 28199                                  .L_lambda_simple_params_loop_0454:	; copy params
 28200 000142B5 4883FE02                	cmp rsi, 2
 28201 000142B9 740E                    	je .L_lambda_simple_params_end_0454
 28202 000142BB 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 28203 000142C0 488914F3                	mov qword [rbx + 8 * rsi], rdx
 28204 000142C4 48FFC6                  	inc rsi
 28205 000142C7 EBEC                    	jmp .L_lambda_simple_params_loop_0454
 28206                                  .L_lambda_simple_params_end_0454:
 28207 000142C9 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 28208 000142CC 4889C3                  	mov rbx, rax
 28209 000142CF 58                      	pop rax
 28210 000142D0 C60004                  	mov byte [rax], T_closure
 28211 000142D3 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 28212 000142D7 48C74009[E4420100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0454
 28213 000142DF E947030000              	jmp .L_lambda_simple_end_0454
 28214                                  .L_lambda_simple_code_0454:	; lambda-simple body
 28215 000142E4 48837C241001            	cmp qword [rsp + 8 * 2], 1
 28216 000142EA 740B                    	je .L_lambda_simple_arity_check_ok_0454
 28217 000142EC FF742410                	push qword [rsp + 8 * 2]
 28218 000142F0 6A01                    	push 1
 28219 000142F2 E9A80E0000              	jmp L_error_incorrect_arity_simple
 28220                                  .L_lambda_simple_arity_check_ok_0454:
 28221 000142F7 C8000000                	enter 0, 0
 28222                                  	; preparing a tail-call
 28223 000142FB 48B8-                   	mov rax, L_constants + 2335
 28223 000142FD [1F09000000000000] 
 28224 00014305 50                      	push rax
 28225 00014306 6A01                    	push 1	; arg count
 28226 00014308 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 28227 0001430D E8D40E0000              	call malloc
 28228 00014312 50                      	push rax
 28229 00014313 BF08000000              	mov rdi, 8 * 1	; new rib
 28230 00014318 E8C90E0000              	call malloc
 28231 0001431D 50                      	push rax
 28232 0001431E BF18000000              	mov rdi, 8 * 3	; extended env
 28233 00014323 E8BE0E0000              	call malloc
 28234 00014328 488B7D10                	mov rdi, ENV
 28235 0001432C BE00000000              	mov rsi, 0
 28236 00014331 BA01000000              	mov rdx, 1
 28237                                  .L_lambda_simple_env_loop_0455:	; ext_env[i + 1] <-- env[i]
 28238 00014336 4883FE02                	cmp rsi, 2
 28239 0001433A 7410                    	je .L_lambda_simple_env_end_0455
 28240 0001433C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 28241 00014340 48890CD0                	mov qword [rax + 8 * rdx], rcx
 28242 00014344 48FFC6                  	inc rsi
 28243 00014347 48FFC2                  	inc rdx
 28244 0001434A EBEA                    	jmp .L_lambda_simple_env_loop_0455
 28245                                  .L_lambda_simple_env_end_0455:
 28246 0001434C 5B                      	pop rbx
 28247 0001434D BE00000000              	mov rsi, 0
 28248                                  .L_lambda_simple_params_loop_0455:	; copy params
 28249 00014352 4883FE01                	cmp rsi, 1
 28250 00014356 740E                    	je .L_lambda_simple_params_end_0455
 28251 00014358 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 28252 0001435D 488914F3                	mov qword [rbx + 8 * rsi], rdx
 28253 00014361 48FFC6                  	inc rsi
 28254 00014364 EBEC                    	jmp .L_lambda_simple_params_loop_0455
 28255                                  .L_lambda_simple_params_end_0455:
 28256 00014366 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 28257 00014369 4889C3                  	mov rbx, rax
 28258 0001436C 58                      	pop rax
 28259 0001436D C60004                  	mov byte [rax], T_closure
 28260 00014370 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 28261 00014374 48C74009[81430100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0455
 28262 0001437C E961020000              	jmp .L_lambda_simple_end_0455
 28263                                  .L_lambda_simple_code_0455:	; lambda-simple body
 28264 00014381 48837C241001            	cmp qword [rsp + 8 * 2], 1
 28265 00014387 740B                    	je .L_lambda_simple_arity_check_ok_0455
 28266 00014389 FF742410                	push qword [rsp + 8 * 2]
 28267 0001438D 6A01                    	push 1
 28268 0001438F E90B0E0000              	jmp L_error_incorrect_arity_simple
 28269                                  .L_lambda_simple_arity_check_ok_0455:
 28270 00014394 C8000000                	enter 0, 0
 28271                                  
 28272 00014398 BF08000000              	mov rdi, 8
 28273 0001439D E8440E0000              	call malloc
 28274 000143A2 488B5D20                	mov rbx, PARAM(0)	; param run
 28275 000143A6 488918                  	mov [rax], rbx	; box run
 28276 000143A9 48894520                	mov PARAM(0), rax	; replace param with box
 28277 000143AD 48B8-                   	mov rax, sob_void
 28277 000143AF [0000000000000000] 
 28278                                  
 28279 000143B7 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 28280 000143BC E8250E0000              	call malloc
 28281 000143C1 50                      	push rax
 28282 000143C2 BF08000000              	mov rdi, 8 * 1	; new rib
 28283 000143C7 E81A0E0000              	call malloc
 28284 000143CC 50                      	push rax
 28285 000143CD BF20000000              	mov rdi, 8 * 4	; extended env
 28286 000143D2 E80F0E0000              	call malloc
 28287 000143D7 488B7D10                	mov rdi, ENV
 28288 000143DB BE00000000              	mov rsi, 0
 28289 000143E0 BA01000000              	mov rdx, 1
 28290                                  .L_lambda_simple_env_loop_0456:	; ext_env[i + 1] <-- env[i]
 28291 000143E5 4883FE03                	cmp rsi, 3
 28292 000143E9 7410                    	je .L_lambda_simple_env_end_0456
 28293 000143EB 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 28294 000143EF 48890CD0                	mov qword [rax + 8 * rdx], rcx
 28295 000143F3 48FFC6                  	inc rsi
 28296 000143F6 48FFC2                  	inc rdx
 28297 000143F9 EBEA                    	jmp .L_lambda_simple_env_loop_0456
 28298                                  .L_lambda_simple_env_end_0456:
 28299 000143FB 5B                      	pop rbx
 28300 000143FC BE00000000              	mov rsi, 0
 28301                                  .L_lambda_simple_params_loop_0456:	; copy params
 28302 00014401 4883FE01                	cmp rsi, 1
 28303 00014405 740E                    	je .L_lambda_simple_params_end_0456
 28304 00014407 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 28305 0001440C 488914F3                	mov qword [rbx + 8 * rsi], rdx
 28306 00014410 48FFC6                  	inc rsi
 28307 00014413 EBEC                    	jmp .L_lambda_simple_params_loop_0456
 28308                                  .L_lambda_simple_params_end_0456:
 28309 00014415 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 28310 00014418 4889C3                  	mov rbx, rax
 28311 0001441B 58                      	pop rax
 28312 0001441C C60004                  	mov byte [rax], T_closure
 28313 0001441F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 28314 00014423 48C74009[30440100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0456
 28315 0001442B E944010000              	jmp .L_lambda_simple_end_0456
 28316                                  .L_lambda_simple_code_0456:	; lambda-simple body
 28317 00014430 48837C241001            	cmp qword [rsp + 8 * 2], 1
 28318 00014436 740B                    	je .L_lambda_simple_arity_check_ok_0456
 28319 00014438 FF742410                	push qword [rsp + 8 * 2]
 28320 0001443C 6A01                    	push 1
 28321 0001443E E95C0D0000              	jmp L_error_incorrect_arity_simple
 28322                                  .L_lambda_simple_arity_check_ok_0456:
 28323 00014443 C8000000                	enter 0, 0
 28324                                  	; preparing a non-tail-call
 28325 00014447 488B4510                	mov rax, ENV
 28326 0001444B 488B4010                	mov rax, qword [rax + 8 * 2]
 28327 0001444F 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var n
 28328 00014452 50                      	push rax
 28329 00014453 488B4520                	mov rax, PARAM(0)	; param i
 28330 00014457 50                      	push rax
 28331 00014458 6A02                    	push 2	; arg count
 28332 0001445A 488B0425[22130000]      	mov rax, qword [free_var_4]	; free var <
 28333 00014462 803805                  	cmp byte [rax], T_undefined
 28334 00014465 0F844E0C0000            	je L_error_fvar_undefined
 28335 0001446B 803804                  	cmp byte [rax], T_closure
 28336 0001446E 0F85C90C0000            	jne L_error_non_closure
 28337 00014474 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28338 00014477 FF5009                  	call SOB_CLOSURE_CODE(rax)
 28339 0001447A 483D[02000000]          	cmp rax, sob_boolean_false
 28340 00014480 0F84DF000000            	je .L_if_else_032e
 28341                                  	; preparing a non-tail-call
 28342                                  	; preparing a non-tail-call
 28343 00014486 488B4520                	mov rax, PARAM(0)	; param i
 28344 0001448A 50                      	push rax
 28345 0001448B 6A01                    	push 1	; arg count
 28346 0001448D 488B4510                	mov rax, ENV
 28347 00014491 488B4010                	mov rax, qword [rax + 8 * 2]
 28348 00014495 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var thunk
 28349 00014499 803804                  	cmp byte [rax], T_closure
 28350 0001449C 0F859B0C0000            	jne L_error_non_closure
 28351 000144A2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28352 000144A5 FF5009                  	call SOB_CLOSURE_CODE(rax)
 28353 000144A8 50                      	push rax
 28354 000144A9 488B4520                	mov rax, PARAM(0)	; param i
 28355 000144AD 50                      	push rax
 28356 000144AE 488B4510                	mov rax, ENV
 28357 000144B2 488B4008                	mov rax, qword [rax + 8 * 1]
 28358 000144B6 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str
 28359 000144B9 50                      	push rax
 28360 000144BA 6A03                    	push 3	; arg count
 28361 000144BC 488B0425[5C1D0000]      	mov rax, qword [free_var_158]	; free var string-set!
 28362 000144C4 803805                  	cmp byte [rax], T_undefined
 28363 000144C7 0F84EC0B0000            	je L_error_fvar_undefined
 28364 000144CD 803804                  	cmp byte [rax], T_closure
 28365 000144D0 0F85670C0000            	jne L_error_non_closure
 28366 000144D6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28367 000144D9 FF5009                  	call SOB_CLOSURE_CODE(rax)
 28368                                  
 28369                                  	; preparing a tail-call
 28370                                  	; preparing a non-tail-call
 28371 000144DC 48B8-                   	mov rax, L_constants + 2810
 28371 000144DE [FA0A000000000000] 
 28372 000144E6 50                      	push rax
 28373 000144E7 488B4520                	mov rax, PARAM(0)	; param i
 28374 000144EB 50                      	push rax
 28375 000144EC 6A02                    	push 2	; arg count
 28376 000144EE 488B0425[EF120000]      	mov rax, qword [free_var_1]	; free var +
 28377 000144F6 803805                  	cmp byte [rax], T_undefined
 28378 000144F9 0F84BA0B0000            	je L_error_fvar_undefined
 28379 000144FF 803804                  	cmp byte [rax], T_closure
 28380 00014502 0F85350C0000            	jne L_error_non_closure
 28381 00014508 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28382 0001450B FF5009                  	call SOB_CLOSURE_CODE(rax)
 28383 0001450E 50                      	push rax
 28384 0001450F 6A01                    	push 1	; arg count
 28385 00014511 488B4510                	mov rax, ENV
 28386 00014515 488B00                  	mov rax, qword [rax + 8 * 0]
 28387 00014518 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 28388 0001451B 488B00                  	mov rax, qword [rax]
 28389 0001451E 803804                  	cmp byte [rax], T_closure
 28390 00014521 0F85160C0000            	jne L_error_non_closure
 28391 00014527 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28392                                  
 28393                                  	; recycling the current frame
 28394 0001452A FF7508                  	push qword [rbp + 8 * 1]	; old return address
 28395 0001452D FF7500                  	push qword [rbp]	; old frame-pointer
 28396 00014530 B905000000              	mov rcx, 5
 28397 00014535 488B5D18                	mov rbx, COUNT
 28398 00014539 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 28399 0001453E 488D55F8                	lea rdx, [rbp - 8]
 28400                                  .L_tc_recycle_frame_loop_05a3:
 28401 00014542 4883F900                	cmp rcx, 0
 28402 00014546 7413                    	je .L_tc_recycle_frame_done_05a3
 28403 00014548 488B32                  	mov rsi, qword [rdx]
 28404 0001454B 488933                  	mov qword [rbx], rsi
 28405 0001454E 48FFC9                  	dec rcx
 28406 00014551 4883EB08                	sub rbx, 8
 28407 00014555 4883EA08                	sub rdx, 8
 28408 00014559 EBE7                    	jmp .L_tc_recycle_frame_loop_05a3
 28409                                  .L_tc_recycle_frame_done_05a3:
 28410 0001455B 488D6308                	lea rsp, [rbx + 8]
 28411 0001455F 5D                      	pop rbp
 28412 00014560 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 28413 00014563 EB0B                    	jmp .L_if_end_032e
 28414                                  .L_if_else_032e:
 28415 00014565 488B4510                	mov rax, ENV
 28416 00014569 488B4008                	mov rax, qword [rax + 8 * 1]
 28417 0001456D 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str
 28418                                  .L_if_end_032e:
 28419 00014570 C9                      	leave
 28420 00014571 C21800                  	ret AND_KILL_FRAME(1)
 28421                                  .L_lambda_simple_end_0456:	; new closure is in rax
 28422                                  
 28423 00014574 50                      	push rax
 28424 00014575 488B4520                	mov rax, PARAM(0)	; param run
 28425                                  
 28426 00014579 8F00                    	pop qword[rax]
 28427 0001457B 48B8-                   	mov rax, sob_void
 28427 0001457D [0000000000000000] 
 28428                                  
 28429                                  	; preparing a tail-call
 28430 00014585 48B8-                   	mov rax, L_constants + 2558
 28430 00014587 [FE09000000000000] 
 28431 0001458F 50                      	push rax
 28432 00014590 6A01                    	push 1	; arg count
 28433 00014592 488B4520                	mov rax, PARAM(0)	; param run
 28434 00014596 488B00                  	mov rax, qword [rax]
 28435 00014599 803804                  	cmp byte [rax], T_closure
 28436 0001459C 0F859B0B0000            	jne L_error_non_closure
 28437 000145A2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28438                                  
 28439                                  	; recycling the current frame
 28440 000145A5 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 28441 000145A8 FF7500                  	push qword [rbp]	; old frame-pointer
 28442 000145AB B905000000              	mov rcx, 5
 28443 000145B0 488B5D18                	mov rbx, COUNT
 28444 000145B4 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 28445 000145B9 488D55F8                	lea rdx, [rbp - 8]
 28446                                  .L_tc_recycle_frame_loop_05a4:
 28447 000145BD 4883F900                	cmp rcx, 0
 28448 000145C1 7413                    	je .L_tc_recycle_frame_done_05a4
 28449 000145C3 488B32                  	mov rsi, qword [rdx]
 28450 000145C6 488933                  	mov qword [rbx], rsi
 28451 000145C9 48FFC9                  	dec rcx
 28452 000145CC 4883EB08                	sub rbx, 8
 28453 000145D0 4883EA08                	sub rdx, 8
 28454 000145D4 EBE7                    	jmp .L_tc_recycle_frame_loop_05a4
 28455                                  .L_tc_recycle_frame_done_05a4:
 28456 000145D6 488D6308                	lea rsp, [rbx + 8]
 28457 000145DA 5D                      	pop rbp
 28458 000145DB FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 28459 000145DE C9                      	leave
 28460 000145DF C21800                  	ret AND_KILL_FRAME(1)
 28461                                  .L_lambda_simple_end_0455:	; new closure is in rax
 28462 000145E2 803804                  	cmp byte [rax], T_closure
 28463 000145E5 0F85520B0000            	jne L_error_non_closure
 28464 000145EB FF7001                  	push SOB_CLOSURE_ENV(rax)
 28465                                  
 28466                                  	; recycling the current frame
 28467 000145EE FF7508                  	push qword [rbp + 8 * 1]	; old return address
 28468 000145F1 FF7500                  	push qword [rbp]	; old frame-pointer
 28469 000145F4 B905000000              	mov rcx, 5
 28470 000145F9 488B5D18                	mov rbx, COUNT
 28471 000145FD 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 28472 00014602 488D55F8                	lea rdx, [rbp - 8]
 28473                                  .L_tc_recycle_frame_loop_05a5:
 28474 00014606 4883F900                	cmp rcx, 0
 28475 0001460A 7413                    	je .L_tc_recycle_frame_done_05a5
 28476 0001460C 488B32                  	mov rsi, qword [rdx]
 28477 0001460F 488933                  	mov qword [rbx], rsi
 28478 00014612 48FFC9                  	dec rcx
 28479 00014615 4883EB08                	sub rbx, 8
 28480 00014619 4883EA08                	sub rdx, 8
 28481 0001461D EBE7                    	jmp .L_tc_recycle_frame_loop_05a5
 28482                                  .L_tc_recycle_frame_done_05a5:
 28483 0001461F 488D6308                	lea rsp, [rbx + 8]
 28484 00014623 5D                      	pop rbp
 28485 00014624 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 28486 00014627 C9                      	leave
 28487 00014628 C21800                  	ret AND_KILL_FRAME(1)
 28488                                  .L_lambda_simple_end_0454:	; new closure is in rax
 28489 0001462B 803804                  	cmp byte [rax], T_closure
 28490 0001462E 0F85090B0000            	jne L_error_non_closure
 28491 00014634 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28492                                  
 28493                                  	; recycling the current frame
 28494 00014637 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 28495 0001463A FF7500                  	push qword [rbp]	; old frame-pointer
 28496 0001463D B905000000              	mov rcx, 5
 28497 00014642 488B5D18                	mov rbx, COUNT
 28498 00014646 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 28499 0001464B 488D55F8                	lea rdx, [rbp - 8]
 28500                                  .L_tc_recycle_frame_loop_05a6:
 28501 0001464F 4883F900                	cmp rcx, 0
 28502 00014653 7413                    	je .L_tc_recycle_frame_done_05a6
 28503 00014655 488B32                  	mov rsi, qword [rdx]
 28504 00014658 488933                  	mov qword [rbx], rsi
 28505 0001465B 48FFC9                  	dec rcx
 28506 0001465E 4883EB08                	sub rbx, 8
 28507 00014662 4883EA08                	sub rdx, 8
 28508 00014666 EBE7                    	jmp .L_tc_recycle_frame_loop_05a6
 28509                                  .L_tc_recycle_frame_done_05a6:
 28510 00014668 488D6308                	lea rsp, [rbx + 8]
 28511 0001466C 5D                      	pop rbp
 28512 0001466D FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 28513 00014670 C9                      	leave
 28514 00014671 C22000                  	ret AND_KILL_FRAME(2)
 28515                                  .L_lambda_simple_end_0453:	; new closure is in rax
 28516 00014674 48890425[C51A0000]      	mov qword [free_var_119], rax
 28517 0001467C 48B8-                   	mov rax, sob_void
 28517 0001467E [0000000000000000] 
 28518                                  
 28519 00014686 4889C7                  	mov rdi, rax
 28520 00014689 E8AD0D0000              	call print_sexpr_if_not_void
 28521                                  
 28522 0001468E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 28523 00014693 E84E0B0000              	call malloc
 28524 00014698 50                      	push rax
 28525 00014699 BF00000000              	mov rdi, 8 * 0	; new rib
 28526 0001469E E8430B0000              	call malloc
 28527 000146A3 50                      	push rax
 28528 000146A4 BF08000000              	mov rdi, 8 * 1	; extended env
 28529 000146A9 E8380B0000              	call malloc
 28530 000146AE 488B7D10                	mov rdi, ENV
 28531 000146B2 BE00000000              	mov rsi, 0
 28532 000146B7 BA01000000              	mov rdx, 1
 28533                                  .L_lambda_simple_env_loop_0457:	; ext_env[i + 1] <-- env[i]
 28534 000146BC 4883FE00                	cmp rsi, 0
 28535 000146C0 7410                    	je .L_lambda_simple_env_end_0457
 28536 000146C2 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 28537 000146C6 48890CD0                	mov qword [rax + 8 * rdx], rcx
 28538 000146CA 48FFC6                  	inc rsi
 28539 000146CD 48FFC2                  	inc rdx
 28540 000146D0 EBEA                    	jmp .L_lambda_simple_env_loop_0457
 28541                                  .L_lambda_simple_env_end_0457:
 28542 000146D2 5B                      	pop rbx
 28543 000146D3 BE00000000              	mov rsi, 0
 28544                                  .L_lambda_simple_params_loop_0457:	; copy params
 28545 000146D8 4883FE00                	cmp rsi, 0
 28546 000146DC 740E                    	je .L_lambda_simple_params_end_0457
 28547 000146DE 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 28548 000146E3 488914F3                	mov qword [rbx + 8 * rsi], rdx
 28549 000146E7 48FFC6                  	inc rsi
 28550 000146EA EBEC                    	jmp .L_lambda_simple_params_loop_0457
 28551                                  .L_lambda_simple_params_end_0457:
 28552 000146EC 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 28553 000146EF 4889C3                  	mov rbx, rax
 28554 000146F2 58                      	pop rax
 28555 000146F3 C60004                  	mov byte [rax], T_closure
 28556 000146F6 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 28557 000146FA 48C74009[07470100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0457
 28558 00014702 E94A040000              	jmp .L_lambda_simple_end_0457
 28559                                  .L_lambda_simple_code_0457:	; lambda-simple body
 28560 00014707 48837C241002            	cmp qword [rsp + 8 * 2], 2
 28561 0001470D 740B                    	je .L_lambda_simple_arity_check_ok_0457
 28562 0001470F FF742410                	push qword [rsp + 8 * 2]
 28563 00014713 6A02                    	push 2
 28564 00014715 E9850A0000              	jmp L_error_incorrect_arity_simple
 28565                                  .L_lambda_simple_arity_check_ok_0457:
 28566 0001471A C8000000                	enter 0, 0
 28567                                  	; preparing a tail-call
 28568                                  	; preparing a non-tail-call
 28569 0001471E 488B4520                	mov rax, PARAM(0)	; param n
 28570 00014722 50                      	push rax
 28571 00014723 6A01                    	push 1	; arg count
 28572 00014725 488B0425[D61A0000]      	mov rax, qword [free_var_120]	; free var make-vector
 28573 0001472D 803805                  	cmp byte [rax], T_undefined
 28574 00014730 0F8483090000            	je L_error_fvar_undefined
 28575 00014736 803804                  	cmp byte [rax], T_closure
 28576 00014739 0F85FE090000            	jne L_error_non_closure
 28577 0001473F FF7001                  	push SOB_CLOSURE_ENV(rax)
 28578 00014742 FF5009                  	call SOB_CLOSURE_CODE(rax)
 28579 00014745 50                      	push rax
 28580 00014746 6A01                    	push 1	; arg count
 28581 00014748 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 28582 0001474D E8940A0000              	call malloc
 28583 00014752 50                      	push rax
 28584 00014753 BF10000000              	mov rdi, 8 * 2	; new rib
 28585 00014758 E8890A0000              	call malloc
 28586 0001475D 50                      	push rax
 28587 0001475E BF10000000              	mov rdi, 8 * 2	; extended env
 28588 00014763 E87E0A0000              	call malloc
 28589 00014768 488B7D10                	mov rdi, ENV
 28590 0001476C BE00000000              	mov rsi, 0
 28591 00014771 BA01000000              	mov rdx, 1
 28592                                  .L_lambda_simple_env_loop_0458:	; ext_env[i + 1] <-- env[i]
 28593 00014776 4883FE01                	cmp rsi, 1
 28594 0001477A 7410                    	je .L_lambda_simple_env_end_0458
 28595 0001477C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 28596 00014780 48890CD0                	mov qword [rax + 8 * rdx], rcx
 28597 00014784 48FFC6                  	inc rsi
 28598 00014787 48FFC2                  	inc rdx
 28599 0001478A EBEA                    	jmp .L_lambda_simple_env_loop_0458
 28600                                  .L_lambda_simple_env_end_0458:
 28601 0001478C 5B                      	pop rbx
 28602 0001478D BE00000000              	mov rsi, 0
 28603                                  .L_lambda_simple_params_loop_0458:	; copy params
 28604 00014792 4883FE02                	cmp rsi, 2
 28605 00014796 740E                    	je .L_lambda_simple_params_end_0458
 28606 00014798 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 28607 0001479D 488914F3                	mov qword [rbx + 8 * rsi], rdx
 28608 000147A1 48FFC6                  	inc rsi
 28609 000147A4 EBEC                    	jmp .L_lambda_simple_params_loop_0458
 28610                                  .L_lambda_simple_params_end_0458:
 28611 000147A6 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 28612 000147A9 4889C3                  	mov rbx, rax
 28613 000147AC 58                      	pop rax
 28614 000147AD C60004                  	mov byte [rax], T_closure
 28615 000147B0 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 28616 000147B4 48C74009[C1470100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0458
 28617 000147BC E947030000              	jmp .L_lambda_simple_end_0458
 28618                                  .L_lambda_simple_code_0458:	; lambda-simple body
 28619 000147C1 48837C241001            	cmp qword [rsp + 8 * 2], 1
 28620 000147C7 740B                    	je .L_lambda_simple_arity_check_ok_0458
 28621 000147C9 FF742410                	push qword [rsp + 8 * 2]
 28622 000147CD 6A01                    	push 1
 28623 000147CF E9CB090000              	jmp L_error_incorrect_arity_simple
 28624                                  .L_lambda_simple_arity_check_ok_0458:
 28625 000147D4 C8000000                	enter 0, 0
 28626                                  	; preparing a tail-call
 28627 000147D8 48B8-                   	mov rax, L_constants + 2335
 28627 000147DA [1F09000000000000] 
 28628 000147E2 50                      	push rax
 28629 000147E3 6A01                    	push 1	; arg count
 28630 000147E5 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 28631 000147EA E8F7090000              	call malloc
 28632 000147EF 50                      	push rax
 28633 000147F0 BF08000000              	mov rdi, 8 * 1	; new rib
 28634 000147F5 E8EC090000              	call malloc
 28635 000147FA 50                      	push rax
 28636 000147FB BF18000000              	mov rdi, 8 * 3	; extended env
 28637 00014800 E8E1090000              	call malloc
 28638 00014805 488B7D10                	mov rdi, ENV
 28639 00014809 BE00000000              	mov rsi, 0
 28640 0001480E BA01000000              	mov rdx, 1
 28641                                  .L_lambda_simple_env_loop_0459:	; ext_env[i + 1] <-- env[i]
 28642 00014813 4883FE02                	cmp rsi, 2
 28643 00014817 7410                    	je .L_lambda_simple_env_end_0459
 28644 00014819 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 28645 0001481D 48890CD0                	mov qword [rax + 8 * rdx], rcx
 28646 00014821 48FFC6                  	inc rsi
 28647 00014824 48FFC2                  	inc rdx
 28648 00014827 EBEA                    	jmp .L_lambda_simple_env_loop_0459
 28649                                  .L_lambda_simple_env_end_0459:
 28650 00014829 5B                      	pop rbx
 28651 0001482A BE00000000              	mov rsi, 0
 28652                                  .L_lambda_simple_params_loop_0459:	; copy params
 28653 0001482F 4883FE01                	cmp rsi, 1
 28654 00014833 740E                    	je .L_lambda_simple_params_end_0459
 28655 00014835 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 28656 0001483A 488914F3                	mov qword [rbx + 8 * rsi], rdx
 28657 0001483E 48FFC6                  	inc rsi
 28658 00014841 EBEC                    	jmp .L_lambda_simple_params_loop_0459
 28659                                  .L_lambda_simple_params_end_0459:
 28660 00014843 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 28661 00014846 4889C3                  	mov rbx, rax
 28662 00014849 58                      	pop rax
 28663 0001484A C60004                  	mov byte [rax], T_closure
 28664 0001484D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 28665 00014851 48C74009[5E480100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0459
 28666 00014859 E961020000              	jmp .L_lambda_simple_end_0459
 28667                                  .L_lambda_simple_code_0459:	; lambda-simple body
 28668 0001485E 48837C241001            	cmp qword [rsp + 8 * 2], 1
 28669 00014864 740B                    	je .L_lambda_simple_arity_check_ok_0459
 28670 00014866 FF742410                	push qword [rsp + 8 * 2]
 28671 0001486A 6A01                    	push 1
 28672 0001486C E92E090000              	jmp L_error_incorrect_arity_simple
 28673                                  .L_lambda_simple_arity_check_ok_0459:
 28674 00014871 C8000000                	enter 0, 0
 28675                                  
 28676 00014875 BF08000000              	mov rdi, 8
 28677 0001487A E867090000              	call malloc
 28678 0001487F 488B5D20                	mov rbx, PARAM(0)	; param run
 28679 00014883 488918                  	mov [rax], rbx	; box run
 28680 00014886 48894520                	mov PARAM(0), rax	; replace param with box
 28681 0001488A 48B8-                   	mov rax, sob_void
 28681 0001488C [0000000000000000] 
 28682                                  
 28683 00014894 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 28684 00014899 E848090000              	call malloc
 28685 0001489E 50                      	push rax
 28686 0001489F BF08000000              	mov rdi, 8 * 1	; new rib
 28687 000148A4 E83D090000              	call malloc
 28688 000148A9 50                      	push rax
 28689 000148AA BF20000000              	mov rdi, 8 * 4	; extended env
 28690 000148AF E832090000              	call malloc
 28691 000148B4 488B7D10                	mov rdi, ENV
 28692 000148B8 BE00000000              	mov rsi, 0
 28693 000148BD BA01000000              	mov rdx, 1
 28694                                  .L_lambda_simple_env_loop_045a:	; ext_env[i + 1] <-- env[i]
 28695 000148C2 4883FE03                	cmp rsi, 3
 28696 000148C6 7410                    	je .L_lambda_simple_env_end_045a
 28697 000148C8 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 28698 000148CC 48890CD0                	mov qword [rax + 8 * rdx], rcx
 28699 000148D0 48FFC6                  	inc rsi
 28700 000148D3 48FFC2                  	inc rdx
 28701 000148D6 EBEA                    	jmp .L_lambda_simple_env_loop_045a
 28702                                  .L_lambda_simple_env_end_045a:
 28703 000148D8 5B                      	pop rbx
 28704 000148D9 BE00000000              	mov rsi, 0
 28705                                  .L_lambda_simple_params_loop_045a:	; copy params
 28706 000148DE 4883FE01                	cmp rsi, 1
 28707 000148E2 740E                    	je .L_lambda_simple_params_end_045a
 28708 000148E4 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 28709 000148E9 488914F3                	mov qword [rbx + 8 * rsi], rdx
 28710 000148ED 48FFC6                  	inc rsi
 28711 000148F0 EBEC                    	jmp .L_lambda_simple_params_loop_045a
 28712                                  .L_lambda_simple_params_end_045a:
 28713 000148F2 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 28714 000148F5 4889C3                  	mov rbx, rax
 28715 000148F8 58                      	pop rax
 28716 000148F9 C60004                  	mov byte [rax], T_closure
 28717 000148FC 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 28718 00014900 48C74009[0D490100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_045a
 28719 00014908 E944010000              	jmp .L_lambda_simple_end_045a
 28720                                  .L_lambda_simple_code_045a:	; lambda-simple body
 28721 0001490D 48837C241001            	cmp qword [rsp + 8 * 2], 1
 28722 00014913 740B                    	je .L_lambda_simple_arity_check_ok_045a
 28723 00014915 FF742410                	push qword [rsp + 8 * 2]
 28724 00014919 6A01                    	push 1
 28725 0001491B E97F080000              	jmp L_error_incorrect_arity_simple
 28726                                  .L_lambda_simple_arity_check_ok_045a:
 28727 00014920 C8000000                	enter 0, 0
 28728                                  	; preparing a non-tail-call
 28729 00014924 488B4510                	mov rax, ENV
 28730 00014928 488B4010                	mov rax, qword [rax + 8 * 2]
 28731 0001492C 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var n
 28732 0001492F 50                      	push rax
 28733 00014930 488B4520                	mov rax, PARAM(0)	; param i
 28734 00014934 50                      	push rax
 28735 00014935 6A02                    	push 2	; arg count
 28736 00014937 488B0425[22130000]      	mov rax, qword [free_var_4]	; free var <
 28737 0001493F 803805                  	cmp byte [rax], T_undefined
 28738 00014942 0F8471070000            	je L_error_fvar_undefined
 28739 00014948 803804                  	cmp byte [rax], T_closure
 28740 0001494B 0F85EC070000            	jne L_error_non_closure
 28741 00014951 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28742 00014954 FF5009                  	call SOB_CLOSURE_CODE(rax)
 28743 00014957 483D[02000000]          	cmp rax, sob_boolean_false
 28744 0001495D 0F84DF000000            	je .L_if_else_032f
 28745                                  	; preparing a non-tail-call
 28746                                  	; preparing a non-tail-call
 28747 00014963 488B4520                	mov rax, PARAM(0)	; param i
 28748 00014967 50                      	push rax
 28749 00014968 6A01                    	push 1	; arg count
 28750 0001496A 488B4510                	mov rax, ENV
 28751 0001496E 488B4010                	mov rax, qword [rax + 8 * 2]
 28752 00014972 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var thunk
 28753 00014976 803804                  	cmp byte [rax], T_closure
 28754 00014979 0F85BE070000            	jne L_error_non_closure
 28755 0001497F FF7001                  	push SOB_CLOSURE_ENV(rax)
 28756 00014982 FF5009                  	call SOB_CLOSURE_CODE(rax)
 28757 00014985 50                      	push rax
 28758 00014986 488B4520                	mov rax, PARAM(0)	; param i
 28759 0001498A 50                      	push rax
 28760 0001498B 488B4510                	mov rax, ENV
 28761 0001498F 488B4008                	mov rax, qword [rax + 8 * 1]
 28762 00014993 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var vec
 28763 00014996 50                      	push rax
 28764 00014997 6A03                    	push 3	; arg count
 28765 00014999 488B0425[8E1E0000]      	mov rax, qword [free_var_176]	; free var vector-set!
 28766 000149A1 803805                  	cmp byte [rax], T_undefined
 28767 000149A4 0F840F070000            	je L_error_fvar_undefined
 28768 000149AA 803804                  	cmp byte [rax], T_closure
 28769 000149AD 0F858A070000            	jne L_error_non_closure
 28770 000149B3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28771 000149B6 FF5009                  	call SOB_CLOSURE_CODE(rax)
 28772                                  
 28773                                  	; preparing a tail-call
 28774                                  	; preparing a non-tail-call
 28775 000149B9 48B8-                   	mov rax, L_constants + 2810
 28775 000149BB [FA0A000000000000] 
 28776 000149C3 50                      	push rax
 28777 000149C4 488B4520                	mov rax, PARAM(0)	; param i
 28778 000149C8 50                      	push rax
 28779 000149C9 6A02                    	push 2	; arg count
 28780 000149CB 488B0425[EF120000]      	mov rax, qword [free_var_1]	; free var +
 28781 000149D3 803805                  	cmp byte [rax], T_undefined
 28782 000149D6 0F84DD060000            	je L_error_fvar_undefined
 28783 000149DC 803804                  	cmp byte [rax], T_closure
 28784 000149DF 0F8558070000            	jne L_error_non_closure
 28785 000149E5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28786 000149E8 FF5009                  	call SOB_CLOSURE_CODE(rax)
 28787 000149EB 50                      	push rax
 28788 000149EC 6A01                    	push 1	; arg count
 28789 000149EE 488B4510                	mov rax, ENV
 28790 000149F2 488B00                  	mov rax, qword [rax + 8 * 0]
 28791 000149F5 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 28792 000149F8 488B00                  	mov rax, qword [rax]
 28793 000149FB 803804                  	cmp byte [rax], T_closure
 28794 000149FE 0F8539070000            	jne L_error_non_closure
 28795 00014A04 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28796                                  
 28797                                  	; recycling the current frame
 28798 00014A07 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 28799 00014A0A FF7500                  	push qword [rbp]	; old frame-pointer
 28800 00014A0D B905000000              	mov rcx, 5
 28801 00014A12 488B5D18                	mov rbx, COUNT
 28802 00014A16 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 28803 00014A1B 488D55F8                	lea rdx, [rbp - 8]
 28804                                  .L_tc_recycle_frame_loop_05a7:
 28805 00014A1F 4883F900                	cmp rcx, 0
 28806 00014A23 7413                    	je .L_tc_recycle_frame_done_05a7
 28807 00014A25 488B32                  	mov rsi, qword [rdx]
 28808 00014A28 488933                  	mov qword [rbx], rsi
 28809 00014A2B 48FFC9                  	dec rcx
 28810 00014A2E 4883EB08                	sub rbx, 8
 28811 00014A32 4883EA08                	sub rdx, 8
 28812 00014A36 EBE7                    	jmp .L_tc_recycle_frame_loop_05a7
 28813                                  .L_tc_recycle_frame_done_05a7:
 28814 00014A38 488D6308                	lea rsp, [rbx + 8]
 28815 00014A3C 5D                      	pop rbp
 28816 00014A3D FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 28817 00014A40 EB0B                    	jmp .L_if_end_032f
 28818                                  .L_if_else_032f:
 28819 00014A42 488B4510                	mov rax, ENV
 28820 00014A46 488B4008                	mov rax, qword [rax + 8 * 1]
 28821 00014A4A 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var vec
 28822                                  .L_if_end_032f:
 28823 00014A4D C9                      	leave
 28824 00014A4E C21800                  	ret AND_KILL_FRAME(1)
 28825                                  .L_lambda_simple_end_045a:	; new closure is in rax
 28826                                  
 28827 00014A51 50                      	push rax
 28828 00014A52 488B4520                	mov rax, PARAM(0)	; param run
 28829                                  
 28830 00014A56 8F00                    	pop qword[rax]
 28831 00014A58 48B8-                   	mov rax, sob_void
 28831 00014A5A [0000000000000000] 
 28832                                  
 28833                                  	; preparing a tail-call
 28834 00014A62 48B8-                   	mov rax, L_constants + 2558
 28834 00014A64 [FE09000000000000] 
 28835 00014A6C 50                      	push rax
 28836 00014A6D 6A01                    	push 1	; arg count
 28837 00014A6F 488B4520                	mov rax, PARAM(0)	; param run
 28838 00014A73 488B00                  	mov rax, qword [rax]
 28839 00014A76 803804                  	cmp byte [rax], T_closure
 28840 00014A79 0F85BE060000            	jne L_error_non_closure
 28841 00014A7F FF7001                  	push SOB_CLOSURE_ENV(rax)
 28842                                  
 28843                                  	; recycling the current frame
 28844 00014A82 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 28845 00014A85 FF7500                  	push qword [rbp]	; old frame-pointer
 28846 00014A88 B905000000              	mov rcx, 5
 28847 00014A8D 488B5D18                	mov rbx, COUNT
 28848 00014A91 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 28849 00014A96 488D55F8                	lea rdx, [rbp - 8]
 28850                                  .L_tc_recycle_frame_loop_05a8:
 28851 00014A9A 4883F900                	cmp rcx, 0
 28852 00014A9E 7413                    	je .L_tc_recycle_frame_done_05a8
 28853 00014AA0 488B32                  	mov rsi, qword [rdx]
 28854 00014AA3 488933                  	mov qword [rbx], rsi
 28855 00014AA6 48FFC9                  	dec rcx
 28856 00014AA9 4883EB08                	sub rbx, 8
 28857 00014AAD 4883EA08                	sub rdx, 8
 28858 00014AB1 EBE7                    	jmp .L_tc_recycle_frame_loop_05a8
 28859                                  .L_tc_recycle_frame_done_05a8:
 28860 00014AB3 488D6308                	lea rsp, [rbx + 8]
 28861 00014AB7 5D                      	pop rbp
 28862 00014AB8 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 28863 00014ABB C9                      	leave
 28864 00014ABC C21800                  	ret AND_KILL_FRAME(1)
 28865                                  .L_lambda_simple_end_0459:	; new closure is in rax
 28866 00014ABF 803804                  	cmp byte [rax], T_closure
 28867 00014AC2 0F8575060000            	jne L_error_non_closure
 28868 00014AC8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28869                                  
 28870                                  	; recycling the current frame
 28871 00014ACB FF7508                  	push qword [rbp + 8 * 1]	; old return address
 28872 00014ACE FF7500                  	push qword [rbp]	; old frame-pointer
 28873 00014AD1 B905000000              	mov rcx, 5
 28874 00014AD6 488B5D18                	mov rbx, COUNT
 28875 00014ADA 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 28876 00014ADF 488D55F8                	lea rdx, [rbp - 8]
 28877                                  .L_tc_recycle_frame_loop_05a9:
 28878 00014AE3 4883F900                	cmp rcx, 0
 28879 00014AE7 7413                    	je .L_tc_recycle_frame_done_05a9
 28880 00014AE9 488B32                  	mov rsi, qword [rdx]
 28881 00014AEC 488933                  	mov qword [rbx], rsi
 28882 00014AEF 48FFC9                  	dec rcx
 28883 00014AF2 4883EB08                	sub rbx, 8
 28884 00014AF6 4883EA08                	sub rdx, 8
 28885 00014AFA EBE7                    	jmp .L_tc_recycle_frame_loop_05a9
 28886                                  .L_tc_recycle_frame_done_05a9:
 28887 00014AFC 488D6308                	lea rsp, [rbx + 8]
 28888 00014B00 5D                      	pop rbp
 28889 00014B01 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 28890 00014B04 C9                      	leave
 28891 00014B05 C21800                  	ret AND_KILL_FRAME(1)
 28892                                  .L_lambda_simple_end_0458:	; new closure is in rax
 28893 00014B08 803804                  	cmp byte [rax], T_closure
 28894 00014B0B 0F852C060000            	jne L_error_non_closure
 28895 00014B11 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28896                                  
 28897                                  	; recycling the current frame
 28898 00014B14 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 28899 00014B17 FF7500                  	push qword [rbp]	; old frame-pointer
 28900 00014B1A B905000000              	mov rcx, 5
 28901 00014B1F 488B5D18                	mov rbx, COUNT
 28902 00014B23 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 28903 00014B28 488D55F8                	lea rdx, [rbp - 8]
 28904                                  .L_tc_recycle_frame_loop_05aa:
 28905 00014B2C 4883F900                	cmp rcx, 0
 28906 00014B30 7413                    	je .L_tc_recycle_frame_done_05aa
 28907 00014B32 488B32                  	mov rsi, qword [rdx]
 28908 00014B35 488933                  	mov qword [rbx], rsi
 28909 00014B38 48FFC9                  	dec rcx
 28910 00014B3B 4883EB08                	sub rbx, 8
 28911 00014B3F 4883EA08                	sub rdx, 8
 28912 00014B43 EBE7                    	jmp .L_tc_recycle_frame_loop_05aa
 28913                                  .L_tc_recycle_frame_done_05aa:
 28914 00014B45 488D6308                	lea rsp, [rbx + 8]
 28915 00014B49 5D                      	pop rbp
 28916 00014B4A FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 28917 00014B4D C9                      	leave
 28918 00014B4E C22000                  	ret AND_KILL_FRAME(2)
 28919                                  .L_lambda_simple_end_0457:	; new closure is in rax
 28920 00014B51 48890425[E71A0000]      	mov qword [free_var_121], rax
 28921 00014B59 48B8-                   	mov rax, sob_void
 28921 00014B5B [0000000000000000] 
 28922                                  
 28923 00014B63 4889C7                  	mov rdi, rax
 28924 00014B66 E8D0080000              	call print_sexpr_if_not_void
 28925                                  
 28926 00014B6B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 28927 00014B70 E871060000              	call malloc
 28928 00014B75 50                      	push rax
 28929 00014B76 BF00000000              	mov rdi, 8 * 0	; new rib
 28930 00014B7B E866060000              	call malloc
 28931 00014B80 50                      	push rax
 28932 00014B81 BF08000000              	mov rdi, 8 * 1	; extended env
 28933 00014B86 E85B060000              	call malloc
 28934 00014B8B 488B7D10                	mov rdi, ENV
 28935 00014B8F BE00000000              	mov rsi, 0
 28936 00014B94 BA01000000              	mov rdx, 1
 28937                                  .L_lambda_simple_env_loop_045b:	; ext_env[i + 1] <-- env[i]
 28938 00014B99 4883FE00                	cmp rsi, 0
 28939 00014B9D 7410                    	je .L_lambda_simple_env_end_045b
 28940 00014B9F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 28941 00014BA3 48890CD0                	mov qword [rax + 8 * rdx], rcx
 28942 00014BA7 48FFC6                  	inc rsi
 28943 00014BAA 48FFC2                  	inc rdx
 28944 00014BAD EBEA                    	jmp .L_lambda_simple_env_loop_045b
 28945                                  .L_lambda_simple_env_end_045b:
 28946 00014BAF 5B                      	pop rbx
 28947 00014BB0 BE00000000              	mov rsi, 0
 28948                                  .L_lambda_simple_params_loop_045b:	; copy params
 28949 00014BB5 4883FE00                	cmp rsi, 0
 28950 00014BB9 740E                    	je .L_lambda_simple_params_end_045b
 28951 00014BBB 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 28952 00014BC0 488914F3                	mov qword [rbx + 8 * rsi], rdx
 28953 00014BC4 48FFC6                  	inc rsi
 28954 00014BC7 EBEC                    	jmp .L_lambda_simple_params_loop_045b
 28955                                  .L_lambda_simple_params_end_045b:
 28956 00014BC9 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 28957 00014BCC 4889C3                  	mov rbx, rax
 28958 00014BCF 58                      	pop rax
 28959 00014BD0 C60004                  	mov byte [rax], T_closure
 28960 00014BD3 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 28961 00014BD7 48C74009[E44B0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_045b
 28962 00014BDF E959020000              	jmp .L_lambda_simple_end_045b
 28963                                  .L_lambda_simple_code_045b:	; lambda-simple body
 28964 00014BE4 48837C241003            	cmp qword [rsp + 8 * 2], 3
 28965 00014BEA 740B                    	je .L_lambda_simple_arity_check_ok_045b
 28966 00014BEC FF742410                	push qword [rsp + 8 * 2]
 28967 00014BF0 6A03                    	push 3
 28968 00014BF2 E9A8050000              	jmp L_error_incorrect_arity_simple
 28969                                  .L_lambda_simple_arity_check_ok_045b:
 28970 00014BF7 C8000000                	enter 0, 0
 28971                                  	; preparing a non-tail-call
 28972 00014BFB 488B4530                	mov rax, PARAM(2)	; param n
 28973 00014BFF 50                      	push rax
 28974 00014C00 6A01                    	push 1	; arg count
 28975 00014C02 488B0425[E31E0000]      	mov rax, qword [free_var_181]	; free var zero?
 28976 00014C0A 803805                  	cmp byte [rax], T_undefined
 28977 00014C0D 0F84A6040000            	je L_error_fvar_undefined
 28978 00014C13 803804                  	cmp byte [rax], T_closure
 28979 00014C16 0F8521050000            	jne L_error_non_closure
 28980 00014C1C FF7001                  	push SOB_CLOSURE_ENV(rax)
 28981 00014C1F FF5009                  	call SOB_CLOSURE_CODE(rax)
 28982 00014C22 483D[02000000]          	cmp rax, sob_boolean_false
 28983 00014C28 740F                    	je .L_if_else_0332
 28984 00014C2A 48B8-                   	mov rax, L_constants + 4754
 28984 00014C2C [9212000000000000] 
 28985 00014C34 E900020000              	jmp .L_if_end_0332
 28986                                  .L_if_else_0332:
 28987                                  	; preparing a non-tail-call
 28988 00014C39 488B4528                	mov rax, PARAM(1)	; param b
 28989 00014C3D 50                      	push rax
 28990 00014C3E 488B4520                	mov rax, PARAM(0)	; param a
 28991 00014C42 50                      	push rax
 28992 00014C43 6A02                    	push 2	; arg count
 28993 00014C45 488B0425[22130000]      	mov rax, qword [free_var_4]	; free var <
 28994 00014C4D 803805                  	cmp byte [rax], T_undefined
 28995 00014C50 0F8463040000            	je L_error_fvar_undefined
 28996 00014C56 803804                  	cmp byte [rax], T_closure
 28997 00014C59 0F85DE040000            	jne L_error_non_closure
 28998 00014C5F FF7001                  	push SOB_CLOSURE_ENV(rax)
 28999 00014C62 FF5009                  	call SOB_CLOSURE_CODE(rax)
 29000 00014C65 483D[02000000]          	cmp rax, sob_boolean_false
 29001 00014C6B 0F84C2000000            	je .L_if_else_0331
 29002                                  	; preparing a tail-call
 29003                                  	; preparing a non-tail-call
 29004 00014C71 488B4530                	mov rax, PARAM(2)	; param n
 29005 00014C75 50                      	push rax
 29006                                  	; preparing a non-tail-call
 29007 00014C76 488B4520                	mov rax, PARAM(0)	; param a
 29008 00014C7A 50                      	push rax
 29009 00014C7B 488B4528                	mov rax, PARAM(1)	; param b
 29010 00014C7F 50                      	push rax
 29011 00014C80 6A02                    	push 2	; arg count
 29012 00014C82 488B0425[11130000]      	mov rax, qword [free_var_3]	; free var /
 29013 00014C8A 803805                  	cmp byte [rax], T_undefined
 29014 00014C8D 0F8426040000            	je L_error_fvar_undefined
 29015 00014C93 803804                  	cmp byte [rax], T_closure
 29016 00014C96 0F85A1040000            	jne L_error_non_closure
 29017 00014C9C FF7001                  	push SOB_CLOSURE_ENV(rax)
 29018 00014C9F FF5009                  	call SOB_CLOSURE_CODE(rax)
 29019 00014CA2 50                      	push rax
 29020 00014CA3 488B4520                	mov rax, PARAM(0)	; param a
 29021 00014CA7 50                      	push rax
 29022 00014CA8 6A03                    	push 3	; arg count
 29023 00014CAA 488B0425[4E1A0000]      	mov rax, qword [free_var_112]	; free var logarithm
 29024 00014CB2 803805                  	cmp byte [rax], T_undefined
 29025 00014CB5 0F84FE030000            	je L_error_fvar_undefined
 29026 00014CBB 803804                  	cmp byte [rax], T_closure
 29027 00014CBE 0F8579040000            	jne L_error_non_closure
 29028 00014CC4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 29029 00014CC7 FF5009                  	call SOB_CLOSURE_CODE(rax)
 29030 00014CCA 50                      	push rax
 29031 00014CCB 48B8-                   	mov rax, L_constants + 4754
 29031 00014CCD [9212000000000000] 
 29032 00014CD5 50                      	push rax
 29033 00014CD6 6A02                    	push 2	; arg count
 29034 00014CD8 488B0425[EF120000]      	mov rax, qword [free_var_1]	; free var +
 29035 00014CE0 803805                  	cmp byte [rax], T_undefined
 29036 00014CE3 0F84D0030000            	je L_error_fvar_undefined
 29037 00014CE9 803804                  	cmp byte [rax], T_closure
 29038 00014CEC 0F854B040000            	jne L_error_non_closure
 29039 00014CF2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 29040                                  
 29041                                  	; recycling the current frame
 29042 00014CF5 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 29043 00014CF8 FF7500                  	push qword [rbp]	; old frame-pointer
 29044 00014CFB B906000000              	mov rcx, 6
 29045 00014D00 488B5D18                	mov rbx, COUNT
 29046 00014D04 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 29047 00014D09 488D55F8                	lea rdx, [rbp - 8]
 29048                                  .L_tc_recycle_frame_loop_05ab:
 29049 00014D0D 4883F900                	cmp rcx, 0
 29050 00014D11 7413                    	je .L_tc_recycle_frame_done_05ab
 29051 00014D13 488B32                  	mov rsi, qword [rdx]
 29052 00014D16 488933                  	mov qword [rbx], rsi
 29053 00014D19 48FFC9                  	dec rcx
 29054 00014D1C 4883EB08                	sub rbx, 8
 29055 00014D20 4883EA08                	sub rdx, 8
 29056 00014D24 EBE7                    	jmp .L_tc_recycle_frame_loop_05ab
 29057                                  .L_tc_recycle_frame_done_05ab:
 29058 00014D26 488D6308                	lea rsp, [rbx + 8]
 29059 00014D2A 5D                      	pop rbp
 29060 00014D2B FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 29061 00014D2E E906010000              	jmp .L_if_end_0331
 29062                                  .L_if_else_0331:
 29063                                  	; preparing a non-tail-call
 29064 00014D33 488B4528                	mov rax, PARAM(1)	; param b
 29065 00014D37 50                      	push rax
 29066 00014D38 488B4520                	mov rax, PARAM(0)	; param a
 29067 00014D3C 50                      	push rax
 29068 00014D3D 6A02                    	push 2	; arg count
 29069 00014D3F 488B0425[44130000]      	mov rax, qword [free_var_6]	; free var =
 29070 00014D47 803805                  	cmp byte [rax], T_undefined
 29071 00014D4A 0F8469030000            	je L_error_fvar_undefined
 29072 00014D50 803804                  	cmp byte [rax], T_closure
 29073 00014D53 0F85E4030000            	jne L_error_non_closure
 29074 00014D59 FF7001                  	push SOB_CLOSURE_ENV(rax)
 29075 00014D5C FF5009                  	call SOB_CLOSURE_CODE(rax)
 29076 00014D5F 483D[02000000]          	cmp rax, sob_boolean_false
 29077 00014D65 740F                    	je .L_if_else_0330
 29078 00014D67 48B8-                   	mov rax, L_constants + 4754
 29078 00014D69 [9212000000000000] 
 29079 00014D71 E9C3000000              	jmp .L_if_end_0330
 29080                                  .L_if_else_0330:
 29081                                  	; preparing a tail-call
 29082                                  	; preparing a non-tail-call
 29083                                  	; preparing a non-tail-call
 29084 00014D76 48B8-                   	mov rax, L_constants + 2810
 29084 00014D78 [FA0A000000000000] 
 29085 00014D80 50                      	push rax
 29086 00014D81 488B4530                	mov rax, PARAM(2)	; param n
 29087 00014D85 50                      	push rax
 29088 00014D86 6A02                    	push 2	; arg count
 29089 00014D88 488B0425[00130000]      	mov rax, qword [free_var_2]	; free var -
 29090 00014D90 803805                  	cmp byte [rax], T_undefined
 29091 00014D93 0F8420030000            	je L_error_fvar_undefined
 29092 00014D99 803804                  	cmp byte [rax], T_closure
 29093 00014D9C 0F859B030000            	jne L_error_non_closure
 29094 00014DA2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 29095 00014DA5 FF5009                  	call SOB_CLOSURE_CODE(rax)
 29096 00014DA8 50                      	push rax
 29097 00014DA9 488B4520                	mov rax, PARAM(0)	; param a
 29098 00014DAD 50                      	push rax
 29099 00014DAE 488B4528                	mov rax, PARAM(1)	; param b
 29100 00014DB2 50                      	push rax
 29101 00014DB3 6A03                    	push 3	; arg count
 29102 00014DB5 488B0425[4E1A0000]      	mov rax, qword [free_var_112]	; free var logarithm
 29103 00014DBD 803805                  	cmp byte [rax], T_undefined
 29104 00014DC0 0F84F3020000            	je L_error_fvar_undefined
 29105 00014DC6 803804                  	cmp byte [rax], T_closure
 29106 00014DC9 0F856E030000            	jne L_error_non_closure
 29107 00014DCF FF7001                  	push SOB_CLOSURE_ENV(rax)
 29108 00014DD2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 29109 00014DD5 50                      	push rax
 29110 00014DD6 48B8-                   	mov rax, L_constants + 4754
 29110 00014DD8 [9212000000000000] 
 29111 00014DE0 50                      	push rax
 29112 00014DE1 6A02                    	push 2	; arg count
 29113 00014DE3 488B0425[11130000]      	mov rax, qword [free_var_3]	; free var /
 29114 00014DEB 803805                  	cmp byte [rax], T_undefined
 29115 00014DEE 0F84C5020000            	je L_error_fvar_undefined
 29116 00014DF4 803804                  	cmp byte [rax], T_closure
 29117 00014DF7 0F8540030000            	jne L_error_non_closure
 29118 00014DFD FF7001                  	push SOB_CLOSURE_ENV(rax)
 29119                                  
 29120                                  	; recycling the current frame
 29121 00014E00 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 29122 00014E03 FF7500                  	push qword [rbp]	; old frame-pointer
 29123 00014E06 B906000000              	mov rcx, 6
 29124 00014E0B 488B5D18                	mov rbx, COUNT
 29125 00014E0F 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 29126 00014E14 488D55F8                	lea rdx, [rbp - 8]
 29127                                  .L_tc_recycle_frame_loop_05ac:
 29128 00014E18 4883F900                	cmp rcx, 0
 29129 00014E1C 7413                    	je .L_tc_recycle_frame_done_05ac
 29130 00014E1E 488B32                  	mov rsi, qword [rdx]
 29131 00014E21 488933                  	mov qword [rbx], rsi
 29132 00014E24 48FFC9                  	dec rcx
 29133 00014E27 4883EB08                	sub rbx, 8
 29134 00014E2B 4883EA08                	sub rdx, 8
 29135 00014E2F EBE7                    	jmp .L_tc_recycle_frame_loop_05ac
 29136                                  .L_tc_recycle_frame_done_05ac:
 29137 00014E31 488D6308                	lea rsp, [rbx + 8]
 29138 00014E35 5D                      	pop rbp
 29139 00014E36 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 29140                                  .L_if_end_0330:
 29141                                  .L_if_end_0331:
 29142                                  .L_if_end_0332:
 29143 00014E39 C9                      	leave
 29144 00014E3A C22800                  	ret AND_KILL_FRAME(3)
 29145                                  .L_lambda_simple_end_045b:	; new closure is in rax
 29146 00014E3D 48890425[4E1A0000]      	mov qword [free_var_112], rax
 29147 00014E45 48B8-                   	mov rax, sob_void
 29147 00014E47 [0000000000000000] 
 29148                                  
 29149 00014E4F 4889C7                  	mov rdi, rax
 29150 00014E52 E8E4050000              	call print_sexpr_if_not_void
 29151                                  
 29152 00014E57 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 29153 00014E5C E885030000              	call malloc
 29154 00014E61 50                      	push rax
 29155 00014E62 BF00000000              	mov rdi, 8 * 0	; new rib
 29156 00014E67 E87A030000              	call malloc
 29157 00014E6C 50                      	push rax
 29158 00014E6D BF08000000              	mov rdi, 8 * 1	; extended env
 29159 00014E72 E86F030000              	call malloc
 29160 00014E77 488B7D10                	mov rdi, ENV
 29161 00014E7B BE00000000              	mov rsi, 0
 29162 00014E80 BA01000000              	mov rdx, 1
 29163                                  .L_lambda_simple_env_loop_045c:	; ext_env[i + 1] <-- env[i]
 29164 00014E85 4883FE00                	cmp rsi, 0
 29165 00014E89 7410                    	je .L_lambda_simple_env_end_045c
 29166 00014E8B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 29167 00014E8F 48890CD0                	mov qword [rax + 8 * rdx], rcx
 29168 00014E93 48FFC6                  	inc rsi
 29169 00014E96 48FFC2                  	inc rdx
 29170 00014E99 EBEA                    	jmp .L_lambda_simple_env_loop_045c
 29171                                  .L_lambda_simple_env_end_045c:
 29172 00014E9B 5B                      	pop rbx
 29173 00014E9C BE00000000              	mov rsi, 0
 29174                                  .L_lambda_simple_params_loop_045c:	; copy params
 29175 00014EA1 4883FE00                	cmp rsi, 0
 29176 00014EA5 740E                    	je .L_lambda_simple_params_end_045c
 29177 00014EA7 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 29178 00014EAC 488914F3                	mov qword [rbx + 8 * rsi], rdx
 29179 00014EB0 48FFC6                  	inc rsi
 29180 00014EB3 EBEC                    	jmp .L_lambda_simple_params_loop_045c
 29181                                  .L_lambda_simple_params_end_045c:
 29182 00014EB5 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 29183 00014EB8 4889C3                  	mov rbx, rax
 29184 00014EBB 58                      	pop rax
 29185 00014EBC C60004                  	mov byte [rax], T_closure
 29186 00014EBF 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 29187 00014EC3 48C74009[D04E0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_045c
 29188 00014ECB E97E000000              	jmp .L_lambda_simple_end_045c
 29189                                  .L_lambda_simple_code_045c:	; lambda-simple body
 29190 00014ED0 48837C241000            	cmp qword [rsp + 8 * 2], 0
 29191 00014ED6 740B                    	je .L_lambda_simple_arity_check_ok_045c
 29192 00014ED8 FF742410                	push qword [rsp + 8 * 2]
 29193 00014EDC 6A00                    	push 0
 29194 00014EDE E9BC020000              	jmp L_error_incorrect_arity_simple
 29195                                  .L_lambda_simple_arity_check_ok_045c:
 29196 00014EE3 C8000000                	enter 0, 0
 29197                                  	; preparing a tail-call
 29198 00014EE7 48B8-                   	mov rax, L_constants + 4797
 29198 00014EE9 [BD12000000000000] 
 29199 00014EF1 50                      	push rax
 29200 00014EF2 6A01                    	push 1	; arg count
 29201 00014EF4 488B0425[D21E0000]      	mov rax, qword [free_var_180]	; free var write-char
 29202 00014EFC 803805                  	cmp byte [rax], T_undefined
 29203 00014EFF 0F84B4010000            	je L_error_fvar_undefined
 29204 00014F05 803804                  	cmp byte [rax], T_closure
 29205 00014F08 0F852F020000            	jne L_error_non_closure
 29206 00014F0E FF7001                  	push SOB_CLOSURE_ENV(rax)
 29207                                  
 29208                                  	; recycling the current frame
 29209 00014F11 FF7508                  	push qword [rbp + 8 * 1]	; old return address
 29210 00014F14 FF7500                  	push qword [rbp]	; old frame-pointer
 29211 00014F17 B905000000              	mov rcx, 5
 29212 00014F1C 488B5D18                	mov rbx, COUNT
 29213 00014F20 488D5CDD18              	lea rbx, [rbp + 8 * rbx + 8 * 3]
 29214 00014F25 488D55F8                	lea rdx, [rbp - 8]
 29215                                  .L_tc_recycle_frame_loop_05ad:
 29216 00014F29 4883F900                	cmp rcx, 0
 29217 00014F2D 7413                    	je .L_tc_recycle_frame_done_05ad
 29218 00014F2F 488B32                  	mov rsi, qword [rdx]
 29219 00014F32 488933                  	mov qword [rbx], rsi
 29220 00014F35 48FFC9                  	dec rcx
 29221 00014F38 4883EB08                	sub rbx, 8
 29222 00014F3C 4883EA08                	sub rdx, 8
 29223 00014F40 EBE7                    	jmp .L_tc_recycle_frame_loop_05ad
 29224                                  .L_tc_recycle_frame_done_05ad:
 29225 00014F42 488D6308                	lea rsp, [rbx + 8]
 29226 00014F46 5D                      	pop rbp
 29227 00014F47 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 29228 00014F4A C9                      	leave
 29229 00014F4B C21000                  	ret AND_KILL_FRAME(0)
 29230                                  .L_lambda_simple_end_045c:	; new closure is in rax
 29231 00014F4E 48890425[1A1B0000]      	mov qword [free_var_124], rax
 29232 00014F56 48B8-                   	mov rax, sob_void
 29232 00014F58 [0000000000000000] 
 29233                                  
 29234 00014F60 4889C7                  	mov rdi, rax
 29235 00014F63 E8D3040000              	call print_sexpr_if_not_void
 29236                                  
 29237 00014F68 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 29238 00014F6D E874020000              	call malloc
 29239 00014F72 50                      	push rax
 29240 00014F73 BF00000000              	mov rdi, 8 * 0	; new rib
 29241 00014F78 E869020000              	call malloc
 29242 00014F7D 50                      	push rax
 29243 00014F7E BF08000000              	mov rdi, 8 * 1	; extended env
 29244 00014F83 E85E020000              	call malloc
 29245 00014F88 488B7D10                	mov rdi, ENV
 29246 00014F8C BE00000000              	mov rsi, 0
 29247 00014F91 BA01000000              	mov rdx, 1
 29248                                  .L_lambda_simple_env_loop_045d:	; ext_env[i + 1] <-- env[i]
 29249 00014F96 4883FE00                	cmp rsi, 0
 29250 00014F9A 7410                    	je .L_lambda_simple_env_end_045d
 29251 00014F9C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 29252 00014FA0 48890CD0                	mov qword [rax + 8 * rdx], rcx
 29253 00014FA4 48FFC6                  	inc rsi
 29254 00014FA7 48FFC2                  	inc rdx
 29255 00014FAA EBEA                    	jmp .L_lambda_simple_env_loop_045d
 29256                                  .L_lambda_simple_env_end_045d:
 29257 00014FAC 5B                      	pop rbx
 29258 00014FAD BE00000000              	mov rsi, 0
 29259                                  .L_lambda_simple_params_loop_045d:	; copy params
 29260 00014FB2 4883FE00                	cmp rsi, 0
 29261 00014FB6 740E                    	je .L_lambda_simple_params_end_045d
 29262 00014FB8 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 29263 00014FBD 488914F3                	mov qword [rbx + 8 * rsi], rdx
 29264 00014FC1 48FFC6                  	inc rsi
 29265 00014FC4 EBEC                    	jmp .L_lambda_simple_params_loop_045d
 29266                                  .L_lambda_simple_params_end_045d:
 29267 00014FC6 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib
 29268 00014FC9 4889C3                  	mov rbx, rax
 29269 00014FCC 58                      	pop rax
 29270 00014FCD C60004                  	mov byte [rax], T_closure
 29271 00014FD0 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 29272 00014FD4 48C74009[DE4F0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_045d
 29273 00014FDC EB25                    	jmp .L_lambda_simple_end_045d
 29274                                  .L_lambda_simple_code_045d:	; lambda-simple body
 29275 00014FDE 48837C241000            	cmp qword [rsp + 8 * 2], 0
 29276 00014FE4 740B                    	je .L_lambda_simple_arity_check_ok_045d
 29277 00014FE6 FF742410                	push qword [rsp + 8 * 2]
 29278 00014FEA 6A00                    	push 0
 29279 00014FEC E9AE010000              	jmp L_error_incorrect_arity_simple
 29280                                  .L_lambda_simple_arity_check_ok_045d:
 29281 00014FF1 C8000000                	enter 0, 0
 29282 00014FF5 48B8-                   	mov rax, L_constants + 0
 29282 00014FF7 [0000000000000000] 
 29283 00014FFF C9                      	leave
 29284 00015000 C21000                  	ret AND_KILL_FRAME(0)
 29285                                  .L_lambda_simple_end_045d:	; new closure is in rax
 29286 00015003 48890425[B01E0000]      	mov qword [free_var_178], rax
 29287 0001500B 48B8-                   	mov rax, sob_void
 29287 0001500D [0000000000000000] 
 29288                                  
 29289 00015015 4889C7                  	mov rdi, rax
 29290 00015018 E81E040000              	call print_sexpr_if_not_void
 29291                                  
 29292                                  	; preparing a non-tail-call
 29293 0001501D 48B8-                   	mov rax, L_constants + 4821
 29293 0001501F [D512000000000000] 
 29294 00015027 50                      	push rax
 29295                                  	; preparing a non-tail-call
 29296 00015028 48B8-                   	mov rax, L_constants + 4288
 29296 0001502A [C010000000000000] 
 29297 00015032 50                      	push rax
 29298 00015033 48B8-                   	mov rax, L_constants + 2810
 29298 00015035 [FA0A000000000000] 
 29299 0001503D 50                      	push rax
 29300 0001503E 6A02                    	push 2	; arg count
 29301 00015040 488B0425[EF120000]      	mov rax, qword [free_var_1]	; free var +
 29302 00015048 803805                  	cmp byte [rax], T_undefined
 29303 0001504B 746C                    	je L_error_fvar_undefined
 29304 0001504D 803804                  	cmp byte [rax], T_closure
 29305 00015050 0F85E7000000            	jne L_error_non_closure
 29306 00015056 FF7001                  	push SOB_CLOSURE_ENV(rax)
 29307 00015059 FF5009                  	call SOB_CLOSURE_CODE(rax)
 29308 0001505C 50                      	push rax
 29309 0001505D 6A02                    	push 2	; arg count
 29310 0001505F 488B0425[DE120000]      	mov rax, qword [free_var_0]	; free var *
 29311 00015067 803805                  	cmp byte [rax], T_undefined
 29312 0001506A 744D                    	je L_error_fvar_undefined
 29313 0001506C 803804                  	cmp byte [rax], T_closure
 29314 0001506F 0F85C8000000            	jne L_error_non_closure
 29315 00015075 FF7001                  	push SOB_CLOSURE_ENV(rax)
 29316 00015078 FF5009                  	call SOB_CLOSURE_CODE(rax)
 29317                                  
 29318 0001507B 4889C7                  	mov rdi, rax
 29319 0001507E E8B8030000              	call print_sexpr_if_not_void
 29320                                  
 29321 00015083 48BF-                           mov rdi, fmt_memory_usage
 29321 00015085 [8C1F000000000000] 
 29322 0001508D 488B3425[12200000]              mov rsi, qword [top_of_memory]
 29323 00015095 4881EE[00000000]                sub rsi, memory
 29324 0001509C B800000000                      mov rax, 0
 29325                                          ENTER
    44 000150A1 C8000000            <1>  enter 0, 0
    45 000150A5 4883E4F0            <1>  and rsp, ~15
 29326 000150A9 E8(00000000)                    call printf
 29327                                          LEAVE
    49 000150AE C9                  <1>  leave
 29328 000150AF B800000000                      mov rax, 0
 29329 000150B4 E8(00000000)                    call exit
 29330                                  
 29331                                  L_error_fvar_undefined:
 29332 000150B9 50                              push rax
 29333 000150BA 488B3C25[00000000]              mov rdi, qword [stderr]  ; destination
 29334 000150C2 48BE-                           mov rsi, fmt_undefined_free_var_1
 29334 000150C4 [F41E000000000000] 
 29335 000150CC B800000000                      mov rax, 0
 29336                                          ENTER
    44 000150D1 C8000000            <1>  enter 0, 0
    45 000150D5 4883E4F0            <1>  and rsp, ~15
 29337 000150D9 E8(00000000)                    call fprintf
 29338                                          LEAVE
    49 000150DE C9                  <1>  leave
 29339 000150DF 58                              pop rax
 29340 000150E0 488B4001                        mov rax, qword [rax + 1] ; string
 29341 000150E4 488D7809                        lea rdi, [rax + 1 + 8]   ; actual characters
 29342 000150E8 BE01000000                      mov rsi, 1               ; sizeof(char)
 29343 000150ED 488B5001                        mov rdx, qword [rax + 1] ; string-length
 29344 000150F1 488B0C25[00000000]              mov rcx, qword [stderr]  ; destination
 29345 000150F9 B800000000                      mov rax, 0
 29346                                          ENTER
    44 000150FE C8000000            <1>  enter 0, 0
    45 00015102 4883E4F0            <1>  and rsp, ~15
 29347 00015106 E8(00000000)                    call fwrite
 29348                                          LEAVE
    49 0001510B C9                  <1>  leave
 29349 0001510C 488B3C25[00000000]              mov rdi, [stderr]       ; destination
 29350 00015114 48BE-                           mov rsi, fmt_undefined_free_var_2
 29350 00015116 [0B1F000000000000] 
 29351 0001511E B800000000                      mov rax, 0
 29352                                          ENTER
    44 00015123 C8000000            <1>  enter 0, 0
    45 00015127 4883E4F0            <1>  and rsp, ~15
 29353 0001512B E8(00000000)                    call fprintf
 29354                                          LEAVE
    49 00015130 C9                  <1>  leave
 29355 00015131 48C7C0F6FFFFFF                  mov rax, -10
 29356 00015138 E8(00000000)                    call exit
 29357                                  
 29358                                  L_error_non_closure:
 29359 0001513D 488B3C25[00000000]              mov rdi, qword [stderr]
 29360 00015145 48BE-                           mov rsi, fmt_non_closure
 29360 00015147 [C21F000000000000] 
 29361 0001514F B800000000                      mov rax, 0
 29362                                          ENTER
    44 00015154 C8000000            <1>  enter 0, 0
    45 00015158 4883E4F0            <1>  and rsp, ~15
 29363 0001515C E8(00000000)                    call fprintf
 29364                                          LEAVE
    49 00015161 C9                  <1>  leave
 29365 00015162 48C7C0FEFFFFFF                  mov rax, -2
 29366 00015169 E8(00000000)                    call exit
 29367                                  
 29368                                  L_error_improper_list:
 29369 0001516E 488B3C25[00000000]      	mov rdi, qword [stderr]
 29370 00015176 48BE-                   	mov rsi, fmt_error_improper_list
 29370 00015178 [EA1F000000000000] 
 29371 00015180 B800000000              	mov rax, 0
 29372                                          ENTER
    44 00015185 C8000000            <1>  enter 0, 0
    45 00015189 4883E4F0            <1>  and rsp, ~15
 29373 0001518D E8(00000000)            	call fprintf
 29374                                          LEAVE
    49 00015192 C9                  <1>  leave
 29375 00015193 48C7C0F9FFFFFF          	mov rax, -7
 29376 0001519A E8(00000000)            	call exit
 29377                                  
 29378                                  L_error_incorrect_arity_simple:
 29379 0001519F 488B3C25[00000000]              mov rdi, qword [stderr]
 29380 000151A7 48BE-                           mov rsi, fmt_incorrect_arity_simple
 29380 000151A9 [2D1F000000000000] 
 29381 000151B1 EB12                            jmp L_error_incorrect_arity_common
 29382                                  L_error_incorrect_arity_opt:
 29383 000151B3 488B3C25[00000000]              mov rdi, qword [stderr]
 29384 000151BB 48BE-                           mov rsi, fmt_incorrect_arity_opt
 29384 000151BD [581F000000000000] 
 29385                                  L_error_incorrect_arity_common:
 29386 000151C5 5A                              pop rdx
 29387 000151C6 59                              pop rcx
 29388 000151C7 B800000000                      mov rax, 0
 29389                                          ENTER
    44 000151CC C8000000            <1>  enter 0, 0
    45 000151D0 4883E4F0            <1>  and rsp, ~15
 29390 000151D4 E8(00000000)                    call fprintf
 29391                                          LEAVE
    49 000151D9 C9                  <1>  leave
 29392 000151DA 48C7C0FAFFFFFF                  mov rax, -6
 29393 000151E1 E8(00000000)                    call exit
 29394                                  
 29395                                  section .data
 29396                                  fmt_undefined_free_var_1:
 29397 00001EF4 212121205468652066-             db `!!! The free variable \0`
 29397 00001EFD 726565207661726961-
 29397 00001F06 626C652000         
 29398                                  fmt_undefined_free_var_2:
 29399 00001F0B 207761732075736564-             db ` was used before it was defined.\n\0`
 29399 00001F14 206265666F72652069-
 29399 00001F1D 742077617320646566-
 29399 00001F26 696E65642E0A00     
 29400                                  fmt_incorrect_arity_simple:
 29401 00001F2D 212121204578706563-             db `!!! Expected %ld arguments, but given %ld\n\0`
 29401 00001F36 74656420256C642061-
 29401 00001F3F 7267756D656E74732C-
 29401 00001F48 206275742067697665-
 29401 00001F51 6E20256C640A00     
 29402                                  fmt_incorrect_arity_opt:
 29403 00001F58 212121204578706563-             db `!!! Expected at least %ld arguments, but given %ld\n\0`
 29403 00001F61 746564206174206C65-
 29403 00001F6A 61737420256C642061-
 29403 00001F73 7267756D656E74732C-
 29403 00001F7C 206275742067697665-
 29403 00001F85 6E20256C640A00     
 29404                                  fmt_memory_usage:
 29405 00001F8C 0A2121212055736564-             db `\n!!! Used %ld bytes of dynamically-allocated memory\n\n\0`
 29405 00001F95 20256C642062797465-
 29405 00001F9E 73206F662064796E61-
 29405 00001FA7 6D6963616C6C792D61-
 29405 00001FB0 6C6C6F636174656420-
 29405 00001FB9 6D656D6F72790A0A00 
 29406                                  fmt_non_closure:
 29407 00001FC2 21212120417474656D-             db `!!! Attempting to apply a non-closure!\n\0`
 29407 00001FCB 7074696E6720746F20-
 29407 00001FD4 6170706C792061206E-
 29407 00001FDD 6F6E2D636C6F737572-
 29407 00001FE6 65210A00           
 29408                                  fmt_error_improper_list:
 29409 00001FEA 212121205468652061-     	db `!!! The argument is not a proper list!\n\0`
 29409 00001FF3 7267756D656E742069-
 29409 00001FFC 73206E6F7420612070-
 29409 00002005 726F706572206C6973-
 29409 0000200E 74210A00           
 29410                                  
 29411                                  section .bss
 29412                                  memory:
 29413 00000000 <res 40000000h>         	resb gbytes(1)
 29414                                  
 29415                                  section .data
 29416                                  top_of_memory:
 29417 00002012 [0000000000000000]              dq memory
 29418                                  
 29419                                  section .text
 29420                                  malloc:
 29421 000151E6 488B0425[12200000]              mov rax, qword [top_of_memory]
 29422 000151EE 48013C25[12200000]              add qword [top_of_memory], rdi
 29423 000151F6 C3                              ret
 29424                                  
 29425                                  L_code_ptr_return:
 29426 000151F7 48837C241002            	cmp qword [rsp + 8*2], 2
 29427 000151FD 0F85EF1C0000            	jne L_error_arg_count_2
 29428 00015203 488B4C2418              	mov rcx, qword [rsp + 8*3]
 29429                                  	assert_integer(rcx)
    53 00015208 803911              <1>  cmp byte [%1], %2
    54 0001520B 0F85801D0000        <1>  jne L_error_incorrect_type
 29430 00015211 488B4901                	mov rcx, qword [rcx + 1]
 29431 00015215 4883F900                	cmp rcx, 0
 29432 00015219 0F8C071C0000            	jl L_error_integer_range
 29433 0001521F 488B442420              	mov rax, qword [rsp + 8*4]
 29434                                  .L0:
 29435 00015224 4883F900                        cmp rcx, 0
 29436 00015228 7409                            je .L1
 29437 0001522A 488B6D00                	mov rbp, qword [rbp]
 29438 0001522E 48FFC9                  	dec rcx
 29439 00015231 7FF1                    	jg .L0
 29440                                  .L1:
 29441 00015233 4889EC                  	mov rsp, rbp
 29442 00015236 5D                      	pop rbp
 29443 00015237 5B                              pop rbx
 29444 00015238 488B4C2408                      mov rcx, qword [rsp + 8*1]
 29445 0001523D 488D64CC10                      lea rsp, [rsp + 8*rcx + 8*2]
 29446 00015242 FFE3                    	jmp rbx
 29447                                  
 29448                                  L_code_ptr_make_list:
 29449 00015244 C8000000                	enter 0, 0
 29450 00015248 48837D1801                      cmp COUNT, 1
 29451 0001524D 740C                            je .L0
 29452 0001524F 48837D1802                      cmp COUNT, 2
 29453 00015254 7411                            je .L1
 29454 00015256 E9CC1C0000                      jmp L_error_arg_count_12
 29455                                  .L0:
 29456 0001525B 49B9-                           mov r9, sob_void
 29456 0001525D [0000000000000000] 
 29457 00015265 EB04                            jmp .L2
 29458                                  .L1:
 29459 00015267 4C8B4D28                        mov r9, PARAM(1)
 29460                                  .L2:
 29461 0001526B 488B4D20                        mov rcx, PARAM(0)
 29462                                          assert_integer(rcx)
    53 0001526F 803911              <1>  cmp byte [%1], %2
    54 00015272 0F85191D0000        <1>  jne L_error_incorrect_type
 29463 00015278 488B4901                        mov rcx, qword [rcx + 1]
 29464 0001527C 4883F900                        cmp rcx, 0
 29465 00015280 0F8CD11B0000                    jl L_error_arg_negative
 29466 00015286 49B8-                           mov r8, sob_nil
 29466 00015288 [0100000000000000] 
 29467                                  .L3:
 29468 00015290 4883F900                        cmp rcx, 0
 29469 00015294 7E1D                            jle .L4
 29470 00015296 BF11000000                      mov rdi, 1 + 8 + 8
 29471 0001529B E846FFFFFF                      call malloc
 29472 000152A0 C60021                          mov byte [rax], T_pair
 29473 000152A3 4C894801                        mov qword [rax + 1], r9
 29474 000152A7 4C894009                        mov qword [rax + 1 + 8], r8
 29475 000152AB 4989C0                          mov r8, rax
 29476 000152AE 48FFC9                          dec rcx
 29477 000152B1 EBDD                            jmp .L3
 29478                                  .L4:
 29479 000152B3 4C89C0                          mov rax, r8
 29480 000152B6 48837D1802                      cmp COUNT, 2
 29481 000152BB 7404                            je .L5
 29482 000152BD C9                              leave
 29483 000152BE C21800                          ret AND_KILL_FRAME(1)
 29484                                  .L5:
 29485 000152C1 C9                      	leave
 29486 000152C2 C22000                  	ret AND_KILL_FRAME(2)
 29487                                  
 29488                                  L_code_ptr_is_primitive:
 29489 000152C5 C8000000                	enter 0, 0
 29490 000152C9 48837D1801              	cmp COUNT, 1
 29491 000152CE 0F85E91B0000            	jne L_error_arg_count_1
 29492 000152D4 488B4520                	mov rax, PARAM(0)
 29493                                  	assert_closure(rax)
    53 000152D8 803804              <1>  cmp byte [%1], %2
    54 000152DB 0F85B01C0000        <1>  jne L_error_incorrect_type
 29494 000152E1 4883780100              	cmp SOB_CLOSURE_ENV(rax), 0
 29495 000152E6 750C                    	jne .L_false
 29496 000152E8 48B8-                   	mov rax, sob_boolean_true
 29496 000152EA [0300000000000000] 
 29497 000152F2 EB0A                    	jmp .L_end
 29498                                  .L_false:
 29499 000152F4 48B8-                   	mov rax, sob_boolean_false
 29499 000152F6 [0200000000000000] 
 29500                                  .L_end:
 29501 000152FE C9                      	leave
 29502 000152FF C21800                  	ret AND_KILL_FRAME(1)
 29503                                  
 29504                                  L_code_ptr_length:
 29505 00015302 C8000000                	enter 0, 0
 29506 00015306 48837D1801              	cmp COUNT, 1
 29507 0001530B 0F85AC1B0000            	jne L_error_arg_count_1
 29508 00015311 488B5D20                	mov rbx, PARAM(0)
 29509 00015315 BF00000000              	mov rdi, 0
 29510                                  .L:
 29511 0001531A 803B01                  	cmp byte [rbx], T_nil
 29512 0001531D 7412                    	je .L_end
 29513                                  	assert_pair(rbx)
    53 0001531F 803B21              <1>  cmp byte [%1], %2
    54 00015322 0F85691C0000        <1>  jne L_error_incorrect_type
 29514 00015328 488B5B09                	mov rbx, SOB_PAIR_CDR(rbx)
 29515 0001532C 48FFC7                  	inc rdi
 29516 0001532F EBE9                    	jmp .L
 29517                                  .L_end:
 29518 00015331 E8D61A0000              	call make_integer
 29519 00015336 C9                      	leave
 29520 00015337 C21800                  	ret AND_KILL_FRAME(1)
 29521                                  
 29522                                  L_code_ptr_break:
 29523 0001533A 48837C241000                    cmp qword [rsp + 8 * 2], 0
 29524 00015340 0F85421B0000                    jne L_error_arg_count_0
 29525 00015346 CC                              int3
 29526 00015347 48B8-                           mov rax, sob_void
 29526 00015349 [0000000000000000] 
 29527 00015351 C21000                          ret AND_KILL_FRAME(0)        
 29528                                  
 29529                                  L_code_ptr_frame:
 29530 00015354 C8000000                        enter 0, 0
 29531 00015358 48837D1800                      cmp COUNT, 0
 29532 0001535D 0F85251B0000                    jne L_error_arg_count_0
 29533                                  
 29534 00015363 48BF-                           mov rdi, fmt_frame
 29534 00015365 [1A20000000000000] 
 29535 0001536D 488B7500                        mov rsi, qword [rbp]    ; old rbp
 29536 00015371 488B5608                        mov rdx, qword [rsi + 8*1] ; ret addr
 29537 00015375 488B4E10                        mov rcx, qword [rsi + 8*2] ; lexical environment
 29538 00015379 4C8B4618                        mov r8, qword [rsi + 8*3] ; count
 29539 0001537D 4C8D4E20                        lea r9, [rsi + 8*4]       ; address of argument 0
 29540 00015381 6A00                            push 0
 29541 00015383 4151                            push r9
 29542 00015385 4150                            push r8                   ; we'll use it when printing the params
 29543 00015387 B800000000                      mov rax, 0
 29544                                          
 29545                                          ENTER
    44 0001538C C8000000            <1>  enter 0, 0
    45 00015390 4883E4F0            <1>  and rsp, ~15
 29546 00015394 E8(00000000)                    call printf
 29547                                          LEAVE
    49 00015399 C9                  <1>  leave
 29548                                  
 29549                                  .L:
 29550 0001539A 488B0C24                        mov rcx, qword [rsp]
 29551 0001539E 4883F900                        cmp rcx, 0
 29552 000153A2 7467                            je .L_out
 29553 000153A4 48BF-                           mov rdi, fmt_frame_param_prefix
 29553 000153A6 [5320000000000000] 
 29554 000153AE 488B742410                      mov rsi, qword [rsp + 8*2]
 29555 000153B3 B800000000                      mov rax, 0
 29556                                          
 29557                                          ENTER
    44 000153B8 C8000000            <1>  enter 0, 0
    45 000153BC 4883E4F0            <1>  and rsp, ~15
 29558 000153C0 E8(00000000)                    call printf
 29559                                          LEAVE
    49 000153C5 C9                  <1>  leave
 29560                                  
 29561 000153C6 488B0C24                        mov rcx, qword [rsp]
 29562 000153CA 48FFC9                          dec rcx
 29563 000153CD 48890C24                        mov qword [rsp], rcx    ; dec arg count
 29564 000153D1 48FF442410                      inc qword [rsp + 8*2]   ; increment index of current arg
 29565 000153D6 488B7C2408                      mov rdi, qword [rsp + 8*1] ; addr of addr current arg
 29566 000153DB 4C8D4F08                        lea r9, [rdi + 8]          ; addr of next arg
 29567 000153DF 4C894C2408                      mov qword [rsp + 8*1], r9  ; backup addr of next arg
 29568 000153E4 488B3F                          mov rdi, qword [rdi]       ; addr of current arg
 29569 000153E7 E87B000000                      call print_sexpr
 29570 000153EC 48BF-                           mov rdi, fmt_newline
 29570 000153EE [7F20000000000000] 
 29571 000153F6 B800000000                      mov rax, 0
 29572                                          ENTER
    44 000153FB C8000000            <1>  enter 0, 0
    45 000153FF 4883E4F0            <1>  and rsp, ~15
 29573 00015403 E8(00000000)                    call printf
 29574                                          LEAVE
    49 00015408 C9                  <1>  leave
 29575 00015409 EB8F                            jmp .L
 29576                                  .L_out:
 29577 0001540B 48BF-                           mov rdi, fmt_frame_continue
 29577 0001540D [6420000000000000] 
 29578 00015415 B800000000                      mov rax, 0
 29579                                          ENTER
    44 0001541A C8000000            <1>  enter 0, 0
    45 0001541E 4883E4F0            <1>  and rsp, ~15
 29580 00015422 E8(00000000)                    call printf
 29581 00015427 E8(00000000)                    call getchar
 29582                                          LEAVE
    49 0001542C C9                  <1>  leave
 29583                                          
 29584 0001542D 48B8-                           mov rax, sob_void
 29584 0001542F [0000000000000000] 
 29585 00015437 C9                              leave
 29586 00015438 C21000                          ret AND_KILL_FRAME(0)
 29587                                          
 29588                                  print_sexpr_if_not_void:
 29589 0001543B 4881FF[00000000]        	cmp rdi, sob_void
 29590 00015442 7422                    	je .done
 29591 00015444 E81E000000              	call print_sexpr
 29592 00015449 48BF-                   	mov rdi, fmt_newline
 29592 0001544B [7F20000000000000] 
 29593 00015453 B800000000              	mov rax, 0
 29594                                  	ENTER
    44 00015458 C8000000            <1>  enter 0, 0
    45 0001545C 4883E4F0            <1>  and rsp, ~15
 29595 00015460 E8(00000000)            	call printf
 29596                                  	LEAVE
    49 00015465 C9                  <1>  leave
 29597                                  .done:
 29598 00015466 C3                      	ret
 29599                                  
 29600                                  section .data
 29601                                  fmt_frame:
 29602 0000201A 524250203D2025703B-             db `RBP = %p; ret addr = %p; lex env = %p; param count = %d\n\0`
 29602 00002023 207265742061646472-
 29602 0000202C 203D2025703B206C65-
 29602 00002035 7820656E76203D2025-
 29602 0000203E 703B20706172616D20-
 29602 00002047 636F756E74203D2025-
 29602 00002050 640A00             
 29603                                  fmt_frame_param_prefix:
 29604 00002053 3D3D5B706172616D20-             db `==[param %d]==> \0`
 29604 0000205C 25645D3D3D3E2000   
 29605                                  fmt_frame_continue:
 29606 00002064 486974203C456E7465-             db `Hit <Enter> to continue...\0`
 29606 0000206D 723E20746F20636F6E-
 29606 00002076 74696E75652E2E2E00 
 29607                                  fmt_newline:
 29608 0000207F 0A00                    	db `\n\0`
 29609                                  fmt_void:
 29610 00002081 233C766F69643E00        	db `#<void>\0`
 29611                                  fmt_nil:
 29612 00002089 282900                  	db `()\0`
 29613                                  fmt_boolean_false:
 29614 0000208C 236600                  	db `#f\0`
 29615                                  fmt_boolean_true:
 29616 0000208F 237400                  	db `#t\0`
 29617                                  fmt_char_backslash:
 29618 00002092 235C5C00                	db `#\\\\\0`
 29619                                  fmt_char_dquote:
 29620 00002096 235C2200                	db `#\\"\0`
 29621                                  fmt_char_simple:
 29622 0000209A 235C256300              	db `#\\%c\0`
 29623                                  fmt_char_null:
 29624 0000209F 235C6E756C00            	db `#\\nul\0`
 29625                                  fmt_char_bell:
 29626 000020A5 235C62656C6C00          	db `#\\bell\0`
 29627                                  fmt_char_backspace:
 29628 000020AC 235C6261636B737061-     	db `#\\backspace\0`
 29628 000020B5 636500             
 29629                                  fmt_char_tab:
 29630 000020B8 235C74616200            	db `#\\tab\0`
 29631                                  fmt_char_newline:
 29632 000020BE 235C6E65776C696E65-     	db `#\\newline\0`
 29632 000020C7 00                 
 29633                                  fmt_char_formfeed:
 29634 000020C8 235C7061676500          	db `#\\page\0`
 29635                                  fmt_char_return:
 29636 000020CF 235C72657475726E00      	db `#\\return\0`
 29637                                  fmt_char_escape:
 29638 000020D8 235C65736300            	db `#\\esc\0`
 29639                                  fmt_char_space:
 29640 000020DE 235C737061636500        	db `#\\space\0`
 29641                                  fmt_char_hex:
 29642 000020E6 235C782530325800        	db `#\\x%02X\0`
 29643                                  fmt_gensym:
 29644 000020EE 47256C6400                      db `G%ld\0`
 29645                                  fmt_closure:
 29646 000020F3 233C636C6F73757265-     	db `#<closure at 0x%08X env=0x%08X code=0x%08X>\0`
 29646 000020FC 206174203078253038-
 29646 00002105 5820656E763D307825-
 29646 0000210E 30385820636F64653D-
 29646 00002117 3078253038583E00   
 29647                                  fmt_lparen:
 29648 0000211F 2800                    	db `(\0`
 29649                                  fmt_dotted_pair:
 29650 00002121 202E2000                	db ` . \0`
 29651                                  fmt_rparen:
 29652 00002125 2900                    	db `)\0`
 29653                                  fmt_space:
 29654 00002127 2000                    	db ` \0`
 29655                                  fmt_empty_vector:
 29656 00002129 23282900                	db `#()\0`
 29657                                  fmt_vector:
 29658 0000212D 232800                  	db `#(\0`
 29659                                  fmt_real:
 29660 00002130 256600                  	db `%f\0`
 29661                                  fmt_fraction:
 29662 00002133 256C642F256C6400        	db `%ld/%ld\0`
 29663                                  fmt_zero:
 29664 0000213B 3000                    	db `0\0`
 29665                                  fmt_int:
 29666 0000213D 256C6400                	db `%ld\0`
 29667                                  fmt_unknown_scheme_object_error:
 29668 00002141 0A0A21212120457272-     	db `\n\n!!! Error: Unknown Scheme-object (RTTI 0x%02X) `
 29668 0000214A 6F723A20556E6B6E6F-
 29668 00002153 776E20536368656D65-
 29668 0000215C 2D6F626A6563742028-
 29668 00002165 525454492030782530-
 29668 0000216E 32582920           
 29669 00002172 617420616464726573-     	db `at address 0x%08X\n\n\0`
 29669 0000217B 73203078253038580A-
 29669 00002184 0A00               
 29670                                  fmt_dquote:
 29671 00002186 2200                    	db `\"\0`
 29672                                  fmt_string_char:
 29673 00002188 256300                          db `%c\0`
 29674                                  fmt_string_char_7:
 29675 0000218B 5C6100                          db `\\a\0`
 29676                                  fmt_string_char_8:
 29677 0000218E 5C6200                          db `\\b\0`
 29678                                  fmt_string_char_9:
 29679 00002191 5C7400                          db `\\t\0`
 29680                                  fmt_string_char_10:
 29681 00002194 5C6E00                          db `\\n\0`
 29682                                  fmt_string_char_11:
 29683 00002197 5C7600                          db `\\v\0`
 29684                                  fmt_string_char_12:
 29685 0000219A 5C6600                          db `\\f\0`
 29686                                  fmt_string_char_13:
 29687 0000219D 5C7200                          db `\\r\0`
 29688                                  fmt_string_char_34:
 29689 000021A0 5C2200                          db `\\"\0`
 29690                                  fmt_string_char_92:
 29691 000021A3 5C5C00                          db `\\\\\0`
 29692                                  fmt_string_char_hex:
 29693 000021A6 5C7825583B00                    db `\\x%X;\0`
 29694                                  
 29695                                  section .text
 29696                                  
 29697                                  print_sexpr:
 29698 00015467 C8000000                	enter 0, 0
 29699 0001546B 8A07                    	mov al, byte [rdi]
 29700 0001546D 3C00                    	cmp al, T_void
 29701 0001546F 7465                    	je .Lvoid
 29702 00015471 3C01                    	cmp al, T_nil
 29703 00015473 7470                    	je .Lnil
 29704 00015475 3C09                    	cmp al, T_boolean_false
 29705 00015477 747B                    	je .Lboolean_false
 29706 00015479 3C0A                    	cmp al, T_boolean_true
 29707 0001547B 0F8482000000            	je .Lboolean_true
 29708 00015481 3C02                    	cmp al, T_char
 29709 00015483 0F8489000000            	je .Lchar
 29710 00015489 3C41                    	cmp al, T_interned_symbol
 29711 0001548B 0F84CB010000            	je .Linterned_symbol
 29712 00015491 3C42                            cmp al, T_uninterned_symbol
 29713 00015493 0F84EF010000                    je .Luninterned_symbol
 29714 00015499 3C21                    	cmp al, T_pair
 29715 0001549B 0F84FA010000            	je .Lpair
 29716 000154A1 3C22                    	cmp al, T_vector
 29717 000154A3 0F84C3020000            	je .Lvector
 29718 000154A9 3C04                    	cmp al, T_closure
 29719 000154AB 0F8491010000            	je .Lclosure
 29720 000154B1 3C13                    	cmp al, T_real
 29721 000154B3 0F8454030000            	je .Lreal
 29722 000154B9 3C12                    	cmp al, T_fraction
 29723 000154BB 0F847A030000            	je .Lfraction
 29724 000154C1 3C11                    	cmp al, T_integer
 29725 000154C3 0F84B3030000            	je .Linteger
 29726 000154C9 3C03                    	cmp al, T_string
 29727 000154CB 0F84BE030000            	je .Lstring
 29728                                  
 29729 000154D1 E9F6040000              	jmp .Lunknown_sexpr_type
 29730                                  
 29731                                  .Lvoid:
 29732 000154D6 48BF-                   	mov rdi, fmt_void
 29732 000154D8 [8120000000000000] 
 29733 000154E0 E91A050000              	jmp .Lemit
 29734                                  
 29735                                  .Lnil:
 29736 000154E5 48BF-                   	mov rdi, fmt_nil
 29736 000154E7 [8920000000000000] 
 29737 000154EF E90B050000              	jmp .Lemit
 29738                                  
 29739                                  .Lboolean_false:
 29740 000154F4 48BF-                   	mov rdi, fmt_boolean_false
 29740 000154F6 [8C20000000000000] 
 29741 000154FE E9FC040000              	jmp .Lemit
 29742                                  
 29743                                  .Lboolean_true:
 29744 00015503 48BF-                   	mov rdi, fmt_boolean_true
 29744 00015505 [8F20000000000000] 
 29745 0001550D E9ED040000              	jmp .Lemit
 29746                                  
 29747                                  .Lchar:
 29748 00015512 8A4701                  	mov al, byte [rdi + 1]
 29749 00015515 3C20                    	cmp al, ' '
 29750 00015517 7E28                    	jle .Lchar_whitespace
 29751 00015519 3C5C                    	cmp al, 92 		; backslash
 29752 0001551B 0F847C000000            	je .Lchar_backslash
 29753 00015521 3C22                    	cmp al, '"'
 29754 00015523 0F8483000000            	je .Lchar_dquote
 29755 00015529 4825FF000000            	and rax, 255
 29756 0001552F 48BF-                   	mov rdi, fmt_char_simple
 29756 00015531 [9A20000000000000] 
 29757 00015539 4889C6                  	mov rsi, rax
 29758 0001553C E9BE040000              	jmp .Lemit
 29759                                  
 29760                                  .Lchar_whitespace:
 29761 00015541 3C00                    	cmp al, 0
 29762 00015543 7476                    	je .Lchar_null
 29763 00015545 3C07                    	cmp al, 7
 29764 00015547 0F847D000000            	je .Lchar_bell
 29765 0001554D 3C08                    	cmp al, 8
 29766 0001554F 0F8484000000            	je .Lchar_backspace
 29767 00015555 3C09                    	cmp al, 9
 29768 00015557 0F848B000000            	je .Lchar_tab
 29769 0001555D 3C0A                    	cmp al, 10
 29770 0001555F 0F8492000000            	je .Lchar_newline
 29771 00015565 3C0C                    	cmp al, 12
 29772 00015567 0F8499000000            	je .Lchar_formfeed
 29773 0001556D 3C0D                    	cmp al, 13
 29774 0001556F 0F84A0000000            	je .Lchar_return
 29775 00015575 3C1B                    	cmp al, 27
 29776 00015577 0F84A7000000            	je .Lchar_escape
 29777 0001557D 4825FF000000            	and rax, 255
 29778 00015583 3C20                    	cmp al, ' '
 29779 00015585 0F84A8000000            	je .Lchar_space
 29780 0001558B 48BF-                   	mov rdi, fmt_char_hex
 29780 0001558D [E620000000000000] 
 29781 00015595 4889C6                  	mov rsi, rax
 29782 00015598 E962040000              	jmp .Lemit	
 29783                                  
 29784                                  .Lchar_backslash:
 29785 0001559D 48BF-                   	mov rdi, fmt_char_backslash
 29785 0001559F [9220000000000000] 
 29786 000155A7 E953040000              	jmp .Lemit
 29787                                  
 29788                                  .Lchar_dquote:
 29789 000155AC 48BF-                   	mov rdi, fmt_char_dquote
 29789 000155AE [9620000000000000] 
 29790 000155B6 E944040000              	jmp .Lemit
 29791                                  
 29792                                  .Lchar_null:
 29793 000155BB 48BF-                   	mov rdi, fmt_char_null
 29793 000155BD [9F20000000000000] 
 29794 000155C5 E935040000              	jmp .Lemit
 29795                                  
 29796                                  .Lchar_bell:
 29797 000155CA 48BF-                   	mov rdi, fmt_char_bell
 29797 000155CC [A520000000000000] 
 29798 000155D4 E926040000              	jmp .Lemit
 29799                                  
 29800                                  .Lchar_backspace:
 29801 000155D9 48BF-                   	mov rdi, fmt_char_backspace
 29801 000155DB [AC20000000000000] 
 29802 000155E3 E917040000              	jmp .Lemit
 29803                                  
 29804                                  .Lchar_tab:
 29805 000155E8 48BF-                   	mov rdi, fmt_char_tab
 29805 000155EA [B820000000000000] 
 29806 000155F2 E908040000              	jmp .Lemit
 29807                                  
 29808                                  .Lchar_newline:
 29809 000155F7 48BF-                   	mov rdi, fmt_char_newline
 29809 000155F9 [BE20000000000000] 
 29810 00015601 E9F9030000              	jmp .Lemit
 29811                                  
 29812                                  .Lchar_formfeed:
 29813 00015606 48BF-                   	mov rdi, fmt_char_formfeed
 29813 00015608 [C820000000000000] 
 29814 00015610 E9EA030000              	jmp .Lemit
 29815                                  
 29816                                  .Lchar_return:
 29817 00015615 48BF-                   	mov rdi, fmt_char_return
 29817 00015617 [CF20000000000000] 
 29818 0001561F E9DB030000              	jmp .Lemit
 29819                                  
 29820                                  .Lchar_escape:
 29821 00015624 48BF-                   	mov rdi, fmt_char_escape
 29821 00015626 [D820000000000000] 
 29822 0001562E E9CC030000              	jmp .Lemit
 29823                                  
 29824                                  .Lchar_space:
 29825 00015633 48BF-                   	mov rdi, fmt_char_space
 29825 00015635 [DE20000000000000] 
 29826 0001563D E9BD030000              	jmp .Lemit
 29827                                  
 29828                                  .Lclosure:
 29829 00015642 4889FE                  	mov rsi, qword rdi
 29830 00015645 48BF-                   	mov rdi, fmt_closure
 29830 00015647 [F320000000000000] 
 29831 0001564F 488B5601                	mov rdx, SOB_CLOSURE_ENV(rsi)
 29832 00015653 488B4E09                	mov rcx, SOB_CLOSURE_CODE(rsi)
 29833 00015657 E9A3030000              	jmp .Lemit
 29834                                  
 29835                                  .Linterned_symbol:
 29836 0001565C 488B7F01                	mov rdi, qword [rdi + 1] ; sob_string
 29837 00015660 BE01000000              	mov rsi, 1		 ; size = 1 byte
 29838 00015665 488B5701                	mov rdx, qword [rdi + 1] ; length
 29839 00015669 488D7F09                	lea rdi, [rdi + 1 + 8]	 ; actual characters
 29840 0001566D 488B0C25[00000000]      	mov rcx, qword [stdout]	 ; FILE *
 29841                                  	ENTER
    44 00015675 C8000000            <1>  enter 0, 0
    45 00015679 4883E4F0            <1>  and rsp, ~15
 29842 0001567D E8(00000000)            	call fwrite
 29843                                  	LEAVE
    49 00015682 C9                  <1>  leave
 29844 00015683 E98C030000              	jmp .Lend
 29845                                  
 29846                                  .Luninterned_symbol:
 29847 00015688 488B7701                        mov rsi, qword [rdi + 1] ; gensym counter
 29848 0001568C 48BF-                           mov rdi, fmt_gensym
 29848 0001568E [EE20000000000000] 
 29849 00015696 E964030000                      jmp .Lemit
 29850                                  	
 29851                                  .Lpair:
 29852 0001569B 57                      	push rdi
 29853 0001569C 48BF-                   	mov rdi, fmt_lparen
 29853 0001569E [1F21000000000000] 
 29854 000156A6 B800000000              	mov rax, 0
 29855                                          ENTER
    44 000156AB C8000000            <1>  enter 0, 0
    45 000156AF 4883E4F0            <1>  and rsp, ~15
 29856 000156B3 E8(00000000)            	call printf
 29857                                          LEAVE
    49 000156B8 C9                  <1>  leave
 29858 000156B9 488B3C24                	mov rdi, qword [rsp] 	; pair
 29859 000156BD 488B7F01                	mov rdi, SOB_PAIR_CAR(rdi)
 29860 000156C1 E8A1FDFFFF              	call print_sexpr
 29861 000156C6 5F                      	pop rdi 		; pair
 29862 000156C7 488B7F09                	mov rdi, SOB_PAIR_CDR(rdi)
 29863                                  .Lcdr:
 29864 000156CB 8A07                    	mov al, byte [rdi]
 29865 000156CD 3C01                    	cmp al, T_nil
 29866 000156CF 7447                    	je .Lcdr_nil
 29867 000156D1 3C21                    	cmp al, T_pair
 29868 000156D3 7462                    	je .Lcdr_pair
 29869 000156D5 57                      	push rdi
 29870 000156D6 48BF-                   	mov rdi, fmt_dotted_pair
 29870 000156D8 [2121000000000000] 
 29871 000156E0 B800000000              	mov rax, 0
 29872                                          ENTER
    44 000156E5 C8000000            <1>  enter 0, 0
    45 000156E9 4883E4F0            <1>  and rsp, ~15
 29873 000156ED E8(00000000)            	call printf
 29874                                          LEAVE
    49 000156F2 C9                  <1>  leave
 29875 000156F3 5F                      	pop rdi
 29876 000156F4 E86EFDFFFF              	call print_sexpr
 29877 000156F9 48BF-                   	mov rdi, fmt_rparen
 29877 000156FB [2521000000000000] 
 29878 00015703 B800000000              	mov rax, 0
 29879                                          ENTER
    44 00015708 C8000000            <1>  enter 0, 0
    45 0001570C 4883E4F0            <1>  and rsp, ~15
 29880 00015710 E8(00000000)            	call printf
 29881                                          LEAVE
    49 00015715 C9                  <1>  leave
 29882 00015716 C9                      	leave
 29883 00015717 C3                      	ret
 29884                                  
 29885                                  .Lcdr_nil:
 29886 00015718 48BF-                   	mov rdi, fmt_rparen
 29886 0001571A [2521000000000000] 
 29887 00015722 B800000000              	mov rax, 0
 29888                                          ENTER
    44 00015727 C8000000            <1>  enter 0, 0
    45 0001572B 4883E4F0            <1>  and rsp, ~15
 29889 0001572F E8(00000000)            	call printf
 29890                                          LEAVE
    49 00015734 C9                  <1>  leave
 29891 00015735 C9                      	leave
 29892 00015736 C3                      	ret
 29893                                  
 29894                                  .Lcdr_pair:
 29895 00015737 57                      	push rdi
 29896 00015738 48BF-                   	mov rdi, fmt_space
 29896 0001573A [2721000000000000] 
 29897 00015742 B800000000              	mov rax, 0
 29898                                          ENTER
    44 00015747 C8000000            <1>  enter 0, 0
    45 0001574B 4883E4F0            <1>  and rsp, ~15
 29899 0001574F E8(00000000)            	call printf
 29900                                          LEAVE
    49 00015754 C9                  <1>  leave
 29901 00015755 488B3C24                	mov rdi, qword [rsp]
 29902 00015759 488B7F01                	mov rdi, SOB_PAIR_CAR(rdi)
 29903 0001575D E805FDFFFF              	call print_sexpr
 29904 00015762 5F                      	pop rdi
 29905 00015763 488B7F09                	mov rdi, SOB_PAIR_CDR(rdi)
 29906 00015767 E95FFFFFFF              	jmp .Lcdr
 29907                                  
 29908                                  .Lvector:
 29909 0001576C 488B4701                	mov rax, qword [rdi + 1] ; length
 29910 00015770 4883F800                	cmp rax, 0
 29911 00015774 0F8484000000            	je .Lvector_empty
 29912 0001577A 57                      	push rdi
 29913 0001577B 48BF-                   	mov rdi, fmt_vector
 29913 0001577D [2D21000000000000] 
 29914 00015785 B800000000              	mov rax, 0
 29915                                          ENTER
    44 0001578A C8000000            <1>  enter 0, 0
    45 0001578E 4883E4F0            <1>  and rsp, ~15
 29916 00015792 E8(00000000)            	call printf
 29917                                          LEAVE
    49 00015797 C9                  <1>  leave
 29918 00015798 488B3C24                	mov rdi, qword [rsp]
 29919 0001579C FF7701                  	push qword [rdi + 1]
 29920 0001579F 6A01                    	push 1
 29921 000157A1 488B7F09                	mov rdi, qword [rdi + 1 + 8] ; v[0]
 29922 000157A5 E8BDFCFFFF              	call print_sexpr
 29923                                  .Lvector_loop:
 29924                                  	; [rsp] index
 29925                                  	; [rsp + 8*1] limit
 29926                                  	; [rsp + 8*2] vector
 29927 000157AA 488B0424                	mov rax, qword [rsp]
 29928 000157AE 483B442408              	cmp rax, qword [rsp + 8*1]
 29929 000157B3 7436                    	je .Lvector_end
 29930 000157B5 48BF-                   	mov rdi, fmt_space
 29930 000157B7 [2721000000000000] 
 29931 000157BF B800000000              	mov rax, 0
 29932                                          ENTER
    44 000157C4 C8000000            <1>  enter 0, 0
    45 000157C8 4883E4F0            <1>  and rsp, ~15
 29933 000157CC E8(00000000)            	call printf
 29934                                          LEAVE
    49 000157D1 C9                  <1>  leave
 29935 000157D2 488B0424                	mov rax, qword [rsp]
 29936 000157D6 488B5C2410              	mov rbx, qword [rsp + 8*2]
 29937 000157DB 488B7CC309              	mov rdi, qword [rbx + 1 + 8 + 8 * rax] ; v[i]
 29938 000157E0 E882FCFFFF              	call print_sexpr
 29939 000157E5 48FF0424                	inc qword [rsp]
 29940 000157E9 EBBF                    	jmp .Lvector_loop
 29941                                  
 29942                                  .Lvector_end:
 29943 000157EB 4883C418                	add rsp, 8*3
 29944 000157EF 48BF-                   	mov rdi, fmt_rparen
 29944 000157F1 [2521000000000000] 
 29945 000157F9 E901020000              	jmp .Lemit	
 29946                                  
 29947                                  .Lvector_empty:
 29948 000157FE 48BF-                   	mov rdi, fmt_empty_vector
 29948 00015800 [2921000000000000] 
 29949 00015808 E9F2010000              	jmp .Lemit
 29950                                  
 29951                                  .Lreal:
 29952 0001580D FF7701                  	push qword [rdi + 1]
 29953 00015810 F20F100424              	movsd xmm0, qword [rsp]
 29954 00015815 4883C408                	add rsp, 8*1
 29955 00015819 48BF-                   	mov rdi, fmt_real
 29955 0001581B [3021000000000000] 
 29956 00015823 B801000000              	mov rax, 1
 29957                                  	ENTER
    44 00015828 C8000000            <1>  enter 0, 0
    45 0001582C 4883E4F0            <1>  and rsp, ~15
 29958 00015830 E8(00000000)            	call printf
 29959                                  	LEAVE
    49 00015835 C9                  <1>  leave
 29960 00015836 E9D9010000              	jmp .Lend
 29961                                  
 29962                                  .Lfraction:
 29963 0001583B 488B7701                	mov rsi, qword [rdi + 1]
 29964 0001583F 488B5709                	mov rdx, qword [rdi + 1 + 8]
 29965 00015843 4883FE00                	cmp rsi, 0
 29966 00015847 7415                    	je .Lrat_zero
 29967 00015849 4883FA01                	cmp rdx, 1
 29968 0001584D 741E                    	je .Lrat_int
 29969 0001584F 48BF-                   	mov rdi, fmt_fraction
 29969 00015851 [3321000000000000] 
 29970 00015859 E9A1010000              	jmp .Lemit
 29971                                  
 29972                                  .Lrat_zero:
 29973 0001585E 48BF-                   	mov rdi, fmt_zero
 29973 00015860 [3B21000000000000] 
 29974 00015868 E992010000              	jmp .Lemit
 29975                                  
 29976                                  .Lrat_int:
 29977 0001586D 48BF-                   	mov rdi, fmt_int
 29977 0001586F [3D21000000000000] 
 29978 00015877 E983010000              	jmp .Lemit
 29979                                  
 29980                                  .Linteger:
 29981 0001587C 488B7701                	mov rsi, qword [rdi + 1]
 29982 00015880 48BF-                   	mov rdi, fmt_int
 29982 00015882 [3D21000000000000] 
 29983 0001588A E970010000              	jmp .Lemit
 29984                                  
 29985                                  .Lstring:
 29986 0001588F 488D4709                	lea rax, [rdi + 1 + 8]
 29987 00015893 50                      	push rax
 29988 00015894 FF7701                  	push qword [rdi + 1]
 29989 00015897 48BF-                   	mov rdi, fmt_dquote
 29989 00015899 [8621000000000000] 
 29990 000158A1 B800000000              	mov rax, 0
 29991                                  	ENTER
    44 000158A6 C8000000            <1>  enter 0, 0
    45 000158AA 4883E4F0            <1>  and rsp, ~15
 29992 000158AE E8(00000000)            	call printf
 29993                                  	LEAVE
    49 000158B3 C9                  <1>  leave
 29994                                  .Lstring_loop:
 29995                                  	; qword [rsp]: limit
 29996                                  	; qword [rsp + 8*1]: char *
 29997 000158B4 48833C2400              	cmp qword [rsp], 0
 29998 000158B9 0F84FD000000            	je .Lstring_end
 29999 000158BF 488B442408              	mov rax, qword [rsp + 8*1]
 30000 000158C4 8A00                    	mov al, byte [rax]
 30001 000158C6 4825FF000000            	and rax, 255
 30002 000158CC 3C07                    	cmp al, 7
 30003 000158CE 7468                            je .Lstring_char_7
 30004 000158D0 3C08                            cmp al, 8
 30005 000158D2 7470                            je .Lstring_char_8
 30006 000158D4 3C09                            cmp al, 9
 30007 000158D6 7478                            je .Lstring_char_9
 30008 000158D8 3C0A                            cmp al, 10
 30009 000158DA 0F847C000000                    je .Lstring_char_10
 30010 000158E0 3C0B                            cmp al, 11
 30011 000158E2 0F8480000000                    je .Lstring_char_11
 30012 000158E8 3C0C                            cmp al, 12
 30013 000158EA 0F8484000000                    je .Lstring_char_12
 30014 000158F0 3C0D                            cmp al, 13
 30015 000158F2 0F8488000000                    je .Lstring_char_13
 30016 000158F8 3C22                            cmp al, 34
 30017 000158FA 0F848C000000                    je .Lstring_char_34
 30018 00015900 3C5C                            cmp al, 92              ;         je .Lstring_char_92
 30020 00015902 3C20                            cmp al, ' '
 30021 00015904 0F8CA0000000                    jl .Lstring_char_hex
 30022 0001590A 48BF-                           mov rdi, fmt_string_char
 30022 0001590C [8821000000000000] 
 30023 00015914 4889C6                          mov rsi, rax
 30024                                  .Lstring_char_emit:
 30025 00015917 B800000000                      mov rax, 0
 30026                                          ENTER
    44 0001591C C8000000            <1>  enter 0, 0
    45 00015920 4883E4F0            <1>  and rsp, ~15
 30027 00015924 E8(00000000)                    call printf
 30028                                          LEAVE
    49 00015929 C9                  <1>  leave
 30029 0001592A 48FF0C24                        dec qword [rsp]
 30030 0001592E 48FF442408                      inc qword [rsp + 8*1]
 30031 00015933 E97CFFFFFF                      jmp .Lstring_loop
 30032                                  
 30033                                  .Lstring_char_7:
 30034 00015938 48BF-                           mov rdi, fmt_string_char_7
 30034 0001593A [8B21000000000000] 
 30035 00015942 EBD3                            jmp .Lstring_char_emit
 30036                                  
 30037                                  .Lstring_char_8:
 30038 00015944 48BF-                           mov rdi, fmt_string_char_8
 30038 00015946 [8E21000000000000] 
 30039 0001594E EBC7                            jmp .Lstring_char_emit
 30040                                          
 30041                                  .Lstring_char_9:
 30042 00015950 48BF-                           mov rdi, fmt_string_char_9
 30042 00015952 [9121000000000000] 
 30043 0001595A EBBB                            jmp .Lstring_char_emit
 30044                                  
 30045                                  .Lstring_char_10:
 30046 0001595C 48BF-                           mov rdi, fmt_string_char_10
 30046 0001595E [9421000000000000] 
 30047 00015966 EBAF                            jmp .Lstring_char_emit
 30048                                  
 30049                                  .Lstring_char_11:
 30050 00015968 48BF-                           mov rdi, fmt_string_char_11
 30050 0001596A [9721000000000000] 
 30051 00015972 EBA3                            jmp .Lstring_char_emit
 30052                                  
 30053                                  .Lstring_char_12:
 30054 00015974 48BF-                           mov rdi, fmt_string_char_12
 30054 00015976 [9A21000000000000] 
 30055 0001597E EB97                            jmp .Lstring_char_emit
 30056                                  
 30057                                  .Lstring_char_13:
 30058 00015980 48BF-                           mov rdi, fmt_string_char_13
 30058 00015982 [9D21000000000000] 
 30059 0001598A EB8B                            jmp .Lstring_char_emit
 30060                                  
 30061                                  .Lstring_char_34:
 30062 0001598C 48BF-                           mov rdi, fmt_string_char_34
 30062 0001598E [A021000000000000] 
 30063 00015996 E97CFFFFFF                      jmp .Lstring_char_emit
 30064                                  
 30065                                  .Lstring_char_92:
 30066 0001599B 48BF-                           mov rdi, fmt_string_char_92
 30066 0001599D [A321000000000000] 
 30067 000159A5 E96DFFFFFF                      jmp .Lstring_char_emit
 30068                                  
 30069                                  .Lstring_char_hex:
 30070 000159AA 48BF-                           mov rdi, fmt_string_char_hex
 30070 000159AC [A621000000000000] 
 30071 000159B4 4889C6                          mov rsi, rax
 30072 000159B7 E95BFFFFFF                      jmp .Lstring_char_emit        
 30073                                  
 30074                                  .Lstring_end:
 30075 000159BC 4883C410                	add rsp, 8 * 2
 30076 000159C0 48BF-                   	mov rdi, fmt_dquote
 30076 000159C2 [8621000000000000] 
 30077 000159CA EB33                    	jmp .Lemit
 30078                                  
 30079                                  .Lunknown_sexpr_type:
 30080 000159CC 48BE-                   	mov rsi, fmt_unknown_scheme_object_error
 30080 000159CE [4121000000000000] 
 30081 000159D6 4825FF000000            	and rax, 255
 30082 000159DC 4889C2                  	mov rdx, rax
 30083 000159DF 4889F9                  	mov rcx, rdi
 30084 000159E2 488B3C25[00000000]      	mov rdi, qword [stderr]
 30085 000159EA B800000000              	mov rax, 0
 30086                                          ENTER
    44 000159EF C8000000            <1>  enter 0, 0
    45 000159F3 4883E4F0            <1>  and rsp, ~15
 30087 000159F7 E8(00000000)            	call fprintf
 30088                                          LEAVE
    49 000159FC C9                  <1>  leave
 30089 000159FD C9                              leave
 30090 000159FE C3                              ret
 30091                                  
 30092                                  .Lemit:
 30093 000159FF B800000000              	mov rax, 0
 30094                                          ENTER
    44 00015A04 C8000000            <1>  enter 0, 0
    45 00015A08 4883E4F0            <1>  and rsp, ~15
 30095 00015A0C E8(00000000)            	call printf
 30096                                          LEAVE
    49 00015A11 C9                  <1>  leave
 30097 00015A12 EB00                    	jmp .Lend
 30098                                  
 30099                                  .Lend:
 30100                                  	LEAVE
    49 00015A14 C9                  <1>  leave
 30101 00015A15 C3                      	ret
 30102                                  
 30103                                  ;;; rdi: address of free variable
 30104                                  ;;; rsi: address of code-pointer
 30105                                  bind_primitive:
 30106 00015A16 C8000000                        enter 0, 0
 30107 00015A1A 57                              push rdi
 30108 00015A1B BF11000000                      mov rdi, (1 + 8 + 8)
 30109 00015A20 E8C1F7FFFF                      call malloc
 30110 00015A25 5F                              pop rdi
 30111 00015A26 C60004                          mov byte [rax], T_closure
 30112 00015A29 48C7400100000000                mov SOB_CLOSURE_ENV(rax), 0 ; dummy, lexical environment
 30113 00015A31 48897009                        mov SOB_CLOSURE_CODE(rax), rsi ; code pointer
 30114 00015A35 488907                          mov qword [rdi], rax
 30115 00015A38 48B8-                           mov rax, sob_void
 30115 00015A3A [0000000000000000] 
 30116 00015A42 C9                              leave
 30117 00015A43 C3                              ret
 30118                                  
 30119                                  L_code_ptr_ash:
 30120 00015A44 C8000000                        enter 0, 0
 30121 00015A48 48837D1802                      cmp COUNT, 2
 30122 00015A4D 0F859F140000                    jne L_error_arg_count_2
 30123 00015A53 488B7D20                        mov rdi, PARAM(0)
 30124                                          assert_integer(rdi)
    53 00015A57 803F11              <1>  cmp byte [%1], %2
    54 00015A5A 0F8531150000        <1>  jne L_error_incorrect_type
 30125 00015A60 488B4D28                        mov rcx, PARAM(1)
 30126                                          assert_integer(rcx)
    53 00015A64 803911              <1>  cmp byte [%1], %2
    54 00015A67 0F8524150000        <1>  jne L_error_incorrect_type
 30127 00015A6D 488B7F01                        mov rdi, qword [rdi + 1]
 30128 00015A71 488B4901                        mov rcx, qword [rcx + 1]
 30129 00015A75 4883F900                        cmp rcx, 0
 30130 00015A79 7C0F                            jl .L_negative
 30131                                  .L_loop_positive:
 30132 00015A7B 4883F900                        cmp rcx, 0
 30133 00015A7F 741B                            je .L_exit
 30134 00015A81 48D3E7                          sal rdi, cl
 30135 00015A84 48C1E908                        shr rcx, 8
 30136 00015A88 EBF1                            jmp .L_loop_positive
 30137                                  .L_negative:
 30138 00015A8A 48F7D9                          neg rcx
 30139                                  .L_loop_negative:
 30140 00015A8D 4883F900                        cmp rcx, 0
 30141 00015A91 7409                            je .L_exit
 30142 00015A93 48D3FF                          sar rdi, cl
 30143 00015A96 48C1E908                        shr rcx, 8
 30144 00015A9A EBF1                            jmp .L_loop_negative
 30145                                  .L_exit:
 30146 00015A9C E86B130000                      call make_integer
 30147 00015AA1 C9                              leave
 30148 00015AA2 C22000                          ret AND_KILL_FRAME(2)
 30149                                  
 30150                                  L_code_ptr_logand:
 30151 00015AA5 C8000000                        enter 0, 0
 30152 00015AA9 48837D1802                      cmp COUNT, 2
 30153 00015AAE 0F853E140000                    jne L_error_arg_count_2
 30154 00015AB4 4C8B4520                        mov r8, PARAM(0)
 30155                                          assert_integer(r8)
    53 00015AB8 41803811            <1>  cmp byte [%1], %2
    54 00015ABC 0F85CF140000        <1>  jne L_error_incorrect_type
 30156 00015AC2 4C8B4D28                        mov r9, PARAM(1)
 30157                                          assert_integer(r9)
    53 00015AC6 41803911            <1>  cmp byte [%1], %2
    54 00015ACA 0F85C1140000        <1>  jne L_error_incorrect_type
 30158 00015AD0 498B7801                        mov rdi, qword [r8 + 1]
 30159 00015AD4 49237901                        and rdi, qword [r9 + 1]
 30160 00015AD8 E82F130000                      call make_integer
 30161 00015ADD C9                              leave
 30162 00015ADE C22000                          ret AND_KILL_FRAME(2)
 30163                                  
 30164                                  L_code_ptr_logor:
 30165 00015AE1 C8000000                        enter 0, 0
 30166 00015AE5 48837D1802                      cmp COUNT, 2
 30167 00015AEA 0F8502140000                    jne L_error_arg_count_2
 30168 00015AF0 4C8B4520                        mov r8, PARAM(0)
 30169                                          assert_integer(r8)
    53 00015AF4 41803811            <1>  cmp byte [%1], %2
    54 00015AF8 0F8593140000        <1>  jne L_error_incorrect_type
 30170 00015AFE 4C8B4D28                        mov r9, PARAM(1)
 30171                                          assert_integer(r9)
    53 00015B02 41803911            <1>  cmp byte [%1], %2
    54 00015B06 0F8585140000        <1>  jne L_error_incorrect_type
 30172 00015B0C 498B7801                        mov rdi, qword [r8 + 1]
 30173 00015B10 490B7901                        or rdi, qword [r9 + 1]
 30174 00015B14 E8F3120000                      call make_integer
 30175 00015B19 C9                              leave
 30176 00015B1A C22000                          ret AND_KILL_FRAME(2)
 30177                                  
 30178                                  L_code_ptr_logxor:
 30179 00015B1D C8000000                        enter 0, 0
 30180 00015B21 48837D1802                      cmp COUNT, 2
 30181 00015B26 0F85C6130000                    jne L_error_arg_count_2
 30182 00015B2C 4C8B4520                        mov r8, PARAM(0)
 30183                                          assert_integer(r8)
    53 00015B30 41803811            <1>  cmp byte [%1], %2
    54 00015B34 0F8557140000        <1>  jne L_error_incorrect_type
 30184 00015B3A 4C8B4D28                        mov r9, PARAM(1)
 30185                                          assert_integer(r9)
    53 00015B3E 41803911            <1>  cmp byte [%1], %2
    54 00015B42 0F8549140000        <1>  jne L_error_incorrect_type
 30186 00015B48 498B7801                        mov rdi, qword [r8 + 1]
 30187 00015B4C 49337901                        xor rdi, qword [r9 + 1]
 30188 00015B50 E8B7120000                      call make_integer
 30189                                          LEAVE
    49 00015B55 C9                  <1>  leave
 30190 00015B56 C22000                          ret AND_KILL_FRAME(2)
 30191                                  
 30192                                  L_code_ptr_lognot:
 30193 00015B59 C8000000                        enter 0, 0
 30194 00015B5D 48837D1801                      cmp COUNT, 1
 30195 00015B62 0F8555130000                    jne L_error_arg_count_1
 30196 00015B68 4C8B4520                        mov r8, PARAM(0)
 30197                                          assert_integer(r8)
    53 00015B6C 41803811            <1>  cmp byte [%1], %2
    54 00015B70 0F851B140000        <1>  jne L_error_incorrect_type
 30198 00015B76 498B7801                        mov rdi, qword [r8 + 1]
 30199 00015B7A 48F7D7                          not rdi
 30200 00015B7D E88A120000                      call make_integer
 30201 00015B82 C9                              leave
 30202 00015B83 C21800                          ret AND_KILL_FRAME(1)
 30203                                  
 30204                                  L_code_ptr_bin_apply:
 30205                                          ;; fill in for final project
 30206                                          ;; Expect exactly two arguments
 30207 00015B86 48837C241002                    cmp qword [rsp + 8 * 2], 2
 30208 00015B8C 0F8560130000                    jne L_error_arg_count_2
 30209                                  
 30210                                          ;; Load the second argument, which must be a closure
 30211 00015B92 4C8B642418                      mov r12, qword [rsp + 8 * 3]
 30212                                          assert_closure(r12)
    53 00015B97 41803C2404          <1>  cmp byte [%1], %2
    54 00015B9C 0F85EF130000        <1>  jne L_error_incorrect_type
 30213                                  
 30214                                          ;; r10 points to the portion of the stack that holds the list
 30215 00015BA2 4C8D542420                      lea r10, [rsp + 8 * 4]
 30216 00015BA7 4D8B1A                          mov r11, qword [r10]
 30217 00015BAA 4C8B0C24                        mov r9, qword [rsp]
 30218                                  
 30219                                          ;; Count how many elements are in the list
 30220 00015BAE B900000000                      mov rcx, 0
 30221 00015BB3 4C89DE                          mov rsi, r11
 30222                                  .count_loop:
 30223 00015BB6 4881FE[01000000]                cmp rsi, sob_nil
 30224 00015BBD 7412                            je .count_done
 30225                                          assert_pair(rsi)
    53 00015BBF 803E21              <1>  cmp byte [%1], %2
    54 00015BC2 0F85C9130000        <1>  jne L_error_incorrect_type
 30226 00015BC8 48FFC1                          inc rcx
 30227 00015BCB 488B7609                        mov rsi, SOB_PAIR_CDR(rsi)
 30228 00015BCF EBE5                            jmp .count_loop
 30229                                  
 30230                                  .count_done:
 30231                                          ;; Allocate space on the stack for the new frame, minus the first 2 items
 30232 00015BD1 488D1CCDF0FFFFFF                lea rbx, [8 * (rcx - 2)]
 30233 00015BD9 4829DC                          sub rsp, rbx
 30234                                  
 30235                                          ;; Prepare to store the new frame at [rsp]
 30236 00015BDC 4889E7                          mov rdi, rsp
 30237 00015BDF FC                              cld
 30238                                  
 30239                                          ;; 1) Place the old return address
 30240 00015BE0 4C89C8                          mov rax, r9
 30241 00015BE3 48AB                            stosq
 30242                                  
 30243                                          ;; 2) Place the closure's environment
 30244 00015BE5 498B442401                      mov rax, SOB_CLOSURE_ENV(r12)
 30245 00015BEA 48AB                            stosq
 30246                                  
 30247                                          ;; 3) Place the argument count
 30248 00015BEC 4889C8                          mov rax, rcx
 30249 00015BEF 48AB                            stosq
 30250                                  
 30251                                  .args_loop:
 30252 00015BF1 4883F900                        cmp rcx, 0
 30253 00015BF5 740F                            je .args_done
 30254 00015BF7 498B4301                        mov rax, SOB_PAIR_CAR(r11)
 30255 00015BFB 48AB                            stosq
 30256 00015BFD 4D8B5B09                        mov r11, SOB_PAIR_CDR(r11)
 30257 00015C01 48FFC9                          dec rcx
 30258 00015C04 EBEB                            jmp .args_loop
 30259                                  
 30260                                  .args_done:
 30261                                          ;; Minor pointer adjustment check
 30262 00015C06 4883EF08                        sub rdi, 8
 30263 00015C0A 4939FA                          cmp r10, rdi
 30264 00015C0D 7505                            jne .stack_corrupt
 30265 00015C0F 41FF642409                      jmp SOB_CLOSURE_CODE(r12)
 30266                                  
 30267                                  .stack_corrupt:
 30268 00015C14 CC                              int3
 30269                                  
 30270                                  L_code_ptr_is_null:
 30271 00015C15 C8000000                        enter 0, 0
 30272 00015C19 48837D1801                      cmp COUNT, 1
 30273 00015C1E 0F8599120000                    jne L_error_arg_count_1
 30274 00015C24 488B4520                        mov rax, PARAM(0)
 30275 00015C28 803801                          cmp byte [rax], T_nil
 30276 00015C2B 750C                            jne .L_false
 30277 00015C2D 48B8-                           mov rax, sob_boolean_true
 30277 00015C2F [0300000000000000] 
 30278 00015C37 EB0A                            jmp .L_end
 30279                                  .L_false:
 30280 00015C39 48B8-                           mov rax, sob_boolean_false
 30280 00015C3B [0200000000000000] 
 30281                                  .L_end:
 30282 00015C43 C9                              leave
 30283 00015C44 C21800                          ret AND_KILL_FRAME(1)
 30284                                  
 30285                                  L_code_ptr_is_pair:
 30286 00015C47 C8000000                        enter 0, 0
 30287 00015C4B 48837D1801                      cmp COUNT, 1
 30288 00015C50 0F8567120000                    jne L_error_arg_count_1
 30289 00015C56 488B4520                        mov rax, PARAM(0)
 30290 00015C5A 803821                          cmp byte [rax], T_pair
 30291 00015C5D 750C                            jne .L_false
 30292 00015C5F 48B8-                           mov rax, sob_boolean_true
 30292 00015C61 [0300000000000000] 
 30293 00015C69 EB0A                            jmp .L_end
 30294                                  .L_false:
 30295 00015C6B 48B8-                           mov rax, sob_boolean_false
 30295 00015C6D [0200000000000000] 
 30296                                  .L_end:
 30297 00015C75 C9                              leave
 30298 00015C76 C21800                          ret AND_KILL_FRAME(1)
 30299                                          
 30300                                  L_code_ptr_is_void:
 30301 00015C79 C8000000                        enter 0, 0
 30302 00015C7D 48837D1801                      cmp COUNT, 1
 30303 00015C82 0F8535120000                    jne L_error_arg_count_1
 30304 00015C88 488B4520                        mov rax, PARAM(0)
 30305 00015C8C 803800                          cmp byte [rax], T_void
 30306 00015C8F 750C                            jne .L_false
 30307 00015C91 48B8-                           mov rax, sob_boolean_true
 30307 00015C93 [0300000000000000] 
 30308 00015C9B EB0A                            jmp .L_end
 30309                                  .L_false:
 30310 00015C9D 48B8-                           mov rax, sob_boolean_false
 30310 00015C9F [0200000000000000] 
 30311                                  .L_end:
 30312 00015CA7 C9                              leave
 30313 00015CA8 C21800                          ret AND_KILL_FRAME(1)
 30314                                  
 30315                                  L_code_ptr_is_char:
 30316 00015CAB C8000000                        enter 0, 0
 30317 00015CAF 48837D1801                      cmp COUNT, 1
 30318 00015CB4 0F8503120000                    jne L_error_arg_count_1
 30319 00015CBA 488B4520                        mov rax, PARAM(0)
 30320 00015CBE 803802                          cmp byte [rax], T_char
 30321 00015CC1 750C                            jne .L_false
 30322 00015CC3 48B8-                           mov rax, sob_boolean_true
 30322 00015CC5 [0300000000000000] 
 30323 00015CCD EB0A                            jmp .L_end
 30324                                  .L_false:
 30325 00015CCF 48B8-                           mov rax, sob_boolean_false
 30325 00015CD1 [0200000000000000] 
 30326                                  .L_end:
 30327 00015CD9 C9                              leave
 30328 00015CDA C21800                          ret AND_KILL_FRAME(1)
 30329                                  
 30330                                  L_code_ptr_is_string:
 30331 00015CDD C8000000                        enter 0, 0
 30332 00015CE1 48837D1801                      cmp COUNT, 1
 30333 00015CE6 0F85D1110000                    jne L_error_arg_count_1
 30334 00015CEC 488B4520                        mov rax, PARAM(0)
 30335 00015CF0 803803                          cmp byte [rax], T_string
 30336 00015CF3 750C                            jne .L_false
 30337 00015CF5 48B8-                           mov rax, sob_boolean_true
 30337 00015CF7 [0300000000000000] 
 30338 00015CFF EB0A                            jmp .L_end
 30339                                  .L_false:
 30340 00015D01 48B8-                           mov rax, sob_boolean_false
 30340 00015D03 [0200000000000000] 
 30341                                  .L_end:
 30342 00015D0B C9                              leave
 30343 00015D0C C21800                          ret AND_KILL_FRAME(1)
 30344                                  
 30345                                  L_code_ptr_is_symbol:
 30346 00015D0F C8000000                        enter 0, 0
 30347 00015D13 48837D1801                      cmp COUNT, 1
 30348 00015D18 0F859F110000                    jne L_error_arg_count_1
 30349 00015D1E 4C8B4520                        mov r8, PARAM(0)
 30350 00015D22 41802040                        and byte [r8], T_symbol
 30351 00015D26 740C                            jz .L_false
 30352 00015D28 48B8-                           mov rax, sob_boolean_true
 30352 00015D2A [0300000000000000] 
 30353 00015D32 EB0A                            jmp .L_exit
 30354                                  .L_false:
 30355 00015D34 48B8-                           mov rax, sob_boolean_false
 30355 00015D36 [0200000000000000] 
 30356                                  .L_exit:
 30357 00015D3E C9                              leave
 30358 00015D3F C21800                          ret AND_KILL_FRAME(1)
 30359                                  
 30360                                  L_code_ptr_is_uninterned_symbol:
 30361 00015D42 C8000000                        enter 0, 0
 30362 00015D46 48837D1801                      cmp COUNT, 1
 30363 00015D4B 0F856C110000                    jne L_error_arg_count_1
 30364 00015D51 4C8B4520                        mov r8, PARAM(0)
 30365 00015D55 41803842                        cmp byte [r8], T_uninterned_symbol
 30366 00015D59 750C                            jne .L_false
 30367 00015D5B 48B8-                           mov rax, sob_boolean_true
 30367 00015D5D [0300000000000000] 
 30368 00015D65 EB0A                            jmp .L_exit
 30369                                  .L_false:
 30370 00015D67 48B8-                           mov rax, sob_boolean_false
 30370 00015D69 [0200000000000000] 
 30371                                  .L_exit:
 30372 00015D71 C9                              leave
 30373 00015D72 C21800                          ret AND_KILL_FRAME(1)
 30374                                  
 30375                                  L_code_ptr_is_interned_symbol:
 30376 00015D75 C8000000                        enter 0, 0
 30377 00015D79 48837D1801                      cmp COUNT, 1
 30378 00015D7E 0F8539110000                    jne L_error_arg_count_1
 30379 00015D84 488B4520                        mov rax, PARAM(0)
 30380 00015D88 803841                          cmp byte [rax], T_interned_symbol
 30381 00015D8B 750C                            jne .L_false
 30382 00015D8D 48B8-                           mov rax, sob_boolean_true
 30382 00015D8F [0300000000000000] 
 30383 00015D97 EB0A                            jmp .L_end
 30384                                  .L_false:
 30385 00015D99 48B8-                           mov rax, sob_boolean_false
 30385 00015D9B [0200000000000000] 
 30386                                  .L_end:
 30387 00015DA3 C9                              leave
 30388 00015DA4 C21800                          ret AND_KILL_FRAME(1)
 30389                                  
 30390                                  L_code_ptr_gensym:
 30391 00015DA7 C8000000                        enter 0, 0
 30392 00015DAB 48837D1800                      cmp COUNT, 0
 30393 00015DB0 0F85D2100000                    jne L_error_arg_count_0
 30394 00015DB6 48FF0425[AC210000]              inc qword [gensym_count]
 30395 00015DBE BF09000000                      mov rdi, (1 + 8)
 30396 00015DC3 E81EF4FFFF                      call malloc
 30397 00015DC8 C60042                          mov byte [rax], T_uninterned_symbol
 30398 00015DCB 488B0C25[AC210000]              mov rcx, qword [gensym_count]
 30399 00015DD3 48894801                        mov qword [rax + 1], rcx
 30400 00015DD7 C9                              leave
 30401 00015DD8 C21000                          ret AND_KILL_FRAME(0)
 30402                                  
 30403                                  L_code_ptr_is_vector:
 30404 00015DDB C8000000                        enter 0, 0
 30405 00015DDF 48837D1801                      cmp COUNT, 1
 30406 00015DE4 0F85D3100000                    jne L_error_arg_count_1
 30407 00015DEA 488B4520                        mov rax, PARAM(0)
 30408 00015DEE 803822                          cmp byte [rax], T_vector
 30409 00015DF1 750C                            jne .L_false
 30410 00015DF3 48B8-                           mov rax, sob_boolean_true
 30410 00015DF5 [0300000000000000] 
 30411 00015DFD EB0A                            jmp .L_end
 30412                                  .L_false:
 30413 00015DFF 48B8-                           mov rax, sob_boolean_false
 30413 00015E01 [0200000000000000] 
 30414                                  .L_end:
 30415 00015E09 C9                              leave
 30416 00015E0A C21800                          ret AND_KILL_FRAME(1)
 30417                                  
 30418                                  L_code_ptr_is_closure:
 30419 00015E0D C8000000                        enter 0, 0
 30420 00015E11 48837D1801                      cmp COUNT, 1
 30421 00015E16 0F85A1100000                    jne L_error_arg_count_1
 30422 00015E1C 488B4520                        mov rax, PARAM(0)
 30423 00015E20 803804                          cmp byte [rax], T_closure
 30424 00015E23 750C                            jne .L_false
 30425 00015E25 48B8-                           mov rax, sob_boolean_true
 30425 00015E27 [0300000000000000] 
 30426 00015E2F EB0A                            jmp .L_end
 30427                                  .L_false:
 30428 00015E31 48B8-                           mov rax, sob_boolean_false
 30428 00015E33 [0200000000000000] 
 30429                                  .L_end:
 30430 00015E3B C9                              leave
 30431 00015E3C C21800                          ret AND_KILL_FRAME(1)
 30432                                  
 30433                                  L_code_ptr_is_real:
 30434 00015E3F C8000000                        enter 0, 0
 30435 00015E43 48837D1801                      cmp COUNT, 1
 30436 00015E48 0F856F100000                    jne L_error_arg_count_1
 30437 00015E4E 488B4520                        mov rax, PARAM(0)
 30438 00015E52 803813                          cmp byte [rax], T_real
 30439 00015E55 750C                            jne .L_false
 30440 00015E57 48B8-                           mov rax, sob_boolean_true
 30440 00015E59 [0300000000000000] 
 30441 00015E61 EB0A                            jmp .L_end
 30442                                  .L_false:
 30443 00015E63 48B8-                           mov rax, sob_boolean_false
 30443 00015E65 [0200000000000000] 
 30444                                  .L_end:
 30445 00015E6D C9                              leave
 30446 00015E6E C21800                          ret AND_KILL_FRAME(1)
 30447                                  
 30448                                  L_code_ptr_is_fraction:
 30449 00015E71 C8000000                        enter 0, 0
 30450 00015E75 48837D1801                      cmp COUNT, 1
 30451 00015E7A 0F853D100000                    jne L_error_arg_count_1
 30452 00015E80 488B4520                        mov rax, PARAM(0)
 30453 00015E84 803812                          cmp byte [rax], T_fraction
 30454 00015E87 750C                            jne .L_false
 30455 00015E89 48B8-                           mov rax, sob_boolean_true
 30455 00015E8B [0300000000000000] 
 30456 00015E93 EB0A                            jmp .L_end
 30457                                  .L_false:
 30458 00015E95 48B8-                           mov rax, sob_boolean_false
 30458 00015E97 [0200000000000000] 
 30459                                  .L_end:
 30460 00015E9F C9                              leave
 30461 00015EA0 C21800                          ret AND_KILL_FRAME(1)
 30462                                  
 30463                                  L_code_ptr_is_boolean:
 30464 00015EA3 C8000000                        enter 0, 0
 30465 00015EA7 48837D1801                      cmp COUNT, 1
 30466 00015EAC 0F850B100000                    jne L_error_arg_count_1
 30467 00015EB2 488B4520                        mov rax, PARAM(0)
 30468 00015EB6 8A18                            mov bl, byte [rax]
 30469 00015EB8 80E308                          and bl, T_boolean
 30470 00015EBB 740C                            je .L_false
 30471 00015EBD 48B8-                           mov rax, sob_boolean_true
 30471 00015EBF [0300000000000000] 
 30472 00015EC7 EB0A                            jmp .L_end
 30473                                  .L_false:
 30474 00015EC9 48B8-                           mov rax, sob_boolean_false
 30474 00015ECB [0200000000000000] 
 30475                                  .L_end:
 30476 00015ED3 C9                              leave
 30477 00015ED4 C21800                          ret AND_KILL_FRAME(1)
 30478                                          
 30479                                  L_code_ptr_is_boolean_false:
 30480 00015ED7 C8000000                        enter 0, 0
 30481 00015EDB 48837D1801                      cmp COUNT, 1
 30482 00015EE0 0F85D70F0000                    jne L_error_arg_count_1
 30483 00015EE6 488B4520                        mov rax, PARAM(0)
 30484 00015EEA 8A18                            mov bl, byte [rax]
 30485 00015EEC 80FB09                          cmp bl, T_boolean_false
 30486 00015EEF 750C                            jne .L_false
 30487 00015EF1 48B8-                           mov rax, sob_boolean_true
 30487 00015EF3 [0300000000000000] 
 30488 00015EFB EB0A                            jmp .L_end
 30489                                  .L_false:
 30490 00015EFD 48B8-                           mov rax, sob_boolean_false
 30490 00015EFF [0200000000000000] 
 30491                                  .L_end:
 30492 00015F07 C9                              leave
 30493 00015F08 C21800                          ret AND_KILL_FRAME(1)
 30494                                  
 30495                                  L_code_ptr_is_boolean_true:
 30496 00015F0B C8000000                        enter 0, 0
 30497 00015F0F 48837D1801                      cmp COUNT, 1
 30498 00015F14 0F85A30F0000                    jne L_error_arg_count_1
 30499 00015F1A 488B4520                        mov rax, PARAM(0)
 30500 00015F1E 8A18                            mov bl, byte [rax]
 30501 00015F20 80FB0A                          cmp bl, T_boolean_true
 30502 00015F23 750C                            jne .L_false
 30503 00015F25 48B8-                           mov rax, sob_boolean_true
 30503 00015F27 [0300000000000000] 
 30504 00015F2F EB0A                            jmp .L_end
 30505                                  .L_false:
 30506 00015F31 48B8-                           mov rax, sob_boolean_false
 30506 00015F33 [0200000000000000] 
 30507                                  .L_end:
 30508 00015F3B C9                              leave
 30509 00015F3C C21800                          ret AND_KILL_FRAME(1)
 30510                                  
 30511                                  L_code_ptr_is_number:
 30512 00015F3F C8000000                        enter 0, 0
 30513 00015F43 48837D1801                      cmp COUNT, 1
 30514 00015F48 0F856F0F0000                    jne L_error_arg_count_1
 30515 00015F4E 488B4520                        mov rax, PARAM(0)
 30516 00015F52 8A18                            mov bl, byte [rax]
 30517 00015F54 80E310                          and bl, T_number
 30518 00015F57 740C                            jz .L_false
 30519 00015F59 48B8-                           mov rax, sob_boolean_true
 30519 00015F5B [0300000000000000] 
 30520 00015F63 EB0A                            jmp .L_end
 30521                                  .L_false:
 30522 00015F65 48B8-                           mov rax, sob_boolean_false
 30522 00015F67 [0200000000000000] 
 30523                                  .L_end:
 30524 00015F6F C9                              leave
 30525 00015F70 C21800                          ret AND_KILL_FRAME(1)
 30526                                          
 30527                                  L_code_ptr_is_collection:
 30528 00015F73 C8000000                        enter 0, 0
 30529 00015F77 48837D1801                      cmp COUNT, 1
 30530 00015F7C 0F853B0F0000                    jne L_error_arg_count_1
 30531 00015F82 488B4520                        mov rax, PARAM(0)
 30532 00015F86 8A18                            mov bl, byte [rax]
 30533 00015F88 80E320                          and bl, T_collection
 30534 00015F8B 740C                            je .L_false
 30535 00015F8D 48B8-                           mov rax, sob_boolean_true
 30535 00015F8F [0300000000000000] 
 30536 00015F97 EB0A                            jmp .L_end
 30537                                  .L_false:
 30538 00015F99 48B8-                           mov rax, sob_boolean_false
 30538 00015F9B [0200000000000000] 
 30539                                  .L_end:
 30540 00015FA3 C9                              leave
 30541 00015FA4 C21800                          ret AND_KILL_FRAME(1)
 30542                                  
 30543                                  L_code_ptr_cons:
 30544 00015FA7 C8000000                        enter 0, 0
 30545 00015FAB 48837D1802                      cmp COUNT, 2
 30546 00015FB0 0F853C0F0000                    jne L_error_arg_count_2
 30547 00015FB6 BF11000000                      mov rdi, (1 + 8 + 8)
 30548 00015FBB E826F2FFFF                      call malloc
 30549 00015FC0 C60021                          mov byte [rax], T_pair
 30550 00015FC3 488B5D20                        mov rbx, PARAM(0)
 30551 00015FC7 48895801                        mov SOB_PAIR_CAR(rax), rbx
 30552 00015FCB 488B5D28                        mov rbx, PARAM(1)
 30553 00015FCF 48895809                        mov SOB_PAIR_CDR(rax), rbx
 30554 00015FD3 C9                              leave
 30555 00015FD4 C22000                          ret AND_KILL_FRAME(2)
 30556                                  
 30557                                  L_code_ptr_display_sexpr:
 30558 00015FD7 C8000000                        enter 0, 0
 30559 00015FDB 48837D1801                      cmp COUNT, 1
 30560 00015FE0 0F85D70E0000                    jne L_error_arg_count_1
 30561 00015FE6 488B7D20                        mov rdi, PARAM(0)
 30562 00015FEA E878F4FFFF                      call print_sexpr
 30563 00015FEF 48B8-                           mov rax, sob_void
 30563 00015FF1 [0000000000000000] 
 30564 00015FF9 C9                              leave
 30565 00015FFA C21800                          ret AND_KILL_FRAME(1)
 30566                                  
 30567                                  L_code_ptr_write_char:
 30568 00015FFD C8000000                        enter 0, 0
 30569 00016001 48837D1801                      cmp COUNT, 1
 30570 00016006 0F85B10E0000                    jne L_error_arg_count_1
 30571 0001600C 488B4520                        mov rax, PARAM(0)
 30572                                          assert_char(rax)
    53 00016010 803802              <1>  cmp byte [%1], %2
    54 00016013 0F85780F0000        <1>  jne L_error_incorrect_type
 30573 00016019 8A4001                          mov al, SOB_CHAR_VALUE(rax)
 30574 0001601C 4825FF000000                    and rax, 255
 30575 00016022 48BF-                           mov rdi, fmt_char
 30575 00016024 [B421000000000000] 
 30576 0001602C 4889C6                          mov rsi, rax
 30577 0001602F B800000000                      mov rax, 0
 30578                                          ENTER
    44 00016034 C8000000            <1>  enter 0, 0
    45 00016038 4883E4F0            <1>  and rsp, ~15
 30579 0001603C E8(00000000)                    call printf
 30580                                          LEAVE
    49 00016041 C9                  <1>  leave
 30581 00016042 48B8-                           mov rax, sob_void
 30581 00016044 [0000000000000000] 
 30582 0001604C C9                              leave
 30583 0001604D C21800                          ret AND_KILL_FRAME(1)
 30584                                  
 30585                                  L_code_ptr_car:
 30586 00016050 C8000000                        enter 0, 0
 30587 00016054 48837D1801                      cmp COUNT, 1
 30588 00016059 0F855E0E0000                    jne L_error_arg_count_1
 30589 0001605F 488B4520                        mov rax, PARAM(0)
 30590                                          assert_pair(rax)
    53 00016063 803821              <1>  cmp byte [%1], %2
    54 00016066 0F85250F0000        <1>  jne L_error_incorrect_type
 30591 0001606C 488B4001                        mov rax, SOB_PAIR_CAR(rax)
 30592 00016070 C9                              leave
 30593 00016071 C21800                          ret AND_KILL_FRAME(1)
 30594                                          
 30595                                  L_code_ptr_cdr:
 30596 00016074 C8000000                        enter 0, 0
 30597 00016078 48837D1801                      cmp COUNT, 1
 30598 0001607D 0F853A0E0000                    jne L_error_arg_count_1
 30599 00016083 488B4520                        mov rax, PARAM(0)
 30600                                          assert_pair(rax)
    53 00016087 803821              <1>  cmp byte [%1], %2
    54 0001608A 0F85010F0000        <1>  jne L_error_incorrect_type
 30601 00016090 488B4009                        mov rax, SOB_PAIR_CDR(rax)
 30602 00016094 C9                              leave
 30603 00016095 C21800                          ret AND_KILL_FRAME(1)
 30604                                          
 30605                                  L_code_ptr_string_length:
 30606 00016098 C8000000                        enter 0, 0
 30607 0001609C 48837D1801                      cmp COUNT, 1
 30608 000160A1 0F85160E0000                    jne L_error_arg_count_1
 30609 000160A7 488B4520                        mov rax, PARAM(0)
 30610                                          assert_string(rax)
    53 000160AB 803803              <1>  cmp byte [%1], %2
    54 000160AE 0F85DD0E0000        <1>  jne L_error_incorrect_type
 30611 000160B4 488B7801                        mov rdi, SOB_STRING_LENGTH(rax)
 30612 000160B8 E84F0D0000                      call make_integer
 30613 000160BD C9                              leave
 30614 000160BE C21800                          ret AND_KILL_FRAME(1)
 30615                                  
 30616                                  L_code_ptr_vector_length:
 30617 000160C1 C8000000                        enter 0, 0
 30618 000160C5 48837D1801                      cmp COUNT, 1
 30619 000160CA 0F85ED0D0000                    jne L_error_arg_count_1
 30620 000160D0 488B4520                        mov rax, PARAM(0)
 30621                                          assert_vector(rax)
    53 000160D4 803822              <1>  cmp byte [%1], %2
    54 000160D7 0F85B40E0000        <1>  jne L_error_incorrect_type
 30622 000160DD 488B7801                        mov rdi, SOB_VECTOR_LENGTH(rax)
 30623 000160E1 E8260D0000                      call make_integer
 30624 000160E6 C9                              leave
 30625 000160E7 C21800                          ret AND_KILL_FRAME(1)
 30626                                  
 30627                                  L_code_ptr_real_to_integer:
 30628 000160EA C8000000                        enter 0, 0
 30629 000160EE 48837D1801                      cmp COUNT, 1
 30630 000160F3 0F85C40D0000                    jne L_error_arg_count_1
 30631 000160F9 488B5D20                        mov rbx, PARAM(0)
 30632                                          assert_real(rbx)
    53 000160FD 803B13              <1>  cmp byte [%1], %2
    54 00016100 0F858B0E0000        <1>  jne L_error_incorrect_type
 30633 00016106 F20F104301                      movsd xmm0, qword [rbx + 1]
 30634 0001610B F2480F2CF8                      cvttsd2si rdi, xmm0
 30635 00016110 E8F70C0000                      call make_integer
 30636 00016115 C9                              leave
 30637 00016116 C21800                          ret AND_KILL_FRAME(1)
 30638                                  
 30639                                  L_code_ptr_exit:
 30640 00016119 C8000000                        enter 0, 0
 30641 0001611D 48837D1800                      cmp COUNT, 0
 30642 00016122 0F85600D0000                    jne L_error_arg_count_0
 30643 00016128 B800000000                      mov rax, 0
 30644 0001612D E8(00000000)                    call exit
 30645                                  
 30646                                  L_code_ptr_integer_to_real:
 30647 00016132 C8000000                        enter 0, 0
 30648 00016136 48837D1801                      cmp COUNT, 1
 30649 0001613B 0F857C0D0000                    jne L_error_arg_count_1
 30650 00016141 488B4520                        mov rax, PARAM(0)
 30651                                          assert_integer(rax)
    53 00016145 803811              <1>  cmp byte [%1], %2
    54 00016148 0F85430E0000        <1>  jne L_error_incorrect_type
 30652 0001614E FF7001                          push qword [rax + 1]
 30653 00016151 F2480F2A0424                    cvtsi2sd xmm0, qword [rsp]
 30654 00016157 E8980C0000                      call make_real
 30655 0001615C C9                              leave
 30656 0001615D C21800                          ret AND_KILL_FRAME(1)
 30657                                  
 30658                                  L_code_ptr_fraction_to_real:
 30659 00016160 C8000000                        enter 0, 0
 30660 00016164 48837D1801                      cmp COUNT, 1
 30661 00016169 0F854E0D0000                    jne L_error_arg_count_1
 30662 0001616F 488B4520                        mov rax, PARAM(0)
 30663                                          assert_fraction(rax)
    53 00016173 803812              <1>  cmp byte [%1], %2
    54 00016176 0F85150E0000        <1>  jne L_error_incorrect_type
 30664 0001617C FF7001                          push qword [rax + 1]
 30665 0001617F F2480F2A0424                    cvtsi2sd xmm0, qword [rsp]
 30666 00016185 FF7009                          push qword [rax + 1 + 8]
 30667 00016188 F2480F2A0C24                    cvtsi2sd xmm1, qword [rsp]
 30668 0001618E F20F5EC1                        divsd xmm0, xmm1
 30669 00016192 E85D0C0000                      call make_real
 30670 00016197 C9                              leave
 30671 00016198 C21800                          ret AND_KILL_FRAME(1)
 30672                                  
 30673                                  L_code_ptr_char_to_integer:
 30674 0001619B C8000000                        enter 0, 0
 30675 0001619F 48837D1801                      cmp COUNT, 1
 30676 000161A4 0F85130D0000                    jne L_error_arg_count_1
 30677 000161AA 488B4520                        mov rax, PARAM(0)
 30678                                          assert_char(rax)
    53 000161AE 803802              <1>  cmp byte [%1], %2
    54 000161B1 0F85DA0D0000        <1>  jne L_error_incorrect_type
 30679 000161B7 8A4001                          mov al, byte [rax + 1]
 30680 000161BA 4825FF000000                    and rax, 255
 30681 000161C0 4889C7                          mov rdi, rax
 30682 000161C3 E8440C0000                      call make_integer
 30683 000161C8 C9                              leave
 30684 000161C9 C21800                          ret AND_KILL_FRAME(1)
 30685                                  
 30686                                  L_code_ptr_integer_to_fraction:
 30687 000161CC C8000000                        enter 0, 0
 30688 000161D0 48837D1801                      cmp COUNT, 1
 30689 000161D5 0F85E20C0000                    jne L_error_arg_count_1
 30690 000161DB 4C8B4520                        mov r8, PARAM(0)
 30691                                          assert_integer(r8)
    53 000161DF 41803811            <1>  cmp byte [%1], %2
    54 000161E3 0F85A80D0000        <1>  jne L_error_incorrect_type
 30692 000161E9 BF11000000                      mov rdi, (1 + 8 + 8)
 30693 000161EE E8F3EFFFFF                      call malloc
 30694 000161F3 498B5801                        mov rbx, qword [r8 + 1]
 30695 000161F7 C60012                          mov byte [rax], T_fraction
 30696 000161FA 48895801                        mov qword [rax + 1], rbx
 30697 000161FE 48C7400901000000                mov qword [rax + 1 + 8], 1
 30698 00016206 C9                              leave
 30699 00016207 C21800                          ret AND_KILL_FRAME(1)
 30700                                  
 30701                                  L_code_ptr_integer_to_char:
 30702 0001620A C8000000                        enter 0, 0
 30703 0001620E 48837D1801                      cmp COUNT, 1
 30704 00016213 0F85A40C0000                    jne L_error_arg_count_1
 30705 00016219 488B4520                        mov rax, PARAM(0)
 30706                                          assert_integer(rax)
    53 0001621D 803811              <1>  cmp byte [%1], %2
    54 00016220 0F856B0D0000        <1>  jne L_error_incorrect_type
 30707 00016226 488B5801                        mov rbx, qword [rax + 1]
 30708 0001622A 4883FB00                        cmp rbx, 0
 30709 0001622E 0F8EF20B0000                    jle L_error_integer_range
 30710 00016234 4881FB00010000                  cmp rbx, 256
 30711 0001623B 0F8DE50B0000                    jge L_error_integer_range
 30712 00016241 BF02000000                      mov rdi, (1 + 1)
 30713 00016246 E89BEFFFFF                      call malloc
 30714 0001624B C60002                          mov byte [rax], T_char
 30715 0001624E 885801                          mov byte [rax + 1], bl
 30716 00016251 C9                              leave
 30717 00016252 C21800                          ret AND_KILL_FRAME(1)
 30718                                  
 30719                                  L_code_ptr_trng:
 30720 00016255 C8000000                        enter 0, 0
 30721 00016259 48837D1800                      cmp COUNT, 0
 30722 0001625E 0F85240C0000                    jne L_error_arg_count_0
 30723 00016264 480FC7F7                        rdrand rdi
 30724 00016268 48D1EF                          shr rdi, 1
 30725 0001626B E89C0B0000                      call make_integer
 30726 00016270 C9                              leave
 30727 00016271 C21000                          ret AND_KILL_FRAME(0)
 30728                                  
 30729                                  L_code_ptr_is_zero:
 30730 00016274 C8000000                        enter 0, 0
 30731 00016278 48837D1801                      cmp COUNT, 1
 30732 0001627D 0F853A0C0000                    jne L_error_arg_count_1
 30733 00016283 488B4520                        mov rax, PARAM(0)
 30734 00016287 803811                          cmp byte [rax], T_integer
 30735 0001628A 740F                            je .L_integer
 30736 0001628C 803812                          cmp byte [rax], T_fraction
 30737 0001628F 7413                            je .L_fraction
 30738 00016291 803813                          cmp byte [rax], T_real
 30739 00016294 7417                            je .L_real
 30740 00016296 E9F60C0000                      jmp L_error_incorrect_type
 30741                                  .L_integer:
 30742 0001629B 4883780100                      cmp qword [rax + 1], 0
 30743 000162A0 7429                            je .L_zero
 30744 000162A2 EB1B                            jmp .L_not_zero
 30745                                  .L_fraction:
 30746 000162A4 4883780100                      cmp qword [rax + 1], 0
 30747 000162A9 7420                            je .L_zero
 30748 000162AB EB12                            jmp .L_not_zero
 30749                                  .L_real:
 30750 000162AD 660FEFC0                        pxor xmm0, xmm0
 30751 000162B1 FF7001                          push qword [rax + 1]
 30752 000162B4 F20F100C24                      movsd xmm1, qword [rsp]
 30753 000162B9 660F2EC1                        ucomisd xmm0, xmm1
 30754 000162BD 740C                            je .L_zero
 30755                                  .L_not_zero:
 30756 000162BF 48B8-                           mov rax, sob_boolean_false
 30756 000162C1 [0200000000000000] 
 30757 000162C9 EB0A                            jmp .L_end
 30758                                  .L_zero:
 30759 000162CB 48B8-                           mov rax, sob_boolean_true
 30759 000162CD [0300000000000000] 
 30760                                  .L_end:
 30761 000162D5 C9                              leave
 30762 000162D6 C21800                          ret AND_KILL_FRAME(1)
 30763                                  
 30764                                  L_code_ptr_is_integer:
 30765 000162D9 C8000000                        enter 0, 0
 30766 000162DD 48837D1801                      cmp COUNT, 1
 30767 000162E2 0F85D50B0000                    jne L_error_arg_count_1
 30768 000162E8 488B4520                        mov rax, PARAM(0)
 30769 000162EC 803811                          cmp byte [rax], T_integer
 30770 000162EF 750C                            jne .L_false
 30771 000162F1 48B8-                           mov rax, sob_boolean_true
 30771 000162F3 [0300000000000000] 
 30772 000162FB EB0A                            jmp .L_exit
 30773                                  .L_false:
 30774 000162FD 48B8-                           mov rax, sob_boolean_false
 30774 000162FF [0200000000000000] 
 30775                                  .L_exit:
 30776 00016307 C9                              leave
 30777 00016308 C21800                          ret AND_KILL_FRAME(1)
 30778                                  
 30779                                  L_code_ptr_raw_bin_add_rr:
 30780 0001630B C8000000                        enter 0, 0
 30781 0001630F 48837D1802                      cmp COUNT, 2
 30782 00016314 0F85D80B0000                    jne L_error_arg_count_2
 30783 0001631A 488B5D20                        mov rbx, PARAM(0)
 30784                                          assert_real(rbx)
    53 0001631E 803B13              <1>  cmp byte [%1], %2
    54 00016321 0F856A0C0000        <1>  jne L_error_incorrect_type
 30785 00016327 488B4D28                        mov rcx, PARAM(1)
 30786                                          assert_real(rcx)
    53 0001632B 803913              <1>  cmp byte [%1], %2
    54 0001632E 0F855D0C0000        <1>  jne L_error_incorrect_type
 30787 00016334 F20F104301                      movsd xmm0, qword [rbx + 1]
 30788 00016339 F20F104901                      movsd xmm1, qword [rcx + 1]
 30789 0001633E F20F58C1                        addsd xmm0, xmm1
 30790 00016342 E8AD0A0000                      call make_real
 30791 00016347 C9                              leave
 30792 00016348 C22000                          ret AND_KILL_FRAME(2)
 30793                                  
 30794                                  L_code_ptr_raw_bin_sub_rr:
 30795 0001634B C8000000                        enter 0, 0
 30796 0001634F 48837D1802                      cmp COUNT, 2
 30797 00016354 0F85980B0000                    jne L_error_arg_count_2
 30798 0001635A 488B5D20                        mov rbx, PARAM(0)
 30799                                          assert_real(rbx)
    53 0001635E 803B13              <1>  cmp byte [%1], %2
    54 00016361 0F852A0C0000        <1>  jne L_error_incorrect_type
 30800 00016367 488B4D28                        mov rcx, PARAM(1)
 30801                                          assert_real(rcx)
    53 0001636B 803913              <1>  cmp byte [%1], %2
    54 0001636E 0F851D0C0000        <1>  jne L_error_incorrect_type
 30802 00016374 F20F104301                      movsd xmm0, qword [rbx + 1]
 30803 00016379 F20F104901                      movsd xmm1, qword [rcx + 1]
 30804 0001637E F20F5CC1                        subsd xmm0, xmm1
 30805 00016382 E86D0A0000                      call make_real
 30806 00016387 C9                              leave
 30807 00016388 C22000                          ret AND_KILL_FRAME(2)
 30808                                  
 30809                                  L_code_ptr_raw_bin_mul_rr:
 30810 0001638B C8000000                        enter 0, 0
 30811 0001638F 48837D1802                      cmp COUNT, 2
 30812 00016394 0F85580B0000                    jne L_error_arg_count_2
 30813 0001639A 488B5D20                        mov rbx, PARAM(0)
 30814                                          assert_real(rbx)
    53 0001639E 803B13              <1>  cmp byte [%1], %2
    54 000163A1 0F85EA0B0000        <1>  jne L_error_incorrect_type
 30815 000163A7 488B4D28                        mov rcx, PARAM(1)
 30816                                          assert_real(rcx)
    53 000163AB 803913              <1>  cmp byte [%1], %2
    54 000163AE 0F85DD0B0000        <1>  jne L_error_incorrect_type
 30817 000163B4 F20F104301                      movsd xmm0, qword [rbx + 1]
 30818 000163B9 F20F104901                      movsd xmm1, qword [rcx + 1]
 30819 000163BE F20F59C1                        mulsd xmm0, xmm1
 30820 000163C2 E82D0A0000                      call make_real
 30821 000163C7 C9                              leave
 30822 000163C8 C22000                          ret AND_KILL_FRAME(2)
 30823                                  
 30824                                  L_code_ptr_raw_bin_div_rr:
 30825 000163CB C8000000                        enter 0, 0
 30826 000163CF 48837D1802                      cmp COUNT, 2
 30827 000163D4 0F85180B0000                    jne L_error_arg_count_2
 30828 000163DA 488B5D20                        mov rbx, PARAM(0)
 30829                                          assert_real(rbx)
    53 000163DE 803B13              <1>  cmp byte [%1], %2
    54 000163E1 0F85AA0B0000        <1>  jne L_error_incorrect_type
 30830 000163E7 488B4D28                        mov rcx, PARAM(1)
 30831                                          assert_real(rcx)
    53 000163EB 803913              <1>  cmp byte [%1], %2
    54 000163EE 0F859D0B0000        <1>  jne L_error_incorrect_type
 30832 000163F4 F20F104301                      movsd xmm0, qword [rbx + 1]
 30833 000163F9 F20F104901                      movsd xmm1, qword [rcx + 1]
 30834 000163FE 660FEFD2                        pxor xmm2, xmm2
 30835 00016402 660F2ECA                        ucomisd xmm1, xmm2
 30836 00016406 0F84B60B0000                    je L_error_division_by_zero
 30837 0001640C F20F5EC1                        divsd xmm0, xmm1
 30838 00016410 E8DF090000                      call make_real
 30839 00016415 C9                              leave
 30840 00016416 C22000                          ret AND_KILL_FRAME(2)
 30841                                  
 30842                                  L_code_ptr_raw_bin_add_zz:
 30843 00016419 C8000000                	enter 0, 0
 30844 0001641D 48837D1802              	cmp COUNT, 2
 30845 00016422 0F85CA0A0000            	jne L_error_arg_count_2
 30846 00016428 4C8B4520                	mov r8, PARAM(0)
 30847                                  	assert_integer(r8)
    53 0001642C 41803811            <1>  cmp byte [%1], %2
    54 00016430 0F855B0B0000        <1>  jne L_error_incorrect_type
 30848 00016436 4C8B4D28                	mov r9, PARAM(1)
 30849                                  	assert_integer(r9)
    53 0001643A 41803911            <1>  cmp byte [%1], %2
    54 0001643E 0F854D0B0000        <1>  jne L_error_incorrect_type
 30850 00016444 498B7801                	mov rdi, qword [r8 + 1]
 30851 00016448 49037901                	add rdi, qword [r9 + 1]
 30852 0001644C E8BB090000              	call make_integer
 30853 00016451 C9                      	leave
 30854 00016452 C22000                  	ret AND_KILL_FRAME(2)
 30855                                  
 30856                                  L_code_ptr_raw_bin_add_qq:
 30857 00016455 C8000000                        enter 0, 0
 30858 00016459 48837D1802                      cmp COUNT, 2
 30859 0001645E 0F858E0A0000                    jne L_error_arg_count_2
 30860 00016464 4C8B4520                        mov r8, PARAM(0)
 30861                                          assert_fraction(r8)
    53 00016468 41803812            <1>  cmp byte [%1], %2
    54 0001646C 0F851F0B0000        <1>  jne L_error_incorrect_type
 30862 00016472 4C8B4D28                        mov r9, PARAM(1)
 30863                                          assert_fraction(r9)
    53 00016476 41803912            <1>  cmp byte [%1], %2
    54 0001647A 0F85110B0000        <1>  jne L_error_incorrect_type
 30864 00016480 498B4001                        mov rax, qword [r8 + 1] ; num1
 30865 00016484 498B5909                        mov rbx, qword [r9 + 1 + 8] ; den 2
 30866 00016488 4899                            cqo
 30867 0001648A 48F7EB                          imul rbx
 30868 0001648D 4889C6                          mov rsi, rax
 30869 00016490 498B4009                        mov rax, qword [r8 + 1 + 8] ; den1
 30870 00016494 498B5901                        mov rbx, qword [r9 + 1]     ; num2
 30871 00016498 4899                            cqo
 30872 0001649A 48F7EB                          imul rbx
 30873 0001649D 4801C6                          add rsi, rax
 30874 000164A0 498B4009                        mov rax, qword [r8 + 1 + 8] ; den1
 30875 000164A4 498B5909                        mov rbx, qword [r9 + 1 + 8] ; den2
 30876 000164A8 4899                            cqo
 30877 000164AA 48F7EB                          imul rbx
 30878 000164AD 4889C7                          mov rdi, rax
 30879 000164B0 E8DE010000                      call normalize_fraction
 30880 000164B5 C9                              leave
 30881 000164B6 C22000                          ret AND_KILL_FRAME(2)
 30882                                  
 30883                                  L_code_ptr_raw_bin_sub_zz:
 30884 000164B9 C8000000                	enter 0, 0
 30885 000164BD 48837D1802              	cmp COUNT, 2
 30886 000164C2 0F852A0A0000            	jne L_error_arg_count_2
 30887 000164C8 4C8B4520                	mov r8, PARAM(0)
 30888                                  	assert_integer(r8)
    53 000164CC 41803811            <1>  cmp byte [%1], %2
    54 000164D0 0F85BB0A0000        <1>  jne L_error_incorrect_type
 30889 000164D6 4C8B4D28                	mov r9, PARAM(1)
 30890                                  	assert_integer(r9)
    53 000164DA 41803911            <1>  cmp byte [%1], %2
    54 000164DE 0F85AD0A0000        <1>  jne L_error_incorrect_type
 30891 000164E4 498B7801                	mov rdi, qword [r8 + 1]
 30892 000164E8 492B7901                	sub rdi, qword [r9 + 1]
 30893 000164EC E81B090000              	call make_integer
 30894 000164F1 C9                      	leave
 30895 000164F2 C22000                  	ret AND_KILL_FRAME(2)
 30896                                  
 30897                                  L_code_ptr_raw_bin_sub_qq:
 30898 000164F5 C8000000                        enter 0, 0
 30899 000164F9 48837D1802                      cmp COUNT, 2
 30900 000164FE 0F85EE090000                    jne L_error_arg_count_2
 30901 00016504 4C8B4520                        mov r8, PARAM(0)
 30902                                          assert_fraction(r8)
    53 00016508 41803812            <1>  cmp byte [%1], %2
    54 0001650C 0F857F0A0000        <1>  jne L_error_incorrect_type
 30903 00016512 4C8B4D28                        mov r9, PARAM(1)
 30904                                          assert_fraction(r9)
    53 00016516 41803912            <1>  cmp byte [%1], %2
    54 0001651A 0F85710A0000        <1>  jne L_error_incorrect_type
 30905 00016520 498B4001                        mov rax, qword [r8 + 1] ; num1
 30906 00016524 498B5909                        mov rbx, qword [r9 + 1 + 8] ; den 2
 30907 00016528 4899                            cqo
 30908 0001652A 48F7EB                          imul rbx
 30909 0001652D 4889C6                          mov rsi, rax
 30910 00016530 498B4009                        mov rax, qword [r8 + 1 + 8] ; den1
 30911 00016534 498B5901                        mov rbx, qword [r9 + 1]     ; num2
 30912 00016538 4899                            cqo
 30913 0001653A 48F7EB                          imul rbx
 30914 0001653D 4829C6                          sub rsi, rax
 30915 00016540 498B4009                        mov rax, qword [r8 + 1 + 8] ; den1
 30916 00016544 498B5909                        mov rbx, qword [r9 + 1 + 8] ; den2
 30917 00016548 4899                            cqo
 30918 0001654A 48F7EB                          imul rbx
 30919 0001654D 4889C7                          mov rdi, rax
 30920 00016550 E83E010000                      call normalize_fraction
 30921 00016555 C9                              leave
 30922 00016556 C22000                          ret AND_KILL_FRAME(2)
 30923                                  
 30924                                  L_code_ptr_raw_bin_mul_zz:
 30925 00016559 C8000000                	enter 0, 0
 30926 0001655D 48837D1802              	cmp COUNT, 2
 30927 00016562 0F858A090000            	jne L_error_arg_count_2
 30928 00016568 4C8B4520                	mov r8, PARAM(0)
 30929                                  	assert_integer(r8)
    53 0001656C 41803811            <1>  cmp byte [%1], %2
    54 00016570 0F851B0A0000        <1>  jne L_error_incorrect_type
 30930 00016576 4C8B4D28                	mov r9, PARAM(1)
 30931                                  	assert_integer(r9)
    53 0001657A 41803911            <1>  cmp byte [%1], %2
    54 0001657E 0F850D0A0000        <1>  jne L_error_incorrect_type
 30932 00016584 4899                    	cqo
 30933 00016586 498B4001                	mov rax, qword [r8 + 1]
 30934 0001658A 49F76101                	mul qword [r9 + 1]
 30935 0001658E 4889C7                  	mov rdi, rax
 30936 00016591 E876080000              	call make_integer
 30937 00016596 C9                      	leave
 30938 00016597 C22000                  	ret AND_KILL_FRAME(2)
 30939                                  
 30940                                  L_code_ptr_raw_bin_mul_qq:
 30941 0001659A C8000000                        enter 0, 0
 30942 0001659E 48837D1802                      cmp COUNT, 2
 30943 000165A3 0F8549090000                    jne L_error_arg_count_2
 30944 000165A9 4C8B4520                        mov r8, PARAM(0)
 30945                                          assert_fraction(r8)
    53 000165AD 41803812            <1>  cmp byte [%1], %2
    54 000165B1 0F85DA090000        <1>  jne L_error_incorrect_type
 30946 000165B7 4C8B4D28                        mov r9, PARAM(1)
 30947                                          assert_fraction(r9)
    53 000165BB 41803912            <1>  cmp byte [%1], %2
    54 000165BF 0F85CC090000        <1>  jne L_error_incorrect_type
 30948 000165C5 498B4001                        mov rax, qword [r8 + 1] ; num1
 30949 000165C9 498B5901                        mov rbx, qword [r9 + 1] ; num2
 30950 000165CD 4899                            cqo
 30951 000165CF 48F7EB                          imul rbx
 30952 000165D2 4889C6                          mov rsi, rax
 30953 000165D5 498B4009                        mov rax, qword [r8 + 1 + 8] ; den1
 30954 000165D9 498B5909                        mov rbx, qword [r9 + 1 + 8] ; den2
 30955 000165DD 4899                            cqo
 30956 000165DF 48F7EB                          imul rbx
 30957 000165E2 4889C7                          mov rdi, rax
 30958 000165E5 E8A9000000                      call normalize_fraction
 30959 000165EA C9                              leave
 30960 000165EB C22000                          ret AND_KILL_FRAME(2)
 30961                                          
 30962                                  L_code_ptr_raw_bin_div_zz:
 30963 000165EE C8000000                	enter 0, 0
 30964 000165F2 48837D1802              	cmp COUNT, 2
 30965 000165F7 0F85F5080000            	jne L_error_arg_count_2
 30966 000165FD 4C8B4520                	mov r8, PARAM(0)
 30967                                  	assert_integer(r8)
    53 00016601 41803811            <1>  cmp byte [%1], %2
    54 00016605 0F8586090000        <1>  jne L_error_incorrect_type
 30968 0001660B 4C8B4D28                	mov r9, PARAM(1)
 30969                                  	assert_integer(r9)
    53 0001660F 41803911            <1>  cmp byte [%1], %2
    54 00016613 0F8578090000        <1>  jne L_error_incorrect_type
 30970 00016619 498B7901                	mov rdi, qword [r9 + 1]
 30971 0001661D 4883FF00                	cmp rdi, 0
 30972 00016621 0F849B090000            	je L_error_division_by_zero
 30973 00016627 498B7001                	mov rsi, qword [r8 + 1]
 30974 0001662B E863000000              	call normalize_fraction
 30975 00016630 C9                      	leave
 30976 00016631 C22000                  	ret AND_KILL_FRAME(2)
 30977                                  
 30978                                  L_code_ptr_raw_bin_div_qq:
 30979 00016634 C8000000                        enter 0, 0
 30980 00016638 48837D1802                      cmp COUNT, 2
 30981 0001663D 0F85AF080000                    jne L_error_arg_count_2
 30982 00016643 4C8B4520                        mov r8, PARAM(0)
 30983                                          assert_fraction(r8)
    53 00016647 41803812            <1>  cmp byte [%1], %2
    54 0001664B 0F8540090000        <1>  jne L_error_incorrect_type
 30984 00016651 4C8B4D28                        mov r9, PARAM(1)
 30985                                          assert_fraction(r9)
    53 00016655 41803912            <1>  cmp byte [%1], %2
    54 00016659 0F8532090000        <1>  jne L_error_incorrect_type
 30986 0001665F 4983790100                      cmp qword [r9 + 1], 0
 30987 00016664 0F8458090000                    je L_error_division_by_zero
 30988 0001666A 498B4001                        mov rax, qword [r8 + 1] ; num1
 30989 0001666E 498B5909                        mov rbx, qword [r9 + 1 + 8] ; den 2
 30990 00016672 4899                            cqo
 30991 00016674 48F7EB                          imul rbx
 30992 00016677 4889C6                          mov rsi, rax
 30993 0001667A 498B4009                        mov rax, qword [r8 + 1 + 8] ; den1
 30994 0001667E 498B5901                        mov rbx, qword [r9 + 1] ; num2
 30995 00016682 4899                            cqo
 30996 00016684 48F7EB                          imul rbx
 30997 00016687 4889C7                          mov rdi, rax
 30998 0001668A E804000000                      call normalize_fraction
 30999 0001668F C9                              leave
 31000 00016690 C22000                          ret AND_KILL_FRAME(2)
 31001                                          
 31002                                  normalize_fraction:
 31003 00016693 56                              push rsi
 31004 00016694 57                              push rdi
 31005 00016695 E859000000                      call gcd
 31006 0001669A 4889C3                          mov rbx, rax
 31007 0001669D 58                              pop rax
 31008 0001669E 4899                            cqo
 31009 000166A0 48F7FB                          idiv rbx
 31010 000166A3 4989C0                          mov r8, rax
 31011 000166A6 58                              pop rax
 31012 000166A7 4899                            cqo
 31013 000166A9 48F7FB                          idiv rbx
 31014 000166AC 4989C1                          mov r9, rax
 31015 000166AF 4983F900                        cmp r9, 0
 31016 000166B3 741C                            je .L_zero
 31017 000166B5 4983F801                        cmp r8, 1
 31018 000166B9 7421                            je .L_int
 31019 000166BB BF11000000                      mov rdi, (1 + 8 + 8)
 31020 000166C0 E821EBFFFF                      call malloc
 31021 000166C5 C60012                          mov byte [rax], T_fraction
 31022 000166C8 4C894801                        mov qword [rax + 1], r9
 31023 000166CC 4C894009                        mov qword [rax + 1 + 8], r8
 31024 000166D0 C3                              ret
 31025                                  .L_zero:
 31026 000166D1 BF00000000                      mov rdi, 0
 31027 000166D6 E831070000                      call make_integer
 31028 000166DB C3                              ret
 31029                                  .L_int:
 31030 000166DC 4C89CF                          mov rdi, r9
 31031 000166DF E828070000                      call make_integer
 31032 000166E4 C3                              ret
 31033                                  
 31034                                  iabs:
 31035 000166E5 4889F8                          mov rax, rdi
 31036 000166E8 4883F800                        cmp rax, 0
 31037 000166EC 7C01                            jl .Lneg
 31038 000166EE C3                              ret
 31039                                  .Lneg:
 31040 000166EF 48F7D8                          neg rax
 31041 000166F2 C3                              ret
 31042                                  
 31043                                  gcd:
 31044 000166F3 E8EDFFFFFF                      call iabs
 31045 000166F8 4889C3                          mov rbx, rax
 31046 000166FB 4889F7                          mov rdi, rsi
 31047 000166FE E8E2FFFFFF                      call iabs
 31048 00016703 4883F800                        cmp rax, 0
 31049 00016707 7502                            jne .L0
 31050 00016709 4893                            xchg rax, rbx
 31051                                  .L0:
 31052 0001670B 4883FB00                        cmp rbx, 0
 31053 0001670F 740C                            je .L1
 31054 00016711 4899                            cqo
 31055 00016713 48F7F3                          div rbx
 31056 00016716 4889D0                          mov rax, rdx
 31057 00016719 4893                            xchg rax, rbx
 31058 0001671B EBEE                            jmp .L0
 31059                                  .L1:
 31060 0001671D C3                              ret
 31061                                  
 31062                                  L_code_ptr_error:
 31063 0001671E C8000000                        enter 0, 0
 31064 00016722 48837D1802                      cmp COUNT, 2
 31065 00016727 0F85C5070000                    jne L_error_arg_count_2
 31066 0001672D 488B7520                        mov rsi, PARAM(0)
 31067                                          assert_interned_symbol(rsi)
    53 00016731 803E41              <1>  cmp byte [%1], %2
    54 00016734 0F8557080000        <1>  jne L_error_incorrect_type
 31068 0001673A 488B7528                        mov rsi, PARAM(1)
 31069                                          assert_string(rsi)
    53 0001673E 803E03              <1>  cmp byte [%1], %2
    54 00016741 0F854A080000        <1>  jne L_error_incorrect_type
 31070 00016747 48BF-                           mov rdi, fmt_scheme_error_part_1
 31070 00016749 [1223000000000000] 
 31071 00016751 B800000000                      mov rax, 0
 31072                                          ENTER
    44 00016756 C8000000            <1>  enter 0, 0
    45 0001675A 4883E4F0            <1>  and rsp, ~15
 31073 0001675E E8(00000000)                    call printf
 31074                                          LEAVE
    49 00016763 C9                  <1>  leave
 31075 00016764 488B7D20                        mov rdi, PARAM(0)
 31076 00016768 E8FAECFFFF                      call print_sexpr
 31077 0001676D 48BF-                           mov rdi, fmt_scheme_error_part_2
 31077 0001676F [2623000000000000] 
 31078 00016777 B800000000                      mov rax, 0
 31079                                          ENTER
    44 0001677C C8000000            <1>  enter 0, 0
    45 00016780 4883E4F0            <1>  and rsp, ~15
 31080 00016784 E8(00000000)                    call printf
 31081                                          LEAVE
    49 00016789 C9                  <1>  leave
 31082 0001678A 488B4528                        mov rax, PARAM(1)       ; sob_string
 31083 0001678E BE01000000                      mov rsi, 1              ; size = 1 byte
 31084 00016793 488B5001                        mov rdx, qword [rax + 1] ; length
 31085 00016797 488D7809                        lea rdi, [rax + 1 + 8]   ; actual characters
 31086 0001679B 488B0C25[00000000]              mov rcx, qword [stdout]  ; FILE*
 31087                                  	ENTER
    44 000167A3 C8000000            <1>  enter 0, 0
    45 000167A7 4883E4F0            <1>  and rsp, ~15
 31088 000167AB E8(00000000)                    call fwrite
 31089                                  	LEAVE
    49 000167B0 C9                  <1>  leave
 31090 000167B1 48BF-                           mov rdi, fmt_scheme_error_part_3
 31090 000167B3 [6823000000000000] 
 31091 000167BB B800000000                      mov rax, 0
 31092                                          ENTER
    44 000167C0 C8000000            <1>  enter 0, 0
    45 000167C4 4883E4F0            <1>  and rsp, ~15
 31093 000167C8 E8(00000000)                    call printf
 31094                                          LEAVE
    49 000167CD C9                  <1>  leave
 31095 000167CE 48C7C0F7FFFFFF                  mov rax, -9
 31096 000167D5 E8(00000000)                    call exit
 31097                                  
 31098                                  L_code_ptr_raw_less_than_rr:
 31099 000167DA C8000000                        enter 0, 0
 31100 000167DE 48837D1802                      cmp COUNT, 2
 31101 000167E3 0F8509070000                    jne L_error_arg_count_2
 31102 000167E9 488B7520                        mov rsi, PARAM(0)
 31103                                          assert_real(rsi)
    53 000167ED 803E13              <1>  cmp byte [%1], %2
    54 000167F0 0F859B070000        <1>  jne L_error_incorrect_type
 31104 000167F6 488B7D28                        mov rdi, PARAM(1)
 31105                                          assert_real(rdi)
    53 000167FA 803F13              <1>  cmp byte [%1], %2
    54 000167FD 0F858E070000        <1>  jne L_error_incorrect_type
 31106 00016803 F20F104601                      movsd xmm0, qword [rsi + 1]
 31107 00016808 F20F104F01                      movsd xmm1, qword [rdi + 1]
 31108 0001680D 660F2FC1                        comisd xmm0, xmm1
 31109 00016811 730C                            jae .L_false
 31110 00016813 48B8-                           mov rax, sob_boolean_true
 31110 00016815 [0300000000000000] 
 31111 0001681D EB0A                            jmp .L_exit
 31112                                  .L_false:
 31113 0001681F 48B8-                           mov rax, sob_boolean_false
 31113 00016821 [0200000000000000] 
 31114                                  .L_exit:
 31115 00016829 C9                              leave
 31116 0001682A C22000                          ret AND_KILL_FRAME(2)
 31117                                          
 31118                                  L_code_ptr_raw_less_than_zz:
 31119 0001682D C8000000                	enter 0, 0
 31120 00016831 48837D1802              	cmp COUNT, 2
 31121 00016836 0F85B6060000            	jne L_error_arg_count_2
 31122 0001683C 4C8B4520                	mov r8, PARAM(0)
 31123                                  	assert_integer(r8)
    53 00016840 41803811            <1>  cmp byte [%1], %2
    54 00016844 0F8547070000        <1>  jne L_error_incorrect_type
 31124 0001684A 4C8B4D28                	mov r9, PARAM(1)
 31125                                  	assert_integer(r9)
    53 0001684E 41803911            <1>  cmp byte [%1], %2
    54 00016852 0F8539070000        <1>  jne L_error_incorrect_type
 31126 00016858 498B7801                	mov rdi, qword [r8 + 1]
 31127 0001685C 493B7901                	cmp rdi, qword [r9 + 1]
 31128 00016860 7D0C                    	jge .L_false
 31129 00016862 48B8-                   	mov rax, sob_boolean_true
 31129 00016864 [0300000000000000] 
 31130 0001686C EB0A                    	jmp .L_exit
 31131                                  .L_false:
 31132 0001686E 48B8-                   	mov rax, sob_boolean_false
 31132 00016870 [0200000000000000] 
 31133                                  .L_exit:
 31134 00016878 C9                      	leave
 31135 00016879 C22000                  	ret AND_KILL_FRAME(2)
 31136                                  
 31137                                  L_code_ptr_raw_less_than_qq:
 31138 0001687C C8000000                        enter 0, 0
 31139 00016880 48837D1802                      cmp COUNT, 2
 31140 00016885 0F8567060000                    jne L_error_arg_count_2
 31141 0001688B 488B7520                        mov rsi, PARAM(0)
 31142                                          assert_fraction(rsi)
    53 0001688F 803E12              <1>  cmp byte [%1], %2
    54 00016892 0F85F9060000        <1>  jne L_error_incorrect_type
 31143 00016898 488B7D28                        mov rdi, PARAM(1)
 31144                                          assert_fraction(rdi)
    53 0001689C 803F12              <1>  cmp byte [%1], %2
    54 0001689F 0F85EC060000        <1>  jne L_error_incorrect_type
 31145 000168A5 488B4601                        mov rax, qword [rsi + 1] ; num1
 31146 000168A9 4899                            cqo
 31147 000168AB 48F76F09                        imul qword [rdi + 1 + 8] ; den2
 31148 000168AF 4889C1                          mov rcx, rax
 31149 000168B2 488B4609                        mov rax, qword [rsi + 1 + 8] ; den1
 31150 000168B6 4899                            cqo
 31151 000168B8 48F76F01                        imul qword [rdi + 1]          ; num2
 31152 000168BC 4829C1                          sub rcx, rax
 31153 000168BF 7D0C                            jge .L_false
 31154 000168C1 48B8-                           mov rax, sob_boolean_true
 31154 000168C3 [0300000000000000] 
 31155 000168CB EB0A                            jmp .L_exit
 31156                                  .L_false:
 31157 000168CD 48B8-                           mov rax, sob_boolean_false
 31157 000168CF [0200000000000000] 
 31158                                  .L_exit:
 31159 000168D7 C9                              leave
 31160 000168D8 C22000                          ret AND_KILL_FRAME(2)
 31161                                  
 31162                                  L_code_ptr_raw_equal_rr:
 31163 000168DB C8000000                        enter 0, 0
 31164 000168DF 48837D1802                      cmp COUNT, 2
 31165 000168E4 0F8508060000                    jne L_error_arg_count_2
 31166 000168EA 488B7520                        mov rsi, PARAM(0)
 31167                                          assert_real(rsi)
    53 000168EE 803E13              <1>  cmp byte [%1], %2
    54 000168F1 0F859A060000        <1>  jne L_error_incorrect_type
 31168 000168F7 488B7D28                        mov rdi, PARAM(1)
 31169                                          assert_real(rdi)
    53 000168FB 803F13              <1>  cmp byte [%1], %2
    54 000168FE 0F858D060000        <1>  jne L_error_incorrect_type
 31170 00016904 F20F104601                      movsd xmm0, qword [rsi + 1]
 31171 00016909 F20F104F01                      movsd xmm1, qword [rdi + 1]
 31172 0001690E 660F2FC1                        comisd xmm0, xmm1
 31173 00016912 750C                            jne .L_false
 31174 00016914 48B8-                           mov rax, sob_boolean_true
 31174 00016916 [0300000000000000] 
 31175 0001691E EB0A                            jmp .L_exit
 31176                                  .L_false:
 31177 00016920 48B8-                           mov rax, sob_boolean_false
 31177 00016922 [0200000000000000] 
 31178                                  .L_exit:
 31179 0001692A C9                              leave
 31180 0001692B C22000                          ret AND_KILL_FRAME(2)
 31181                                          
 31182                                  L_code_ptr_raw_equal_zz:
 31183 0001692E C8000000                	enter 0, 0
 31184 00016932 48837D1802              	cmp COUNT, 2
 31185 00016937 0F85B5050000            	jne L_error_arg_count_2
 31186 0001693D 4C8B4520                	mov r8, PARAM(0)
 31187                                  	assert_integer(r8)
    53 00016941 41803811            <1>  cmp byte [%1], %2
    54 00016945 0F8546060000        <1>  jne L_error_incorrect_type
 31188 0001694B 4C8B4D28                	mov r9, PARAM(1)
 31189                                  	assert_integer(r9)
    53 0001694F 41803911            <1>  cmp byte [%1], %2
    54 00016953 0F8538060000        <1>  jne L_error_incorrect_type
 31190 00016959 498B7801                	mov rdi, qword [r8 + 1]
 31191 0001695D 493B7901                	cmp rdi, qword [r9 + 1]
 31192 00016961 750C                    	jne .L_false
 31193 00016963 48B8-                   	mov rax, sob_boolean_true
 31193 00016965 [0300000000000000] 
 31194 0001696D EB0A                    	jmp .L_exit
 31195                                  .L_false:
 31196 0001696F 48B8-                   	mov rax, sob_boolean_false
 31196 00016971 [0200000000000000] 
 31197                                  .L_exit:
 31198 00016979 C9                      	leave
 31199 0001697A C22000                  	ret AND_KILL_FRAME(2)
 31200                                  
 31201                                  L_code_ptr_raw_equal_qq:
 31202 0001697D C8000000                        enter 0, 0
 31203 00016981 48837D1802                      cmp COUNT, 2
 31204 00016986 0F8566050000                    jne L_error_arg_count_2
 31205 0001698C 488B7520                        mov rsi, PARAM(0)
 31206                                          assert_fraction(rsi)
    53 00016990 803E12              <1>  cmp byte [%1], %2
    54 00016993 0F85F8050000        <1>  jne L_error_incorrect_type
 31207 00016999 488B7D28                        mov rdi, PARAM(1)
 31208                                          assert_fraction(rdi)
    53 0001699D 803F12              <1>  cmp byte [%1], %2
    54 000169A0 0F85EB050000        <1>  jne L_error_incorrect_type
 31209 000169A6 488B4601                        mov rax, qword [rsi + 1] ; num1
 31210 000169AA 4899                            cqo
 31211 000169AC 48F76F09                        imul qword [rdi + 1 + 8] ; den2
 31212 000169B0 4889C1                          mov rcx, rax
 31213 000169B3 488B4709                        mov rax, qword [rdi + 1 + 8] ; den1
 31214 000169B7 4899                            cqo
 31215 000169B9 48F76F01                        imul qword [rdi + 1]          ; num2
 31216 000169BD 4829C1                          sub rcx, rax
 31217 000169C0 750C                            jne .L_false
 31218 000169C2 48B8-                           mov rax, sob_boolean_true
 31218 000169C4 [0300000000000000] 
 31219 000169CC EB0A                            jmp .L_exit
 31220                                  .L_false:
 31221 000169CE 48B8-                           mov rax, sob_boolean_false
 31221 000169D0 [0200000000000000] 
 31222                                  .L_exit:
 31223 000169D8 C9                              leave
 31224 000169D9 C22000                          ret AND_KILL_FRAME(2)
 31225                                  
 31226                                  L_code_ptr_quotient:
 31227 000169DC C8000000                        enter 0, 0
 31228 000169E0 48837D1802                      cmp COUNT, 2
 31229 000169E5 0F8507050000                    jne L_error_arg_count_2
 31230 000169EB 488B7520                        mov rsi, PARAM(0)
 31231                                          assert_integer(rsi)
    53 000169EF 803E11              <1>  cmp byte [%1], %2
    54 000169F2 0F8599050000        <1>  jne L_error_incorrect_type
 31232 000169F8 488B7D28                        mov rdi, PARAM(1)
 31233                                          assert_integer(rdi)
    53 000169FC 803F11              <1>  cmp byte [%1], %2
    54 000169FF 0F858C050000        <1>  jne L_error_incorrect_type
 31234 00016A05 488B4601                        mov rax, qword [rsi + 1]
 31235 00016A09 488B5F01                        mov rbx, qword [rdi + 1]
 31236 00016A0D 4883FB00                        cmp rbx, 0
 31237 00016A11 0F84AB050000                    je L_error_division_by_zero
 31238 00016A17 4899                            cqo
 31239 00016A19 48F7FB                          idiv rbx
 31240 00016A1C 4889C7                          mov rdi, rax
 31241 00016A1F E8E8030000                      call make_integer
 31242 00016A24 C9                              leave
 31243 00016A25 C22000                          ret AND_KILL_FRAME(2)
 31244                                          
 31245                                  L_code_ptr_remainder:
 31246 00016A28 C8000000                        enter 0, 0
 31247 00016A2C 48837D1802                      cmp COUNT, 2
 31248 00016A31 0F85BB040000                    jne L_error_arg_count_2
 31249 00016A37 488B7520                        mov rsi, PARAM(0)
 31250                                          assert_integer(rsi)
    53 00016A3B 803E11              <1>  cmp byte [%1], %2
    54 00016A3E 0F854D050000        <1>  jne L_error_incorrect_type
 31251 00016A44 488B7D28                        mov rdi, PARAM(1)
 31252                                          assert_integer(rdi)
    53 00016A48 803F11              <1>  cmp byte [%1], %2
    54 00016A4B 0F8540050000        <1>  jne L_error_incorrect_type
 31253 00016A51 488B4601                        mov rax, qword [rsi + 1]
 31254 00016A55 488B5F01                        mov rbx, qword [rdi + 1]
 31255 00016A59 4883FB00                        cmp rbx, 0
 31256 00016A5D 0F845F050000                    je L_error_division_by_zero
 31257 00016A63 4899                            cqo
 31258 00016A65 48F7FB                          idiv rbx
 31259 00016A68 4889D7                          mov rdi, rdx
 31260 00016A6B E89C030000                      call make_integer
 31261 00016A70 C9                              leave
 31262 00016A71 C22000                          ret AND_KILL_FRAME(2)
 31263                                  
 31264                                  L_code_ptr_set_car:
 31265 00016A74 C8000000                        enter 0, 0
 31266 00016A78 48837D1802                      cmp COUNT, 2
 31267 00016A7D 0F856F040000                    jne L_error_arg_count_2
 31268 00016A83 488B4520                        mov rax, PARAM(0)
 31269                                          assert_pair(rax)
    53 00016A87 803821              <1>  cmp byte [%1], %2
    54 00016A8A 0F8501050000        <1>  jne L_error_incorrect_type
 31270 00016A90 488B5D28                        mov rbx, PARAM(1)
 31271 00016A94 48895801                        mov SOB_PAIR_CAR(rax), rbx
 31272 00016A98 48B8-                           mov rax, sob_void
 31272 00016A9A [0000000000000000] 
 31273 00016AA2 C9                              leave
 31274 00016AA3 C22000                          ret AND_KILL_FRAME(2)
 31275                                  
 31276                                  L_code_ptr_set_cdr:
 31277 00016AA6 C8000000                        enter 0, 0
 31278 00016AAA 48837D1802                      cmp COUNT, 2
 31279 00016AAF 0F853D040000                    jne L_error_arg_count_2
 31280 00016AB5 488B4520                        mov rax, PARAM(0)
 31281                                          assert_pair(rax)
    53 00016AB9 803821              <1>  cmp byte [%1], %2
    54 00016ABC 0F85CF040000        <1>  jne L_error_incorrect_type
 31282 00016AC2 488B5D28                        mov rbx, PARAM(1)
 31283 00016AC6 48895809                        mov SOB_PAIR_CDR(rax), rbx
 31284 00016ACA 48B8-                           mov rax, sob_void
 31284 00016ACC [0000000000000000] 
 31285 00016AD4 C9                              leave
 31286 00016AD5 C22000                          ret AND_KILL_FRAME(2)
 31287                                  
 31288                                  L_code_ptr_string_ref:
 31289 00016AD8 C8000000                        enter 0, 0
 31290 00016ADC 48837D1802                      cmp COUNT, 2
 31291 00016AE1 0F850B040000                    jne L_error_arg_count_2
 31292 00016AE7 488B7D20                        mov rdi, PARAM(0)
 31293                                          assert_string(rdi)
    53 00016AEB 803F03              <1>  cmp byte [%1], %2
    54 00016AEE 0F859D040000        <1>  jne L_error_incorrect_type
 31294 00016AF4 488B7528                        mov rsi, PARAM(1)
 31295                                          assert_integer(rsi)
    53 00016AF8 803E11              <1>  cmp byte [%1], %2
    54 00016AFB 0F8590040000        <1>  jne L_error_incorrect_type
 31296 00016B01 488B5701                        mov rdx, qword [rdi + 1]
 31297 00016B05 488B4E01                        mov rcx, qword [rsi + 1]
 31298 00016B09 4839D1                          cmp rcx, rdx
 31299 00016B0C 0F8D14030000                    jge L_error_integer_range
 31300 00016B12 4883F900                        cmp rcx, 0
 31301 00016B16 0F8C0A030000                    jl L_error_integer_range
 31302 00016B1C 8A5C3909                        mov bl, byte [rdi + 1 + 8 + 1 * rcx]
 31303 00016B20 BF02000000                      mov rdi, 2
 31304 00016B25 E8BCE6FFFF                      call malloc
 31305 00016B2A C60002                          mov byte [rax], T_char
 31306 00016B2D 885801                          mov byte [rax + 1], bl
 31307 00016B30 C9                              leave
 31308 00016B31 C22000                          ret AND_KILL_FRAME(2)
 31309                                  
 31310                                  L_code_ptr_vector_ref:
 31311 00016B34 C8000000                        enter 0, 0
 31312 00016B38 48837D1802                      cmp COUNT, 2
 31313 00016B3D 0F85AF030000                    jne L_error_arg_count_2
 31314 00016B43 488B7D20                        mov rdi, PARAM(0)
 31315                                          assert_vector(rdi)
    53 00016B47 803F22              <1>  cmp byte [%1], %2
    54 00016B4A 0F8541040000        <1>  jne L_error_incorrect_type
 31316 00016B50 488B7528                        mov rsi, PARAM(1)
 31317                                          assert_integer(rsi)
    53 00016B54 803E11              <1>  cmp byte [%1], %2
    54 00016B57 0F8534040000        <1>  jne L_error_incorrect_type
 31318 00016B5D 488B5701                        mov rdx, qword [rdi + 1]
 31319 00016B61 488B4E01                        mov rcx, qword [rsi + 1]
 31320 00016B65 4839D1                          cmp rcx, rdx
 31321 00016B68 0F8DB8020000                    jge L_error_integer_range
 31322 00016B6E 4883F900                        cmp rcx, 0
 31323 00016B72 0F8CAE020000                    jl L_error_integer_range
 31324 00016B78 488B44CF09                      mov rax, [rdi + 1 + 8 + 8 * rcx]
 31325 00016B7D C9                              leave
 31326 00016B7E C22000                          ret AND_KILL_FRAME(2)
 31327                                  
 31328                                  L_code_ptr_vector_set:
 31329 00016B81 C8000000                        enter 0, 0
 31330 00016B85 48837D1803                      cmp COUNT, 3
 31331 00016B8A 0F85CC030000                    jne L_error_arg_count_3
 31332 00016B90 488B7D20                        mov rdi, PARAM(0)
 31333                                          assert_vector(rdi)
    53 00016B94 803F22              <1>  cmp byte [%1], %2
    54 00016B97 0F85F4030000        <1>  jne L_error_incorrect_type
 31334 00016B9D 488B7528                        mov rsi, PARAM(1)
 31335                                          assert_integer(rsi)
    53 00016BA1 803E11              <1>  cmp byte [%1], %2
    54 00016BA4 0F85E7030000        <1>  jne L_error_incorrect_type
 31336 00016BAA 488B5701                        mov rdx, qword [rdi + 1]
 31337 00016BAE 488B4E01                        mov rcx, qword [rsi + 1]
 31338 00016BB2 4839D1                          cmp rcx, rdx
 31339 00016BB5 0F8D6B020000                    jge L_error_integer_range
 31340 00016BBB 4883F900                        cmp rcx, 0
 31341 00016BBF 0F8C61020000                    jl L_error_integer_range
 31342 00016BC5 488B4530                        mov rax, PARAM(2)
 31343 00016BC9 488944CF09                      mov qword [rdi + 1 + 8 + 8 * rcx], rax
 31344 00016BCE 48B8-                           mov rax, sob_void
 31344 00016BD0 [0000000000000000] 
 31345 00016BD8 C9                              leave
 31346 00016BD9 C22800                          ret AND_KILL_FRAME(3)
 31347                                  
 31348                                  L_code_ptr_string_set:
 31349 00016BDC C8000000                        enter 0, 0
 31350 00016BE0 48837D1803                      cmp COUNT, 3
 31351 00016BE5 0F8571030000                    jne L_error_arg_count_3
 31352 00016BEB 488B7D20                        mov rdi, PARAM(0)
 31353                                          assert_string(rdi)
    53 00016BEF 803F03              <1>  cmp byte [%1], %2
    54 00016BF2 0F8599030000        <1>  jne L_error_incorrect_type
 31354 00016BF8 488B7528                        mov rsi, PARAM(1)
 31355                                          assert_integer(rsi)
    53 00016BFC 803E11              <1>  cmp byte [%1], %2
    54 00016BFF 0F858C030000        <1>  jne L_error_incorrect_type
 31356 00016C05 488B5701                        mov rdx, qword [rdi + 1]
 31357 00016C09 488B4E01                        mov rcx, qword [rsi + 1]
 31358 00016C0D 4839D1                          cmp rcx, rdx
 31359 00016C10 0F8D10020000                    jge L_error_integer_range
 31360 00016C16 4883F900                        cmp rcx, 0
 31361 00016C1A 0F8C06020000                    jl L_error_integer_range
 31362 00016C20 488B4530                        mov rax, PARAM(2)
 31363                                          assert_char(rax)
    53 00016C24 803802              <1>  cmp byte [%1], %2
    54 00016C27 0F8564030000        <1>  jne L_error_incorrect_type
 31364 00016C2D 8A4001                          mov al, byte [rax + 1]
 31365 00016C30 88443909                        mov byte [rdi + 1 + 8 + 1 * rcx], al
 31366 00016C34 48B8-                           mov rax, sob_void
 31366 00016C36 [0000000000000000] 
 31367 00016C3E C9                              leave
 31368 00016C3F C22800                          ret AND_KILL_FRAME(3)
 31369                                  
 31370                                  L_code_ptr_make_vector:
 31371 00016C42 C8000000                        enter 0, 0
 31372 00016C46 48837D1802                      cmp COUNT, 2
 31373 00016C4B 0F85A1020000                    jne L_error_arg_count_2
 31374 00016C51 488B4D20                        mov rcx, PARAM(0)
 31375                                          assert_integer(rcx)
    53 00016C55 803911              <1>  cmp byte [%1], %2
    54 00016C58 0F8533030000        <1>  jne L_error_incorrect_type
 31376 00016C5E 488B4901                        mov rcx, qword [rcx + 1]
 31377 00016C62 4883F900                        cmp rcx, 0
 31378 00016C66 0F8CBA010000                    jl L_error_integer_range
 31379 00016C6C 488B5528                        mov rdx, PARAM(1)
 31380 00016C70 488D3CCD09000000                lea rdi, [1 + 8 + 8 * rcx]
 31381 00016C78 E869E5FFFF                      call malloc
 31382 00016C7D C60022                          mov byte [rax], T_vector
 31383 00016C80 48894801                        mov qword [rax + 1], rcx
 31384 00016C84 41B800000000                    mov r8, 0
 31385                                  .L0:
 31386 00016C8A 4939C8                          cmp r8, rcx
 31387 00016C8D 740A                            je .L1
 31388 00016C8F 4A8954C009                      mov qword [rax + 1 + 8 + 8 * r8], rdx
 31389 00016C94 49FFC0                          inc r8
 31390 00016C97 EBF1                            jmp .L0
 31391                                  .L1:
 31392 00016C99 C9                              leave
 31393 00016C9A C22000                          ret AND_KILL_FRAME(2)
 31394                                          
 31395                                  L_code_ptr_make_string:
 31396 00016C9D C8000000                        enter 0, 0
 31397 00016CA1 48837D1802                      cmp COUNT, 2
 31398 00016CA6 0F8546020000                    jne L_error_arg_count_2
 31399 00016CAC 488B4D20                        mov rcx, PARAM(0)
 31400                                          assert_integer(rcx)
    53 00016CB0 803911              <1>  cmp byte [%1], %2
    54 00016CB3 0F85D8020000        <1>  jne L_error_incorrect_type
 31401 00016CB9 488B4901                        mov rcx, qword [rcx + 1]
 31402 00016CBD 4883F900                        cmp rcx, 0
 31403 00016CC1 0F8C5F010000                    jl L_error_integer_range
 31404 00016CC7 488B5528                        mov rdx, PARAM(1)
 31405                                          assert_char(rdx)
    53 00016CCB 803A02              <1>  cmp byte [%1], %2
    54 00016CCE 0F85BD020000        <1>  jne L_error_incorrect_type
 31406 00016CD4 8A5201                          mov dl, byte [rdx + 1]
 31407 00016CD7 488D7909                        lea rdi, [1 + 8 + 1 * rcx]
 31408 00016CDB E806E5FFFF                      call malloc
 31409 00016CE0 C60003                          mov byte [rax], T_string
 31410 00016CE3 48894801                        mov qword [rax + 1], rcx
 31411 00016CE7 41B800000000                    mov r8, 0
 31412                                  .L0:
 31413 00016CED 4939C8                          cmp r8, rcx
 31414 00016CF0 740A                            je .L1
 31415 00016CF2 4188540009                      mov byte [rax + 1 + 8 + 1 * r8], dl
 31416 00016CF7 49FFC0                          inc r8
 31417 00016CFA EBF1                            jmp .L0
 31418                                  .L1:
 31419 00016CFC C9                              leave
 31420 00016CFD C22000                          ret AND_KILL_FRAME(2)
 31421                                  
 31422                                  L_code_ptr_numerator:
 31423 00016D00 C8000000                        enter 0, 0
 31424 00016D04 48837D1801                      cmp COUNT, 1
 31425 00016D09 0F85AE010000                    jne L_error_arg_count_1
 31426 00016D0F 488B4520                        mov rax, PARAM(0)
 31427                                          assert_fraction(rax)
    53 00016D13 803812              <1>  cmp byte [%1], %2
    54 00016D16 0F8575020000        <1>  jne L_error_incorrect_type
 31428 00016D1C 488B7801                        mov rdi, qword [rax + 1]
 31429 00016D20 E8E7000000                      call make_integer
 31430 00016D25 C9                              leave
 31431 00016D26 C21800                          ret AND_KILL_FRAME(1)
 31432                                          
 31433                                  L_code_ptr_denominator:
 31434 00016D29 C8000000                        enter 0, 0
 31435 00016D2D 48837D1801                      cmp COUNT, 1
 31436 00016D32 0F8585010000                    jne L_error_arg_count_1
 31437 00016D38 488B4520                        mov rax, PARAM(0)
 31438                                          assert_fraction(rax)
    53 00016D3C 803812              <1>  cmp byte [%1], %2
    54 00016D3F 0F854C020000        <1>  jne L_error_incorrect_type
 31439 00016D45 488B7809                        mov rdi, qword [rax + 1 + 8]
 31440 00016D49 E8BE000000                      call make_integer
 31441 00016D4E C9                              leave
 31442 00016D4F C21800                          ret AND_KILL_FRAME(1)
 31443                                  
 31444                                  L_code_ptr_is_eq:
 31445 00016D52 C8000000                	enter 0, 0
 31446 00016D56 48837D1802              	cmp COUNT, 2
 31447 00016D5B 0F8591010000            	jne L_error_arg_count_2
 31448 00016D61 488B7D20                	mov rdi, PARAM(0)
 31449 00016D65 488B7528                	mov rsi, PARAM(1)
 31450 00016D69 4839F7                  	cmp rdi, rsi
 31451 00016D6C 746C                    	je .L_eq_true
 31452 00016D6E 8A17                    	mov dl, byte [rdi]
 31453 00016D70 3A16                    	cmp dl, byte [rsi]
 31454 00016D72 7572                    	jne .L_eq_false
 31455 00016D74 80FA02                  	cmp dl, T_char
 31456 00016D77 7459                    	je .L_char
 31457 00016D79 80FA41                  	cmp dl, T_interned_symbol
 31458 00016D7C 7440                    	je .L_interned_symbol
 31459 00016D7E 80FA42                          cmp dl, T_uninterned_symbol
 31460 00016D81 7443                            je .L_uninterned_symbol
 31461 00016D83 80FA13                  	cmp dl, T_real
 31462 00016D86 742E                    	je .L_real
 31463 00016D88 80FA12                  	cmp dl, T_fraction
 31464 00016D8B 7413                    	je .L_fraction
 31465 00016D8D 80FA11                          cmp dl, T_integer
 31466 00016D90 7402                            je .L_integer
 31467 00016D92 EB52                    	jmp .L_eq_false
 31468                                  .L_integer:
 31469 00016D94 488B4601                        mov rax, qword [rsi + 1]
 31470 00016D98 483B4701                        cmp rax, qword [rdi + 1]
 31471 00016D9C 7548                            jne .L_eq_false
 31472 00016D9E EB3A                            jmp .L_eq_true
 31473                                  .L_fraction:
 31474 00016DA0 488B4601                	mov rax, qword [rsi + 1]
 31475 00016DA4 483B4701                	cmp rax, qword [rdi + 1]
 31476 00016DA8 753C                    	jne .L_eq_false
 31477 00016DAA 488B4609                	mov rax, qword [rsi + 1 + 8]
 31478 00016DAE 483B4709                	cmp rax, qword [rdi + 1 + 8]
 31479 00016DB2 7532                    	jne .L_eq_false
 31480 00016DB4 EB24                    	jmp .L_eq_true
 31481                                  .L_real:
 31482 00016DB6 488B4601                	mov rax, qword [rsi + 1]
 31483 00016DBA 483B4701                	cmp rax, qword [rdi + 1]
 31484                                  .L_interned_symbol:
 31485                                  	; never reached, because interned_symbols are static!
 31486                                  	; but I'm keeping it in case, I'll ever change
 31487                                  	; the implementation
 31488 00016DBE 488B4601                	mov rax, qword [rsi + 1]
 31489 00016DC2 483B4701                	cmp rax, qword [rdi + 1]
 31490                                  .L_uninterned_symbol:
 31491 00016DC6 4C8B4701                        mov r8, qword [rdi + 1]
 31492 00016DCA 4C3B4601                        cmp r8, qword [rsi + 1]
 31493 00016DCE 7516                            jne .L_eq_false
 31494 00016DD0 EB08                            jmp .L_eq_true
 31495                                  .L_char:
 31496 00016DD2 8A5E01                  	mov bl, byte [rsi + 1]
 31497 00016DD5 3A5F01                  	cmp bl, byte [rdi + 1]
 31498 00016DD8 750C                    	jne .L_eq_false
 31499                                  .L_eq_true:
 31500 00016DDA 48B8-                   	mov rax, sob_boolean_true
 31500 00016DDC [0300000000000000] 
 31501 00016DE4 EB0A                    	jmp .L_eq_exit
 31502                                  .L_eq_false:
 31503 00016DE6 48B8-                   	mov rax, sob_boolean_false
 31503 00016DE8 [0200000000000000] 
 31504                                  .L_eq_exit:
 31505 00016DF0 C9                      	leave
 31506 00016DF1 C22000                  	ret AND_KILL_FRAME(2)
 31507                                  
 31508                                  make_real:
 31509 00016DF4 C8000000                        enter 0, 0
 31510 00016DF8 BF09000000                      mov rdi, (1 + 8)
 31511 00016DFD E8E4E3FFFF                      call malloc
 31512 00016E02 C60013                          mov byte [rax], T_real
 31513 00016E05 F20F114001                      movsd qword [rax + 1], xmm0
 31514 00016E0A C9                              leave 
 31515 00016E0B C3                              ret
 31516                                          
 31517                                  make_integer:
 31518 00016E0C C8000000                        enter 0, 0
 31519 00016E10 4889FE                          mov rsi, rdi
 31520 00016E13 BF09000000                      mov rdi, (1 + 8)
 31521 00016E18 E8C9E3FFFF                      call malloc
 31522 00016E1D C60011                          mov byte [rax], T_integer
 31523 00016E20 48897001                        mov qword [rax + 1], rsi
 31524 00016E24 C9                              leave
 31525 00016E25 C3                              ret
 31526                                          
 31527                                  L_error_integer_range:
 31528 00016E26 488B3C25[00000000]              mov rdi, qword [stderr]
 31529 00016E2E 48BE-                           mov rsi, fmt_integer_range
 31529 00016E30 [DF22000000000000] 
 31530 00016E38 B800000000                      mov rax, 0
 31531                                          ENTER
    44 00016E3D C8000000            <1>  enter 0, 0
    45 00016E41 4883E4F0            <1>  and rsp, ~15
 31532 00016E45 E8(00000000)                    call fprintf
 31533                                          LEAVE
    49 00016E4A C9                  <1>  leave
 31534 00016E4B 48C7C0FBFFFFFF                  mov rax, -5
 31535 00016E52 E8(00000000)                    call exit
 31536                                  
 31537                                  L_error_arg_negative:
 31538 00016E57 488B3C25[00000000]              mov rdi, qword [stderr]
 31539 00016E5F 48BE-                           mov rsi, fmt_arg_negative
 31539 00016E61 [B721000000000000] 
 31540 00016E69 B800000000                      mov rax, 0
 31541                                          ENTER
    44 00016E6E C8000000            <1>  enter 0, 0
    45 00016E72 4883E4F0            <1>  and rsp, ~15
 31542 00016E76 E8(00000000)                    call fprintf
 31543                                          LEAVE
    49 00016E7B C9                  <1>  leave
 31544 00016E7C 48C7C0FDFFFFFF                  mov rax, -3
 31545 00016E83 E8(00000000)                    call exit
 31546                                  
 31547                                  L_error_arg_count_0:
 31548 00016E88 488B3C25[00000000]              mov rdi, qword [stderr]
 31549 00016E90 48BE-                           mov rsi, fmt_arg_count_0
 31549 00016E92 [DD21000000000000] 
 31550 00016E9A 488B5518                        mov rdx, COUNT
 31551 00016E9E B800000000                      mov rax, 0
 31552                                          ENTER
    44 00016EA3 C8000000            <1>  enter 0, 0
    45 00016EA7 4883E4F0            <1>  and rsp, ~15
 31553 00016EAB E8(00000000)                    call fprintf
 31554                                          LEAVE
    49 00016EB0 C9                  <1>  leave
 31555 00016EB1 48C7C0FDFFFFFF                  mov rax, -3
 31556 00016EB8 E8(00000000)                    call exit
 31557                                  
 31558                                  L_error_arg_count_1:
 31559 00016EBD 488B3C25[00000000]              mov rdi, qword [stderr]
 31560 00016EC5 48BE-                           mov rsi, fmt_arg_count_1
 31560 00016EC7 [0522000000000000] 
 31561 00016ECF 488B5518                        mov rdx, COUNT
 31562 00016ED3 B800000000                      mov rax, 0
 31563                                          ENTER
    44 00016ED8 C8000000            <1>  enter 0, 0
    45 00016EDC 4883E4F0            <1>  and rsp, ~15
 31564 00016EE0 E8(00000000)                    call fprintf
 31565                                          LEAVE
    49 00016EE5 C9                  <1>  leave
 31566 00016EE6 48C7C0FDFFFFFF                  mov rax, -3
 31567 00016EED E8(00000000)                    call exit
 31568                                  
 31569                                  L_error_arg_count_2:
 31570 00016EF2 488B3C25[00000000]              mov rdi, qword [stderr]
 31571 00016EFA 48BE-                           mov rsi, fmt_arg_count_2
 31571 00016EFC [6B22000000000000] 
 31572 00016F04 488B5518                        mov rdx, COUNT
 31573 00016F08 B800000000                      mov rax, 0
 31574                                          ENTER
    44 00016F0D C8000000            <1>  enter 0, 0
    45 00016F11 4883E4F0            <1>  and rsp, ~15
 31575 00016F15 E8(00000000)                    call fprintf
 31576                                          LEAVE
    49 00016F1A C9                  <1>  leave
 31577 00016F1B 48C7C0FDFFFFFF                  mov rax, -3
 31578 00016F22 E8(00000000)                    call exit
 31579                                  
 31580                                  L_error_arg_count_12:
 31581 00016F27 488B3C25[00000000]              mov rdi, qword [stderr]
 31582 00016F2F 48BE-                           mov rsi, fmt_arg_count_12
 31582 00016F31 [2B22000000000000] 
 31583 00016F39 488B5518                        mov rdx, COUNT
 31584 00016F3D B800000000                      mov rax, 0
 31585                                          ENTER
    44 00016F42 C8000000            <1>  enter 0, 0
    45 00016F46 4883E4F0            <1>  and rsp, ~15
 31586 00016F4A E8(00000000)                    call fprintf
 31587                                          LEAVE
    49 00016F4F C9                  <1>  leave
 31588 00016F50 48C7C0FDFFFFFF                  mov rax, -3
 31589 00016F57 E8(00000000)                    call exit
 31590                                  
 31591                                  L_error_arg_count_3:
 31592 00016F5C 488B3C25[00000000]              mov rdi, qword [stderr]
 31593 00016F64 48BE-                           mov rsi, fmt_arg_count_3
 31593 00016F66 [9222000000000000] 
 31594 00016F6E 488B5518                        mov rdx, COUNT
 31595 00016F72 B800000000                      mov rax, 0
 31596                                          ENTER
    44 00016F77 C8000000            <1>  enter 0, 0
    45 00016F7B 4883E4F0            <1>  and rsp, ~15
 31597 00016F7F E8(00000000)                    call fprintf
 31598                                          LEAVE
    49 00016F84 C9                  <1>  leave
 31599 00016F85 48C7C0FDFFFFFF                  mov rax, -3
 31600 00016F8C E8(00000000)                    call exit
 31601                                          
 31602                                  L_error_incorrect_type:
 31603 00016F91 488B3C25[00000000]              mov rdi, qword [stderr]
 31604 00016F99 48BE-                           mov rsi, fmt_type
 31604 00016F9B [BB22000000000000] 
 31605 00016FA3 B800000000                      mov rax, 0
 31606                                          ENTER
    44 00016FA8 C8000000            <1>  enter 0, 0
    45 00016FAC 4883E4F0            <1>  and rsp, ~15
 31607 00016FB0 E8(00000000)                    call fprintf
 31608                                          LEAVE
    49 00016FB5 C9                  <1>  leave
 31609 00016FB6 48C7C0FCFFFFFF                  mov rax, -4
 31610 00016FBD E8(00000000)                    call exit
 31611                                  
 31612                                  L_error_division_by_zero:
 31613 00016FC2 488B3C25[00000000]              mov rdi, qword [stderr]
 31614 00016FCA 48BE-                           mov rsi, fmt_division_by_zero
 31614 00016FCC [FC22000000000000] 
 31615 00016FD4 B800000000                      mov rax, 0
 31616                                          ENTER
    44 00016FD9 C8000000            <1>  enter 0, 0
    45 00016FDD 4883E4F0            <1>  and rsp, ~15
 31617 00016FE1 E8(00000000)                    call fprintf
 31618                                          LEAVE
    49 00016FE6 C9                  <1>  leave
 31619 00016FE7 48C7C0F8FFFFFF                  mov rax, -8
 31620 00016FEE E8(00000000)                    call exit
 31621                                  
 31622                                  section .data
 31623                                  gensym_count:
 31624 000021AC 0000000000000000                dq 0
 31625                                  fmt_char:
 31626 000021B4 256300                          db `%c\0`
 31627                                  fmt_arg_negative:
 31628 000021B7 212121205468652061-             db `!!! The argument cannot be negative.\n\0`
 31628 000021C0 7267756D656E742063-
 31628 000021C9 616E6E6F7420626520-
 31628 000021D2 6E656761746976652E-
 31628 000021DB 0A00               
 31629                                  fmt_arg_count_0:
 31630 000021DD 212121204578706563-             db `!!! Expecting zero arguments. Found %d\n\0`
 31630 000021E6 74696E67207A65726F-
 31630 000021EF 20617267756D656E74-
 31630 000021F8 732E20466F756E6420-
 31630 00002201 25640A00           
 31631                                  fmt_arg_count_1:
 31632 00002205 212121204578706563-             db `!!! Expecting one argument. Found %d\n\0`
 31632 0000220E 74696E67206F6E6520-
 31632 00002217 617267756D656E742E-
 31632 00002220 20466F756E64202564-
 31632 00002229 0A00               
 31633                                  fmt_arg_count_12:
 31634 0000222B 212121204578706563-             db `!!! Expecting one required and one optional argument. Found %d\n\0`
 31634 00002234 74696E67206F6E6520-
 31634 0000223D 726571756972656420-
 31634 00002246 616E64206F6E65206F-
 31634 0000224F 7074696F6E616C2061-
 31634 00002258 7267756D656E742E20-
 31634 00002261 466F756E642025640A-
 31634 0000226A 00                 
 31635                                  fmt_arg_count_2:
 31636 0000226B 212121204578706563-             db `!!! Expecting two arguments. Found %d\n\0`
 31636 00002274 74696E672074776F20-
 31636 0000227D 617267756D656E7473-
 31636 00002286 2E20466F756E642025-
 31636 0000228F 640A00             
 31637                                  fmt_arg_count_3:
 31638 00002292 212121204578706563-             db `!!! Expecting three arguments. Found %d\n\0`
 31638 0000229B 74696E672074687265-
 31638 000022A4 6520617267756D656E-
 31638 000022AD 74732E20466F756E64-
 31638 000022B6 2025640A00         
 31639                                  fmt_type:
 31640 000022BB 2121212046756E6374-             db `!!! Function passed incorrect type\n\0`
 31640 000022C4 696F6E207061737365-
 31640 000022CD 6420696E636F727265-
 31640 000022D6 637420747970650A00 
 31641                                  fmt_integer_range:
 31642 000022DF 21212120496E636F72-             db `!!! Incorrect integer range\n\0`
 31642 000022E8 7265637420696E7465-
 31642 000022F1 6765722072616E6765-
 31642 000022FA 0A00               
 31643                                  fmt_division_by_zero:
 31644 000022FC 212121204469766973-             db `!!! Division by zero\n\0`
 31644 00002305 696F6E206279207A65-
 31644 0000230E 726F0A00           
 31645                                  fmt_scheme_error_part_1:
 31646 00002312 0A2121212054686520-             db `\n!!! The procedure \0`
 31646 0000231B 70726F636564757265-
 31646 00002324 2000               
 31647                                  fmt_scheme_error_part_2:
 31648 00002326 2061736B656420746F-             db ` asked to terminate the program\n`
 31648 0000232F 207465726D696E6174-
 31648 00002338 65207468652070726F-
 31648 00002341 6772616D0A         
 31649 00002346 202020207769746820-             db `    with the following message:\n\n\0`
 31649 0000234F 74686520666F6C6C6F-
 31649 00002358 77696E67206D657373-
 31649 00002361 6167653A0A0A00     
 31650                                  fmt_scheme_error_part_3:
 31651 00002368 0A0A476F6F64627965-             db `\n\nGoodbye!\n\n\0`
 31651 00002371 210A0A00           
